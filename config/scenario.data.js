const scenDefaults = require('./scenario.config');

module.exports = [
  {
    label: "Which phage is wild type?",
    fileCode: "CRK00",
    scenCode: "WTorMute",
    degOfDiff: 1,
    mutationFreq: scenDefaults.mutationFreq,
    recombinationFreq: scenDefaults.recombinationFreq,
    gcProb: scenDefaults.gcProb,
    minStops: scenDefaults.minStops,
    intraMuteDist: scenDefaults.intraMuteDist,
    interMuteDist: scenDefaults.interMuteDist,
    createDeletionModel: scenDefaults.createDeletionModel,
    purpose: "Determine which of two phage is wild type and which is mutant for rIIb function.",
    relevance: "This scenario acquaints you with the tools for culturing phage and bacteria. You'll be introduced to each of the bacterial strains and learn to recognize the two phage phenotypes.",
    startingPoint: "You are given two phage stocks. One of them has a wild-type phenotype, the other is mutant (lacks rIIb gene function). Your task is to determine which is which.",
    referencePhage: [],
    otherPhage: ['{"numToMake": 1, "isWildType": true, "comment": "Determine whether this phage has a wild type or mutant phenotype"}','{"numToMake": 1, "isWildType": false, "frameshifts": {"howMany": [1,1], "mixed": "always", "readable": "any", "frameChoice": 0}, "deletion": false, "comment": "Determine whether this phage has a wild type or mutant phenotype"}']
  },
    {
    label: "Identify phage with compensating frameshift mutations",
    fileCode: "CRK01",
    scenCode: "ThreeOther",
    degOfDiff: 11,
    mutationFreq: scenDefaults.mutationFreq,
    recombinationFreq: scenDefaults.recombinationFreq,
    gcProb: scenDefaults.gcProb,
    minStops: scenDefaults.minStops,
    intraMuteDist: scenDefaults.intraMuteDist,
    interMuteDist: scenDefaults.interMuteDist,
    createDeletionModel: scenDefaults.createDeletionModel,
    purpose: "Your task is to learn how to generate and recover new phage mutants. Starting with a phage mutant in its rIIb gene, identify three mutants of this phage that contain additional mutations that restore it to wild-type phenotype.",
    relevance: "Your overall goal here is to generate new mutations and understand their relevance to old one mutations. Just because a phage starts out with a certain genotype doesn't mean all its progeny will. Never forget that the billions of phage in each of your stocks arose from a founder individual through DNA replication. Errors in this process will give rise to new mutations, which may confer new phenotypes.",
    startingPoint: "Starting with a wild-type phage and a mutant bearing a single frameshift mutation, identify three phage that contain the original frameshift as well as a compensating mutation.",
    referencePhage: [scenDefaults.wildtypePhage, scenDefaults.frameShiftPhage],
    otherPhage: []
  },
  {
    label: "Do both phage contain identical mutations?",
    fileCode: "CRK03",
    scenCode: "SameOrDiff1",
    degOfDiff: 12,
    mutationFreq: scenDefaults.mutationFreq,
    recombinationFreq: scenDefaults.recombinationFreq,
    gcProb: scenDefaults.gcProb,
    minStops: scenDefaults.minStops,
    intraMuteDist: scenDefaults.intraMuteDist,
    interMuteDist: scenDefaults.interMuteDist,
    createDeletionModel: scenDefaults.createDeletionModel,
    purpose: "Determine whether two mutant phage contain identical mutations.",
    relevance: "Two mutant phage with the same phenotype do not necessarily have the same genotype. It’s important to be able to differentiate between specific mutations, especially when trying to construct phage mutants with multiple +1 frameshifts.",
    startingPoint: "You are given two +1 frameshift mutant phage. Your task is to determine whether they both possess identical frameshift mutations (the +1 frameshift in the same exact position), or if they have different frameshift mutations.",
    referencePhage: [scenDefaults.wildtypePhage],
    otherPhage: ['{"numToMake": -2, "isWildType": false, "frameshifts": {"howMany": [1,1], "mixed": "always", "readable": "any"}, "deletion": false, "comment": "Phage containing a single frameshift mutation"}']
  },
  {
    label: "Recover each single mutant from a double mutant",
    fileCode: "CRK04",
    scenCode: "OneEach",
    degOfDiff: 20,
    mutationFreq: scenDefaults.mutationFreq,
    recombinationFreq: scenDefaults.recombinationFreq,
    gcProb: scenDefaults.gcProb,
    minStops: scenDefaults.minStops,
    intraMuteDist: scenDefaults.intraMuteDist,
    interMuteDist: scenDefaults.interMuteDist,
    purpose: "Separate a double mutant into each single mutant",
    relevance: "",
    startingPoint: "A mutant phage with compensating mutations (+1 and -1).",
    createDeletionModel: scenDefaults.createDeletionModel,
    referencePhage: [scenDefaults.wildtypePhage, '{"numToMake": 1, "isWildType": false, "frameshifts": {"howMany": [2,2], "mixed": "always", "readable": "can", "frameChoice": 0}, "deletion": false, "comment": "Mutant phage bearing compensating +1 and -1 frameshifts resulting in successful translation and a wild type phenotype"}'],
    otherPhage: []
  },
  {
    label: "Which of 3 mutations is between the other two",
    fileCode: "CRK05",
    scenCode: "WhoMiddle",
    degOfDiff: 30,
    mutationFreq: scenDefaults.mutationFreq,
    recombinationFreq: scenDefaults.recombinationFreq,
    gcProb: scenDefaults.gcProb,
    minStops: scenDefaults.minStops,
    interMuteDist: scenDefaults.interMuteDist,
    intraMuteDist: [20,150],
    createDeletionModel: scenDefaults.createDeletionModel,
    purpose: "Figure out which of three +1 frameshift mutations lies between the other two.",
    relevance: "There are several cases upcoming where you'll need to know where different phage mutations are positioned relative to one another. This scenario will also have you thinking carefully about the mechanism and consequences of recombination.",
    startingPoint: "You are given three phage, each containing a +1 frameshift mutation, and a wild type phage.",
    referencePhage: [scenDefaults.wildtypePhage],
    otherPhage: ['{"numToMake": 3, "isWildType": false, "frameshifts": {"howMany": [1,1], "mixed": "never", "readable": "any", "frameChoice": 1}, "deletion": false, "comment": "Mutant phage containing a single +1 frameshift mutation"}']
  },
  {
    label: "Make mine a double",
    fileCode: "CRK07",
    scenCode: "CombineTwo",
    degOfDiff: 38,
    mutationFreq: 0.0008,
    recombinationFreq: 0.25,
    gcProb: scenDefaults.gcProb,
    minStops: scenDefaults.minStops,
    intraMuteDist: scenDefaults.intraMuteDist,
    interMuteDist: 220,
    createDeletionModel: scenDefaults.createDeletionModel,
    purpose: "Combine two different +1 mutations to create a double mutant phage.",
    relevance: "Making a working, triple mutant phage is the easy part since you're asking for a wild-type to arise. Making double mutants to serve as its parents is tougher, but a necessary step.",
    startingPoint: "A pair of phage, each containing a single, different +1 frameshift mutation.",
    referencePhage: [scenDefaults.wildtypePhage, '{"numToMake": 2, "isWildType": false, "frameshifts": {"howMany": [1,1], "mixed": "never", "readable": "any", "frameChoice": 1}, "deletion": false, "comment": "Mutant phage containing a single +1 frameshift mutation"}'],
    otherPhage: []
  },
  {
    label: "Map and order a series of deletions",
    fileCode: "CRK06",
    scenCode: "MapDelete",
    degOfDiff: 39,
    mutationFreq: scenDefaults.mutationFreq,
    recombinationFreq: scenDefaults.recombinationFreq,
    gcProb: scenDefaults.gcProb,
    minStops: scenDefaults.minStops,
    intraMuteDist: scenDefaults.intraMuteDist,
    interMuteDist: scenDefaults.interMuteDist,
    createDeletionModel: true,
    purpose: "Map deletions and roughly define their endpoints. Take 8 phage containing deletions and figure out which segments of DNA are removed in each.",
    relevance: "In later scenarios, you'll want to know things about where mutations are relative to one another, and the techniques you discovered in the ‘Which of 3 mutations is between the other two’ scenario can be tedious with large numbers of mutants. Finding out which point mutations lie 'inside' which deletion can lift a lot of this burden for you. For this scenario, do NOT worry about reading frame; assume that every deletion removes vital amino acids.",
    startingPoint: "You are given 8 phage, each containing a deletion of more than 10 nucleotides (note that while we have been speaking of single nucleotide deletions as 'frameshifts', they are formally deletions, but here we're talking about chunks of 10 to 500 nucleotides gone). Use the modeling room to map your deletions. Note that for this simulation, any phage containing a deletion bigger than 1 nucleotide is considered to have a mutant phenotype, regardless of its final effect on reading frame.",
    referencePhage: [scenDefaults.wildtypePhage],
    otherPhage: ['{"numToMake": 8, "isWildType": false, "deletion": true, "comment": "Phage containing a deletion of more than 10 nucleotides"}']
  },
  {
    label: "Demonstrate codons consist of 3 bases",
    fileCode: "CRK08",
    scenCode: "ProveCode",
    degOfDiff: 40,
    mutationFreq: 0.0008,
    recombinationFreq: 0.25,
    gcProb: 85,
    minStops: 3,
    intraMuteDist: scenDefaults.intraMuteDist,
    interMuteDist: scenDefaults.interMuteDist,
    createDeletionModel: scenDefaults.createDeletionModel,
    purpose: "Can you recapitulate the work of Crick et al.? Demonstrate that codons are comprised of three nucleotides.",
    relevance: "This observation, as well as insights the authors derived about stop codons and synonyms in the genetic code addressed some of the biggest questions in biology.",
    startingPoint: "You are given a wild type phage and a mutant one containing a single frameshift mutation (exactly the pieces Crick et al. started with). Create a phage whose genotype and phenotype combine to strongly suggest that the code is made of 3 letter 'words'. (Consider: with a three-letter code, what are the consequences of adding or subtracting 1, 2 or 3 letters?).",
    referencePhage: [scenDefaults.wildtypePhage, scenDefaults.frameShiftPhage],
    otherPhage: []
  },
  {
    label: "Demonstrate and locate a STOP codon",
    fileCode: "CRK09",
    scenCode: "FindStop",
    degOfDiff: 50,
    mutationFreq: scenDefaults.mutationFreq,
    recombinationFreq: scenDefaults.recombinationFreq,
    gcProb: scenDefaults.gcProb,
    minStops: scenDefaults.minStops,
    intraMuteDist: scenDefaults.intraMuteDist,
    interMuteDist: scenDefaults.interMuteDist,
    createDeletionModel: scenDefaults.createDeletionModel,
    purpose: "Combine your skills and insights to locate a stop. Report roughly where it is relevant to other mutations and how you know it's a STOP.",
    relevance: "While the Crick et al. paper's flagship result was the 3-letter code, this result was not wholly unanticipated (for example, a two letter code with 4 nucleotides can't code for 16 amino acids, whereas a 4-letter code could code for a whoppingly unnecessary 256. Where would you put your money?). However, a striking and admirable feature of this work was that they went even further, demonstrating that the code contained untranslatable words.",
    startingPoint: "A wild-type phage and a phage known to contain a single frameshift mutation. Note: you will first need to develop a strategy for RECOGNIZING the presence of a stop codon; be assured you'll be creating a lot of strains for this scenario.",
    referencePhage: [scenDefaults.wildtypePhage, scenDefaults.frameShiftPhage],
    otherPhage: []
  },
  {
    label: "Same or different KIND of mutation?",
    fileCode: "CRK10",
    scenCode: "SameOrDiff2",
    degOfDiff: 55,
    gcProb: 85,
    minStops: 3,
    mutationFreq: scenDefaults.mutationFreq,
    recombinationFreq: scenDefaults.recombinationFreq,
    intraMuteDist: scenDefaults.intraMuteDist,
    interMuteDist: scenDefaults.interMuteDist,
    createDeletionModel: scenDefaults.createDeletionModel,
    purpose: "Figure out whether two starting phage both contain mutations of like type (i.e. both +1) or opposite types (+1 and -1).",
    relevance: "Exercising your skills in mutant isolation and putting your understanding of frameshifts and translation to the test. Think hard and make sure your conclusions are airtight. To get credit, your strategy must be robust.",
    startingPoint: "A wild-type phage as reference, and two mutant phage containing different mutations that may or may not be of the same sign.",
    referencePhage: [scenDefaults.wildtypePhage],
    otherPhage: ['{"numToMake": 2, "isWildType": false, "frameshifts": {"howMany": [1,1], "mixed": "never", "readable": "any", "frameChoice": 0}, "deletion": false, "comment": "Mutant phage containing a single frameshift mutation"}']
  },
  {
    label: "How many mutations?",
    fileCode: "CRK11",
    scenCode: "HowMany",
    degOfDiff: 101,
    mutationFreq: scenDefaults.mutationFreq,
    recombinationFreq: scenDefaults.recombinationFreq,
    gcProb: scenDefaults.gcProb,
    minStops: scenDefaults.minStops,
    interMuteDist: scenDefaults.interMuteDist,
    intraMuteDist: [50,150],
    createDeletionModel: scenDefaults.createDeletionModel,
    purpose: "Figure out how many mutations (all +1 frameshifts) a phage contains.",
    relevance: "To see just how good you are. Developing a successful strategy here requires you to integrate several of the concepts you've been exposed to so far.",
    startingPoint: "A mutant phage containing either 1 or 2 (+1) frameshift mutations. You are given a wild-type phage and a phage known to contain a single -1 frameshift mutation as potentially helpful tools. For another bonus point, describe a strategy for figuring out whether a mutant contains 2 or 3 +1 frameshifts (but does NOT produce wild type phenotype).",
    referencePhage: [scenDefaults.wildtypePhage, '{"numToMake": 1, "isWildType": false, "frameshifts": {"howMany": [1,1], "mixed": "never", "readable": "any", "frameChoice": -1}, "deletion": false, "comment": "Mutant phage containing a single -1 frameshift"}'],
    otherPhage: ['{"numToMake": 1, "isWildType": false, "frameshifts": {"howMany": [1,2], "mixed": "never", "readable": "any", "frameChoice": 1}, "deletion": false, "comment": "Mutant phage containing one OR two +1 frameshift mutations"}']
  }
];
