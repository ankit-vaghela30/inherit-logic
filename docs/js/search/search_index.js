var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.465,1,1.122]],["body/components/AdminComponent.html",[0,0.792,1,1.764,2,0.446,3,0.315,4,1.156,5,0.289,6,3.67,7,0.508,8,5.757,9,1.124,10,5.757,11,4.254,12,7.1,13,3.233,14,3.556,15,4.598,16,1.422,17,4.174,18,1.143,19,3.752,20,3.556,21,2.397,22,0.957,23,2.479,24,1.683,25,5.757,26,0.4,27,0.844,28,2.306,29,7.1,30,2.957,31,1.216,32,2.774,33,1.392,34,2.345,35,2.076,36,1.46,37,5.757,38,0.668,39,0.011,40,0.965,41,0.541,42,0.748,43,3.096,44,4.176,45,0.612,46,1.49,47,0.886,48,4.176,49,2.321,50,0.909,51,1.291,52,1.327,53,0.713,54,0.542,55,2.156,56,2.156,57,2.246,58,1.632,59,2.073,60,0.302,61,0.525,62,4.176,63,3.336,64,4.598,65,1.028,66,2.752,67,1.764,68,1.156,69,1.156,70,1.037,71,1.593,72,1.037,73,1.551,74,1.156,75,0.983,76,1.095,77,0.525,78,1.156,79,1.037,80,1.156,81,1.037,82,1.156,83,1.037,84,1.593,85,1.037,86,1.823,87,1.037,88,1.156,89,1.037,90,1.066,91,1.593,92,1.066,93,1.593,94,1.037,95,1.156,96,1.037,97,1.066,98,0.748,99,1.965,100,1.037,101,1.125,102,1.037,103,0.476,104,1.037,105,1.156,106,1.037,107,0.748,108,1.037,109,1.156,110,1.037,111,1.156,112,1.037,113,1.156,114,1.037,115,0.43,116,1.125,117,1.156,118,1.066,119,0.649,120,1.037,121,0.748,122,1.037,123,1.156,124,1.037,125,1.156,126,1.037,127,1.156,128,1.037,129,1.156,130,1.037,131,1.037,132,1.037,133,1.037,134,1.156,135,1.037,136,1.156,137,1.037,138,1.066,139,1.156,140,1.156,141,0.007,142,0.007]],["title/injectables/AdminGuard.html",[143,1.711,144,3.123]],["body/injectables/AdminGuard.html",[2,0.344,3,0.434,5,0.398,21,3.346,26,0.551,28,1.682,31,1.5,33,1.391,34,3.231,35,2.35,36,1.46,38,1.136,39,0.011,40,1.04,41,0.582,42,1.272,43,3.817,45,1.128,50,0.794,53,0.737,54,0.746,58,2.248,60,0.416,61,0.723,141,0.008,142,0.008,143,2.916,144,4.907,145,5.056,146,7.061,147,3.549,148,5.754,149,6.237,150,5.556,151,3.313,152,5.556,153,5.754,154,3.231,155,2.13,156,1.682,157,2.248,158,2.18,159,2.532,160,5.056,161,2.562,162,5.754,163,5.754,164,2.653,165,4.596,166,5.754,167,5.056,168,2.653]],["title/components/AdminHomeComponent.html",[0,0.465,70,1.122]],["body/components/AdminHomeComponent.html",[0,0.789,1,1.255,2,0.303,3,0.382,4,1.399,5,0.349,9,1.198,16,1.442,18,1.157,22,1.158,23,2.505,24,1.912,39,0.01,40,0.958,47,0.721,53,0.484,54,0.656,60,0.365,61,0.635,65,0.697,67,1.904,68,1.399,69,1.399,70,1.904,71,1.81,72,1.255,73,1.761,74,1.399,75,1.189,76,1.325,77,0.635,78,1.399,79,1.255,80,1.399,81,1.255,82,1.399,83,1.255,84,1.81,85,1.255,86,2.006,87,1.255,88,1.399,89,1.255,90,1.289,91,1.81,92,1.289,93,1.81,94,1.255,95,1.399,96,1.255,97,1.289,98,0.906,99,2.122,100,1.255,101,1.361,102,1.255,103,0.576,104,1.255,105,1.399,106,1.255,107,0.906,108,1.255,109,1.399,110,1.255,111,1.399,112,1.255,113,1.399,114,1.255,115,0.52,116,1.361,117,1.399,118,1.289,119,0.785,120,1.255,121,0.906,122,1.255,123,1.399,124,1.255,125,1.399,126,1.255,127,1.399,128,1.255,129,1.399,130,1.255,131,1.255,132,1.255,133,1.255,134,1.399,135,1.255,136,1.399,137,1.255,138,1.289,139,1.399,140,1.399,141,0.008,142,0.008,169,4.44,170,4.036,171,4.44,172,4.261,173,5.745,174,4.261,175,6.539]],["title/modules/AdminModule.html",[176,1.396,177,3.123]],["body/modules/AdminModule.html",[1,2.059,2,0.326,3,0.411,5,0.376,9,0.822,39,0.011,53,0.833,54,0.706,60,0.496,61,0.684,70,2.059,110,2.059,121,0.975,141,0.008,142,0.008,144,5.733,156,1.591,170,4.347,176,2.119,177,6.134,178,1.636,179,2.701,180,3.725,181,2.266,182,3.725,183,4.782,184,4.782,185,4.782,186,4.782,187,3.569,188,4.459,189,3.403,190,1.831,191,5.443,192,3.539,193,2.927,194,2.701,195,5.443,196,5.443,197,5.443,198,4.782,199,4.347,200,5.443,201,5.443,202,4.782,203,5.443]],["title/interfaces/AdminStudent.html",[204,0.904,205,2.429]],["body/interfaces/AdminStudent.html",[2,0.326,3,0.412,5,0.377,7,0.664,9,1.036,16,1.484,18,1.121,26,0.522,27,1.006,39,0.011,40,1.101,41,0.563,45,1.006,47,0.601,50,1.145,53,0.657,60,0.543,65,0.947,67,1.354,103,0.622,141,0.008,142,0.008,155,1.509,161,3.51,204,1.503,205,3.691,206,4.029,207,2.181,208,2.196,209,3.233,210,6.03,211,3.728,212,4.79,213,3.691,214,3.769,215,2.932,216,2.932,217,2.27,218,1.216,219,1.572,220,3.553,221,2.427,222,3.061,223,3.553,224,2.27,225,5.193,226,4.354,227,2.706,228,2.706,229,4.354,230,2.706,231,4.354,232,4.354,233,3.367,234,4.354,235,4.354,236,3.205,237,3.367,238,4.354,239,6,240,4.354,241,2.346,242,4.354]],["title/components/AppComponent.html",[0,0.465,72,1.122]],["body/components/AppComponent.html",[0,0.83,1,1.218,2,0.294,3,0.37,4,1.775,5,0.339,7,0.597,9,0.74,16,1.37,18,1.078,19,4.179,22,1.124,23,2.502,33,1.728,36,1.008,39,0.01,40,0.94,47,0.707,53,0.469,54,0.636,60,0.355,61,0.616,65,0.677,67,1.882,68,1.357,69,1.357,70,1.218,71,1.775,72,1.882,73,2.041,74,1.357,75,1.154,76,1.286,77,0.616,78,1.357,79,1.218,80,1.357,81,1.218,82,1.357,83,1.218,84,1.775,85,1.218,86,1.978,87,1.218,88,1.357,89,1.218,90,1.251,91,1.775,92,1.251,93,1.775,94,1.218,95,1.357,96,1.218,97,1.251,98,0.879,99,2.097,100,1.218,101,1.321,102,1.218,103,0.559,104,1.218,105,1.357,106,1.218,107,0.879,108,1.218,109,1.357,110,1.218,111,1.357,112,1.218,113,1.357,114,1.218,115,0.505,116,1.321,117,1.357,118,1.251,119,0.762,120,1.218,121,0.879,122,1.218,123,1.357,124,1.218,125,1.357,126,1.218,127,1.357,128,1.218,129,1.357,130,1.218,131,1.218,132,1.218,133,1.218,134,1.357,135,1.218,136,1.357,137,1.218,138,1.251,139,1.357,140,1.357,141,0.008,142,0.008,159,2.287,209,2.76,220,4.179,243,4.309,244,5.634,245,4.739,246,3.961,247,5.122,248,5.634,249,3.066,250,4.904]],["title/modules/AppModule.html",[176,1.396,251,3.339]],["body/modules/AppModule.html",[2,0.247,3,0.312,5,0.285,35,2.243,39,0.011,45,0.605,53,0.843,54,0.536,58,1.613,60,0.413,61,0.519,65,0.57,72,2.084,108,1.906,112,1.906,121,0.74,141,0.007,142,0.007,156,1.207,172,4.268,176,1.765,177,5.304,178,1.241,179,2.05,180,3.25,181,2.727,182,3.25,187,3.302,189,2.835,190,1.39,192,2.948,193,2.221,194,2.05,228,2.05,233,2.551,251,6.61,252,3.629,253,3.629,254,3.629,255,3.629,256,3.629,257,5.304,258,5.304,259,5.304,260,5.304,261,5.304,262,4.126,263,5.304,264,5.304,265,3.96,266,4.13,267,5.712,268,3.629,269,3.052,270,5.712,271,2.855,272,4.13,273,4.13,274,3.052,275,5.712,276,3.298,277,3.722,278,4.13,279,4.13,280,4.13,281,4.13,282,2.855,283,3.629,284,4.13,285,4.13,286,4.13,287,4.13,288,4.13,289,4.13,290,4.13,291,4.13,292,4.13,293,3.298,294,4.13,295,4.13,296,4.13,297,4.13,298,4.13,299,3.949,300,4.13,301,3.629,302,5.231,303,4.13,304,4.13,305,3.298,306,3.052,307,4.13]],["title/modules/AuthenticationModule.html",[176,1.396,257,3.123]],["body/modules/AuthenticationModule.html",[2,0.329,3,0.415,5,0.38,39,0.011,53,0.835,54,0.713,60,0.499,61,0.691,89,2.065,90,1.403,120,2.065,121,1.236,124,2.065,126,2.065,128,2.065,141,0.008,142,0.008,156,1.607,176,2.132,178,1.652,179,2.728,180,3.742,181,2.289,182,2.728,189,3.424,190,1.85,192,3.561,193,2.956,257,6.104,274,4.062,308,4.83,309,4.83,310,5.497,311,6.062,312,4.39,313,6.062,314,5.497,315,5.497,316,5.497,317,5.497,318,5.497,319,4.39,320,6.062,321,4.39,322,5.497]],["title/injectables/AuthenticationService.html",[35,1.321,143,1.711]],["body/injectables/AuthenticationService.html",[2,0.245,3,0.309,5,0.283,19,3.7,26,0.392,27,0.832,28,2.294,31,1.2,33,0.99,35,1.66,36,1.747,38,1.224,39,0.011,40,1.121,41,0.682,42,1.371,45,1.268,46,1.46,47,0.895,50,1.02,51,2.176,52,2.238,53,0.708,54,0.531,59,2.032,60,0.296,61,0.515,90,1.045,121,0.734,141,0.007,142,0.007,143,2.469,155,1.948,158,1.551,168,1.888,213,3.786,241,1.762,271,2.83,323,3.597,324,5.203,325,5.912,326,4.248,327,7.04,328,7.04,329,5.678,330,6.186,331,4.535,332,5.678,333,4.818,334,5.465,335,4.818,336,3.597,337,5.203,338,5.678,339,4.535,340,4.094,341,4.989,342,4.094,343,5.29,344,4.468,345,4.094,346,4.094,347,5.678,348,4.094,349,4.507,350,5.678,351,4.094,352,5.678,353,4.094,354,4.094,355,5.678,356,4.094,357,5.678,358,4.094,359,7.04,360,1.896,361,5.678,362,4.094,363,5.678,364,4.094,365,5.728,366,2.529,367,4.094,368,4.094,369,4.094,370,4.094,371,4.094,372,4.094,373,4.094,374,4.094,375,7.652,376,5.678,377,6.186,378,4.094,379,4.094,380,2.818]],["title/components/ConfirmDeleteDialogComponent.html",[0,0.465,75,1.063]],["body/components/ConfirmDeleteDialogComponent.html",[0,0.756,1,1.128,2,0.272,3,0.343,4,1.257,5,0.314,9,0.686,16,1.336,18,1.046,22,1.041,23,2.491,24,1.782,26,0.435,27,0.893,33,1.098,36,1.414,38,0.727,39,0.01,40,1.008,41,0.564,42,0.814,47,0.672,50,0.841,51,1.404,52,1.444,53,0.583,54,0.589,60,0.328,61,0.571,65,0.627,67,1.826,68,1.257,69,1.257,70,1.128,71,1.687,72,1.128,73,1.642,74,1.257,75,1.73,76,2.114,77,1.064,78,1.257,79,1.128,80,1.257,81,1.128,82,1.257,83,1.128,84,1.687,85,1.128,86,1.904,87,1.128,88,1.257,89,1.128,90,1.159,91,1.687,92,1.159,93,1.687,94,1.128,95,1.257,96,1.128,97,1.159,98,0.814,99,2.035,100,1.128,101,1.223,102,1.128,103,0.518,104,1.128,105,1.257,106,1.128,107,0.814,108,1.128,109,1.257,110,1.128,111,1.257,112,1.128,113,1.257,114,1.128,115,0.467,116,1.853,117,1.257,118,1.159,119,0.706,120,1.128,121,0.814,122,1.128,123,1.257,124,1.128,125,1.257,126,1.128,127,1.257,128,1.128,129,1.257,130,1.128,131,1.128,132,1.128,133,1.128,134,1.257,135,1.128,136,1.257,137,1.128,138,1.159,139,1.257,140,1.257,141,0.007,142,0.007,181,1.891,326,3.972,381,6.46,382,3.628,383,5.355,384,6.737,385,4.322,386,3.193,387,3.991,388,6.936,389,6.095,390,4.504,391,4.868,392,4.542,393,3.357,394,2.96,395,2.96,396,3.991,397,2.96,398,4.868]],["title/interfaces/Course.html",[16,0.787,204,0.904]],["body/interfaces/Course.html",[2,0.346,3,0.437,5,0.4,7,1.038,16,1.537,18,1.243,26,0.554,27,1.044,39,0.011,41,0.661,42,1.443,50,1.162,53,0.682,60,0.418,66,4.024,141,0.008,142,0.008,204,1.425,208,2.082,213,4.33,214,3.999,218,1.588,399,5.082,400,4.734,401,1.504,402,5.784]],["title/components/CourseCreateComponent.html",[0,0.465,79,1.122]],["body/components/CourseCreateComponent.html",[0,0.696,1,0.929,2,0.224,3,0.282,4,1.035,5,0.258,7,0.649,9,1.079,16,1.491,18,0.962,21,2.817,22,0.857,23,2.462,24,1.557,26,0.358,27,0.781,28,2.479,30,3.095,31,1.126,32,2.643,33,1.288,35,1.977,36,1.608,38,0.598,39,0.011,40,0.909,41,0.587,42,0.67,45,0.909,46,2.214,47,0.819,50,0.856,51,1.646,52,1.693,53,0.711,54,0.485,58,1.461,59,1.856,60,0.27,61,0.47,65,0.516,67,1.68,68,1.035,69,1.035,70,0.929,71,1.474,72,0.929,73,1.435,74,1.035,75,0.88,76,0.98,77,0.47,78,1.035,79,1.68,80,1.035,81,0.929,82,1.035,83,0.929,84,1.474,85,0.929,86,1.718,87,0.929,88,1.035,89,0.929,90,0.954,91,1.474,92,0.954,93,1.474,94,0.929,95,1.035,96,0.929,97,0.954,98,0.67,99,1.872,100,0.929,101,1.007,102,0.929,103,0.426,104,0.929,105,1.035,106,0.929,107,0.67,108,0.929,109,1.035,110,0.929,111,1.035,112,0.929,113,1.035,114,0.929,115,0.385,116,1.007,117,1.035,118,0.954,119,0.581,120,0.929,121,0.67,122,0.929,123,1.035,124,0.929,125,1.035,126,0.929,127,1.035,128,0.929,129,1.035,130,0.929,131,0.929,132,0.929,133,0.929,134,1.035,135,0.929,136,1.035,137,0.929,138,0.954,139,1.035,140,1.035,141,0.007,142,0.006,147,2.861,156,1.093,218,1.384,262,3.637,403,5.185,404,6.354,405,3.285,406,2.343,407,2.991,408,5.327,409,5.327,410,6.764,411,3.737,412,5.402,413,5.943,414,2.987,415,3.485,416,3.798,417,2.861,418,5.327,419,3.291,420,3.739,421,3.739,422,3.739,423,3.739,424,3.739,425,3.739,426,2.198,427,2.437,428,3.285,429,1.787,430,3.739,431,3.739,432,3.739,433,2.456,434,2.437,435,2.198,436,3.285,437,3.739,438,3.739,439,2.987,440,2.585,441,3.739,442,3.285,443,3.285,444,2.1,445,3.739,446,2.31,447,2.198,448,1.9]],["title/components/CourseEditComponent.html",[0,0.465,81,1.122]],["body/components/CourseEditComponent.html",[0,0.579,1,0.545,2,0.212,3,0.166,4,0.607,5,0.152,7,0.544,9,0.331,14,2.191,16,1.493,18,1.038,21,2.136,22,0.502,23,2.353,24,1.037,26,0.21,27,0.52,28,2.315,30,2.509,31,1.48,32,2.004,33,0.53,35,1.5,36,1.601,38,0.351,39,0.011,40,0.654,41,0.542,42,0.393,45,1.026,46,2.433,47,0.772,49,2.068,50,0.616,51,0.678,52,0.697,53,0.71,54,0.285,55,2.907,56,1.132,57,1.179,58,0.857,59,1.089,60,0.159,61,0.276,65,0.616,66,3.813,67,1.274,68,0.607,69,0.607,70,0.545,71,0.982,72,0.545,73,0.955,74,0.607,75,0.835,76,1.788,77,1.021,78,0.607,79,0.545,80,0.607,81,1.274,82,0.607,83,0.545,84,0.982,85,0.545,86,1.236,87,0.545,88,0.607,89,0.545,90,0.56,91,0.982,92,0.56,93,0.982,94,0.545,95,0.607,96,0.545,97,0.56,98,0.393,99,1.42,100,0.545,101,0.591,102,0.545,103,0.25,104,0.545,105,0.607,106,0.545,107,0.393,108,0.545,109,0.607,110,0.545,111,0.607,112,0.545,113,0.607,114,0.545,115,0.226,116,1.517,117,0.607,118,0.56,119,0.341,120,0.545,121,0.393,122,0.545,123,0.607,124,0.545,125,0.607,126,0.545,127,0.607,128,0.545,129,0.607,130,0.545,131,0.545,132,0.545,133,0.545,134,0.607,135,0.545,136,0.607,137,0.545,138,0.56,139,0.607,140,0.607,141,0.005,142,0.004,147,1.635,156,0.641,158,0.831,159,1.265,174,3.342,181,0.913,187,0.944,194,1.089,205,2.758,217,1.477,218,1.256,219,1.605,236,2.085,237,1.355,262,2.758,360,0.591,390,2.621,391,2.833,393,3.79,394,1.429,395,1.429,398,5.273,400,2.085,401,1.084,403,5.119,407,1.991,415,2.507,416,2.88,417,2.059,419,2.758,427,1.429,429,1.048,433,2.778,436,3.116,439,1.752,440,2.452,442,3.116,443,3.116,444,2.88,448,2.149,449,6.274,450,1.927,451,3.893,452,3.547,453,3.547,454,4.507,455,4.507,456,2.758,457,3.546,458,5.129,459,5.129,460,5.129,461,5.129,462,5.129,463,4.097,464,4.097,465,2.068,466,5.129,467,3.014,468,1.29,469,3.923,470,3.547,471,2.193,472,5.273,473,2.284,474,5.129,475,1.43,476,2.193,477,2.193,478,4.564,479,4.326,480,4.564,481,1.831,482,2.452,483,4.812,484,3.028,485,3.722,486,2.193,487,3.546,488,2.647,489,5.294,490,2.193,491,2.193,492,2.193,493,3.116,494,1.16,495,1.988,496,3.547,497,2.193,498,3.547,499,2.452,500,1.76,501,2.193,502,1.76,503,2.193,504,2.193,505,2.085,506,2.193,507,2.193,508,2.193,509,2.193,510,2.191,511,3.116,512,3.24,513,1.621,514,1.429,515,1.621,516,1.516,517,1.011,518,1.089,519,1.066,520,1.752,521,2.193,522,1.179,523,0.624,524,0.738,525,1.991,526,1.927,527,1.516,528,1.621,529,1.752,530,2.193,531,3.24,532,1.752,533,3.923,534,2.193,535,2.193,536,4.465,537,2.193,538,1.927,539,1.927,540,1.355,541,2.193,542,6.342,543,3.168,544,2.193,545,2.193,546,3.547,547,1.927,548,2.193,549,2.193,550,1.752,551,1.516,552,3.116,553,3.116,554,2.833,555,2.621,556,2.193,557,1.752,558,3.116,559,3.116,560,3.116,561,2.193,562,3.116,563,2.193,564,2.085,565,3.547,566,2.193,567,2.193,568,1.516,569,1.179,570,1.179,571,3.116,572,2.452,573,2.833]],["title/components/CourseIndivComponent.html",[0,0.465,83,1.122]],["body/components/CourseIndivComponent.html",[0,0.681,1,0.767,2,0.37,3,0.233,4,0.855,5,0.214,7,0.806,9,0.699,16,1.49,18,1.192,19,3.019,21,2.572,22,0.708,23,2.428,24,1.354,26,0.296,27,0.679,28,2.462,30,2.893,31,0.979,32,2.413,33,1.12,35,1.806,36,1.558,38,0.494,39,0.011,40,0.815,41,0.591,42,0.554,45,0.679,46,1.652,47,0.681,50,0.767,51,1.432,52,1.472,53,0.725,54,0.401,55,3.415,56,1.594,57,1.661,58,1.207,60,0.223,61,0.388,65,0.767,66,3.163,67,1.534,68,0.855,69,0.855,70,0.767,71,1.282,72,0.767,73,1.248,74,0.855,75,0.727,76,0.81,77,0.388,78,0.855,79,0.767,80,0.855,81,0.767,82,0.855,83,1.534,84,1.282,85,0.767,86,1.538,87,0.767,88,0.855,89,0.767,90,0.788,91,1.282,92,0.788,93,1.282,94,0.767,95,0.855,96,0.767,97,0.788,98,0.554,99,1.709,100,0.767,101,0.832,102,0.767,103,0.932,104,0.767,105,0.855,106,0.767,107,0.554,108,0.767,109,0.855,110,0.767,111,0.855,112,0.767,113,0.855,114,0.767,115,0.318,116,0.832,117,0.855,118,0.788,119,0.48,120,0.767,121,0.554,122,0.767,123,0.855,124,0.767,125,0.855,126,0.767,127,0.855,128,0.767,129,0.855,130,0.767,131,0.767,132,0.767,133,0.767,134,0.855,135,0.767,136,0.855,137,0.767,138,0.788,139,0.855,140,0.855,141,0.005,142,0.005,147,2.136,156,0.903,204,0.618,208,0.903,218,0.689,219,1.415,223,3.019,237,1.908,246,2.861,262,3.321,265,3.188,282,2.135,360,0.832,386,1.929,400,2.724,401,1.305,403,5.03,407,2.601,411,2.215,415,3.121,416,3.468,417,2.563,419,3.433,427,2.013,429,1.477,433,1.424,451,3.203,455,5.426,456,3.321,457,4.27,465,2.49,468,1.816,473,2.063,500,2.759,517,1.424,518,1.533,519,1.856,520,2.467,522,1.661,527,2.135,528,2.283,529,2.467,531,2.989,532,2.467,533,2.714,540,1.908,568,2.135,569,1.661,570,1.661,571,4.07,573,3.7,574,6.165,575,2.467,576,4.07,577,4.633,578,4.07,579,3.433,580,4.633,581,3.089,582,2.601,583,3.089,584,2.491,585,3.203,586,3.089,587,3.019,588,4.633,589,3.089,590,3.089,591,3.089,592,3.424,593,3.089,594,4.633,595,1.908,596,1.286,597,2.714,598,3.089,599,2.714,600,2.283,601,2.714,602,2.467,603,2.714,604,2.135,605,2.467,606,4.633,607,4.633,608,4.07,609,4.633]],["title/components/CourseListComponent.html",[0,0.465,85,1.122]],["body/components/CourseListComponent.html",[0,0.813,1,0.968,2,0.233,3,0.294,4,1.079,5,0.269,7,0.474,9,1.04,16,1.547,18,0.98,22,0.893,23,2.469,24,1.604,26,0.373,27,0.804,28,2.31,31,1.159,32,2.692,33,1.326,35,2.014,36,1.493,38,0.624,39,0.011,40,0.93,41,0.521,42,0.698,45,0.804,46,1.957,47,0.83,49,2.212,53,0.695,54,0.506,58,1.523,60,0.282,61,0.49,65,0.538,66,2.622,67,1.711,68,1.079,69,1.079,70,0.968,71,1.518,72,0.968,73,1.478,74,1.079,75,0.917,76,1.022,77,0.49,78,1.079,79,0.968,80,1.079,81,0.968,82,1.079,83,0.968,84,1.518,85,1.711,86,1.757,87,0.968,88,1.079,89,0.968,90,0.994,91,1.518,92,0.994,93,1.518,94,0.968,95,1.079,96,0.968,97,0.994,98,0.698,99,1.907,100,0.968,101,1.05,102,0.968,103,0.444,104,0.968,105,1.079,106,0.968,107,0.698,108,0.968,109,1.079,110,0.968,111,1.079,112,0.968,113,1.079,114,0.968,115,0.401,116,1.05,117,1.079,118,0.994,119,0.606,120,0.968,121,0.698,122,0.968,123,1.079,124,0.968,125,1.079,126,0.968,127,1.079,128,0.968,129,1.079,130,0.968,131,0.968,132,0.968,133,0.968,134,1.079,135,0.968,136,1.079,137,0.968,138,0.994,139,1.079,140,1.079,141,0.006,142,0.006,157,2.143,161,2.442,204,0.78,249,2.622,262,3.705,360,1.478,401,1.755,403,4.909,406,1.9,411,3.777,414,3.113,417,2.927,419,3.388,426,2.291,427,2.54,429,1.863,435,2.291,446,2.407,447,2.291,465,2.778,512,2.95,584,2.95,592,5.092,610,6.017,611,3.113,612,3.921,613,3.733,614,4.382,615,4.82,616,3.897,617,3.897,618,3.575,619,3.897,620,3.897,621,3.897,622,3.424,623,4.82]],["title/modules/CourseModule.html",[176,1.396,624,3.339]],["body/modules/CourseModule.html",[2,0.309,3,0.39,5,0.357,16,1.393,39,0.011,53,0.836,54,0.67,60,0.479,61,0.649,75,1.724,77,0.649,79,2.032,81,2.032,83,2.032,85,2.032,87,2.032,121,0.925,141,0.008,142,0.008,156,1.51,176,2.049,178,1.552,179,2.563,180,3.635,181,2.15,182,3.635,187,3.52,189,3.291,190,1.737,192,3.422,193,2.777,194,2.563,404,4.124,449,4.124,513,3.816,514,3.365,574,4.124,610,4.124,624,6.555,625,4.537,626,4.537,627,5.163,628,4.537,629,5.655,630,5.163,631,5.296,632,5.163,633,4.537,634,5.163,635,4.537,636,4.124,637,4.537,638,5.163,639,5.163,640,5.163,641,5.163]],["title/injectables/CourseResolver.html",[143,1.711,629,3.123]],["body/injectables/CourseResolver.html",[2,0.335,3,0.422,5,0.386,9,0.844,16,0.974,26,0.535,28,1.634,31,1.473,33,1.351,35,2.326,36,1.433,38,1.115,39,0.011,40,1.022,41,0.572,42,1.249,45,1.113,53,0.799,54,0.725,58,2.184,60,0.404,61,0.703,141,0.008,142,0.008,143,2.878,150,5.5,151,3.27,152,5.5,154,3.139,156,1.634,157,2.184,158,2.117,236,3.286,262,4.278,326,4.951,344,4.278,360,1.505,366,3.452,400,4.467,414,4.464,417,3.503,419,4.306,427,3.642,429,2.672,515,4.131,597,4.911,629,4.82,642,4.911,643,6.354,644,5.589,645,5.568,646,5.589,647,5.589]],["title/components/CourseScenarioComponent.html",[0,0.465,87,1.122]],["body/components/CourseScenarioComponent.html",[0,0.686,1,0.618,2,0.149,3,0.188,4,0.688,5,0.172,7,0.591,9,1.006,13,1.397,14,2.998,16,1.429,18,1.204,21,2.294,22,0.57,23,2.383,24,1.146,26,0.465,27,0.575,28,2.383,30,2.652,31,0.829,32,2.153,33,0.601,35,1.611,36,1.575,38,0.882,39,0.011,40,0.933,41,0.609,42,0.987,45,1.042,46,1.965,47,0.802,49,2.222,50,1.057,51,1.212,52,1.246,53,0.733,54,0.323,55,3.095,56,1.284,57,1.338,58,0.972,59,1.235,60,0.18,61,0.313,65,0.343,67,1.369,68,0.688,69,0.688,70,0.618,71,1.085,72,0.618,73,1.056,74,0.688,75,0.585,76,0.652,77,0.313,78,0.688,79,0.618,80,0.688,81,0.618,82,0.688,83,0.618,84,1.085,85,0.618,86,1.344,87,1.369,88,0.688,89,0.618,90,0.635,91,1.085,92,0.635,93,1.085,94,0.618,95,0.688,96,0.618,97,0.635,98,0.446,99,1.525,100,0.618,101,0.67,102,0.618,103,0.94,104,0.618,105,0.688,106,0.618,107,0.446,108,0.618,109,0.688,110,0.618,111,0.688,112,0.618,113,0.688,114,0.618,115,0.256,116,0.67,117,0.688,118,0.635,119,0.387,120,0.618,121,0.446,122,0.618,123,0.688,124,0.618,125,0.688,126,0.618,127,0.688,128,0.618,129,0.688,130,0.618,131,0.618,132,0.618,133,0.618,134,0.688,135,0.618,136,0.688,137,0.618,138,0.635,139,0.688,140,0.688,141,0.005,142,0.005,147,1.808,155,1.525,156,0.727,158,0.942,159,1.399,164,1.147,178,1.179,188,2.963,202,2.185,208,1.611,217,2.294,218,1.623,223,3.163,224,1.633,249,1.875,262,2.963,265,2.844,282,1.72,360,0.67,400,3.745,401,1.164,403,5.052,407,2.202,415,2.726,416,3.094,417,2.238,419,2.998,427,1.621,428,2.185,429,1.189,433,2.238,444,2.202,456,2.963,457,3.809,465,2.222,468,1.462,473,1.746,479,3.403,480,2.711,484,1.338,488,2.024,493,3.446,494,1.587,500,2.735,515,1.838,516,1.72,517,1.147,518,1.235,519,0.748,522,1.338,523,0.707,524,0.837,525,1.397,527,1.72,529,1.987,531,2.61,538,2.185,539,2.185,543,2.422,564,2.306,568,1.72,569,1.338,570,1.338,572,2.711,579,2.998,600,1.838,604,1.72,605,3.132,636,6.193,648,2.185,649,3.921,650,3.446,651,4.708,652,3.921,653,3.921,654,2.898,655,3.356,656,3.921,657,3.921,658,2.487,659,3.446,660,3.745,661,3.735,662,4.02,663,4.265,664,2.555,665,3.921,666,2.487,667,2.119,668,4.708,669,3.367,670,3.921,671,2.487,672,3.921,673,2.306,674,2.487,675,2.487,676,2.898,677,2.487,678,2.487,679,2.487,680,2.487,681,2.487,682,2.487,683,1.838,684,1.536,685,1.838,686,2.185,687,2.487,688,2.487,689,2.024,690,2.185,691,2.487,692,2.487,693,2.185,694,2.024,695,2.487,696,2.487,697,2.487,698,2.898,699,3.921,700,2.487,701,2.487,702,2.487,703,1.621,704,1.621,705,2.487,706,2.487,707,2.185,708,3.921,709,2.898,710,3.921]],["title/interfaces/ExperimentPhage.html",[204,0.904,711,2.429]],["body/interfaces/ExperimentPhage.html",[2,0.261,3,0.329,5,0.301,7,0.721,9,0.657,18,0.619,26,0.417,27,0.868,39,0.011,41,0.486,47,0.796,50,0.997,60,0.546,77,0.98,98,0.78,115,0.915,119,0.92,141,0.007,142,0.007,151,1.873,155,1.639,178,1.308,204,1.624,207,1.383,208,1.272,211,3.585,218,1.929,219,1.786,401,1.251,406,2.502,448,1.552,502,2.16,505,2.558,523,2.055,524,1.992,667,2.139,673,3.481,711,3.184,712,2.836,713,2.549,714,4.462,715,4.094,716,3.321,717,2.558,718,2.836,719,1.272,720,1.731,721,2.688,722,3.184,723,2.831,724,2.443,725,2.246,726,2.996,727,2.688,728,2.558,729,2.34,730,3.779,731,2.913,732,2.08,733,2.836,734,1.812,735,2.558,736,3.481,737,1.755,738,2.34,739,4.377,740,4.094,741,3.216,742,2.246,743,2.73,744,3.481,745,2.548,746,4.094,747,4.094,748,4.094,749,4.094,750,3.859,751,2.73,752,2.836,753,2.688,754,2.246,755,2.688,756,3.008,757,2.636]],["title/injectables/ExperimentService.html",[143,1.711,758,3.123]],["body/injectables/ExperimentService.html",[2,0.371,3,0.281,5,0.257,7,0.822,26,0.356,27,0.778,28,1.81,31,1.122,33,0.9,36,1.388,38,0.99,39,0.011,40,0.907,41,0.652,42,1.109,45,1.088,50,0.733,51,1.15,52,1.183,53,0.646,54,0.483,60,0.269,61,0.468,67,1.319,98,0.952,103,0.77,115,0.763,119,1.253,141,0.009,142,0.006,143,2.345,158,1.41,159,1.894,204,0.745,208,1.973,209,2.905,219,1.217,230,2.636,271,2.573,306,3.924,324,4.989,337,5.275,344,4.107,360,1.818,366,2.299,385,4.363,401,1.426,473,3.005,475,2.141,482,3.733,488,3.83,494,2.024,519,1.596,523,1.51,524,1.787,595,3.28,596,2.211,684,3.28,694,3.484,713,3.295,714,3.28,716,2.972,720,1.553,726,2.364,730,2.982,731,2.141,737,2.141,745,2.905,758,3.671,759,3.271,760,3.969,761,3.227,762,2.012,763,4.666,764,5.31,765,3.671,766,5.31,767,3.271,768,5.31,769,5.31,770,5.439,771,5.31,772,5.31,773,5.31,774,4.651,775,3.722,776,5.13,777,2.876,778,2.408,779,7.137,780,4.651,781,4.196,782,4.385,783,4.241,784,4.169,785,3.461,786,3.924,787,4.667,788,5.31,789,4.651,790,3.722,791,3.671,792,3.671,793,3.28,794,3.28,795,3.924,796,4.241,797,3.461,798,5.31,799,4.666,800,4.666,801,4.666,802,2.426,803,4.666,804,3.722,805,2.573,806,2.573,807,2.573,808,3.722]],["title/components/ForgetPasswordComponent.html",[0,0.465,89,1.122]],["body/components/ForgetPasswordComponent.html",[0,0.711,1,0.974,2,0.235,3,0.296,4,1.085,5,0.271,9,0.592,16,1.268,18,0.983,22,0.898,23,2.47,24,1.61,26,0.375,27,0.807,28,2.432,30,3.143,31,1.164,33,0.948,34,2.201,35,2.02,36,1.594,38,0.627,39,0.011,40,0.933,41,0.597,42,0.702,43,2.962,45,0.807,46,1.965,47,0.607,50,1.11,51,1.702,52,1.751,53,0.661,54,0.509,60,0.283,61,0.493,65,0.541,67,1.716,68,1.085,69,1.085,70,0.974,71,1.525,72,0.974,73,1.484,74,1.085,75,0.923,76,1.028,77,0.493,78,1.085,79,0.974,80,1.085,81,0.974,82,1.085,83,0.974,84,1.525,85,0.974,86,1.763,87,0.974,88,1.085,89,1.716,90,1.978,91,1.525,92,1,93,1.525,94,0.974,95,1.085,96,0.974,97,1,98,0.702,99,1.912,100,0.974,101,1.056,102,0.974,103,0.447,104,0.974,105,1.085,106,0.974,107,0.702,108,0.974,109,1.085,110,0.974,111,1.085,112,0.974,113,1.085,114,0.974,115,0.403,116,1.056,117,1.085,118,1,119,0.609,120,0.974,121,0.702,122,0.974,123,1.085,124,0.974,125,1.085,126,0.974,127,1.085,128,0.974,129,1.085,130,0.974,131,0.974,132,0.974,133,0.974,134,1.085,135,0.974,136,1.085,137,0.974,138,1,139,1.085,140,1.085,141,0.006,142,0.006,158,1.485,221,3.452,319,6.321,341,3.444,343,2.71,380,2.734,386,1.632,411,3.783,426,2.305,433,2.54,435,2.305,446,2.421,447,2.305,448,1.965,465,2.785,484,2.962,517,1.807,518,1.946,519,1.656,540,2.421,809,6.953,810,2.897,811,4.84,812,4.4,813,6.631,814,6.908,815,4.84,816,3.92,817,3.92,818,3.444,819,3.92,820,3.444,821,2.555,822,4.84,823,3.92,824,2.897,825,2.897,826,3.444]],["title/interfaces/Fridge.html",[204,0.904,667,1.436]],["body/interfaces/Fridge.html",[2,0.283,3,0.357,5,0.327,7,0.576,9,0.714,18,0.673,26,0.453,27,0.918,39,0.011,41,0.655,47,0.69,50,1.183,53,0.599,60,0.453,77,0.882,103,0.91,115,0.722,119,0.973,141,0.007,142,0.007,155,2.068,204,1.405,208,2.052,209,2.695,213,3.367,214,3.27,217,3.111,218,1.565,219,1.084,222,4.364,360,1.687,401,1.483,448,2.234,661,3.583,662,3.857,667,2.802,689,4.011,713,2.372,720,2.184,722,4.018,734,2.923,751,2.887,754,3.232,757,3.682,762,2.944,777,2.234,778,2.234,827,3.778,828,6.02,829,5.165,830,4.627,831,3.868,832,4.329,833,5.165,834,3.27,835,3.082,836,2.921]],["title/interfaces/FridgePhage.html",[204,0.904,722,2.429]],["body/interfaces/FridgePhage.html",[2,0.24,3,0.302,5,0.277,7,0.784,9,0.605,18,0.57,26,0.383,27,0.819,39,0.011,41,0.64,42,1.362,47,0.877,50,1.098,60,0.53,77,0.955,98,0.718,115,0.92,119,0.623,141,0.007,142,0.007,151,2.407,155,1.93,178,1.681,204,1.561,207,1.273,208,1.171,211,3.461,218,1.909,219,1.787,401,1.181,406,2.701,448,2.487,502,1.988,505,2.355,523,1.984,524,1.882,667,2.216,673,3.288,711,2.154,712,2.61,713,2.118,714,2.474,715,2.769,716,3.248,717,2.355,718,2.61,719,1.171,720,1.635,721,3.454,722,3.465,723,3.334,724,3.14,725,2.886,726,3.105,727,3.454,728,4.1,729,3.75,730,4.119,731,3.259,732,2.673,733,3.644,734,2.329,735,4.1,736,3.788,737,1.615,738,2.154,739,4.267,740,3.866,741,3.105,742,2.067,743,2.578,744,3.288,745,2.407,746,3.866,747,3.866,748,3.866,749,3.866,750,3.644,751,2.578,752,2.61,753,2.474,754,2.067,755,2.474,756,2.769,757,2.49]],["title/interfaces/GenotypePhage.html",[204,0.904,738,2.429]],["body/interfaces/GenotypePhage.html",[2,0.243,3,0.306,5,0.28,7,0.687,9,0.612,18,0.577,26,0.388,27,0.826,39,0.011,41,0.605,42,1.011,47,0.773,50,1.053,60,0.533,77,1.042,98,1.011,115,0.915,119,0.63,141,0.007,142,0.007,151,1.745,155,1.561,178,1.218,204,1.566,207,1.289,208,1.185,211,3.219,218,1.935,219,1.748,401,1.37,406,2.552,448,1.446,502,2.799,505,3.316,523,2.17,524,2.182,667,2.228,673,3.813,711,2.18,712,2.642,713,2.457,714,2.504,715,2.803,716,3.417,717,2.384,718,2.642,719,1.185,720,1.649,721,2.504,722,3.033,723,2.696,724,2.276,725,2.092,726,3.121,727,2.504,728,2.384,729,2.18,730,3.936,731,3.155,732,1.938,733,2.642,734,1.688,735,2.384,736,3.316,737,2.274,738,3.033,739,4.551,740,4.483,741,3.396,742,3.618,743,2.99,744,3.813,745,2.791,746,4.483,747,4.483,748,4.483,749,4.483,750,4.226,751,2.99,752,3.675,753,4.33,754,2.092,755,2.504,756,2.803,757,2.511]],["title/components/HelpComponent.html",[0,0.465,94,1.122]],["body/components/HelpComponent.html",[0,0.787,1,1.249,2,0.301,3,0.38,4,1.392,5,0.348,9,0.759,16,1.381,18,1.088,22,1.153,23,2.505,24,1.906,33,1.749,36,1.034,39,0.01,40,0.955,47,0.719,53,0.482,54,0.653,60,0.364,61,0.632,65,0.694,67,1.901,68,1.392,69,1.392,70,1.249,71,1.804,72,1.249,73,1.756,74,1.392,75,1.184,76,1.319,77,0.632,78,1.392,79,1.249,80,1.392,81,1.249,82,1.392,83,1.249,84,1.804,85,1.249,86,2.002,87,1.249,88,1.392,89,1.249,90,1.284,91,1.804,92,1.284,93,1.804,94,1.901,95,1.392,96,1.249,97,1.284,98,0.901,99,2.118,100,1.249,101,1.355,102,1.249,103,0.574,104,1.249,105,1.392,106,1.249,107,0.901,108,1.249,109,1.392,110,1.249,111,1.392,112,1.249,113,1.392,114,1.249,115,0.518,116,1.355,117,1.392,118,1.284,119,0.782,120,1.249,121,0.901,122,1.249,123,1.392,124,1.249,125,1.392,126,1.249,127,1.392,128,1.249,129,1.392,130,1.249,131,1.249,132,1.249,133,1.249,134,1.392,135,1.249,136,1.392,137,1.249,138,1.284,139,1.392,140,1.392,141,0.008,142,0.008,208,1.471,407,3.661,837,4.42,838,5.778,839,6.52,840,6.52,841,5.03,842,5.207,843,6.52,844,5.03]],["title/modules/HelpModule.html",[176,1.396,258,3.123]],["body/modules/HelpModule.html",[2,0.361,3,0.456,5,0.417,39,0.011,53,0.824,54,0.783,60,0.528,61,0.759,94,2.112,121,1.082,141,0.009,142,0.009,156,1.765,176,2.259,178,1.814,179,2.996,180,3.902,181,2.514,182,2.996,187,3.66,189,3.628,190,2.031,192,3.772,193,3.246,194,2.996,258,6.002,845,5.304,846,5.304,847,6.036,848,6.036,849,6.036,850,6.036,851,6.036,852,6.036]],["title/components/HomeComponent.html",[0,0.465,96,1.122]],["body/components/HomeComponent.html",[0,0.789,1,1.024,2,0.247,3,0.311,4,1.142,5,0.285,7,0.502,9,0.623,11,4.218,16,1.292,18,1.004,22,0.945,23,2.478,24,1.669,26,0.395,27,0.836,28,1.913,31,1.206,32,2.759,33,0.997,34,2.316,35,2.065,36,1.452,38,0.66,39,0.011,40,0.959,41,0.468,42,0.739,43,3.069,45,0.836,46,2.036,47,0.947,49,2.848,53,0.627,54,0.535,58,1.611,59,2.047,60,0.298,61,0.518,63,3.294,64,4.559,65,1.085,66,2.728,67,1.754,68,1.142,69,1.142,70,1.024,71,1.58,72,1.024,73,1.537,74,1.142,75,0.971,76,1.081,77,0.518,78,1.142,79,1.024,80,1.142,81,1.024,82,1.142,83,1.024,84,1.58,85,1.024,86,1.811,87,1.024,88,1.142,89,1.024,90,1.052,91,1.58,92,1.052,93,1.58,94,1.024,95,1.142,96,1.754,97,1.052,98,0.739,99,1.955,100,1.024,101,1.763,102,1.024,103,0.746,104,1.024,105,1.142,106,1.024,107,0.739,108,1.024,109,1.142,110,1.024,111,1.142,112,1.024,113,1.142,114,1.024,115,0.424,116,1.111,117,1.142,118,1.052,119,0.641,120,1.024,121,0.739,122,1.024,123,1.142,124,1.024,125,1.142,126,1.024,127,1.142,128,1.024,129,1.142,130,1.024,131,1.024,132,1.024,133,1.024,134,1.142,135,1.024,136,1.142,137,1.024,138,1.052,139,1.142,140,1.142,141,0.007,142,0.007,158,1.562,161,2.541,172,4.602,173,5.015,178,1.715,190,1.92,407,3.205,465,2.848,500,2.833,676,4.218,703,2.688,853,3.624,854,3.798,855,5.015,856,5.707,857,5.707,858,5.707,859,4.125,860,4.125,861,4.218,862,5.707,863,7.062,864,5.707,865,5.707,866,5.707,867,3.719,868,5.707,869,5.015,870,5.707,871,2.456,872,3.958,873,3.205]],["title/modules/HomeModule.html",[176,1.396,259,3.123]],["body/modules/HomeModule.html",[2,0.361,3,0.456,5,0.417,39,0.011,53,0.824,54,0.783,60,0.528,61,0.759,96,2.112,121,1.082,141,0.009,142,0.009,156,1.765,176,2.259,178,1.814,179,2.996,180,3.902,181,2.514,182,2.996,187,3.66,189,3.628,190,2.031,192,3.772,193,3.246,194,2.996,198,5.304,259,6.002,874,5.304,875,5.304,876,6.036,877,6.036,878,6.036,879,6.036,880,6.036]],["title/components/LandingRoomComponent.html",[0,0.465,100,1.122]],["body/components/LandingRoomComponent.html",[0,0.83,1,0.827,2,0.199,3,0.251,4,0.922,5,0.23,7,0.78,9,0.503,16,1.19,18,1.016,21,3.074,22,0.763,23,2.442,24,1.432,26,0.319,27,0.718,28,1.997,31,1.354,32,2.504,33,0.805,36,1.404,38,0.93,39,0.011,40,0.852,41,0.477,42,0.597,45,0.718,46,1.748,47,0.54,53,0.613,54,0.432,60,0.241,61,0.419,65,0.802,67,1.592,68,0.922,69,0.922,70,0.827,71,1.356,72,0.827,73,1.32,74,0.922,75,0.784,76,0.873,77,0.419,78,0.922,79,0.827,80,0.922,81,0.827,82,0.922,83,0.827,84,1.356,85,0.827,86,1.608,87,0.827,88,0.922,89,0.827,90,0.85,91,1.356,92,0.85,93,1.356,94,0.827,95,0.922,96,0.827,97,0.85,98,0.597,99,1.774,100,1.592,101,1.989,102,0.827,103,0.999,104,0.827,105,0.922,106,0.827,107,0.597,108,0.827,109,0.922,110,0.827,111,0.922,112,0.827,113,0.922,114,0.827,115,0.76,116,0.897,117,0.922,118,0.85,119,0.518,120,0.827,121,0.597,122,0.827,123,0.922,124,0.827,125,0.922,126,0.827,127,0.922,128,0.827,129,0.922,130,0.827,131,0.827,132,0.827,133,0.827,134,0.922,135,0.827,136,0.922,137,0.827,138,0.85,139,0.922,140,0.922,141,0.006,142,0.006,147,2.68,154,4.01,156,0.974,157,1.914,158,1.262,159,2.286,172,3.193,204,0.666,208,1.432,219,1.122,265,3.525,301,5.631,406,1.697,411,3.414,415,3.598,416,3.835,435,1.958,439,2.66,440,2.302,446,2.057,447,1.958,465,2.584,468,1.958,473,2.853,494,1.9,495,2.853,499,3.387,500,2.432,519,1.747,523,1.393,524,1.648,525,1.87,579,3.958,582,2.751,584,2.634,596,2.04,604,2.302,612,3.59,613,3.417,689,2.529,698,2.461,709,3.621,720,1.432,725,2.529,726,2.853,731,1.975,737,2.584,743,3.293,854,2.634,881,6.275,882,5.704,883,2.66,884,4.305,885,4.736,886,3.913,887,4.899,888,3.193,889,4.305,890,4.899,891,5.278,892,3.913,893,4.899,894,4.305,895,4.899,896,4.899,897,3.387,898,2.955,899,3.33,900,3.913,901,3.621,902,3.387,903,3.193,904,3.387,905,2.926,906,3.026,907,3.33,908,4.899,909,2.461,910,3.33,911,2.926,912,3.33,913,4.899,914,4.899,915,4.899]],["title/components/ListComponent.html",[0,0.465,102,1.122]],["body/components/ListComponent.html",[0,0.778,1,0.979,2,0.236,3,0.298,4,1.091,5,0.273,7,0.48,9,0.595,16,1.271,18,0.985,22,0.903,23,2.471,24,1.617,26,0.377,27,0.811,28,2.025,30,2.884,31,1.169,32,2.706,33,0.953,34,2.214,35,2.025,36,1.597,38,0.631,39,0.011,40,0.936,41,0.599,42,0.707,43,2.975,45,0.811,46,1.973,47,0.931,49,2.23,50,0.882,53,0.724,54,0.512,58,1.541,59,1.957,60,0.285,61,0.496,63,3.15,65,0.544,67,1.72,68,1.091,69,1.091,70,0.979,71,1.531,72,0.979,73,1.49,74,1.091,75,0.928,76,1.034,77,0.496,78,1.091,79,0.979,80,1.091,81,0.979,82,1.091,83,0.979,84,1.531,85,0.979,86,1.768,87,0.979,88,1.091,89,0.979,90,1.006,91,1.531,92,1.006,93,1.531,94,0.979,95,1.091,96,0.979,97,1.006,98,0.707,99,1.917,100,0.979,101,1.062,102,1.72,103,0.989,104,0.979,105,1.091,106,0.979,107,0.707,108,0.979,109,1.091,110,0.979,111,1.091,112,0.979,113,1.091,114,0.979,115,0.406,116,1.062,117,1.091,118,1.006,119,0.613,120,0.979,121,0.707,122,0.979,123,1.091,124,0.979,125,1.091,126,0.979,127,1.091,128,0.979,129,1.091,130,0.979,131,0.979,132,0.979,133,0.979,134,1.091,135,0.979,136,1.091,137,0.979,138,1.006,139,1.091,140,1.091,141,0.007,142,0.007,157,2.161,158,1.494,265,3.575,401,1.598,411,3.311,426,2.318,465,2.793,579,3.946,592,5.857,602,3.15,604,2.726,612,3.946,613,3.756,614,4.418,683,2.914,709,4.088,719,1.617,861,2.914,872,3.575,873,3.106,909,2.914,916,3.465,917,6.926,918,5.531,919,3.943,920,3.943,921,3.943,922,3.943,923,3.943,924,3.943,925,3.943,926,3.943,927,3.943,928,4.86]],["title/components/LocationComponent.html",[0,0.465,104,1.122]],["body/components/LocationComponent.html",[0,0.83,1,1.218,2,0.428,3,0.37,4,1.357,5,0.339,7,0.597,9,0.74,14,3.961,16,1.37,18,1.078,22,1.124,23,2.502,24,1.875,39,0.01,40,0.94,47,0.707,53,0.469,54,0.636,60,0.355,61,0.616,65,0.677,67,1.882,68,1.357,69,1.357,70,1.218,71,1.775,72,1.218,73,1.727,74,1.357,75,1.154,76,1.286,77,0.616,78,1.357,79,1.218,80,1.357,81,1.218,82,1.357,83,1.218,84,1.775,85,1.218,86,1.978,87,1.218,88,1.357,89,1.218,90,1.251,91,1.775,92,1.251,93,1.775,94,1.218,95,1.357,96,1.218,97,1.251,98,1.28,99,2.097,100,1.218,101,1.321,102,1.218,103,0.559,104,1.882,105,1.357,106,1.218,107,1.28,108,1.218,109,1.357,110,1.218,111,1.357,112,1.218,113,1.357,114,1.218,115,0.505,116,1.321,117,1.357,118,1.251,119,1.111,120,1.218,121,0.879,122,1.218,123,1.357,124,1.218,125,1.357,126,1.218,127,1.357,128,1.218,129,1.357,130,1.218,131,1.218,132,1.218,133,1.218,134,1.357,135,1.218,136,1.357,137,1.218,138,1.251,139,1.357,140,1.357,141,0.008,142,0.008,174,4.179,407,3.601,500,3.183,716,3.156,929,4.309,930,6.413,931,6.413,932,6.413,933,6.413]],["title/modules/LocationModule.html",[176,1.396,934,3.339]],["body/modules/LocationModule.html",[2,0.3,3,0.379,5,0.347,39,0.011,53,0.836,54,0.651,60,0.47,61,0.63,92,2.071,97,2.071,98,0.899,100,2.016,101,1.351,104,2.016,106,2.016,107,0.899,114,2.08,118,2.071,119,0.78,121,0.899,141,0.008,142,0.008,156,1.466,176,2.011,178,1.507,179,2.489,180,3.585,181,2.088,182,3.585,187,3.493,189,3.23,190,1.688,192,3.358,193,2.697,194,2.489,514,3.268,631,5.197,758,5.611,882,4.006,934,6.591,935,4.407,936,4.407,937,5.015,938,4.407,939,5.015,940,5.015,941,5.015,942,5.015,943,5.015,944,5.015,945,5.015,946,7.643,947,4.407,948,4.407,949,4.006,950,5.015]],["title/injectables/LoggedInGuard.html",[143,1.711,263,3.123]],["body/injectables/LoggedInGuard.html",[2,0.323,3,0.408,5,0.373,21,3.271,26,0.517,28,1.994,31,1.441,33,1.649,34,3.031,35,2.297,36,1.538,38,1.196,39,0.011,40,1.096,41,0.614,42,1.34,43,3.668,45,1.187,50,0.745,53,0.716,54,0.7,60,0.39,61,0.679,141,0.008,142,0.008,143,2.833,146,6.903,147,3.448,149,5.993,150,5.809,151,3.616,152,5.809,154,4.199,155,2.242,156,1.578,157,2.109,159,2.433,160,4.743,164,2.489,165,4.312,168,2.489,263,4.716,330,4.743,821,3.518,951,6.903,952,4.743,953,8.102,954,5.398,955,5.398,956,5.398,957,5.398,958,5.398,959,5.398,960,5.398,961,5.398]],["title/components/ModelRoomComponent.html",[0,0.465,106,1.122]],["body/components/ModelRoomComponent.html",[0,0.678,1,0.599,2,0.144,3,0.182,4,0.667,5,0.167,7,0.466,9,0.364,16,1.029,18,0.77,21,2.255,22,0.552,23,2.376,24,1.119,26,0.565,27,0.561,28,2.473,30,2.617,31,0.808,32,1.859,33,0.583,35,1.583,36,1.601,38,0.761,39,0.011,40,0.866,41,0.614,42,0.852,43,2.558,45,1.002,46,1.932,47,0.795,50,0.995,51,0.745,52,0.766,53,0.654,54,0.313,55,3.048,56,1.245,57,1.297,58,0.942,60,0.174,61,0.828,65,0.333,67,1.345,68,0.667,69,0.667,70,0.599,71,1.059,72,0.599,73,1.031,74,0.667,75,0.568,76,0.632,77,0.598,78,0.667,79,0.599,80,0.667,81,0.599,82,0.667,83,0.599,84,1.059,85,0.599,86,1.317,87,0.599,88,0.667,89,0.599,90,0.615,91,1.059,92,0.615,93,1.059,94,0.599,95,0.667,96,0.599,97,0.615,98,0.432,99,1.499,100,0.599,101,0.65,102,0.599,103,0.673,104,0.599,105,0.667,106,1.345,107,1.225,108,0.599,109,0.667,110,0.599,111,0.667,112,0.599,113,0.667,114,0.599,115,0.394,116,0.65,117,0.667,118,0.615,119,0.375,120,0.599,121,0.432,122,0.599,123,0.667,124,0.599,125,0.667,126,0.599,127,0.667,128,0.599,129,0.667,130,0.599,131,0.599,132,0.599,133,0.599,134,0.667,135,0.599,136,0.667,137,0.599,138,0.615,139,0.667,140,0.667,141,0.005,142,0.007,147,1.764,155,1.499,156,0.705,158,0.913,159,0.86,164,2.723,168,2.497,178,1.15,190,0.811,217,2.255,218,1.91,219,1.09,241,2.941,245,2.828,265,2.795,360,0.65,386,1.004,407,2.149,413,4.758,415,2.671,416,3.041,433,2.723,444,2.149,456,2.912,468,1.418,473,2.411,479,2.364,480,3.744,488,2.795,494,1.771,502,3.27,517,1.112,518,1.197,519,1.15,522,1.297,524,1.288,525,2.149,531,1.297,543,2.364,554,4.325,555,2.828,569,1.297,570,1.297,579,2.938,582,2.149,584,1.297,592,1.782,596,1.593,667,1.877,676,2.828,686,3.362,719,1.391,720,1.583,731,0.972,737,1.543,741,1.704,745,1.647,757,3.467,762,2.917,778,1.932,782,1.354,883,1.926,894,3.362,898,1.764,900,3.056,905,2.119,909,1.782,911,2.119,949,6.282,962,6.911,963,3.826,964,5.415,965,5.415,966,4.002,967,3.529,968,4.758,969,3.826,970,5.415,971,3.826,972,3.826,973,3.826,974,6.834,975,2.411,976,5.02,977,6.389,978,3.826,979,3.826,980,3.826,981,3.362,982,5.415,983,5.02,984,2.828,985,3.056,986,2.828,987,3.826,988,3.826,989,3.056,990,2.411,991,2.411,992,1.153,993,2.411,994,3.826,995,3.826,996,2.411,997,3.362,998,3.826,999,3.056,1000,2.494,1001,3.826,1002,2.411,1003,2.411,1004,2.411,1005,2.411,1006,2.411,1007,2.411,1008,2.411,1009,1.782,1010,2.411,1011,2.411,1012,2.119,1013,2.411,1014,2.411,1015,2.411,1016,1.571,1017,3.826,1018,2.411,1019,2.411,1020,2.411,1021,2.411,1022,2.411,1023,4.757,1024,4.757,1025,2.411,1026,2.119,1027,3.056,1028,2.119,1029,2.411,1030,2.411,1031,2.411,1032,2.119,1033,2.411,1034,2.411,1035,2.411,1036,2.411,1037,2.411,1038,3.826,1039,3.362,1040,6.285,1041,3.826,1042,3.826,1043,3.362,1044,3.826,1045,3.056,1046,3.826,1047,3.826]],["title/components/NavComponent.html",[0,0.465,108,1.122]],["body/components/NavComponent.html",[0,0.817,1,0.989,2,0.238,3,0.301,4,1.102,5,0.275,7,0.485,9,0.601,14,3.44,16,1.275,18,0.989,20,3.44,22,0.912,23,2.472,24,1.628,26,0.381,27,0.816,28,2.217,31,1.177,32,2.717,33,0.963,35,2.033,36,1.505,38,0.637,39,0.011,40,0.941,41,0.527,42,0.713,45,0.816,46,1.986,47,0.933,53,0.615,54,0.516,58,1.555,59,1.976,60,0.288,61,0.5,65,0.549,67,1.728,68,1.102,69,1.102,70,0.989,71,1.541,72,0.989,73,2.14,74,1.102,75,0.937,76,1.044,77,0.5,78,1.102,79,0.989,80,1.102,81,0.989,82,1.102,83,0.989,84,1.541,85,0.989,86,1.777,87,0.989,88,1.102,89,0.989,90,1.016,91,1.541,92,1.016,93,1.541,94,0.989,95,1.102,96,0.989,97,1.016,98,0.713,99,1.925,100,0.989,101,1.072,102,0.989,103,0.835,104,0.989,105,1.102,106,0.989,107,0.713,108,1.728,109,1.102,110,0.989,111,1.102,112,0.989,113,1.102,114,0.989,115,0.41,116,1.072,117,1.102,118,1.016,119,0.619,120,0.989,121,0.713,122,0.989,123,1.102,124,0.989,125,1.102,126,0.989,127,1.102,128,0.989,129,1.102,130,0.989,131,0.989,132,0.989,133,0.989,134,1.102,135,0.989,136,1.102,137,0.989,138,1.868,139,1.102,140,1.102,141,0.007,142,0.007,157,2.176,158,1.508,190,1.874,219,1.276,246,3.44,247,5.555,248,6.111,407,3.127,411,3.626,417,2.568,429,1.903,435,2.341,446,2.459,447,2.341,465,2.804,473,2.479,564,2.341,582,3.127,584,2.994,596,2.319,612,3.967,613,3.776,618,3.629,694,2.055,719,1.628,838,4.448,861,2.942,872,2.874,898,2.568,901,4.115,1048,3.498,1049,4.893,1050,5.569,1051,5.569,1052,5.569,1053,3.498,1054,5.569,1055,3.981,1056,4.115,1057,3.981,1058,5.569,1059,5.569,1060,3.981]],["title/components/NotAuthComponent.html",[0,0.465,110,1.122]],["body/components/NotAuthComponent.html",[0,0.79,1,1.263,2,0.304,3,0.384,4,1.407,5,0.351,9,0.767,16,1.386,18,1.093,22,1.165,23,2.506,24,1.919,39,0.01,40,0.962,45,0.962,47,0.724,53,0.487,54,0.66,60,0.368,61,0.639,65,0.702,67,1.908,68,1.407,69,1.407,70,1.263,71,1.817,72,1.263,73,1.768,74,1.407,75,1.197,76,1.333,77,0.639,78,1.407,79,1.263,80,1.407,81,1.263,82,1.407,83,1.263,84,1.817,85,1.263,86,2.012,87,1.263,88,1.407,89,1.263,90,1.297,91,1.817,92,1.297,93,1.817,94,1.263,95,1.407,96,1.263,97,1.297,98,0.911,99,2.127,100,1.263,101,1.369,102,1.263,103,0.58,104,1.263,105,1.407,106,1.263,107,0.911,108,1.263,109,1.407,110,1.908,111,1.407,112,1.263,113,1.407,114,1.263,115,0.523,116,1.369,117,1.407,118,1.297,119,0.79,120,1.263,121,0.911,122,1.263,123,1.407,124,1.263,125,1.407,126,1.263,127,1.407,128,1.263,129,1.407,130,1.263,131,1.263,132,1.263,133,1.263,134,1.407,135,1.263,136,1.407,137,1.263,138,1.297,139,1.407,140,1.407,141,0.008,142,0.008,167,5.768,172,4.278,199,4.061,1061,4.467,1062,4.467,1063,6.565,1064,4.852]],["title/components/PageNotFoundComponent.html",[0,0.465,112,1.122]],["body/components/PageNotFoundComponent.html",[0,0.825,1,1.192,2,0.287,3,0.362,4,1.957,5,0.332,7,0.584,9,0.724,16,1.361,18,1.069,22,1.099,23,2.499,24,1.848,33,1.709,36,0.987,39,0.01,40,0.926,47,0.697,53,0.459,54,0.622,60,0.347,61,0.603,65,1.158,67,1.866,68,1.328,69,1.328,70,1.192,71,1.75,72,1.192,73,1.703,74,1.328,75,1.129,76,1.258,77,0.603,78,1.328,79,1.192,80,1.328,81,1.192,82,1.328,83,1.192,84,1.75,85,1.192,86,1.957,87,1.192,88,1.328,89,1.192,90,1.224,91,1.75,92,1.224,93,1.75,94,1.192,95,1.328,96,1.192,97,1.224,98,0.86,99,2.08,100,1.192,101,1.292,102,1.192,103,0.547,104,1.192,105,1.328,106,1.192,107,0.86,108,1.192,109,1.328,110,1.192,111,1.328,112,1.866,113,1.328,114,1.192,115,0.494,116,1.292,117,1.328,118,1.224,119,0.746,120,1.192,121,0.86,122,1.192,123,1.328,124,1.192,125,1.328,126,1.192,127,1.328,128,1.192,129,1.328,130,1.192,131,1.192,132,1.192,133,1.192,134,1.328,135,1.192,136,1.328,137,1.192,138,1.224,139,1.328,140,1.328,141,0.007,142,0.007,159,2.255,172,4.119,209,2.72,293,5.049,499,4.37,659,5.554,734,2.632,854,3.399,1065,5.554,1066,4.216,1067,6.321,1068,3.904,1069,5.554,1070,4.897,1071,6.321,1072,4.798]],["title/pipes/PeopleListNamesPipe.html",[1073,2.011,1074,3.123]],["body/pipes/PeopleListNamesPipe.html",[2,0.32,3,0.404,5,0.37,18,0.76,22,1.225,31,1.13,36,1.099,38,0.855,39,0.011,40,1.147,41,0.439,42,0.958,45,0.993,50,1.08,53,0.512,54,0.694,60,0.386,61,0.672,141,0.008,142,0.008,155,2.06,157,2.089,164,2.465,190,2.718,215,3.646,216,3.646,227,3.365,228,2.654,401,1.573,608,5.957,660,3.986,906,3.302,992,2.556,1016,3.484,1073,3.018,1074,4.687,1075,5.957,1076,4.698,1077,3.484,1078,6.779,1079,7.098,1080,5.346,1081,6.779,1082,4.418,1083,2.875,1084,4.698,1085,3.302,1086,4.698,1087,5.415,1088,4.698,1089,3.484,1090,4.698,1091,7.098,1092,4.698,1093,7.098,1094,4.698,1095,4.698]],["title/pipes/PersonNamePipe.html",[1073,2.011,1096,3.123]],["body/pipes/PersonNamePipe.html",[2,0.303,3,0.383,5,0.35,22,1.161,31,1.071,36,1.042,38,0.811,39,0.011,40,1.125,41,0.416,42,0.908,45,1.193,50,1.143,53,0.485,54,0.658,60,0.474,61,0.637,141,0.008,142,0.008,155,2.124,157,1.98,164,2.337,215,3.523,216,3.523,227,3.252,228,2.516,236,2.98,572,5.019,660,3.852,992,2.423,1073,2.917,1077,3.303,1079,7.152,1082,4.27,1083,2.726,1084,4.454,1085,3.131,1086,4.454,1087,5.233,1088,4.454,1089,3.303,1091,7.516,1092,5.757,1093,7.516,1094,5.757,1095,5.757,1096,4.53,1097,5.757,1098,4.454,1099,6.552,1100,5.069,1101,5.069,1102,5.069,1103,5.069]],["title/interfaces/Phage.html",[115,0.465,204,0.904]],["body/interfaces/Phage.html",[2,0.259,3,0.326,5,0.299,7,0.718,9,0.653,18,0.615,26,0.414,27,0.864,39,0.011,41,0.55,47,0.794,50,1.074,60,0.545,77,0.978,98,0.775,115,0.913,119,0.672,141,0.007,142,0.007,151,1.861,155,1.632,178,1.299,204,1.622,207,1.374,208,1.264,211,3.329,218,1.919,219,1.727,249,2.067,401,1.245,406,2.495,448,1.542,502,2.146,505,2.542,523,2.049,524,1.983,667,2.29,673,3.466,711,2.325,712,2.817,713,2.233,714,2.67,715,2.989,716,3.375,717,4.236,718,3.841,719,1.723,720,2.275,721,2.67,722,3.17,723,2.818,724,2.428,725,2.231,726,2.986,727,2.67,728,2.542,729,2.325,730,3.766,731,2.905,732,2.067,733,2.817,734,1.8,735,2.542,736,3.466,737,1.743,738,2.325,739,4.369,740,4.075,741,3.208,742,2.231,743,2.718,744,3.466,745,2.537,746,4.075,747,4.075,748,4.075,749,4.075,750,3.841,751,2.718,752,2.817,753,2.67,754,2.231,755,2.67,756,2.989,757,2.625]],["title/pipes/PhageDeletionsPipe.html",[1073,2.011,1104,3.123]],["body/pipes/PhageDeletionsPipe.html",[2,0.349,3,0.44,5,0.403,7,0.709,22,1.334,31,1.231,36,1.198,38,0.932,39,0.011,40,1.048,41,0.478,42,1.044,45,1.048,50,0.987,53,0.558,54,0.756,60,0.421,61,0.732,77,0.973,115,0.736,141,0.008,142,0.008,157,2.276,190,2.604,218,1.726,241,3.078,523,2.034,524,1.96,660,4.205,1016,3.796,1073,3.184,1077,3.796,1082,4.66,1089,3.796,1104,4.944,1105,4.944,1106,5.118,1107,7.151,1108,7.151,1109,7.151,1110,6.284,1111,7.151,1112,5.825,1113,5.825,1114,7.739,1115,5.825,1116,5.825]],["title/components/PhageDialogComponent.html",[0,0.465,114,1.122]],["body/components/PhageDialogComponent.html",[0,0.731,1,1.039,2,0.25,3,0.316,4,1.157,5,0.289,7,0.509,9,0.631,16,1.298,18,1.01,19,3.755,22,0.958,23,2.48,24,1.685,26,0.4,27,0.844,33,1.011,36,1.356,38,0.669,39,0.011,40,0.966,41,0.611,42,0.749,47,0.635,53,0.68,54,0.542,60,0.302,61,0.526,65,0.577,67,1.764,68,1.157,69,1.157,70,1.039,71,1.595,72,1.039,73,1.552,74,1.157,75,0.984,76,1.096,77,0.937,78,1.157,79,1.039,80,1.157,81,1.039,82,1.157,83,1.039,84,1.595,85,1.039,86,1.825,87,1.039,88,1.157,89,1.039,90,1.067,91,1.595,92,1.067,93,1.595,94,1.039,95,1.157,96,1.039,97,1.067,98,0.749,99,1.966,100,1.039,101,1.126,102,1.039,103,0.477,104,1.039,105,1.157,106,1.039,107,0.749,108,1.039,109,1.157,110,1.039,111,1.157,112,1.039,113,1.157,114,1.764,115,0.886,116,2.007,117,1.157,118,1.067,119,0.65,120,1.039,121,0.749,122,1.039,123,1.157,124,1.039,125,1.157,126,1.039,127,1.157,128,1.039,129,1.157,130,1.039,131,1.039,132,1.039,133,1.039,134,1.157,135,1.039,136,1.157,137,1.039,138,1.067,139,1.157,140,1.157,141,0.007,142,0.007,181,1.741,187,1.8,194,2.076,219,1.32,241,2.48,326,3.755,382,3.34,383,5.063,384,6.547,385,4.177,387,3.674,388,6.767,393,3.09,394,2.725,395,2.725,396,3.674,397,2.725,398,4.602,448,2.055,451,3.983,500,2.86,502,2.86,523,2.021,557,4.602,595,3.559,722,3.545,729,3.82,731,2.864,762,2.691,989,4.602,1043,5.063,1117,6.242,1118,5.762,1119,5.762,1120,4.182,1121,3.34,1122,5.063,1123,5.762,1124,5.762,1125,5.762,1126,5.762,1127,5.762]],["title/pipes/PhageGuessesPipe.html",[1073,2.011,1128,3.123]],["body/pipes/PhageGuessesPipe.html",[2,0.329,3,0.414,5,0.379,22,1.257,31,1.159,36,1.128,38,0.878,39,0.011,40,1.01,41,0.45,42,0.983,45,1.104,50,0.951,53,0.66,54,0.712,60,0.397,61,0.69,77,0.69,141,0.008,142,0.008,155,2.085,157,2.144,168,2.53,190,2.87,227,2.724,241,2.362,299,5.464,302,5.505,485,3.39,523,2.143,732,2.623,757,2.443,968,6.055,1009,4.056,1012,4.822,1016,3.576,1073,3.068,1077,3.576,1082,4.491,1089,3.576,1090,4.822,1105,4.765,1128,4.765,1129,4.822,1130,6.055,1131,6.892,1132,5.488,1133,5.488,1134,4.822,1135,5.488,1136,6.055,1137,4.822,1138,5.488,1139,5.488]],["title/pipes/PhageMutationsPipe.html",[1073,2.011,1140,3.123]],["body/pipes/PhageMutationsPipe.html",[2,0.365,3,0.46,5,0.421,22,1.396,31,1.287,36,1.253,38,0.975,39,0.011,40,1.077,41,0.5,42,1.092,45,1.077,50,1.014,53,0.583,54,0.79,60,0.44,61,0.766,141,0.009,142,0.009,157,2.38,190,2.656,218,1.76,241,2.622,302,5.87,523,2.09,726,2.712,1016,3.97,1073,3.272,1077,3.97,1082,4.789,1089,3.97,1105,5.081,1134,5.352,1136,6.457,1140,5.081,1141,5.352,1142,6.457,1143,7.349,1144,6.092,1145,6.092]],["title/pipes/PhageParentsPipe.html",[1073,2.011,1146,3.123]],["body/pipes/PhageParentsPipe.html",[2,0.33,3,0.416,5,0.381,22,1.261,31,1.163,36,1.132,38,0.881,39,0.011,40,1.012,41,0.452,42,0.987,45,1.012,50,0.953,53,0.661,54,0.714,60,0.398,61,0.692,115,0.838,141,0.008,142,0.008,157,2.151,190,2.742,218,1.683,225,3.807,523,2.146,524,2.539,703,3.588,731,2.22,735,4.962,762,2.858,1073,3.075,1077,3.588,1082,4.5,1089,3.588,1105,4.775,1121,4.398,1146,4.775,1147,4.838,1148,6.906,1149,6.906,1150,5.506,1151,5.506,1152,5.506,1153,5.506,1154,5.506,1155,5.506,1156,5.506,1157,4.838,1158,5.506,1159,5.506,1160,7.546,1161,7.546,1162,5.506]],["title/interfaces/PlateInput.html",[204,0.904,774,2.944]],["body/interfaces/PlateInput.html",[2,0.277,3,0.349,5,0.32,7,0.563,26,0.664,27,0.904,39,0.011,41,0.57,50,0.958,53,0.443,60,0.558,77,0.581,98,1.105,103,0.527,115,0.885,119,1.151,141,0.007,142,0.007,155,1.28,204,1.588,208,2.029,209,3.187,211,3.445,218,1.835,219,1.413,360,1.661,401,1.565,406,2.565,448,1.649,475,1.864,495,2.059,585,3.197,595,2.856,711,4.481,713,3.189,716,1.926,719,1.803,731,1.864,737,2.487,738,2.487,741,2.746,742,2.387,751,2.132,760,2.719,761,2.211,774,4.02,778,2.2,780,3.013,781,3.627,782,2.597,784,2.856,789,3.013,791,3.197,792,3.197,793,2.856,794,2.856,797,3.013,802,3.013,805,3.197,806,3.197,807,3.197,834,3.197,871,1.99,1163,3.417,1164,5.914,1165,5.119,1166,5.119,1167,4.927,1168,3.013,1169,3.197,1170,3.197,1171,3.013,1172,3.013,1173,3.417,1174,4.927,1175,2.856,1176,3.013,1177,4.02,1178,4.549,1179,4.02,1180,3.693,1181,4.02,1182,3.013]],["title/interfaces/PlateResults.html",[204,0.904,802,2.944]],["body/interfaces/PlateResults.html",[2,0.255,3,0.321,5,0.294,7,0.518,26,0.718,27,0.855,39,0.011,41,0.635,50,0.918,53,0.407,60,0.542,77,0.535,98,1.192,103,0.485,115,0.904,119,1.112,141,0.007,142,0.007,155,1.842,204,1.55,208,1.705,209,2.864,211,2.895,218,1.905,219,1.524,360,1.147,401,1.636,406,2.479,448,1.518,475,2.352,495,1.895,585,4.032,595,3.603,711,4.032,713,3.253,716,1.773,719,1.705,731,2.886,737,2.683,738,2.289,741,3.187,742,2.197,751,2.689,760,2.503,761,2.035,774,2.774,778,2.553,780,2.774,781,3.912,782,3.275,784,4.421,789,2.774,791,2.943,792,2.943,793,2.629,794,2.629,797,3.801,802,3.801,805,2.943,806,2.943,807,2.943,834,2.943,871,1.832,1163,3.146,1164,5.314,1165,2.943,1166,2.943,1167,4.659,1168,2.774,1169,2.943,1170,2.943,1171,2.774,1172,2.774,1173,3.146,1174,5.717,1175,3.603,1176,3.801,1177,4.664,1178,4.844,1179,5.046,1180,4.659,1181,5.046,1182,3.801]],["title/interfaces/PlexerInput.html",[204,0.904,789,2.944]],["body/interfaces/PlexerInput.html",[2,0.274,3,0.346,5,0.317,7,0.558,26,0.661,27,0.898,39,0.011,41,0.567,50,0.953,53,0.438,60,0.556,77,0.576,98,1.098,103,0.522,115,0.892,119,1.256,141,0.007,142,0.007,155,1.268,204,1.583,208,2.019,209,3.175,211,3.428,218,1.831,219,1.404,360,1.234,401,1.672,406,2.393,448,2.186,475,1.846,495,2.039,585,3.166,595,2.829,711,4.472,713,3.15,716,1.907,719,1.792,731,1.846,737,2.471,738,2.463,741,2.729,742,2.364,751,2.112,760,2.693,761,2.189,774,2.984,778,2.186,780,2.984,781,3.603,782,2.572,784,2.829,789,3.994,791,4.237,792,4.237,793,2.829,794,2.829,797,2.984,802,2.984,805,5.1,806,5.1,807,3.166,834,3.166,871,1.971,1163,3.384,1164,5.891,1165,3.166,1166,3.166,1167,4.895,1168,2.984,1169,3.166,1170,3.166,1171,2.984,1172,2.984,1173,3.384,1174,4.895,1175,2.829,1176,2.984,1177,3.994,1178,4.538,1179,3.994,1180,3.658,1181,3.994,1182,2.984]],["title/modules/ProfileModule.html",[176,1.396,260,3.123]],["body/modules/ProfileModule.html",[2,0.34,3,0.428,5,0.392,39,0.011,47,0.626,53,0.828,54,0.736,60,0.509,61,0.713,121,1.017,135,2.081,137,2.081,141,0.008,142,0.008,156,1.659,176,2.175,178,1.706,179,2.817,180,3.797,181,2.363,182,3.797,187,3.606,189,3.493,190,1.91,192,3.632,193,3.052,194,2.817,260,6.083,320,4.987,467,2.443,1183,4.987,1184,4.987,1185,5.675,1186,4.987,1187,5.175,1188,5.675,1189,5.675,1190,5.675,1191,4.533,1192,4.533,1193,5.675,1194,4.533,1195,5.675]],["title/injectables/ProfileService.html",[143,1.711,1187,2.79]],["body/injectables/ProfileService.html",[2,0.246,3,0.311,5,0.284,7,0.796,13,3.199,26,0.394,27,0.835,28,1.911,31,1.204,33,0.995,36,1.451,38,1.046,39,0.011,40,0.958,41,0.579,42,1.171,45,1.123,47,0.968,49,2.845,50,0.902,51,1.271,52,1.308,53,0.675,54,0.534,59,2.042,60,0.297,61,0.517,138,1.8,141,0.007,142,0.007,143,2.476,158,1.559,159,2.032,208,2.341,217,3.428,218,1.786,221,2.537,224,2.372,271,2.844,306,4.211,324,5.214,336,3.615,337,5.214,339,4.551,344,4.225,349,5.121,365,3.615,366,2.541,377,5.006,380,4.282,451,3.939,467,3.636,482,3.373,494,2.307,495,3.62,519,2.474,523,1.17,524,1.384,596,2.938,734,3.335,801,5.006,830,4.211,872,2.941,1083,3.064,1187,3.519,1196,3.615,1197,5.698,1198,5.006,1199,3.713,1200,5.698,1201,4.551,1202,5.698,1203,5.698,1204,4.114,1205,5.698,1206,3.939,1207,5.698,1208,5.635,1209,6.199,1210,5.698,1211,4.114,1212,5.006,1213,5.635,1214,4.211,1215,5.006,1216,5.698,1217,5.698]],["title/components/ResetPasswordComponent.html",[0,0.465,120,1.122]],["body/components/ResetPasswordComponent.html",[0,0.66,1,0.829,2,0.2,3,0.252,4,0.924,5,0.231,9,0.504,16,1.191,18,0.912,21,1.39,22,0.765,23,2.443,24,1.434,26,0.319,27,0.719,28,2.452,30,2.976,31,1.037,32,2.506,33,1.186,34,1.874,35,1.875,36,1.617,38,0.534,39,0.011,40,0.853,41,0.586,42,0.598,43,2.638,45,1.111,46,2.075,47,0.541,50,0.986,51,1.798,52,1.849,53,0.654,54,0.433,60,0.241,61,0.419,65,0.46,67,1.593,68,0.924,69,0.924,70,0.829,71,1.358,72,0.829,73,1.322,74,0.924,75,0.785,76,1.937,77,0.419,78,0.924,79,0.829,80,0.924,81,0.829,82,0.924,83,0.829,84,1.358,85,0.829,86,1.61,87,0.829,88,0.924,89,0.829,90,0.852,91,1.358,92,0.852,93,1.358,94,0.829,95,0.924,96,0.829,97,0.852,98,0.598,99,1.775,100,0.829,101,0.899,102,0.829,103,0.38,104,0.829,105,0.924,106,0.829,107,0.598,108,0.829,109,0.924,110,0.829,111,0.924,112,0.829,113,0.924,114,0.829,115,0.343,116,0.899,117,0.924,118,0.852,119,0.519,120,1.593,121,1.324,122,0.829,123,0.924,124,0.829,125,0.924,126,0.829,127,0.924,128,0.829,129,0.924,130,0.829,131,0.829,132,0.829,133,0.829,134,0.924,135,0.829,136,0.924,137,0.829,138,0.852,139,0.924,140,0.924,141,0.006,142,0.008,155,1.61,156,0.976,164,1.539,168,2.262,321,6.369,349,4.435,360,1.925,380,3.958,386,1.39,411,3.623,415,3.267,416,3.602,426,1.962,433,2.683,435,1.962,446,2.061,447,1.962,448,2.075,465,2.586,484,2.638,517,1.539,518,1.656,519,1.475,540,2.061,704,2.175,810,2.466,811,4.311,812,3.919,813,6.279,815,2.932,818,2.932,820,2.932,821,2.175,822,4.311,824,2.466,825,2.466,826,2.932,854,2.638,872,2.532,984,2.466,1027,3.919,1218,7.007,1219,6.414,1220,5.636,1221,6.414,1222,4.906,1223,3.337,1224,3.626,1225,3.337,1226,3.337,1227,3.337,1228,3.337,1229,2.932,1230,2.665,1231,3.626,1232,3.337,1233,3.337,1234,3.337,1235,2.466,1236,3.337,1237,2.932,1238,3.337,1239,3.337,1240,4.311,1241,4.311,1242,4.311,1243,2.932,1244,3.919,1245,4.311]],["title/interfaces/Scenario.html",[103,0.515,204,0.904]],["body/interfaces/Scenario.html",[2,0.331,3,0.417,5,0.382,7,0.92,26,0.529,27,1.014,39,0.011,41,0.669,50,1.229,53,0.662,60,0.399,103,1.004,115,0.712,141,0.008,142,0.008,159,2.469,204,1.385,208,1.615,209,2.378,219,1.586,246,4.275,689,4.089,719,2.023,720,2.023,762,2.622,778,1.971,836,5.141,885,5.854,886,5.528,891,5.854,892,5.528,1246,4.854,1247,6.327,1248,5.528,1249,5.114,1250,6.081,1251,6.081,1252,6.92,1253,6.081,1254,5.528]],["title/components/ScenarioComponent.html",[0,0.465,122,1.122]],["body/components/ScenarioComponent.html",[0,0.859,1,1.231,2,0.297,3,0.374,4,1.372,5,0.343,7,0.603,9,0.748,16,1.375,18,1.082,22,1.135,23,2.503,24,1.888,39,0.01,40,0.946,47,0.712,53,0.474,54,0.643,60,0.358,61,0.623,65,0.684,67,1.89,68,1.372,69,1.372,70,1.231,71,1.787,72,1.231,73,1.739,74,1.372,75,1.166,76,1.299,77,0.623,78,1.372,79,1.231,80,1.372,81,1.231,82,1.372,83,1.231,84,1.787,85,1.231,86,1.988,87,1.231,88,1.372,89,1.231,90,1.264,91,1.787,92,1.264,93,1.787,94,1.231,95,1.372,96,1.231,97,1.264,98,0.888,99,2.106,100,1.231,101,1.335,102,1.231,103,0.9,104,1.231,105,1.372,106,1.231,107,0.888,108,1.231,109,1.372,110,1.231,111,1.372,112,1.231,113,1.372,114,1.231,115,0.51,116,1.335,117,1.372,118,1.264,119,0.77,120,1.231,121,0.888,122,1.89,123,1.372,124,1.231,125,1.372,126,1.231,127,1.372,128,1.231,129,1.372,130,1.231,131,1.231,132,1.231,133,1.231,134,1.372,135,1.231,136,1.372,137,1.231,138,1.264,139,1.372,140,1.372,141,0.008,142,0.008,176,1.995,219,1.479,246,3.988,277,4.207,401,1.364,500,3.204,650,5.673,716,2.688,1255,4.354]],["title/modules/ScenarioModule.html",[176,1.396,261,3.123]],["body/modules/ScenarioModule.html",[2,0.352,3,0.444,5,0.407,39,0.011,53,0.827,54,0.764,60,0.52,61,0.74,102,2.1,121,1.055,122,2.1,141,0.008,142,0.008,156,1.721,176,2.224,178,1.769,179,2.922,180,3.859,181,2.451,182,2.922,187,3.638,189,3.573,190,1.981,192,3.715,193,3.165,194,2.922,261,6.056,637,5.172,1256,5.172,1257,5.172,1258,5.887,1259,5.887,1260,5.887,1261,5.887,1262,5.887,1263,5.887]],["title/injectables/ScenarioResolver.html",[143,1.711,264,3.123]],["body/injectables/ScenarioResolver.html",[2,0.286,3,0.36,5,0.33,7,0.767,26,0.457,31,1.584,33,1.153,36,1.295,38,1.008,39,0.011,40,0.923,41,0.517,42,1.128,45,1.099,53,0.746,54,0.619,60,0.345,61,0.6,103,0.989,141,0.007,142,0.007,143,2.67,150,5.388,151,3.034,152,5.183,154,4.376,156,1.395,157,2.754,158,1.807,159,3.019,219,1.898,236,2.805,249,3.01,264,4.354,265,3.869,277,4.104,326,4.594,344,4.031,360,1.285,366,2.947,434,4.104,473,3.338,481,3.25,494,2.451,495,2.804,499,4.354,579,3.89,643,6.394,645,5.03,683,3.525,689,3.869,693,4.191,719,1.841,720,2.192,734,3.122,777,2.246,836,4.631,854,3.386,888,4.104,898,3.25,909,3.525,1172,4.104,1182,4.104,1248,5.03,1249,4.654,1264,4.191,1265,4.77,1266,4.77,1267,4.77,1268,5.03,1269,6.297,1270,4.77,1271,4.77,1272,4.77]],["title/modules/SharedModule.html",[176,1.396,187,1.944]],["body/modules/SharedModule.html",[2,0.298,3,0.376,5,0.345,39,0.011,51,1.541,53,0.832,54,0.647,60,0.551,61,0.627,75,2.034,76,1.307,77,0.627,121,0.893,141,0.008,142,0.008,176,2.003,178,1.498,179,2.474,180,3.575,181,2.699,182,2.474,187,3.783,189,3.217,190,1.677,192,3.345,274,3.684,276,3.982,277,3.249,311,6.328,312,3.982,313,6.328,394,3.249,395,3.249,401,1.053,482,3.098,514,3.249,897,3.447,1074,5.976,1096,5.976,1146,5.976,1273,4.38,1274,4.38,1275,4.38,1276,4.985,1277,6.481,1278,4.38,1279,5.695,1280,6.481,1281,6.481,1282,6.481,1283,4.38,1284,6.481,1285,4.38,1286,4.38,1287,4.985,1288,4.985,1289,4.985,1290,4.985,1291,4.38,1292,4.985,1293,4.985,1294,4.985,1295,4.985,1296,4.985]],["title/components/SigninComponent.html",[0,0.465,124,1.122]],["body/components/SigninComponent.html",[0,0.729,1,1.032,2,0.249,3,0.314,4,1.15,5,0.287,9,0.627,16,1.295,18,1.008,21,2.95,22,0.952,23,2.479,24,1.677,26,0.398,27,0.841,28,2.071,30,3.201,31,1.212,33,1.005,34,2.333,35,2.071,36,1.581,38,0.665,39,0.011,40,0.963,41,0.581,42,0.745,43,3.085,45,0.841,46,2.046,47,0.632,50,0.907,51,1.284,52,1.321,53,0.712,54,0.539,60,0.3,61,0.522,65,0.573,67,1.76,68,1.15,69,1.15,70,1.032,71,1.588,72,1.032,73,1.545,74,1.15,75,0.978,76,1.089,77,0.522,78,1.15,79,1.032,80,1.15,81,1.032,82,1.15,83,1.032,84,1.588,85,1.032,86,1.819,87,1.032,88,1.15,89,1.032,90,1.677,91,1.588,92,1.06,93,1.588,94,1.032,95,1.15,96,1.032,97,1.06,98,0.745,99,1.961,100,1.032,101,1.119,102,1.032,103,0.474,104,1.032,105,1.15,106,1.032,107,0.745,108,1.032,109,1.15,110,1.032,111,1.15,112,1.032,113,1.15,114,1.032,115,0.427,116,1.119,117,1.15,118,1.06,119,0.646,120,1.032,121,0.745,122,1.032,123,1.15,124,1.76,125,1.15,126,1.032,127,1.15,128,1.032,129,1.15,130,1.032,131,1.032,132,1.032,133,1.032,134,1.15,135,1.032,136,1.15,137,1.032,138,1.06,139,1.15,140,1.15,141,0.007,142,0.007,147,3.029,156,1.215,158,1.574,165,4.582,221,2.554,333,5.681,349,4.898,380,3.517,411,3.838,426,2.443,433,1.916,435,2.443,446,2.567,447,2.443,465,2.857,467,1.788,517,1.916,518,2.063,519,1.724,540,2.567,550,3.319,821,2.708,824,3.071,825,3.071,872,3.657,1297,3.651,1298,5.737,1299,5.737,1300,4.156,1301,4.156,1302,4.156,1303,4.156,1304,4.156,1305,3.651,1306,3.319,1307,4.156]],["title/components/SignoutComponent.html",[0,0.465,126,1.122]],["body/components/SignoutComponent.html",[0,0.761,1,1.147,2,0.276,3,0.349,4,1.278,5,0.319,9,0.697,16,1.344,18,1.053,21,3.082,22,1.058,23,2.494,26,0.442,27,0.903,28,2.254,31,1.302,32,2.891,33,1.49,35,2.164,36,1.426,38,0.739,39,0.011,40,1.017,41,0.506,42,0.828,45,0.677,46,1.647,47,0.679,53,0.708,54,0.599,60,0.334,61,0.58,65,0.637,67,1.838,68,1.278,69,1.278,70,1.147,71,1.706,72,1.147,73,1.66,74,1.278,75,1.087,76,1.211,77,0.58,78,1.278,79,1.147,80,1.278,81,1.147,82,1.278,83,1.147,84,1.706,85,1.147,86,1.92,87,1.147,88,1.278,89,1.147,90,1.178,91,1.706,92,1.178,93,1.706,94,1.147,95,1.278,96,1.147,97,1.178,98,0.828,99,2.048,100,1.147,101,1.244,102,1.147,103,0.526,104,1.147,105,1.278,106,1.147,107,0.828,108,1.147,109,1.278,110,1.147,111,1.278,112,1.147,113,1.278,114,1.147,115,0.475,116,1.244,117,1.278,118,1.178,119,0.718,120,1.147,121,0.828,122,1.147,123,1.278,124,1.147,125,1.278,126,1.838,127,1.278,128,1.147,129,1.278,130,1.147,131,1.147,132,1.147,133,1.147,134,1.278,135,1.147,136,1.278,137,1.147,138,1.178,139,1.278,140,1.278,141,0.007,142,0.007,147,3.198,156,1.35,334,4.554,411,3.933,417,2.841,426,2.715,435,2.715,440,3.193,447,2.715,465,1.862,564,2.715,821,3.009,1053,4.057,1308,4.057,1309,6.163,1310,4.618,1311,4.618,1312,4.618]],["title/components/SignupComponent.html",[0,0.465,128,1.122]],["body/components/SignupComponent.html",[0,0.675,1,0.87,2,0.21,3,0.264,4,0.969,5,0.242,9,0.529,16,1.454,18,0.934,21,2.733,22,0.802,23,2.451,24,1.486,26,0.335,27,0.745,28,2.356,30,3.027,31,1.074,32,2.564,33,0.847,34,1.967,35,1.919,36,1.635,38,0.813,39,0.011,40,1.126,41,0.615,42,0.911,43,2.733,45,1.065,46,2.134,47,0.801,50,1.081,51,1.849,52,1.901,53,0.735,54,0.454,55,3.597,56,1.808,57,1.883,60,0.253,61,0.44,65,0.483,67,1.63,68,0.969,69,0.969,70,0.87,71,1.407,72,0.87,73,1.369,74,0.969,75,0.824,76,0.918,77,0.44,78,0.969,79,0.87,80,0.969,81,0.87,82,0.969,83,0.87,84,1.407,85,0.87,86,1.656,87,0.87,88,0.969,89,0.87,90,0.894,91,1.407,92,0.894,93,1.407,94,0.87,95,0.969,96,0.87,97,0.894,98,0.628,99,1.817,100,0.87,101,0.943,102,0.87,103,0.399,104,0.87,105,0.969,106,0.87,107,0.628,108,0.87,109,0.969,110,0.87,111,0.969,112,0.87,113,0.969,114,0.87,115,0.36,116,0.943,117,0.969,118,0.894,119,0.544,120,0.87,121,0.628,122,0.87,123,0.969,124,0.87,125,0.969,126,0.87,127,0.969,128,1.63,129,0.969,130,0.87,131,0.87,132,0.87,133,0.87,134,0.969,135,0.87,136,0.969,137,0.87,138,0.894,139,0.969,140,0.969,141,0.006,142,0.007,147,2.758,156,1.024,157,1.986,158,1.327,174,3.899,221,2.263,227,2.523,228,2.523,262,3.529,283,3.077,335,5.372,360,0.943,380,2.969,419,3.695,433,2.758,440,2.421,444,1.967,456,3.529,465,2.646,519,1.053,522,1.883,531,2.733,564,2.059,569,1.883,570,1.883,613,3.517,622,4.466,623,4.466,703,2.282,821,2.282,824,2.588,825,2.588,872,3.388,873,3.685,1206,3.514,1244,4.06,1245,4.466,1305,3.077,1313,3.077,1314,5.083,1315,6.563,1316,5.083,1317,5.083,1318,5.083,1319,3.502,1320,3.502,1321,3.502,1322,3.502,1323,3.502,1324,3.502,1325,3.502,1326,3.502,1327,3.502,1328,3.502,1329,5.257,1330,3.502,1331,5.083,1332,3.502,1333,3.502,1334,3.502,1335,5.083,1336,3.502,1337,3.502,1338,3.502,1339,3.502,1340,3.502,1341,3.077]],["title/interfaces/Student.html",[18,0.643,204,0.904]],["body/interfaces/Student.html",[2,0.321,3,0.404,5,0.37,7,0.652,9,0.808,16,1.298,18,1.114,26,0.513,27,0.994,39,0.011,40,1.092,41,0.611,42,1.48,45,0.994,47,0.748,50,1.139,53,0.65,60,0.539,65,0.739,67,1.33,103,0.774,141,0.008,142,0.008,155,2.062,161,2.384,204,1.491,205,2.88,206,3.957,207,1.702,208,2.178,209,3.206,210,4.705,211,3.698,212,4.705,213,4.006,214,3.702,215,2.88,216,2.88,217,2.23,218,1.194,219,1.707,220,4.422,221,3.487,222,4.398,223,5.104,224,2.23,225,5.15,226,4.277,227,2.658,228,2.658,229,4.277,230,2.658,231,4.277,232,4.277,233,3.308,234,4.277,235,4.277,236,3.148,237,3.308,238,4.277,239,5.95,240,4.277,241,2.305,242,4.277]],["title/interfaces/StudentFridge.html",[204,0.904,835,2.944]],["body/interfaces/StudentFridge.html",[2,0.287,3,0.362,5,0.332,7,0.584,9,0.954,18,0.899,26,0.459,27,0.926,39,0.011,41,0.671,42,1.437,47,0.529,50,1.145,53,0.605,60,0.457,77,0.889,103,0.946,115,0.727,119,0.746,141,0.007,142,0.007,155,2.08,204,1.415,208,2.067,209,2.065,213,4.041,214,3.317,217,1.998,218,1.07,219,1.448,222,4.385,360,1.292,401,1.494,448,1.711,661,3.464,662,3.729,667,2.813,689,3.263,713,1.818,720,1.848,722,3.399,734,3.339,751,2.212,754,3.878,757,3.694,762,2.958,777,1.711,778,1.711,827,3.832,828,5.771,829,3.317,830,3.546,831,2.964,832,3.317,833,5.652,834,3.317,835,4.119,836,2.964,1342,6.321]],["title/components/StudentFridgeComponent.html",[0,0.465,130,1.122]],["body/components/StudentFridgeComponent.html",[0,0.637,1,0.579,2,0.14,3,0.176,4,0.645,5,0.161,7,0.454,9,0.802,16,1.079,18,0.96,20,3.826,21,2.213,22,0.534,23,2.368,24,1.089,26,0.223,27,0.546,28,2.324,30,2.579,31,0.787,32,2.076,33,0.564,35,1.553,36,1.526,38,0.929,39,0.011,40,0.851,41,0.586,42,1.165,45,1.02,46,1.66,47,0.513,50,1.054,51,1.438,52,1.479,53,0.667,54,0.302,55,2.998,56,1.204,57,1.254,58,0.911,60,0.169,61,0.875,65,0.322,67,1.32,68,0.645,69,0.645,70,0.579,71,1.031,72,0.579,73,1.004,74,0.645,75,0.549,76,0.611,77,0.293,78,0.645,79,0.579,80,0.645,81,0.579,82,0.645,83,0.579,84,1.031,85,0.579,86,1.288,87,0.579,88,0.645,89,0.579,90,0.595,91,1.031,92,0.595,93,1.031,94,0.579,95,0.645,96,0.579,97,0.595,98,0.418,99,1.471,100,0.579,101,0.628,102,0.579,103,0.425,104,0.579,105,0.645,106,0.579,107,0.418,108,0.579,109,0.645,110,0.579,111,0.645,112,0.579,113,0.645,114,0.579,115,0.598,116,0.628,117,0.645,118,0.595,119,0.362,120,0.579,121,0.418,122,0.579,123,0.645,124,0.579,125,0.645,126,0.579,127,0.645,128,0.579,129,0.645,130,1.32,131,0.579,132,0.579,133,0.579,134,0.645,135,0.579,136,0.645,137,0.579,138,0.595,139,0.645,140,0.645,141,0.004,142,0.004,147,1.718,151,1.603,155,1.799,156,0.682,157,1.456,158,0.883,159,1.329,164,3.362,168,2.998,174,2.428,178,1.12,188,2.857,204,0.467,205,1.254,218,0.831,225,2.576,230,1.849,265,1.204,282,1.612,299,2.576,344,2.857,360,0.628,386,1.551,401,1.123,411,1.781,415,2.613,416,2.984,417,2.145,429,1.115,433,1.075,448,1.329,456,2.857,457,3.674,465,2.142,467,1.603,468,1.371,473,1.659,475,1.502,478,2.576,479,4.41,480,3.674,494,1.218,500,3.352,505,2.19,510,2.301,517,1.075,518,1.157,519,1.597,522,1.254,523,0.663,524,0.785,525,1.309,527,1.612,528,1.723,531,1.254,540,1.44,555,1.723,568,1.612,569,1.254,570,1.254,572,2.576,582,2.984,584,2.003,612,2.874,613,2.735,651,4.577,655,3.217,661,1.718,662,1.849,667,2.545,669,2.984,690,2.049,698,2.753,703,1.52,719,1.698,723,1.781,725,2.401,734,2.812,736,3.97,753,4.016,754,2.743,757,2.071,762,3.034,778,1.329,785,2.428,835,3.463,884,3.274,898,1.718,902,2.576,903,2.428,904,2.576,967,2.428,976,2.976,983,6.102,985,3.716,989,2.976,1016,1.52,1039,5.933,1056,2.753,1137,2.049,1250,3.274,1343,5.212,1344,5.571,1345,2.049,1346,3.726,1347,5.314,1348,4.244,1349,6.194,1350,3.726,1351,3.726,1352,3.726,1353,3.726,1354,2.332,1355,2.301,1356,3.726,1357,2.332,1358,2.332,1359,2.976,1360,5.442,1361,3.274,1362,3.726,1363,3.274,1364,2.332,1365,3.726,1366,2.332,1367,2.332,1368,3.726,1369,3.726,1370,3.726,1371,2.332,1372,3.726,1373,2.332,1374,2.332,1375,4.653,1376,2.332,1377,2.753,1378,2.753,1379,2.332,1380,2.332,1381,2.332,1382,2.753,1383,1.723,1384,2.049,1385,2.332,1386,2.332,1387,2.332,1388,2.332,1389,2.332,1390,2.332,1391,3.726,1392,2.332,1393,3.726,1394,2.332,1395,2.332,1396,2.332,1397,2.332,1398,2.332,1399,2.332,1400,4.653,1401,2.332,1402,3.726,1403,2.332,1404,3.726,1405,2.332,1406,3.726,1407,3.726,1408,3.726,1409,3.726]],["title/components/StudentIndivComponent.html",[0,0.465,131,1.122]],["body/components/StudentIndivComponent.html",[0,0.662,1,0.426,2,0.264,3,0.129,4,0.474,5,0.118,7,0.65,9,0.858,13,1.625,16,1.31,18,1.19,20,3.042,21,1.836,22,0.393,23,2.284,24,0.846,26,0.164,27,0.424,28,2.316,30,2.224,31,0.611,32,1.723,33,0.414,35,1.289,36,1.561,38,0.956,39,0.011,40,0.969,41,0.568,42,0.957,45,1.202,46,1.905,47,0.82,49,2.154,50,1.135,51,0.894,52,0.92,53,0.704,54,0.222,55,2.542,56,0.885,57,0.922,58,0.67,59,0.851,60,0.124,61,0.472,65,0.785,66,1.383,67,1.095,68,0.474,69,0.474,70,0.426,71,0.801,72,0.426,73,0.779,74,0.474,75,0.681,76,1.49,77,0.935,78,0.474,79,0.426,80,0.474,81,0.426,82,0.474,83,0.426,84,0.801,85,0.426,86,1.039,87,0.426,88,0.474,89,0.426,90,0.437,91,0.801,92,0.437,93,0.801,94,0.426,95,0.474,96,0.426,97,0.437,98,0.307,99,1.22,100,0.426,101,0.462,102,0.426,103,0.898,104,0.426,105,0.474,106,0.426,107,0.307,108,0.426,109,0.474,110,0.426,111,0.474,112,0.426,113,0.474,114,0.426,115,0.176,116,1.011,117,0.474,118,0.437,119,0.266,120,0.426,121,0.307,122,0.426,123,0.474,124,0.426,125,0.474,126,0.426,127,0.474,128,0.426,129,0.474,130,0.426,131,1.095,132,0.426,133,0.426,134,0.474,135,0.426,136,0.474,137,0.426,138,0.437,139,0.474,140,0.474,141,0.003,142,0.003,147,1.334,151,1.245,155,1.574,156,0.501,157,1.723,158,0.649,159,1.032,161,3.461,164,3.349,168,2.754,181,0.714,187,0.738,188,2.371,194,0.851,205,2.648,208,1.289,221,1.288,223,1.885,224,1.205,230,1.436,236,1.008,245,1.267,246,1.787,249,2.354,265,2.276,282,1.185,344,1.556,360,1.011,386,1.205,390,1.267,391,1.369,393,3.258,394,1.117,395,1.117,401,1.129,411,1.794,415,2.108,416,2.476,417,1.731,426,1.008,429,0.82,433,2.033,444,2.108,454,3.874,456,2.371,457,3.048,465,1.778,467,1.245,468,1.008,469,3.298,472,2.311,473,2.66,479,4.085,480,3.048,484,0.922,485,2.318,487,2,488,2.757,489,3.298,494,1.442,500,3.192,510,1.787,513,1.267,514,1.117,515,1.267,516,1.185,517,0.79,518,0.851,519,1.325,522,0.922,523,0.488,524,0.577,525,0.963,526,2.542,527,1.185,528,1.267,531,2.648,532,1.369,540,1.059,543,2.318,552,1.506,553,1.506,554,1.369,555,2.138,557,2.311,558,1.506,559,1.506,560,1.506,562,1.506,564,2.207,568,1.185,569,0.922,570,0.922,572,2,575,1.369,576,2.542,578,2.542,579,2.318,582,2.476,584,1.556,587,1.885,596,1.205,600,3.258,602,1.369,603,1.506,604,1.185,605,1.369,612,2.318,613,2.207,651,3.948,654,2.138,655,2.595,660,3.141,661,3.349,662,3.497,663,3.298,664,1.885,667,0.92,668,2.774,669,1.625,683,1.267,689,2.542,694,2.276,703,2.446,704,1.117,707,1.506,709,2.138,719,0.846,720,0.846,753,3.841,778,0.612,785,1.885,831,1.787,873,1.625,898,2.463,900,2.311,902,2,903,1.885,904,2,976,1.369,983,5.412,985,2.998,986,4.415,997,2.542,1068,1.787,1199,1.885,1306,2.311,1329,3.298,1343,5.293,1355,1.059,1359,2.311,1360,3.874,1361,2.542,1363,2.542,1377,2.138,1378,2.138,1382,2.138,1383,1.267,1384,1.506,1410,6.115,1411,1.885,1412,2.893,1413,4.409,1414,4.409,1415,4.409,1416,2.893,1417,4.409,1418,2.893,1419,4.409,1420,2.893,1421,2.893,1422,2.893,1423,1.714,1424,1.714,1425,2.893,1426,1.714,1427,2.542,1428,1.714,1429,4.694,1430,2.893,1431,1.714,1432,2.311,1433,1.714,1434,4.409,1435,2.893,1436,1.714,1437,1.714,1438,1.714,1439,2.893,1440,1.714,1441,3.753,1442,1.714,1443,1.714,1444,2.893,1445,2.893,1446,1.714,1447,1.714,1448,2.893,1449,1.714,1450,2.542,1451,1.714,1452,1.714,1453,1.714,1454,1.714,1455,2.998,1456,1.714,1457,1.714,1458,1.714,1459,1.506,1460,1.714,1461,1.714,1462,3.753,1463,2.893,1464,1.714,1465,1.714,1466,1.714,1467,1.714,1468,4.409,1469,1.714,1470,2.893,1471,1.714,1472,2.893,1473,1.714,1474,1.714,1475,1.714,1476,1.714,1477,1.714,1478,1.714,1479,1.714,1480,2.893,1481,2.542,1482,2.893,1483,2.893]],["title/components/StudentListComponent.html",[0,0.465,132,1.122]],["body/components/StudentListComponent.html",[0,0.789,1,0.865,2,0.209,3,0.263,4,0.964,5,0.241,7,0.424,9,0.988,16,1.305,18,1.232,22,0.798,23,2.45,24,1.48,26,0.334,27,0.742,28,2.353,30,3.021,31,1.07,32,2.558,33,1.224,35,1.914,36,1.492,38,0.557,39,0.011,40,0.874,41,0.537,42,0.624,45,0.742,46,1.806,47,0.876,49,2.64,50,0.823,51,1.077,52,1.107,53,0.695,54,0.452,55,3.59,56,1.798,58,1.361,60,0.252,61,0.438,65,0.481,67,1.626,68,0.964,69,0.964,70,0.865,71,1.401,72,0.865,73,1.364,74,0.964,75,0.82,76,0.913,77,0.438,78,0.964,79,0.865,80,0.964,81,0.865,82,0.964,83,0.865,84,1.401,85,0.865,86,1.651,87,0.865,88,0.964,89,0.865,90,0.889,91,1.401,92,0.889,93,1.401,94,0.865,95,0.964,96,0.865,97,0.889,98,0.624,99,1.812,100,0.865,101,0.938,102,0.865,103,0.397,104,0.865,105,0.964,106,0.865,107,0.624,108,0.865,109,0.964,110,0.865,111,0.964,112,0.865,113,0.964,114,0.865,115,0.358,116,0.938,117,0.964,118,0.889,119,0.542,120,0.865,121,0.624,122,0.865,123,0.964,124,0.865,125,0.964,126,0.865,127,0.964,128,0.865,129,0.964,130,0.865,131,0.865,132,1.626,133,0.865,134,0.964,135,0.865,136,0.964,137,0.865,138,0.889,139,0.964,140,0.964,141,0.006,142,0.006,151,2.179,155,1.401,157,1.978,161,2.254,178,1.522,188,3.521,205,3.521,230,2.513,237,2.152,344,3.521,360,0.938,386,2.108,401,1.678,417,2.75,429,1.666,433,1.606,444,1.956,456,3.521,465,2.64,475,2.042,500,2.513,510,3.128,512,3.521,516,2.409,517,1.606,518,1.729,519,1.793,522,1.874,523,0.991,524,1.172,525,1.956,531,1.874,543,2.152,569,1.874,570,1.874,573,4.044,582,3.676,584,2.723,599,3.061,600,2.575,601,3.061,611,2.783,612,3.684,613,3.507,614,4.044,615,3.061,655,3.501,720,1.48,1056,3.742,1343,5.177,1377,3.742,1378,3.742,1383,2.575,1459,4.449,1481,4.449,1484,5.981,1485,4.449,1486,4.044,1487,3.061,1488,5.063,1489,3.484,1490,3.484,1491,4.044,1492,3.484,1493,3.484]],["title/modules/StudentModule.html",[176,1.396,1494,3.339]],["body/modules/StudentModule.html",[2,0.297,3,0.374,5,0.343,18,1.082,39,0.011,53,0.838,54,0.643,60,0.467,61,0.623,75,1.69,77,0.623,121,0.888,130,2.009,131,2.009,132,2.009,133,2.009,141,0.008,142,0.008,156,1.449,176,1.995,178,1.489,179,2.46,180,3.564,181,2.063,182,3.564,187,3.482,189,3.204,190,1.667,192,3.332,193,2.665,194,2.46,513,3.662,514,3.229,631,5.157,633,4.354,635,4.354,1104,5.593,1128,5.593,1140,5.593,1291,6.31,1344,4.771,1410,3.958,1484,3.958,1494,6.584,1495,4.354,1496,4.354,1497,4.955,1498,4.354,1499,5.593,1500,4.955,1501,4.955,1502,4.955,1503,4.955,1504,4.955,1505,4.955,1506,4.955,1507,4.955,1508,4.955,1509,4.955]],["title/interfaces/StudentPhage.html",[204,0.904,754,2.332]],["body/interfaces/StudentPhage.html",[2,0.246,3,0.31,5,0.284,7,0.692,9,0.859,18,0.809,26,0.393,27,0.834,39,0.011,41,0.578,42,1.019,47,0.777,50,0.972,60,0.535,77,1.045,98,0.735,115,0.909,119,0.638,141,0.007,142,0.007,151,1.766,155,1.951,178,1.234,204,1.571,207,1.808,208,1.663,211,3.498,218,1.937,219,1.754,401,1.379,406,2.441,448,1.464,502,2.037,505,2.413,523,2.178,524,2.196,667,2.075,673,3.838,711,2.207,712,2.675,713,2.155,714,2.535,715,2.837,716,3.426,717,2.413,718,2.675,719,1.2,720,1.663,721,2.535,722,3.51,723,2.719,724,2.305,725,2.118,726,3.138,727,2.535,728,2.413,729,2.207,730,3.665,731,2.842,732,1.962,733,2.675,734,1.709,735,2.413,736,3.838,737,1.655,738,2.207,739,4.563,740,4.513,741,3.409,742,2.118,743,3.01,744,3.838,745,2.809,746,4.513,747,4.513,748,4.513,749,4.513,750,4.254,751,3.01,752,2.675,753,2.535,754,2.936,755,4.353,756,3.932,757,3.409]],["title/components/StudentPhageComponent.html",[0,0.465,133,1.122]],["body/components/StudentPhageComponent.html",[0,0.744,1,0.956,2,0.23,3,0.29,4,1.065,5,0.266,9,0.581,16,1.259,18,1.12,22,0.881,23,2.467,24,1.589,26,0.368,31,1.149,33,1.524,36,1.296,39,0.011,40,0.797,41,0.517,45,1.059,47,0.827,50,0.997,53,0.52,54,0.499,60,0.278,61,0.484,65,0.531,67,1.702,68,1.065,69,1.065,70,0.956,71,1.505,72,0.956,73,1.464,74,1.065,75,0.906,76,1.009,77,0.792,78,1.065,79,0.956,80,1.065,81,0.956,82,1.065,83,0.956,84,1.505,85,0.956,86,1.745,87,0.956,88,1.065,89,0.956,90,0.982,91,1.505,92,0.982,93,1.505,94,0.956,95,1.065,96,0.956,97,0.982,98,0.689,99,1.896,100,0.956,101,1.036,102,0.956,103,0.719,104,0.956,105,1.065,106,0.956,107,0.689,108,0.956,109,1.065,110,0.956,111,1.065,112,0.956,113,1.065,114,0.956,115,0.887,116,1.036,117,1.065,118,0.982,119,0.598,120,0.956,121,0.689,122,0.956,123,1.065,124,0.956,125,1.065,126,0.956,127,1.065,128,0.956,129,1.065,130,0.956,131,0.956,132,0.956,133,1.702,134,1.065,135,0.956,136,1.065,137,0.956,138,0.982,139,1.065,140,1.065,141,0.006,142,0.006,241,3.229,249,2.599,385,4.028,448,2.444,500,1.91,505,2.262,523,1.546,660,4.028,667,1.223,668,2.843,685,2.843,724,3.54,725,2.806,726,2.42,729,2.923,736,3.196,754,3.254,757,2.42,762,1.457,785,2.507,1110,4.777,1121,3.073,1122,4.777,1130,4.777,1142,4.777,1343,4.737,1344,5.063,1355,3.358,1359,5.472,1411,2.507,1510,3.381,1511,5.436,1512,7.502,1513,5.436,1514,3.847,1515,5.436,1516,3.847,1517,3.847,1518,5.436,1519,3.847,1520,3.847,1521,3.847,1522,3.847,1523,4.342,1524,3.847,1525,3.847,1526,3.847,1527,3.847,1528,3.847,1529,3.847,1530,5.436,1531,5.436,1532,5.436,1533,5.436]],["title/injectables/StudentResolver.html",[143,1.711,1499,3.123]],["body/injectables/StudentResolver.html",[2,0.293,3,0.369,5,0.338,7,0.779,9,0.738,18,1.077,21,2.665,26,0.468,28,1.43,31,1.352,33,1.182,35,2.213,36,1.316,38,1.211,39,0.011,40,0.938,41,0.525,42,1.147,45,1.109,47,0.706,53,0.772,54,0.634,58,1.91,60,0.353,61,0.615,141,0.008,142,0.008,143,2.703,150,5.432,151,3.469,152,5.432,154,4.25,156,1.43,157,2.788,158,1.852,159,2.875,188,4.07,204,1.281,205,2.629,209,3.258,236,2.875,249,3.06,277,4.171,326,4.65,344,4.416,360,1.317,366,3.02,417,3.29,429,2.338,494,2.093,516,3.381,643,6.438,645,5.112,655,4.425,669,4.25,720,2.213,797,4.171,832,5.573,1068,3.953,1172,4.171,1383,3.614,1487,4.296,1499,4.425,1534,4.296,1535,4.89,1536,4.89,1537,4.171,1538,6.4,1539,6.4,1540,7.135,1541,4.89,1542,4.89]],["title/injectables/StudentService.html",[143,1.711,188,2.429]],["body/injectables/StudentService.html",[2,0.179,3,0.226,5,0.207,7,0.868,9,1.108,16,0.789,17,2.662,18,1.245,19,2.951,26,0.287,27,0.664,28,1.596,31,0.957,33,0.725,36,1.51,38,1.141,39,0.011,40,1.045,41,0.602,42,1.278,45,1.234,47,0.888,49,3.249,50,1.101,51,0.926,52,0.952,53,0.582,54,0.389,60,0.217,61,0.377,77,0.923,103,0.783,141,0.005,142,0.005,143,2.068,154,2.543,155,1.683,158,1.135,159,1.615,161,3.512,164,2.088,168,2.088,178,1.361,188,2.435,204,0.6,205,2.435,217,3.522,218,1.972,271,2.072,324,4.495,337,4.495,343,3.131,344,4.435,360,1.22,366,1.851,401,1.285,467,3.297,473,2.016,475,1.826,482,2.165,488,2.337,494,2.635,495,3.058,512,3.948,519,2.064,520,3.617,596,1.886,661,3.288,662,2.248,667,2.507,668,3.347,669,4.708,698,5.27,720,1.324,723,2.165,734,2.533,757,2.016,762,1.715,767,2.633,770,3.979,803,6.035,835,1.953,873,2.543,1235,3.347,1254,3.617,1432,3.617,1486,3.617,1537,2.951,1543,2.633,1544,4.528,1545,4.528,1546,3.617,1547,3.617,1548,4.528,1549,4.528,1550,4.528,1551,4.528,1552,4.528,1553,2.997,1554,6.083,1555,7.887,1556,4.528,1557,2.997,1558,4.528,1559,2.997,1560,4.528,1561,6.531,1562,2.997,1563,3.617,1564,4.528,1565,2.997,1566,4.528,1567,4.528,1568,2.997,1569,4.528,1570,4.528,1571,4.528,1572,4.528,1573,2.997,1574,2.997,1575,2.997,1576,2.997,1577,2.997,1578,2.997,1579,2.997]],["title/components/UpdatePasswordComponent.html",[0,0.465,135,1.122]],["body/components/UpdatePasswordComponent.html",[0,0.779,1,0.625,2,0.383,3,0.19,4,0.696,5,0.174,7,0.482,9,0.38,14,3.425,16,1.05,18,0.789,21,2.788,22,0.576,23,2.386,24,1.157,26,0.241,27,0.58,28,2.357,30,2.665,31,0.836,32,2.166,33,1.34,35,1.621,36,1.502,38,0.402,39,0.011,40,0.717,41,0.525,42,0.451,45,1.091,46,1.744,47,0.895,49,2.581,50,0.924,51,1.223,52,1.257,53,0.664,54,0.326,55,3.111,56,1.298,57,1.353,58,0.983,59,1.249,60,0.182,61,0.615,65,0.832,67,1.377,68,0.696,69,0.696,70,0.625,71,1.095,72,0.625,73,1.066,74,0.696,75,0.592,76,1.952,77,0.316,78,0.696,79,0.625,80,0.696,81,0.625,82,0.696,83,0.625,84,1.095,85,0.625,86,1.353,87,0.625,88,0.696,89,0.625,90,0.642,91,1.095,92,0.642,93,1.095,94,0.625,95,0.696,96,0.625,97,0.642,98,0.451,99,1.535,100,0.625,101,0.678,102,0.625,103,0.287,104,0.625,105,0.696,106,0.625,107,0.451,108,0.625,109,0.696,110,0.625,111,0.696,112,0.625,113,0.696,114,0.625,115,0.259,116,0.678,117,0.696,118,0.642,119,0.391,120,0.625,121,0.451,122,0.625,123,0.696,124,0.625,125,0.696,126,0.625,127,0.696,128,0.625,129,0.696,130,0.625,131,0.625,132,0.625,133,0.625,134,0.696,135,1.377,136,0.696,137,0.625,138,1.248,139,0.696,140,0.696,141,0.005,142,0.008,147,2.255,151,1.703,156,0.735,208,1.621,219,0.906,221,2.469,233,2.444,269,2.924,349,4.425,360,2.171,380,4.343,386,2.888,417,2.255,429,1.203,433,2.255,444,1.413,448,1.411,456,2.981,465,2.235,467,3.205,468,1.479,473,2.469,481,2.042,482,2.65,484,2.128,494,1.294,517,1.16,518,1.249,519,2.238,522,1.353,523,1.125,524,1.331,525,1.413,531,2.128,543,1.554,564,2.326,569,1.353,570,1.353,582,2.222,584,2.128,587,2.578,596,2.309,651,3.614,684,3.425,694,1.298,723,1.891,732,2.338,751,1.16,776,3.833,810,1.859,812,3.16,861,1.859,873,2.222,898,2.255,902,2.735,903,2.578,904,2.735,984,1.859,992,1.891,1027,3.16,1085,2.444,1187,3.723,1191,2.009,1194,5.947,1201,4.428,1206,2.735,1213,5.54,1214,1.859,1220,4.872,1224,4.73,1229,3.476,1230,2.009,1237,2.21,1240,2.21,1241,2.21,1242,3.476,1243,2.21,1306,3.16,1523,4.428,1580,6.542,1581,6.401,1582,4.872,1583,3.956,1584,3.16,1585,2.222,1586,3.956,1587,2.516,1588,3.956,1589,5.544,1590,3.956,1591,3.16,1592,2.516,1593,3.956,1594,2.735,1595,3.956,1596,3.956,1597,2.516,1598,3.476,1599,3.956,1600,2.516,1601,2.516,1602,2.924,1603,3.476,1604,2.516,1605,2.516,1606,3.956,1607,2.516,1608,3.956,1609,3.956,1610,3.956,1611,3.956,1612,3.956,1613,3.956,1614,3.476,1615,2.516,1616,2.516,1617,2.21,1618,2.21,1619,2.21,1620,2.516,1621,2.516,1622,2.516,1623,2.516,1624,3.16,1625,2.516,1626,3.956]],["title/interfaces/User.html",[47,0.498,204,0.904]],["body/interfaces/User.html",[2,0.299,3,0.377,5,0.345,7,0.608,9,0.979,11,4.795,18,0.923,26,0.621,27,0.951,39,0.011,40,1.188,41,0.649,47,0.969,49,2.906,50,1.186,60,0.469,61,0.628,141,0.008,142,0.008,161,3.609,204,1.527,211,2.478,213,2.685,215,4.253,216,4.253,217,2.079,218,1.841,219,1.917,220,4.228,221,3.397,227,3.577,228,3.577,230,3.22,241,2.792,249,2.387,475,2.616,488,3.349,512,3.489,523,1.845,524,2.183,684,4.007,720,2.413,741,3.397,793,4.007,1083,4.103,1627,3.988,1628,5.701,1629,5.701,1630,5.701,1631,4.387]],["title/components/UserProfileComponent.html",[0,0.465,137,1.122]],["body/components/UserProfileComponent.html",[0,0.815,1,0.759,2,0.368,3,0.231,4,0.845,5,0.211,7,0.559,9,0.461,16,1.148,18,0.874,22,0.7,23,2.426,24,1.343,26,0.292,27,0.673,28,2.364,30,2.881,31,0.971,32,2.4,33,1.485,35,1.925,36,1.519,38,0.489,39,0.011,40,1.107,41,0.54,42,0.547,45,0.809,46,1.97,47,0.917,49,1.852,50,0.762,51,0.944,52,0.971,53,0.687,54,0.396,55,3.399,56,1.577,57,1.643,58,1.193,59,1.516,60,0.221,61,0.694,65,0.422,67,1.525,68,0.845,69,0.845,70,0.759,71,1.272,72,0.759,73,1.237,74,0.845,75,0.719,76,0.801,77,0.384,78,0.845,79,0.759,80,0.845,81,0.759,82,0.845,83,0.759,84,1.272,85,0.759,86,1.528,87,0.759,88,0.845,89,0.759,90,0.779,91,1.272,92,0.779,93,1.272,94,0.759,95,0.845,96,0.759,97,0.779,98,0.547,99,1.7,100,0.759,101,0.823,102,0.759,103,0.348,104,0.759,105,0.845,106,0.759,107,0.547,108,0.759,109,0.845,110,0.759,111,0.845,112,0.759,113,0.845,114,0.759,115,0.314,116,0.823,117,0.845,118,0.779,119,0.475,120,0.759,121,0.547,122,0.759,123,0.845,124,0.759,125,0.845,126,0.759,127,0.845,128,0.759,129,0.845,130,0.759,131,0.759,132,0.759,133,0.759,134,0.845,135,0.759,136,0.845,137,1.525,138,1.928,139,0.845,140,0.845,141,0.005,142,0.005,151,1.977,208,1.796,215,3.303,216,3.303,217,2.557,218,1.231,219,1.053,221,3.288,227,2.28,228,2.28,244,4.037,246,2.838,360,0.823,380,3.434,386,2.557,411,2.196,417,2.832,429,1.46,433,2.118,444,1.715,448,1.639,451,4.246,456,3.303,465,2.476,467,3.313,473,3.288,485,2.838,487,3.176,494,1.502,495,2.734,502,2.28,517,1.408,518,1.516,519,1.979,522,1.643,523,0.869,524,1.028,531,2.47,543,1.887,547,2.684,564,1.796,569,1.643,570,1.643,582,2.58,584,2.47,587,2.994,596,2.557,661,2.118,719,1.796,720,1.343,898,3.036,902,3.176,903,2.994,904,3.176,992,2.196,1032,2.684,1056,3.395,1083,2.47,1187,4.068,1191,2.44,1192,6.035,1206,3.176,1582,4.852,1584,3.669,1598,4.037,1602,3.395,1603,4.037,1617,2.684,1618,2.684,1619,2.684,1632,6.639,1633,2.684,1634,4.037,1635,4.594,1636,6.142,1637,6.142,1638,3.055,1639,4.594,1640,3.055,1641,3.055,1642,4.037,1643,3.055,1644,4.594,1645,3.055,1646,4.594,1647,4.594,1648,3.055,1649,2.838,1650,3.055,1651,3.055,1652,5.522,1653,3.055,1654,3.055,1655,3.055,1656,3.055,1657,3.055,1658,3.055,1659,3.055]],["title/interfaces/_User.html",[204,0.904,213,2.429]],["body/interfaces/_User.html",[2,0.311,3,0.392,5,0.359,7,0.633,9,0.784,11,5.724,18,0.739,26,0.703,27,0.976,39,0.011,40,1.201,41,0.603,47,0.97,49,2.095,50,1.176,60,0.481,61,0.837,141,0.008,142,0.008,161,2.964,204,1.602,211,3.304,213,3.58,215,4.306,216,4.306,217,3.225,218,1.786,219,1.968,220,3.386,221,2.313,227,3.646,228,3.646,230,2.579,241,2.236,249,3.182,475,2.095,488,2.682,512,2.794,523,1.478,524,1.748,684,4.785,720,2.265,741,2.964,793,3.209,1083,3.58,1627,4.15,1628,4.565,1629,4.565,1630,4.565,1631,5.849]],["title/changelog.html",[618,2.489,743,1.761,1660,3.356]],["body/changelog.html",[0,0.622,2,0.269,9,0.678,16,0.783,18,0.639,39,0.007,42,0.805,47,0.887,65,0.835,77,0.86,103,0.512,107,0.805,115,0.827,116,1.21,119,1.063,121,1.084,138,1.146,141,0.009,142,0.007,154,3.397,159,1.603,190,1.512,204,0.899,218,1.349,220,2.928,221,2,380,3.395,385,2.642,390,3.32,397,2.928,401,0.949,406,1.556,448,2.158,467,3.603,475,2.758,479,4.226,481,3.123,482,2.148,483,6.687,499,3.106,502,3.003,519,2.296,551,4.183,585,3.106,587,2.928,618,2.928,661,2.79,662,2.23,667,2.326,684,2.775,704,2.928,713,2.592,720,1.314,721,2.775,726,2,731,2.758,732,2.148,734,1.871,750,2.928,751,2.072,762,1.702,777,2.158,778,1.603,781,2.642,782,2.523,787,4.183,799,3.948,842,3.589,867,2.928,871,3.15,872,2.319,903,2.928,906,2.775,977,3.589,1026,3.948,1045,3.589,1049,3.948,1070,2.928,1073,2,1085,2.775,1157,3.948,1168,2.928,1175,2.775,1176,2.928,1178,2.523,1182,2.928,1208,3.589,1212,3.948,1215,3.948,1231,3.32,1268,3.589,1427,3.948,1429,3.948,1523,3.589,1563,3.589,1585,2.523,1660,3.948,1661,4.493,1662,2.775,1663,2.604,1664,2.775,1665,3.948,1666,7.869,1667,6.431,1668,4.493,1669,8.042,1670,4.493,1671,3.589,1672,6.841,1673,3.948,1674,6.05,1675,3.948,1676,4.493,1677,6.05,1678,4.493,1679,4.493,1680,3.589,1681,4.493,1682,4.493,1683,4.493,1684,4.493,1685,4.493,1686,4.493,1687,4.493,1688,6.05,1689,4.493,1690,4.493,1691,6.841,1692,4.493,1693,4.493,1694,6.05,1695,4.493,1696,4.471,1697,6.05,1698,3.948,1699,4.493,1700,4.493,1701,6.05,1702,6.05,1703,3.948,1704,5.316,1705,3.948,1706,3.106,1707,4.458,1708,3.106,1709,4.493,1710,4.493,1711,4.493,1712,6.841,1713,4.493,1714,4.493,1715,4.493,1716,6.841,1717,4.493,1718,3.589,1719,4.493,1720,4.493,1721,3.948,1722,4.493,1723,4.493,1724,4.493,1725,3.589,1726,4.493,1727,4.493,1728,4.493,1729,4.493,1730,4.493,1731,3.948]],["title/coverage.html",[1732,5.336]],["body/coverage.html",[0,0.908,1,0.86,5,0.239,6,3.042,16,0.603,18,0.492,35,1.012,39,0.011,41,0.284,47,0.382,70,0.86,72,0.86,75,0.815,77,0.435,79,0.86,81,0.86,83,0.86,85,0.86,87,0.86,89,0.86,92,0.883,94,0.86,96,0.86,97,0.883,100,0.86,102,0.86,103,0.395,104,0.86,106,0.86,108,0.86,110,0.86,112,0.86,114,0.86,115,0.356,118,0.883,120,0.86,122,0.86,124,0.86,126,0.86,128,0.86,130,0.86,131,0.86,132,0.86,133,0.86,135,0.86,137,0.86,141,0.006,142,0.006,143,3.045,144,2.394,145,3.042,169,3.042,170,2.765,171,3.042,188,1.862,199,2.765,204,1.678,205,1.862,206,4.392,213,1.862,237,2.139,241,3.678,243,3.042,262,1.862,263,2.394,264,2.394,265,1.787,293,2.765,319,2.765,321,2.765,323,3.042,360,0.933,381,3.042,382,4.026,399,3.042,401,0.732,403,4.521,404,2.765,405,3.042,449,2.765,450,3.042,510,4.032,517,1.596,574,2.765,575,4.026,610,2.765,611,4.026,629,2.394,636,2.765,642,3.042,648,3.042,667,1.1,711,1.862,712,4.521,722,1.862,738,1.862,754,1.787,758,2.394,759,3.042,774,2.256,789,2.256,802,2.256,809,3.042,810,4.392,827,4.026,835,2.256,837,3.042,853,3.042,881,3.042,882,2.765,883,5.214,888,2.256,916,3.042,929,3.042,947,3.042,948,3.042,949,2.765,951,3.042,952,3.042,962,3.042,1009,2.559,1045,6.933,1048,3.042,1061,3.042,1062,3.042,1065,3.042,1066,3.042,1073,3.224,1074,2.394,1075,3.042,1076,3.042,1096,2.394,1097,3.042,1098,3.042,1104,2.394,1105,4.513,1106,3.042,1117,3.042,1128,2.394,1129,3.042,1140,2.394,1141,3.042,1146,2.394,1147,3.042,1163,4.392,1187,2.139,1192,2.765,1194,2.765,1196,3.042,1218,3.042,1246,3.042,1255,3.042,1264,3.042,1297,3.042,1308,3.042,1313,3.042,1343,4.513,1344,3.725,1345,3.042,1410,2.765,1455,2.765,1484,2.765,1499,2.394,1510,3.042,1534,3.042,1543,3.042,1580,3.042,1627,4.026,1632,3.042,1633,3.042,1680,2.765,1732,3.042,1733,1.312,1734,3.462,1735,7.658,1736,4.429,1737,5.04,1738,5.04,1739,3.462,1740,5.943,1741,3.462,1742,3.462,1743,3.462,1744,6.528,1745,3.462,1746,3.462,1747,3.462,1748,3.462,1749,5.04,1750,3.462,1751,5.943,1752,5.943,1753,3.462,1754,3.462,1755,3.462,1756,3.462,1757,5.04,1758,3.042,1759,7.24,1760,3.462,1761,3.462,1762,5.04,1763,3.462,1764,3.462,1765,5.943,1766,5.04,1767,3.462,1768,3.462,1769,5.943,1770,5.04,1771,5.04,1772,7.24,1773,5.04,1774,3.462,1775,3.462,1776,5.04,1777,3.462,1778,3.462,1779,2.765,1780,3.462,1781,3.462,1782,3.462,1783,3.462,1784,3.462,1785,3.462,1786,3.462,1787,3.462,1788,3.462,1789,3.042,1790,3.462,1791,3.462,1792,3.462,1793,3.462,1794,3.462,1795,3.042,1796,3.462,1797,3.462,1798,3.042,1799,3.042,1800,3.462]],["title/dependencies.html",[178,1.625,1801,3.819]],["body/dependencies.html",[22,1.117,31,1.03,39,0.011,54,0.632,141,0.008,142,0.008,156,1.425,178,1.465,181,2.66,268,6.26,269,4.721,274,3.603,276,3.894,277,3.177,312,3.894,339,3.894,343,3.371,394,3.177,395,3.177,475,1.966,482,3.054,487,3.371,897,3.371,1278,4.284,1279,6.26,1283,4.284,1285,5.613,1286,4.284,1731,4.284,1802,4.875,1803,8.561,1804,6.388,1805,4.875,1806,4.875,1807,4.875,1808,8.054,1809,4.875,1810,4.875,1811,4.875,1812,4.875,1813,4.875,1814,4.875,1815,6.388,1816,4.875,1817,4.875,1818,4.875,1819,4.875,1820,6.388,1821,4.875,1822,4.875,1823,5.613,1824,4.875,1825,4.875,1826,4.284,1827,4.875,1828,4.875,1829,4.875,1830,4.875,1831,6.388,1832,4.875,1833,4.875,1834,4.875,1835,4.875,1836,4.875,1837,4.875,1838,7.849,1839,4.875,1840,6.388,1841,4.875,1842,4.875,1843,4.875,1844,4.875,1845,4.875,1846,4.875,1847,4.875,1848,4.875,1849,4.875,1850,4.875,1851,4.875,1852,4.875,1853,4.875,1854,4.875,1855,4.875,1856,5.613,1857,4.875,1858,4.284,1859,4.875,1860,4.875,1861,4.875,1862,4.875,1863,4.875,1864,4.875,1865,4.875,1866,4.875,1867,4.875,1868,4.875,1869,6.643,1870,4.875,1871,4.875,1872,4.875,1873,4.875,1874,4.875,1875,4.875,1876,4.875,1877,3.894,1878,4.875,1879,4.875,1880,4.875,1881,4.875,1882,4.875,1883,4.875,1884,4.875,1885,4.875,1886,4.875,1887,4.875,1888,4.875,1889,4.875,1890,4.875,1891,4.875]],["title/index.html",[26,0.366,618,2.489,743,1.761]],["body/index.html",[39,0.01,73,1.867,141,0.009,142,0.009,743,3.196,897,4.792,1667,6.09,1892,5.536,1893,6.931]],["title/modules.html",[176,1.877]],["body/modules.html",[39,0.009,141,0.009,142,0.009,176,1.943,177,4.347,187,2.706,251,4.647,257,4.347,258,4.347,259,4.347,260,4.347,261,4.347,269,6.562,624,4.647,934,4.647,1494,4.647,1721,7.802,1894,8.879,1895,8.879]],["title/overview.html",[1896,5.336]],["body/overview.html",[0,0.362,1,1.489,35,1.753,39,0.011,60,0.254,70,1.489,72,1.865,75,1.767,79,1.489,81,1.489,83,1.489,85,1.489,87,1.489,89,1.489,92,1.53,94,1.489,96,1.489,97,1.53,100,1.489,102,1.489,104,1.489,106,1.489,108,1.489,110,1.489,112,1.489,114,1.489,118,1.53,120,1.489,121,0.63,122,1.489,124,1.489,126,1.489,128,1.489,130,1.489,131,1.489,132,1.489,133,1.489,135,1.489,137,1.489,141,0.006,142,0.006,143,1.332,144,4.146,176,1.576,177,5.774,178,1.057,179,1.746,180,1.746,181,1.465,182,1.746,183,3.091,184,3.091,185,3.091,186,3.091,187,3.722,188,3.225,189,2.53,190,1.183,204,0.704,251,6.522,252,3.091,253,3.091,254,3.091,255,3.091,256,3.091,257,5.688,258,5.192,259,5.192,260,5.575,261,5.419,262,3.225,263,4.146,264,4.146,265,3.095,308,3.091,309,3.091,624,6.21,625,3.091,626,3.091,628,3.091,629,4.146,758,4.146,845,3.091,846,3.091,874,3.091,875,3.091,934,6.328,935,3.091,936,3.091,938,3.091,1073,1.566,1074,5.192,1096,5.192,1104,4.146,1128,4.146,1140,4.146,1146,5.192,1183,3.091,1184,3.091,1186,3.091,1187,3.704,1244,2.809,1256,3.091,1257,3.091,1273,3.091,1274,3.091,1275,3.091,1494,6.328,1495,3.091,1496,3.091,1498,3.091,1499,4.146,1671,2.809,1896,3.091,1897,5.098,1898,3.517]],["title/todo.html",[550,3.05,618,2.489,743,1.761]],["body/todo.html",[2,0.433,5,0.266,7,0.469,9,0.821,13,2.163,14,2.379,15,3.077,16,1.308,31,1.665,39,0.011,40,0.564,42,0.69,47,0.797,51,1.19,52,1.729,65,0.532,77,0.684,90,0.983,98,0.69,103,0.945,107,0.975,115,0.824,119,0.599,138,1.61,141,0.006,142,0.006,154,2.163,159,1.374,174,2.51,176,1.19,190,1.296,219,1.247,241,1.658,247,3.077,299,5.333,305,5.039,380,1.912,401,1.586,467,2.715,478,5.333,479,2.379,482,1.841,485,2.379,487,2.663,502,1.912,519,1.158,551,4.361,661,1.776,667,2.298,713,1.459,716,1.604,730,2.163,737,1.553,743,1.776,752,5.027,760,2.265,777,1.374,782,2.163,793,2.379,794,2.379,831,2.379,838,3.077,867,2.51,871,1.658,872,3.256,873,2.163,897,2.663,928,3.384,992,2.601,1028,3.384,1069,3.384,1178,2.163,1199,4.111,1251,3.384,1268,3.077,1663,2.715,1673,3.384,1675,5.543,1680,3.077,1823,3.384,1826,3.384,1856,3.384,1899,6.308,1900,3.852,1901,4.111,1902,3.852,1903,3.852,1904,3.852,1905,3.852,1906,7.505,1907,3.852,1908,3.852,1909,5.543,1910,3.852,1911,3.852,1912,3.852,1913,3.852,1914,6.855,1915,3.852,1916,4.781,1917,3.852,1918,3.852,1919,3.852,1920,3.852,1921,3.852,1922,3.852,1923,3.852,1924,3.852,1925,3.852,1926,3.852,1927,3.852,1928,3.852,1929,3.852,1930,3.852,1931,3.852,1932,3.852,1933,3.852,1934,3.852,1935,3.852,1936,3.852,1937,3.852,1938,3.852]],["title/miscellaneous/variables.html",[510,3.34,1939,3.356]],["body/miscellaneous/variables.html",[9,0.68,13,3.404,17,2.649,18,0.974,26,0.431,30,2.524,38,0.97,39,0.011,40,1.004,41,0.497,45,1.179,47,0.755,50,0.945,51,2.487,52,2.722,64,3.598,66,2.154,67,1.119,77,0.566,98,1.086,115,0.463,119,0.942,141,0.007,142,0.008,161,2.006,206,3.329,218,1.795,219,1.569,224,1.876,225,4.736,226,3.598,227,2.236,228,2.236,229,3.598,230,2.236,231,3.598,232,3.598,233,2.783,234,3.598,235,3.598,237,4.231,238,3.598,239,5.472,240,3.598,241,2.609,242,3.598,401,0.952,481,2.325,482,2.898,488,2.325,510,2.783,512,2.423,517,3.159,519,2.059,523,1.281,524,1.516,667,2.177,684,2.783,713,2.296,716,1.876,718,2.936,719,1.772,725,2.325,737,2.954,743,2.077,757,2.006,778,2.162,787,4.191,836,4.526,966,5.415,977,3.598,999,3.598,1000,2.936,1009,5.063,1173,4.48,1199,3.95,1341,5.326,1455,5.472,1671,3.598,1725,4.841,1758,3.958,1795,3.958,1798,3.958,1799,5.326,1909,3.958,1916,5.326,1939,3.958,1940,4.505,1941,4.505,1942,4.505,1943,4.505,1944,4.505,1945,4.505,1946,6.061,1947,6.061,1948,6.061,1949,4.505,1950,4.505,1951,4.505,1952,4.505,1953,4.505,1954,4.505,1955,4.505,1956,2.649,1957,4.505,1958,4.505,1959,4.505,1960,3.958,1961,4.505,1962,4.505,1963,4.505,1964,4.505,1965,6.061,1966,4.505,1967,4.505,1968,3.958,1969,4.505,1970,4.505,1971,3.598,1972,3.598,1973,4.505,1974,4.505]],["title/additional-documentation/controllers.html",[65,0.527,207,1.214,1663,1.644]],["body/additional-documentation/controllers.html",[9,0.937,16,1.081,39,0.009,47,0.684,103,0.708,141,0.009,142,0.009,325,5.492,331,4.956,333,4.586,334,4.586,335,4.586,401,1.311,412,4.956,463,4.956,464,4.956,482,2.967,654,4.586,667,1.972,765,4.29,871,2.671,1546,4.956,1547,4.956,1663,3.724,1733,2.351,1975,5.452,1976,5.452,1977,5.452,1978,5.452,1979,5.452,1980,5.452,1981,5.452,1982,5.452,1983,5.452,1984,5.452,1985,5.452,1986,5.452,1987,5.452,1988,5.452,1989,5.452,1990,5.452,1991,5.452,1992,5.452,1993,5.452,1994,5.452,1995,5.452,1996,5.452,1997,5.452,1998,5.452,1999,5.452,2000,5.452,2001,5.452,2002,5.452,2003,4.29,2004,5.452,2005,5.452,2006,5.452,2007,4.29,2008,5.452]],["title/additional-documentation/controllers/admin-controller.html",[9,0.499,65,0.456,207,1.051,1663,1.424]],["body/additional-documentation/controllers/admin-controller.html",[7,1.035,9,1.24,16,0.916,17,2.157,18,0.954,26,0.351,38,1.315,39,0.011,41,0.674,45,1.14,47,0.964,49,1.479,66,3.636,77,0.661,141,0.006,142,0.006,161,2.734,208,1.961,217,3.075,224,3.167,325,3.884,386,3.239,401,1.417,467,1.579,475,2.704,481,3.812,494,2.687,512,3.302,519,2.491,664,3.425,669,3.448,694,3.812,719,2.577,720,2.315,723,1.754,732,2.512,777,1.309,854,1.973,898,2.831,986,5.245,1064,4.956,1083,1.973,1355,2.266,1485,3.224,1585,4.655,1662,5.274,1663,2.643,1733,1.39,1901,2.391,1956,3.943,1975,4.618,1976,4.618,1977,4.618,1978,4.618,1979,4.618,2007,5.475,2009,3.669,2010,3.669,2011,4.813,2012,4.813,2013,5.458,2014,4.813,2015,4.813,2016,4.37,2017,4.37,2018,4.37,2019,2.93,2020,3.669,2021,3.224,2022,6.141,2023,3.669,2024,6.141,2025,5.256,2026,3.669,2027,3.669,2028,3.669,2029,3.224,2030,3.669,2031,3.669,2032,3.669,2033,5.378,2034,5.378,2035,5.256,2036,3.884,2037,4.198,2038,5.256,2039,3.669,2040,1.579]],["title/additional-documentation/controllers/course-controller.html",[16,0.576,65,0.456,207,1.051,1663,1.424]],["body/additional-documentation/controllers/course-controller.html",[7,1.048,9,0.811,13,2.645,16,1.525,17,1.396,18,1.042,26,0.227,27,0.69,38,1.309,39,0.01,41,0.671,45,1.124,47,0.902,49,0.958,66,3.504,77,0.785,103,0.537,141,0.004,142,0.004,159,0.847,161,2.391,178,0.714,208,1.57,215,2.533,216,2.533,217,3.106,218,1.601,219,0.866,221,1.058,222,1.334,223,2.464,224,2.6,230,1.877,360,1.018,386,3.506,400,4.309,401,1.48,406,1.31,412,3.02,434,1.548,463,3.762,464,3.02,467,2.523,475,2.895,478,3.256,481,4.006,484,1.277,485,2.335,494,2.676,495,3.119,512,1.277,519,2.581,551,1.642,596,1.574,661,1.743,662,1.179,669,1.334,694,3.783,719,2.581,720,2.243,734,2.236,777,0.847,778,1.68,831,1.467,854,2.533,872,1.226,873,1.334,888,2.464,898,2.476,967,1.548,992,1.807,1064,2.794,1068,1.467,1070,3.069,1087,1.897,1175,1.467,1382,1.755,1486,1.897,1537,1.548,1547,3.02,1585,4.618,1662,5.294,1663,2.027,1664,1.467,1708,1.642,1733,0.9,1901,3.069,1956,4.309,1980,3.322,1981,4.138,1982,3.322,1983,3.322,1984,3.322,1985,3.322,1986,3.322,1987,3.322,1988,6.44,2003,1.642,2007,5.157,2011,4.776,2012,4.776,2013,5.417,2014,4.861,2015,4.935,2016,4.679,2017,4.679,2018,4.565,2029,2.087,2033,4.528,2034,4.964,2036,1.755,2040,1.022,2041,2.375,2042,2.375,2043,2.794,2044,7.005,2045,2.375,2046,3.02,2047,3.781,2048,2.375,2049,3.762,2050,2.375,2051,5.862,2052,2.375,2053,2.375,2054,1.897,2055,3.781,2056,2.375,2057,2.375,2058,2.087,2059,2.375,2060,4.71,2061,3.781,2062,2.375,2063,2.375,2064,2.087,2065,2.375,2066,3.781,2067,2.375,2068,2.375,2069,2.375,2070,2.375,2071,2.375,2072,2.375,2073,2.375,2074,2.375,2075,2.375,2076,3.781,2077,2.375,2078,2.375,2079,2.375,2080,2.375,2081,2.375,2082,1.755,2083,1.897,2084,2.375,2085,2.375,2086,2.375,2087,2.087,2088,2.375,2089,2.375,2090,2.375,2091,1.897,2092,2.614,2093,1.897,2094,2.087,2095,2.375]],["title/additional-documentation/controllers/fridge-controller.html",[65,0.456,207,1.051,667,1.051,1663,1.424]],["body/additional-documentation/controllers/fridge-controller.html",[2,0.269,7,1.025,17,1.298,20,1.364,26,0.211,27,0.523,31,0.466,38,1.308,39,0.01,41,0.674,45,1.143,47,0.88,77,0.799,98,0.396,103,0.91,107,0.396,115,0.832,119,0.343,141,0.004,142,0.004,151,0.95,208,1.042,209,1.93,217,3.046,222,1.24,224,3.215,249,1.055,360,1.783,386,3.347,406,2.203,448,1.6,467,2.432,472,1.763,475,2.437,478,1.526,481,3.775,483,2.848,484,2.412,488,1.14,494,2.672,495,1.588,502,2.805,519,2.538,551,3.101,596,1.868,660,1.298,661,1.018,662,1.096,664,2.324,667,2.691,669,2.002,685,1.632,689,3.704,694,3.704,717,2.096,719,2.559,720,2.335,727,1.364,728,1.298,729,2.412,731,1.808,732,1.055,734,2.144,735,1.298,737,1.808,757,2.516,762,2.924,777,0.788,778,0.788,783,2.848,828,1.632,829,1.526,833,3.101,842,1.763,854,3.859,873,1.24,888,1.439,898,3.052,906,1.364,967,4.574,992,2.144,1064,4.699,1068,2.77,1083,1.917,1209,3.941,1382,2.635,1432,1.763,1537,2.324,1546,2.848,1584,1.763,1585,4.611,1594,2.465,1662,5.216,1663,1.93,1664,3.18,1696,1.632,1708,3.56,1733,0.836,1901,2.923,1956,3.739,1972,1.763,1989,3.133,1990,3.133,1991,3.133,1992,3.133,1993,3.133,1994,3.133,1995,3.133,1996,4.965,1997,5.31,1998,3.133,1999,3.133,2000,4.524,2003,4.853,2007,5.14,2011,4.766,2012,4.677,2013,5.304,2014,4.454,2015,4.766,2016,3.938,2017,3.938,2018,3.682,2019,1.763,2033,5.481,2034,5.651,2036,2.635,2037,2.848,2040,0.95,2043,4.176,2046,4.513,2058,1.94,2064,1.94,2082,3.315,2083,3.582,2091,2.848,2092,3.56,2093,1.763,2096,2.208,2097,2.208,2098,2.208,2099,6.006,2100,2.208,2101,4.485,2102,2.208,2103,3.941,2104,2.208,2105,2.208,2106,2.208,2107,2.208,2108,3.133,2109,2.208,2110,2.208,2111,1.94,2112,3.133,2113,2.208,2114,2.208,2115,2.208,2116,2.208,2117,3.133,2118,5.149,2119,5.149,2120,3.133,2121,3.941,2122,2.208,2123,2.208,2124,2.208,2125,2.208,2126,2.208,2127,2.208,2128,2.208,2129,3.566,2130,4.485,2131,5.149,2132,2.208,2133,2.208,2134,2.208,2135,2.208,2136,1.94,2137,2.208,2138,2.208,2139,2.208,2140,2.208,2141,2.208,2142,2.208,2143,2.208]],["title/additional-documentation/controllers/genetics-controller.html",[65,0.456,207,1.051,871,1.424,1663,1.424]],["body/additional-documentation/controllers/genetics-controller.html",[7,0.962,26,0.477,27,0.95,38,1.22,39,0.01,41,0.626,42,0.893,45,0.95,98,1.162,115,0.741,119,1.185,141,0.008,142,0.008,209,2.79,386,3.435,401,1.053,406,2.245,473,2.22,475,2.01,481,3.936,494,2.493,519,2.541,523,1.418,694,3.345,713,2.889,714,4.71,716,2.699,719,2.494,720,2.106,723,2.383,731,2.01,737,2.613,745,2.146,760,2.931,765,4.481,777,2.82,778,2.569,781,3.811,784,4.003,795,3.684,796,3.982,805,3.447,807,4.481,871,2.79,992,3.098,1070,3.249,1165,3.447,1166,3.447,1171,4.224,1178,2.799,1179,4.224,1181,4.224,1235,3.684,1537,4.224,1585,4.282,1662,5.005,1663,3.1,1664,4.003,1708,3.447,1733,1.888,1901,4.224,1956,3.811,2001,5.695,2011,4.224,2012,4.224,2014,4.224,2015,4.224,2016,4.224,2017,4.224,2018,4.224,2040,2.146,2049,3.982,2082,3.684,2144,4.985,2145,4.985,2146,4.985,2147,6.481,2148,4.985,2149,4.985,2150,4.985,2151,5.695,2152,4.985,2153,4.985,2154,4.985,2155,6.481,2156,4.985]],["title/additional-documentation/controllers/scenario-controller.html",[65,0.456,103,0.377,207,1.051,1663,1.424]],["body/additional-documentation/controllers/scenario-controller.html",[7,0.97,17,3.008,26,0.49,27,0.966,38,1.232,39,0.01,41,0.632,45,1.129,103,0.989,141,0.008,142,0.008,159,1.825,224,3.036,386,3.036,401,1.627,475,2.063,481,2.64,484,2.751,494,2.518,495,2.278,519,2.395,676,4.871,689,3.764,694,3.764,719,2.536,720,1.927,734,2.13,777,1.825,778,1.825,800,4.495,836,4.071,854,2.751,885,4.871,891,4.871,967,4.295,992,2.446,1068,3.16,1247,5.264,1491,4.086,1585,4.475,1662,5.127,1663,3.138,1733,1.938,1956,3.008,2002,5.791,2003,5.041,2011,4.752,2012,4.752,2014,4.295,2015,4.295,2016,3.334,2017,3.334,2018,3.334,2033,5.641,2034,5.51,2040,2.202,2043,3.781,2092,4.557,2093,4.086,2094,4.495,2099,4.495,2121,4.495,2157,5.116,2158,5.116,2159,4.495,2160,4.495,2161,5.116,2162,5.116,2163,5.116,2164,5.116,2165,5.116,2166,5.116,2167,5.116,2168,4.495,2169,5.116,2170,5.116]],["title/additional-documentation/controllers/user-controller.html",[47,0.365,65,0.456,207,1.051,1663,1.424]],["body/additional-documentation/controllers/user-controller.html",[2,0.229,7,1.003,13,2.667,17,1.415,18,0.543,26,0.23,27,0.56,38,1.297,39,0.01,40,0.353,41,0.665,45,1.113,47,0.955,49,2.754,50,0.332,76,1.001,103,0.274,121,1.057,141,0.005,142,0.006,159,0.858,161,1.071,164,1.761,168,1.109,178,0.723,190,0.81,208,1.389,215,2.554,216,2.554,217,2.457,219,0.875,221,3.5,222,1.351,224,3.063,306,1.778,325,2.823,331,3.051,333,2.823,334,2.823,335,2.823,343,4.551,360,1.279,380,4.07,386,3.532,397,1.568,400,1.415,406,0.833,467,3.166,473,1.071,475,2.654,481,4.324,484,3.54,488,1.242,494,2.651,519,2.574,596,1.002,654,2.823,661,2.895,662,2.685,664,1.568,667,0.765,669,2.145,689,1.242,694,3.72,719,2.574,720,2.151,732,1.15,734,1.002,741,1.071,763,2.114,777,0.858,831,2.359,832,2.641,854,3.54,872,1.972,898,2.19,967,1.568,986,1.778,992,2.586,1068,2.934,1070,2.489,1198,2.114,1199,1.568,1201,3.051,1213,3.051,1214,1.778,1224,1.778,1230,1.922,1231,4.864,1537,3.845,1563,1.922,1585,4.604,1594,2.641,1602,1.778,1649,1.486,1662,5.278,1663,2.044,1664,1.486,1665,2.114,1698,3.356,1703,4.174,1708,3.284,1718,3.051,1733,0.912,1869,2.114,1901,4.289,1956,4.238,1971,1.922,1972,1.922,2003,1.664,2004,3.356,2005,3.356,2006,3.356,2007,4.551,2008,5.518,2011,4.877,2012,4.697,2013,3.997,2014,4.697,2015,4.794,2016,4.092,2017,4.092,2018,3.525,2019,3.794,2021,2.114,2033,5.32,2034,5.381,2036,1.778,2037,1.922,2040,1.036,2043,3.511,2046,1.922,2049,4.32,2082,3.511,2083,3.051,2087,2.114,2091,1.922,2092,3.284,2103,4.174,2108,2.114,2112,2.114,2120,2.114,2136,2.114,2151,2.114,2168,2.114,2171,2.406,2172,3.82,2173,2.406,2174,2.406,2175,3.82,2176,4.75,2177,2.406,2178,2.406,2179,6.28,2180,3.82,2181,2.406,2182,2.406,2183,2.406,2184,3.82,2185,2.406,2186,3.82,2187,2.114,2188,2.406,2189,2.406,2190,2.406,2191,2.406,2192,2.406,2193,2.406,2194,2.406,2195,2.406,2196,3.82,2197,2.406,2198,2.406,2199,2.114,2200,2.406,2201,3.82,2202,2.406,2203,2.406,2204,2.406,2205,2.406,2206,2.406,2207,2.406,2208,2.406,2209,2.406,2210,2.114,2211,2.406,2212,2.406,2213,2.406,2214,2.406,2215,2.406,2216,2.406,2217,2.406,2218,2.406,2219,2.406,2220,2.406,2221,2.406,2222,3.82,2223,2.406,2224,2.406,2225,3.82,2226,2.406,2227,2.406]],["title/additional-documentation/genetics.html",[65,0.527,207,1.214,871,1.644]],["body/additional-documentation/genetics.html",[39,0.009,103,0.739,115,0.861,119,1.008,141,0.009,142,0.009,482,3.1,713,2.89,761,3.874,765,4.483,867,4.226,871,2.791,1707,4.226,1733,2.456,2228,5.697,2229,5.697,2230,5.697,2231,5.697,2232,5.697,2233,5.697,2234,6.484,2235,6.484,2236,6.484,2237,6.484,2238,6.484,2239,5.697,2240,5.697,2241,5.697,2242,5.697,2243,5.697,2244,5.697,2245,5.697,2246,6.484,2247,6.484,2248,6.484,2249,5.697,2250,5.697]],["title/additional-documentation/genetics/phage-scenario.html",[65,0.456,103,0.377,115,0.34,207,1.051]],["body/additional-documentation/genetics/phage-scenario.html",[2,0.455,7,1.003,26,0.324,27,0.946,38,1.294,39,0.01,41,0.656,45,1.172,50,0.809,77,1.027,103,0.963,115,0.88,141,0.006,142,0.006,155,1.787,190,1.667,208,0.989,209,2.132,218,1.863,219,1.479,224,1.408,227,1.678,230,1.678,233,2.089,360,1.934,401,1.047,406,2.487,494,2.615,519,1.016,523,0.962,587,2.203,596,2.063,716,2.441,717,4.473,719,2.509,724,2.782,725,3.547,726,3.513,727,2.089,728,4.473,729,3.471,732,3.086,739,4.166,742,1.745,744,4.04,745,2.778,755,3.987,761,1.616,762,2.989,776,5.366,777,2.646,782,2.782,783,5.156,786,2.499,829,2.338,830,3.661,871,1.455,889,4.353,898,1.559,901,2.499,1000,4.478,1070,3.228,1085,2.089,1172,2.203,1176,4.207,1208,2.701,1249,2.499,1411,3.228,1591,2.701,1594,2.338,1602,4.333,1706,2.338,1707,2.203,1733,1.281,1858,2.971,1877,2.701,1892,2.701,1960,2.971,2040,1.455,2228,4.353,2229,4.353,2230,4.353,2231,4.353,2232,4.353,2233,4.353,2251,4.954,2252,4.954,2253,4.954,2254,4.954,2255,4.954,2256,3.381,2257,3.381,2258,2.701,2259,4.353,2260,4.954,2261,2.701,2262,2.971,2263,4.353,2264,3.381,2265,5.151,2266,2.971,2267,4.683,2268,4.353,2269,2.701,2270,2.701,2271,2.971,2272,4.954,2273,2.971,2274,3.381,2275,3.381,2276,3.381,2277,3.381,2278,2.971,2279,3.381,2280,3.381,2281,3.381,2282,3.381,2283,3.381,2284,2.971,2285,3.381,2286,3.381,2287,3.381,2288,2.971,2289,3.381,2290,3.381,2291,3.381,2292,6.387,2293,3.381,2294,7.18,2295,6.455,2296,6.455,2297,2.971,2298,3.381,2299,4.954,2300,3.381,2301,5.863,2302,3.381,2303,5.672,2304,3.381,2305,3.381,2306,3.381,2307,3.381,2308,3.381,2309,3.381,2310,3.381,2311,3.381,2312,2.971,2313,3.381,2314,3.381,2315,3.381,2316,3.381,2317,3.381,2318,3.381,2319,3.381,2320,3.381,2321,3.381,2322,2.971,2323,3.381,2324,3.381,2325,3.381,2326,3.381,2327,3.381,2328,3.381,2329,2.971,2330,3.381,2331,3.381,2332,3.381,2333,3.381,2334,3.381,2335,3.381]],["title/additional-documentation/genetics/phage-logic.html",[65,0.456,115,0.34,207,1.051,867,2.155]],["body/additional-documentation/genetics/phage-logic.html",[7,0.952,20,3.682,26,0.571,38,1.16,39,0.01,41,0.642,45,1.063,50,1.001,77,0.749,115,0.837,141,0.009,142,0.009,178,1.791,218,1.329,219,1.366,224,2.482,249,2.849,401,1.259,494,2.372,596,2.482,719,2.12,723,2.849,726,2.654,739,4.568,742,3.076,744,4.597,762,2.258,777,2.126,778,2.126,867,3.884,871,2.565,1000,3.884,1177,4.727,1706,4.121,1733,2.258,2040,2.565,2239,6.373,2240,6.373,2267,5.793,2268,6.869,2336,5.237,2337,5.96,2338,5.96,2339,7.253,2340,5.96,2341,7.253,2342,5.96,2343,5.96,2344,5.96,2345,5.96,2346,5.96,2347,4.405,2348,5.96,2349,5.96,2350,5.96,2351,5.96,2352,5.96]],["title/additional-documentation/genetics/phage-experiment.html",[65,0.456,115,0.34,207,1.051,761,1.581]],["body/additional-documentation/genetics/phage-experiment.html",[7,0.974,26,0.496,38,1.238,39,0.01,41,0.635,45,1.134,77,1.07,115,0.856,141,0.008,142,0.008,155,1.839,164,2.388,168,2.388,218,1.636,224,2.157,299,3.581,360,1.789,401,1.094,406,2.541,494,2.53,523,1.473,524,2.235,664,3.375,673,4.549,685,4.91,726,2.306,732,3.506,742,3.993,743,2.388,745,3.583,760,3.045,761,3.176,762,2.517,776,3.581,777,2.37,795,3.828,871,2.229,906,3.199,981,6.445,1178,2.908,1235,3.828,1624,4.137,1706,5.071,1707,5.335,1733,1.962,2040,2.229,2241,6.445,2242,5.837,2243,5.837,2322,4.551,2353,5.18,2354,5.18,2355,5.18,2356,5.18,2357,6.644,2358,6.445,2359,5.18,2360,5.18,2361,5.18,2362,5.18,2363,4.551,2364,5.18,2365,6.644,2366,5.18,2367,5.18,2368,5.18,2369,5.18,2370,5.18,2371,5.18,2372,5.18,2373,6.644,2374,5.18,2375,6.644,2376,5.18,2377,5.18,2378,8,2379,7.335,2380,5.18,2381,5.18,2382,5.18]],["title/additional-documentation/genetics/plate-experiment.html",[65,0.456,207,1.051,713,1.253,761,1.581]],["body/additional-documentation/genetics/plate-experiment.html",[7,0.903,13,2.316,26,0.71,38,1.227,39,0.01,41,0.608,45,1.124,50,0.788,98,1.266,103,0.651,115,0.847,119,0.641,141,0.007,142,0.007,155,1.58,208,1.206,218,1.964,219,1.699,224,2.377,233,2.548,360,1.111,385,3.848,401,1.74,406,2.656,494,2.309,595,4.362,704,2.688,713,3.239,719,2.343,720,1.206,730,3.966,731,2.848,737,2.99,741,1.836,745,3.04,762,2.479,765,3.946,777,2.334,778,2.036,780,3.719,781,3.848,784,3.525,785,3.719,786,4.218,787,5.126,794,2.548,871,1.775,984,3.048,1085,2.548,1165,4.525,1166,4.883,1168,2.688,1169,2.852,1170,2.852,1171,2.688,1175,3.525,1177,2.688,1178,4.776,1179,3.719,1181,3.719,1182,2.688,1348,3.294,1411,3.719,1614,5.015,1624,3.294,1634,3.624,1696,3.048,1704,5.75,1705,3.624,1706,2.852,1707,4.265,1733,1.562,2040,1.775,2244,5.75,2245,5.75,2278,3.624,2292,3.294,2297,3.624,2312,3.624,2336,5.015,2347,3.048,2358,6.515,2363,3.624,2383,3.624,2384,5.707,2385,5.707,2386,5.707,2387,4.125,2388,3.624,2389,4.125,2390,4.125,2391,4.125,2392,3.624,2393,4.125,2394,4.125,2395,4.125,2396,4.125,2397,5.015,2398,4.125,2399,4.125,2400,4.125,2401,4.125,2402,4.125,2403,4.125,2404,4.125,2405,4.125,2406,4.125,2407,5.707,2408,5.707,2409,4.125,2410,4.125,2411,4.125,2412,4.125,2413,4.125,2414,5.707,2415,4.125,2416,4.125,2417,4.125,2418,4.125,2419,4.125,2420,4.125,2421,4.125,2422,3.294,2423,4.125,2424,4.125,2425,3.624,2426,4.125,2427,4.125,2428,4.125,2429,4.125,2430,4.125,2431,4.125,2432,4.125,2433,4.125,2434,4.125,2435,4.125,2436,4.125,2437,4.125]],["title/additional-documentation/genetics/plexer-experiment.html",[65,0.456,119,0.514,207,1.051,761,1.581]],["body/additional-documentation/genetics/plexer-experiment.html",[7,0.898,26,0.641,38,1.18,39,0.01,41,0.638,45,0.981,103,0.764,115,0.8,119,1.327,141,0.01,142,0.008,155,1.854,218,1.903,219,1.69,224,2.184,385,3.938,406,2.556,494,2.19,660,3.084,713,3.298,719,2.348,737,2.7,745,2.257,762,1.987,777,1.871,778,2.389,780,3.418,781,4.57,782,3.761,784,4.137,785,4.364,786,4.949,787,5.374,791,3.626,792,3.626,794,4.137,795,3.876,796,4.189,797,4.364,806,3.626,871,2.257,906,3.24,1085,3.24,1168,4.364,1169,4.63,1170,4.63,1171,3.418,1175,4.137,1177,3.418,1178,3.761,1179,4.364,1181,4.364,1348,4.189,1411,3.418,1696,3.876,1733,1.987,1968,4.609,2040,2.257,2249,5.884,2250,5.884,2292,5.349,2303,5.884,2347,3.876,2383,4.609,2388,4.609,2392,4.609,2397,4.609,2438,5.245,2439,5.245,2440,5.245,2441,5.245,2442,5.245,2443,5.245,2444,5.245,2445,5.245,2446,5.245,2447,5.245,2448,5.245]],["title/additional-documentation/models.html",[65,0.527,107,0.684,207,1.214]],["body/additional-documentation/models.html",[39,0.009,107,1.252,141,0.009,142,0.009,482,3.341,1733,2.648]],["title/additional-documentation/models/course-model.html",[16,0.576,65,0.456,107,0.593,207,1.051]],["body/additional-documentation/models/course-model.html",[7,1.038,16,1.486,26,0.621,27,1.118,39,0.01,50,1.053,66,3.999,107,1.367,141,0.009,142,0.009,305,5.179,400,4.765,401,1.37,434,4.226,720,1.896,745,2.791,777,2.313,1649,4.005,1733,2.456,2040,2.791,2449,4.483,2450,5.697,2451,6.484,2452,6.484]],["title/additional-documentation/models/fridge-model.html",[65,0.456,107,0.593,207,1.051,667,1.051]],["body/additional-documentation/models/fridge-model.html",[7,0.665,26,0.523,27,1.007,39,0.01,47,0.829,50,0.948,51,1.688,52,2.389,66,2.61,77,0.864,103,0.946,107,1.231,115,0.773,141,0.008,142,0.008,155,1.902,164,3.826,168,4.081,209,2.35,218,1.532,219,1.251,222,4.221,401,1.154,406,1.891,495,2.431,523,1.553,524,1.837,525,3.066,596,2.274,661,2.518,662,2.71,667,2.638,716,2.274,719,2.009,741,2.431,745,2.957,751,2.518,757,3.695,760,3.211,761,2.61,762,3.144,777,2.681,829,5.197,833,5.197,966,4.036,1083,2.936,1355,3.373,1649,3.373,1733,2.069,1877,4.362,2040,2.35,2117,6.037,2258,4.362,2261,4.362,2269,4.362,2270,4.362,2284,4.798,2288,4.798,2329,4.798,2449,3.775,2453,5.461,2454,5.461,2455,5.461,2456,5.461,2457,5.461]],["title/additional-documentation/models/phage-model.html",[65,0.456,107,0.593,115,0.34,207,1.051]],["body/additional-documentation/models/phage-model.html",[7,0.752,26,0.665,27,0.905,39,0.01,41,0.38,47,0.851,50,0.852,51,1.908,52,2.208,66,2.214,77,1.058,98,1.245,103,0.792,107,1.106,115,0.893,141,0.007,142,0.007,155,1.282,168,2.135,204,0.927,218,1.721,219,1.697,230,3.064,241,3.189,249,2.952,401,1.304,406,2.673,434,3.018,448,2.478,495,2.062,511,4.069,512,2.49,523,1.756,524,2.077,667,1.962,673,4.084,713,1.754,716,1.928,717,4.084,723,3.321,724,2.6,725,2.39,726,3.436,728,4.084,729,3.984,731,3.112,735,4.084,736,2.723,737,2.489,739,4.334,741,2.749,743,2.847,745,2.989,755,4.29,761,2.952,762,2.631,777,1.652,778,2.202,828,3.422,831,2.86,832,3.201,833,4.802,906,3.814,999,4.931,1000,4.526,1254,3.699,1355,4.903,1377,4.563,1378,4.563,1450,4.069,1649,2.86,1664,2.86,1733,1.754,1736,5.425,1779,4.931,1789,5.425,1956,3.63,2040,1.993,2054,4.931,2111,4.069,2210,4.069,2347,3.422,2422,3.699,2449,3.201,2458,6.946,2459,4.631,2460,4.631,2461,4.631,2462,4.631,2463,4.631,2464,4.631,2465,4.631,2466,4.631,2467,4.631,2468,4.631,2469,4.631,2470,4.631,2471,7.938,2472,4.631,2473,4.631,2474,4.631,2475,4.631,2476,6.174,2477,4.069,2478,4.631]],["title/additional-documentation/models/scenario-model.html",[65,0.456,103,0.377,107,0.593,207,1.051]],["body/additional-documentation/models/scenario-model.html",[7,0.898,15,3.663,26,0.587,27,0.899,39,0.01,41,0.503,47,0.762,50,1.115,51,2.446,52,2.516,53,0.439,65,0.633,103,0.979,107,1.099,115,0.865,141,0.007,142,0.007,159,1.636,218,1.832,219,1.405,228,3.045,241,1.974,245,3.389,360,1.235,397,2.988,406,2.881,485,2.833,495,2.731,523,1.966,596,3.073,667,2.197,689,3.568,724,2.575,726,3.525,730,2.575,739,3.445,744,2.696,745,2.975,751,2.828,761,2.932,762,1.737,777,1.636,778,2.744,836,4.559,869,4.029,885,5.108,886,3.663,888,2.988,891,5.108,892,3.663,992,2.192,1000,3.998,1176,2.988,1247,5.521,1248,3.663,1249,3.389,1253,4.029,1411,2.988,1491,3.663,1591,3.663,1594,3.17,1649,2.833,1707,2.988,1725,4.9,1733,1.737,1779,3.663,1892,3.663,2040,1.974,2054,4.9,2159,4.029,2160,4.029,2258,5.521,2259,5.39,2261,5.521,2262,6.073,2263,4.029,2265,6.073,2266,4.029,2267,3.663,2269,5.521,2270,5.895,2271,6.073,2273,6.073,2422,3.663,2449,3.17,2450,4.029,2477,4.029,2479,6.912,2480,6.912,2481,4.586,2482,4.586,2483,4.586,2484,4.586,2485,4.586,2486,4.586,2487,4.586,2488,4.586,2489,4.586,2490,6.134,2491,6.134,2492,4.586,2493,4.586,2494,7.38,2495,6.134,2496,6.134,2497,4.586]],["title/additional-documentation/models/user-model.html",[47,0.365,65,0.456,107,0.593,207,1.051]],["body/additional-documentation/models/user-model.html",[7,0.898,16,1.34,18,0.652,20,3.789,26,0.587,27,0.899,31,1.296,38,0.981,39,0.01,40,0.899,41,0.567,45,0.899,47,0.917,49,1.849,50,1.092,51,2.136,52,2.445,103,0.523,107,1.099,121,1.099,141,0.009,142,0.008,161,3.425,164,2.828,168,2.114,215,3.717,216,3.717,217,2.878,218,1.023,219,1.051,221,3.286,222,3.881,224,3.421,227,3.045,228,2.276,360,1.652,380,4.285,385,3.607,386,3.073,397,5.013,401,0.969,434,2.988,467,1.974,494,2.26,519,2.077,661,2.828,662,2.276,704,2.988,719,1.341,720,1.341,721,2.833,723,2.192,733,2.988,776,5.102,777,2.188,778,1.636,855,4.029,898,2.114,901,3.389,966,3.389,992,2.192,1083,4.137,1199,2.988,1206,3.17,1214,3.389,1224,3.389,1231,5.108,1355,2.833,1585,2.575,1642,4.029,1649,3.789,1664,2.833,1718,3.663,1733,1.737,1971,4.9,2040,1.974,2092,5.102,2187,4.029,2199,5.39,2425,4.029,2449,3.17,2498,6.912,2499,6.912,2500,6.912,2501,6.134,2502,6.134,2503,7.38,2504,4.586,2505,7.38,2506,4.586,2507,4.586,2508,6.134,2509,4.586,2510,4.586,2511,4.586,2512,4.586,2513,4.586,2514,4.586,2515,4.586,2516,4.586,2517,4.586,2518,4.586,2519,4.586,2520,7.38,2521,4.586,2522,4.586,2523,4.586,2524,4.586,2525,4.586]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["0",{"_index":241,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/Student.html":{},"components/StudentPhageComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["0.0.1",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["0.0.3",{"_index":1863,"title":{},"body":{"dependencies.html":{}}}],["0.0004",{"_index":2483,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["0.04",{"_index":2484,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["0.1.1",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["0.1.8",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["0.19.39",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1870,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["0.8.18",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1670,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":523,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["1.0.0",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["1.12.9",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["1.14.1",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1861,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1725,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/scenario-model.html":{}}}],["100",{"_index":1045,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["106",{"_index":2467,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["10:00:52",{"_index":1936,"title":{},"body":{"todo.html":{}}}],["11",{"_index":1897,"title":{},"body":{"overview.html":{}}}],["11/11",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["11/16",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":2474,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["14/14",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":2472,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["1500",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1671,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["16/19",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["178",{"_index":2465,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["2",{"_index":524,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["2.1.1",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["2.3.6",{"_index":1855,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1710,"title":{},"body":{"changelog.html":{}}}],["20/21",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["2018",{"_index":1669,"title":{},"body":{"changelog.html":{}}}],["213",{"_index":2468,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["23",{"_index":1694,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1717,"title":{},"body":{"changelog.html":{}}}],["24/26",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":1692,"title":{},"body":{"changelog.html":{}}}],["27/27",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["275",{"_index":2475,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["280",{"_index":2476,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["2d",{"_index":795,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["3",{"_index":525,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/models/fridge-model.html":{}}}],["3.1.0",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":1898,"title":{},"body":{"overview.html":{}}}],["350",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["37/41",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["39;bth",{"_index":1444,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["39;btn",{"_index":1360,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["3a",{"_index":1368,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["3b",{"_index":1369,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["4",{"_index":686,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{}}}],["4.0.0",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1859,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["4.11.0",{"_index":1930,"title":{},"body":{"todo.html":{}}}],["4.14.0",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1865,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1736,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{}}}],["400",{"_index":1708,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["401",{"_index":2180,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["403",{"_index":2036,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["404",{"_index":2049,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["422",{"_index":2188,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["43",{"_index":2463,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["5",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1862,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":1857,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":2016,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["6",{"_index":1244,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["6/10",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":2031,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["68",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["7/14",{"_index":1746,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":2488,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["8/9",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1779,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["83",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1789,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{}}}],["92",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["_admin",{"_index":454,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_authenticationservic",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["_authservic",{"_index":417,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_baseurl",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["_calldelet",{"_index":1414,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["_calldeletecours",{"_index":460,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_calldeletecoursestud",{"_index":461,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_checkpassword",{"_index":1220,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_checkphagedelet",{"_index":2255,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphagedeletion(keymut",{"_index":2328,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift",{"_index":2252,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift(keymut",{"_index":2315,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_computenumoffspr",{"_index":2385,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computenumoffspring(n1",{"_index":2409,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparamet",{"_index":2384,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparameters(f1",{"_index":2401,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_copydelet",{"_index":2243,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_copydeletion(spo",{"_index":2376,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_courseservic",{"_index":419,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{}}}],["_experimentinput",{"_index":1164,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_generatedelet",{"_index":2254,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generatedeletion(useddeletespot",{"_index":2323,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift",{"_index":2251,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift(shifttyp",{"_index":2307,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_genotyp",{"_index":1174,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_getnewspot",{"_index":2253,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_getnewspot(lastmad",{"_index":2318,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_http",{"_index":770,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["_modalservic",{"_index":469,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_profileservic",{"_index":1582,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_reordercours",{"_index":1316,"title":{},"body":{"components/SignupComponent.html":{}}}],["_reordercourses(cours",{"_index":1318,"title":{},"body":{"components/SignupComponent.html":{}}}],["_rout",{"_index":415,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_router",{"_index":147,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_scenarioservic",{"_index":579,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["_shuffleplaquelist",{"_index":2386,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_shuffleplaquelist(inlist",{"_index":2431,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_studentservic",{"_index":655,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["_user",{"_index":213,"title":{"interfaces/_User.html":{}},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["_user2",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_validrecombdel",{"_index":2242,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_validrecombdel(checkpo",{"_index":2372,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_width",{"_index":964,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["a.firstname.tolowercase().localecompare(b.firstname.tolowercas",{"_index":242,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.lastname.tolowercase().localecompare(b.lastname.tolowercas",{"_index":240,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.strainnum",{"_index":1395,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["a/t",{"_index":2281,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["abil",{"_index":1712,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":175,"title":{},"body":{"components/AdminHomeComponent.html":{}}}],["absolut",{"_index":2459,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["acces",{"_index":1630,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["access",{"_index":661,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["accessgr",{"_index":222,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["account",{"_index":2187,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["acid",{"_index":2286,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["activ",{"_index":1026,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{}}}],["activatedrout",{"_index":416,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["activatedroutesnapshot",{"_index":150,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["activemod",{"_index":384,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["actual",{"_index":2425,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["actual_compon",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ad",{"_index":483,"title":{},"body":{"components/CourseEditComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["add",{"_index":478,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentFridgeComponent.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["adding/remov",{"_index":521,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor",{"_index":462,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor(this._admin.id",{"_index":545,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addit",{"_index":207,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{}}}],["addphagetofridg",{"_index":1993,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["addphagetofridge(req",{"_index":2124,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["address",{"_index":1206,"title":{},"body":{"injectables/ProfileService.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["adjust",{"_index":1915,"title":{},"body":{"todo.html":{}}}],["admin",{"_index":9,"title":{"additional-documentation/controllers/admin-controller.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["admin'},{'nam",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["admin.compon",{"_index":197,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.guard.servic",{"_index":201,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.rout",{"_index":196,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.template.html",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.modul",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/cours",{"_index":1923,"title":{},"body":{"todo.html":{}}}],["admin/course/course.servic",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"components/SignupComponent.html":{}}}],["admin/instr",{"_index":2110,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["admincompon",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":144,"title":{"injectables/AdminGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"coverage.html":{},"overview.html":{}}}],["adminhomecompon",{"_index":70,"title":{"components/AdminHomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminid",{"_index":1555,"title":{},"body":{"injectables/StudentService.html":{}}}],["administr",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["adminmodul",{"_index":177,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminrout",{"_index":195,"title":{},"body":{"modules/AdminModule.html":{}}}],["adminstud",{"_index":205,"title":{"interfaces/AdminStudent.html":{}},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["adminus",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{}}}],["aim",{"_index":1634,"title":{},"body":{"components/UserProfileComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["aka",{"_index":2086,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["al",{"_index":865,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":1922,"title":{},"body":{"todo.html":{}}}],["aliv",{"_index":1611,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["allow",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["alltransl",{"_index":2343,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["alphabet",{"_index":226,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["alreadi",{"_index":830,"title":{},"body":{"interfaces/Fridge.html":{},"injectables/ProfileService.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["alway",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["and/or",{"_index":1198,"title":{},"body":{"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["anguar",{"_index":771,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["angular",{"_index":897,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["angular/anim",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["angular/compil",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":54,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":312,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":156,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":1569,"title":{},"body":{"injectables/StudentService.html":{}}}],["anyon",{"_index":1539,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["apart",{"_index":2491,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["api/admin",{"_index":1571,"title":{},"body":{"injectables/StudentService.html":{}}}],["api/admin/1/students/67mak",{"_index":2030,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/cours",{"_index":2047,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum",{"_index":2060,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/:scenarioid",{"_index":2085,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructor",{"_index":2075,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructors/:studentid",{"_index":2079,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/stud",{"_index":2066,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/stud",{"_index":2010,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid",{"_index":2022,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid/:scenarioid",{"_index":2108,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["api/auth",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["api/auth/forget",{"_index":2183,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/reset",{"_index":2192,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signin",{"_index":2198,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signout",{"_index":2207,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signup",{"_index":2204,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/cours",{"_index":2053,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/cricket",{"_index":800,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:scenarioid",{"_index":2163,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:userid/:scenarioid",{"_index":2105,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/:phageid",{"_index":2129,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/delet",{"_index":2116,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/fridg",{"_index":2125,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/new",{"_index":2097,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/pl",{"_index":2146,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/cricket/plex",{"_index":2153,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/us",{"_index":1217,"title":{},"body":{"injectables/ProfileService.html":{}}}],["api/users/:userid",{"_index":2172,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/users/:userid/upd",{"_index":2178,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["app",{"_index":220,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{}}}],["app'},{'nam",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["app.compon",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["app.rout",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":72,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1678,"title":{},"body":{"changelog.html":{}}}],["appi",{"_index":1365,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["applic",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["application/json",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["appmodul",{"_index":251,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":1372,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["approut",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["area",{"_index":1629,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["aren't",{"_index":2366,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["aris",{"_index":588,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["array",{"_index":745,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["articlemodul",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["ask",{"_index":2347,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["aspect",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{}}}],["assign",{"_index":1570,"title":{},"body":{"injectables/StudentService.html":{}}}],["assum",{"_index":2510,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["async",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["attempt",{"_index":1602,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["auth",{"_index":167,"title":{},"body":{"injectables/AdminGuard.html":{},"components/NotAuthComponent.html":{}}}],["auth'},{'nam",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["auth.compon",{"_index":200,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth.component.t",{"_index":1062,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth.template.html",{"_index":1063,"title":{},"body":{"components/NotAuthComponent.html":{}}}],["auth/not",{"_index":199,"title":{},"body":{"modules/AdminModule.html":{},"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth/upd",{"_index":1714,"title":{},"body":{"changelog.html":{}}}],["authent",{"_index":2199,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["authenticate(candidatepassword",{"_index":2504,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["authentication.rout",{"_index":315,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.servic",{"_index":821,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["authentication/authentication.modul",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/authentication.servic",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["authentication/log",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationmodul",{"_index":257,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":314,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationservic",{"_index":35,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authetn",{"_index":1059,"title":{},"body":{"components/NavComponent.html":{}}}],["author",{"_index":1064,"title":{},"body":{"components/NotAuthComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["auto",{"_index":2514,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["avail",{"_index":592,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{}}}],["away",{"_index":2332,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["b",{"_index":1169,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["b.strainnum",{"_index":1396,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["back",{"_index":499,"title":{},"body":{"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{}}}],["backend",{"_index":482,"title":{},"body":{"components/CourseEditComponent.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"modules/SharedModule.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/genetics.html":{},"additional-documentation/models.html":{}}}],["backend/databas",{"_index":994,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["bact",{"_index":1674,"title":{},"body":{"changelog.html":{}}}],["bacteria",{"_index":1168,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["bad",{"_index":2082,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bade",{"_index":2127,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bar",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["base",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Phage.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{}}}],["basepair",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basic",{"_index":2452,"title":{},"body":{"additional-documentation/models/course-model.html":{}}}],["bc",{"_index":1684,"title":{},"body":{"changelog.html":{}}}],["bcrypt",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["be",{"_index":505,"title":{},"body":{"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{}}}],["befor",{"_index":232,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["beforehand",{"_index":1029,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["begin",{"_index":1254,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/StudentService.html":{},"additional-documentation/models/phage-model.html":{}}}],["behaviorsubject",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(nul",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["belong",{"_index":832,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["beta.2",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["beta.3",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["beta.6",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"todo.html":{},"additional-documentation/models/scenario-model.html":{}}}],["bg",{"_index":987,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["block",{"_index":977,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectcours",{"_index":2063,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectdetail",{"_index":2057,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectinfo",{"_index":2147,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["bodyobjectinform",{"_index":2126,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bodyobjectnew",{"_index":2028,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["bodyobjectrequest",{"_index":2179,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectupd",{"_index":2120,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["boolean",{"_index":155,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["bootstrap",{"_index":181,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":395,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["both",{"_index":2396,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["box",{"_index":1118,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["bp",{"_index":2471,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["breadcrumb",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"injectables/StudentResolver.html":{},"dependencies.html":{}}}],["breadcrumbsconfig.postprocess",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["brows",{"_index":1895,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["brute",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["bth",{"_index":1472,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["btn",{"_index":983,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["bug",{"_index":1722,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":2068,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["button",{"_index":479,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"todo.html":{}}}],["button/rol",{"_index":1441,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["c",{"_index":1027,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["c'",{"_index":2487,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["c.coursenum",{"_index":1331,"title":{},"body":{"components/SignupComponent.html":{}}}],["call",{"_index":488,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["callback",{"_index":2505,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["callbackfunctioncallback",{"_index":2508,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["canaccessadmin",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["canactiv",{"_index":953,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivate(rout",{"_index":955,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivatechild",{"_index":146,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["canactivatechild(rout",{"_index":149,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["cancel",{"_index":398,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{}}}],["candidatepasswordstringus",{"_index":2506,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["capac",{"_index":781,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbercapac",{"_index":2448,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbermax",{"_index":2394,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["capacitynumbermaximum",{"_index":2442,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["card",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{}}}],["case",{"_index":234,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["caus",{"_index":1688,"title":{},"body":{"changelog.html":{}}}],["cell",{"_index":796,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["certain",{"_index":890,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["chanc",{"_index":2259,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["chang",{"_index":1199,"title":{},"body":{"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["changelog",{"_index":1660,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changepassword",{"_index":2501,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["changepassword(oldpassword",{"_index":2509,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["charact",{"_index":1245,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":732,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["checkdelet",{"_index":1415,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["checkphagedelet",{"_index":2238,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkphageframeshift",{"_index":2235,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkposnumberposit",{"_index":2374,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["choos",{"_index":1924,"title":{},"body":{"todo.html":{}}}],["chromosom",{"_index":981,"title":{},"body":{"components/ModelRoomComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["chrosomom",{"_index":2381,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["chunk",{"_index":2379,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["class",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["class=\"btn",{"_index":1038,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["class=\"row",{"_index":1043,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{}}}],["clean",{"_index":2103,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["clear",{"_index":1028,"title":{},"body":{"components/ModelRoomComponent.html":{},"todo.html":{}}}],["cli",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":480,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["click)=\"savedata",{"_index":1042,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["click/dragplex",{"_index":1920,"title":{},"body":{"todo.html":{}}}],["clickbutton",{"_index":1416,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["clickbutton(src",{"_index":1425,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["client",{"_index":1268,"title":{},"body":{"injectables/ScenarioResolver.html":{},"changelog.html":{},"todo.html":{}}}],["clone",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":2322,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["cluster_adminmodul",{"_index":183,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declar",{"_index":184,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_import",{"_index":185,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_provid",{"_index":186,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":308,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":309,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_coursemodul",{"_index":625,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_declar",{"_index":626,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_import",{"_index":627,"title":{},"body":{"modules/CourseModule.html":{}}}],["cluster_coursemodule_provid",{"_index":628,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_helpmodul",{"_index":845,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_declar",{"_index":846,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_import",{"_index":847,"title":{},"body":{"modules/HelpModule.html":{}}}],["cluster_homemodul",{"_index":874,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":875,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_import",{"_index":876,"title":{},"body":{"modules/HomeModule.html":{}}}],["cluster_locationmodul",{"_index":935,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":936,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":937,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":938,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_profilemodul",{"_index":1183,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declar",{"_index":1184,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_import",{"_index":1185,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_provid",{"_index":1186,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_scenariomodul",{"_index":1256,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_declar",{"_index":1257,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_import",{"_index":1258,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["cluster_sharedmodul",{"_index":1273,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1274,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1275,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_studentmodul",{"_index":1495,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_declar",{"_index":1496,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_import",{"_index":1497,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_provid",{"_index":1498,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["code",{"_index":676,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ModelRoomComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["codon",{"_index":2267,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["col",{"_index":1040,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["coli",{"_index":794,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"todo.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["collegu",{"_index":868,"title":{},"body":{"components/HomeComponent.html":{}}}],["colphag",{"_index":806,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["colphage(list",{"_index":2156,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["colphagearraylist",{"_index":2440,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["column",{"_index":792,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["come",{"_index":842,"title":{},"body":{"components/HelpComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["comment",{"_index":729,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["commonmodul",{"_index":313,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["commun",{"_index":1197,"title":{},"body":{"injectables/ProfileService.html":{}}}],["compar",{"_index":2507,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["comparison",{"_index":239,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["compil",{"_index":1937,"title":{},"body":{"todo.html":{}}}],["complet",{"_index":1251,"title":{},"body":{"interfaces/Scenario.html":{},"todo.html":{}}}],["compoen",{"_index":1610,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["componentfridg",{"_index":1908,"title":{},"body":{"todo.html":{}}}],["compress",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["comput",{"_index":2336,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["computenumoffspr",{"_index":2247,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["computerecombparamet",{"_index":2246,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["concat(x",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["condit",{"_index":1593,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["config",{"_index":2294,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["configur",{"_index":2321,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["confirm",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["confirmdeletedialogcompon",{"_index":75,"title":{"components/ConfirmDeleteDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmpassword",{"_index":1230,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["connect",{"_index":1823,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["consist",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["consitut",{"_index":2287,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["consol",{"_index":1729,"title":{},"body":{"changelog.html":{}}}],["console.error(errormessag",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(error",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":236,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"pipes/PersonNamePipe.html":{},"injectables/ScenarioResolver.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{}}}],["construct",{"_index":769,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(_authenticationservic",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(_authservic",{"_index":1053,"title":{},"body":{"components/NavComponent.html":{},"components/SignoutComponent.html":{}}}],["constructor(_courseservic",{"_index":414,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{}}}],["constructor(_http",{"_index":767,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["constructor(_profileservic",{"_index":1638,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["constructor(_rout",{"_index":468,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["constructor(_scenarioservic",{"_index":1265,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["constructor(_studentservic",{"_index":1487,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["constructor(activemod",{"_index":387,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["constructor(breadcrumbsconfig",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(http",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["constructor(priv",{"_index":158,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["constructor(publ",{"_index":396,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["content",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseIndivComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/StudentService.html":{}}}],["content'},{'nam",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["control",{"_index":1663,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["controller.html#deletestudentfridg",{"_index":2212,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["contructor",{"_index":896,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["cooki",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["copi",{"_index":2378,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["core",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["correspond",{"_index":1182,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["count",{"_index":798,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["courenum",{"_index":496,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["cours",{"_index":16,"title":{"interfaces/Course.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["course.coursenum",{"_index":623,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["course.interfac",{"_index":212,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["course.resolv",{"_index":640,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.rout",{"_index":639,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.servic",{"_index":427,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{}}}],["course.touppercas",{"_index":692,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["coursebynum",{"_index":1988,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["coursebynum(req",{"_index":2089,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecoursecours",{"_index":2044,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecreatecompon",{"_index":79,"title":{"components/CourseCreateComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursedetail",{"_index":410,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["courseeditcompon",{"_index":81,"title":{"components/CourseEditComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseindivcompon",{"_index":83,"title":{"components/CourseIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseinfo",{"_index":455,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.coursenum",{"_index":571,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.descript",{"_index":606,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courseinfo.instructor",{"_index":607,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courselistcompon",{"_index":85,"title":{"components/CourseListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursemodul",{"_index":624,"title":{"modules/CourseModule.html":{}},"body":{"modules/CourseModule.html":{},"modules.html":{},"overview.html":{}}}],["coursenum",{"_index":400,"title":{},"body":{"interfaces/Course.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{}}}],["courseresolv",{"_index":629,"title":{"injectables/CourseResolver.html":{}},"body":{"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"coverage.html":{},"overview.html":{}}}],["courserout",{"_index":638,"title":{},"body":{"modules/CourseModule.html":{}}}],["courses.filter((c",{"_index":1332,"title":{},"body":{"components/SignupComponent.html":{}}}],["courses.filter((c)=>{return",{"_index":1330,"title":{},"body":{"components/SignupComponent.html":{}}}],["coursescenariocompon",{"_index":87,"title":{"components/CourseScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseservic",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverag",{"_index":1732,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpassword",{"_index":1315,"title":{},"body":{"components/SignupComponent.html":{}}}],["crate",{"_index":2301,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["creat",{"_index":406,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["create'},{'nam",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["create.compon",{"_index":632,"title":{},"body":{"modules/CourseModule.html":{}}}],["create.component.t",{"_index":405,"title":{},"body":{"components/CourseCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:16",{"_index":424,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:17",{"_index":425,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:18",{"_index":423,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:19",{"_index":418,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:28",{"_index":422,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:32",{"_index":420,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:47",{"_index":421,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.style.css",{"_index":408,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.template.html",{"_index":409,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create/cours",{"_index":404,"title":{},"body":{"components/CourseCreateComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["createconnect",{"_index":1934,"title":{},"body":{"todo.html":{}}}],["createcours",{"_index":412,"title":{},"body":{"components/CourseCreateComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(req",{"_index":2056,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(this.admin.id",{"_index":437,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["createpl",{"_index":765,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(phage1",{"_index":2387,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(pl",{"_index":773,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["createplate(req",{"_index":2145,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["createplatephag",{"_index":2244,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplexerpl",{"_index":2249,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["createplexerplate(rowphag",{"_index":2438,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["creating/sav",{"_index":2205,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["creation",{"_index":1642,"title":{},"body":{"components/UserProfileComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["credenti",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["crick",{"_index":863,"title":{},"body":{"components/HomeComponent.html":{}}}],["cricket",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["cross",{"_index":730,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"todo.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["crosses/manipul",{"_index":2144,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["crossov",{"_index":2357,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["css",{"_index":976,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["cummul",{"_index":2352,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["current",{"_index":898,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["curus",{"_index":2223,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["curuseruserlog",{"_index":2013,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["dark",{"_index":988,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["dat",{"_index":1037,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["data",{"_index":782,"title":{},"body":{"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["databas",{"_index":1649,"title":{},"body":{"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["date",{"_index":2520,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["db",{"_index":1664,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["deal",{"_index":1544,"title":{},"body":{"injectables/StudentService.html":{}}}],["debug",{"_index":1731,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["decim",{"_index":2260,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["declar",{"_index":180,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["default",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["defaultlabdilut",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultplexerdilut",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defin",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["defofdiff",{"_index":2480,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["degofdiff",{"_index":2165,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degofdifficulti",{"_index":2161,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degre",{"_index":2159,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["del",{"_index":1018,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["deleet",{"_index":756,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["delet",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["delete(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1576,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletecours",{"_index":463,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestud",{"_index":464,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestudents(req",{"_index":2067,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["deletedis",{"_index":1417,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["deletephag",{"_index":1995,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletephage(req",{"_index":2132,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletes",{"_index":2454,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletespot",{"_index":2455,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletestud",{"_index":1545,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudent(adminid",{"_index":1552,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudentfridg",{"_index":1992,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge(req",{"_index":2122,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge]{@link",{"_index":2211,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["deleteus",{"_index":1976,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["deleteuser(req",{"_index":2026,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["deletion.length",{"_index":1114,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i",{"_index":1115,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i+1",{"_index":1116,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletionguesslength",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletions.pip",{"_index":1508,"title":{},"body":{"modules/StudentModule.html":{}}}],["deletions.pipe.t",{"_index":1106,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"coverage.html":{}}}],["deletions.pipe.ts:9",{"_index":1112,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["dellist",{"_index":2373,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["dellistarraylist",{"_index":2375,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["depend",{"_index":178,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["deprec",{"_index":1929,"title":{},"body":{"todo.html":{}}}],["deprecationwarn",{"_index":1928,"title":{},"body":{"todo.html":{}}}],["describ",{"_index":2477,"title":{},"body":{"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["descript",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"todo.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["destori",{"_index":1056,"title":{},"body":{"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["destroy",{"_index":900,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["destruct",{"_index":1598,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["detail",{"_index":495,"title":{},"body":{"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["determin",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/user-model.html":{}}}],["dialog",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["dialog'},{'nam",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialog.compon",{"_index":514,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["dialog.component.t",{"_index":382,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:11",{"_index":389,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":392,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1119,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1120,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.template.html",{"_index":383,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["didn't",{"_index":1612,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["differ",{"_index":1591,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["difficulti",{"_index":2160,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["diluat",{"_index":1913,"title":{},"body":{"todo.html":{}}}],["dilut",{"_index":1916,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["dimens",{"_index":2370,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["direct",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["directli",{"_index":1676,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":1429,"title":{},"body":{"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["discov",{"_index":869,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dismiss",{"_index":562,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["display",{"_index":684,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["distanc",{"_index":2490,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["dnd",{"_index":1279,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["dndmodul",{"_index":1277,"title":{},"body":{"modules/SharedModule.html":{}}}],["dndmodule.forroot",{"_index":1293,"title":{},"body":{"modules/SharedModule.html":{}}}],["document",{"_index":1733,"title":{},"body":{"coverage.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["doesn't",{"_index":1068,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["don't",{"_index":2195,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["dopheno",{"_index":2239,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["dopheno(mutantlist",{"_index":2338,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["doubl",{"_index":2407,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["drag",{"_index":752,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"todo.html":{}}}],["drop",{"_index":1673,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["dure",{"_index":2054,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dynam",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":793,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"todo.html":{}}}],["each",{"_index":778,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["easier",{"_index":1378,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["edit",{"_index":451,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/UserProfileComponent.html":{}}}],["edit'},{'nam",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["edit.compon",{"_index":634,"title":{},"body":{"modules/CourseModule.html":{}}}],["edit.component.t",{"_index":450,"title":{},"body":{"components/CourseEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:116",{"_index":477,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:139",{"_index":486,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:155",{"_index":471,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:172",{"_index":490,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:189",{"_index":476,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:200",{"_index":491,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:33",{"_index":504,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:37",{"_index":508,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:41",{"_index":509,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:45",{"_index":503,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:46",{"_index":507,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:47",{"_index":506,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:48",{"_index":470,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:65",{"_index":492,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:91",{"_index":497,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:99",{"_index":501,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.style.css",{"_index":452,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.template.html",{"_index":453,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit/cours",{"_index":449,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["editcours",{"_index":1984,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(req",{"_index":2062,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(this._admin.id",{"_index":541,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["editprofil",{"_index":1200,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editprofile(userid",{"_index":1203,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editus",{"_index":2004,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["edituser(req",{"_index":2174,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["ej",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":747,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["elm.userid",{"_index":549,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["email",{"_index":221,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["email/name/rol",{"_index":1412,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["empti",{"_index":1172,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["encompass",{"_index":1521,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["end",{"_index":906,"title":{},"body":{"components/LandingRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["enough",{"_index":2331,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["enrol",{"_index":594,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["ensur",{"_index":233,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"interfaces/Student.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["enter",{"_index":1224,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["entityif",{"_index":2190,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["entranc",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{}}}],["entrycompon",{"_index":631,"title":{},"body":{"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/StudentModule.html":{}}}],["enum",{"_index":2502,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["enumer",{"_index":2521,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["epo",{"_index":2377,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["eposnumberend",{"_index":2382,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["equal",{"_index":2492,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["err",{"_index":444,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["err.error.messag",{"_index":445,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["err2",{"_index":538,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["error",{"_index":519,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["error.error.messag",{"_index":1341,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["error.error.text",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.messag",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.t",{"_index":1799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errordatabas",{"_index":2088,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["errorerror",{"_index":2102,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["errorif",{"_index":2184,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["errormessag",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["erroron",{"_index":2018,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["eslint",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["et",{"_index":864,"title":{},"body":{"components/HomeComponent.html":{}}}],["even",{"_index":2469,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["everyth",{"_index":1596,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["exampl",{"_index":1355,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["exeri",{"_index":2383,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["exisit",{"_index":1207,"title":{},"body":{"injectables/ProfileService.html":{}}}],["exisitng",{"_index":1586,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["exist",{"_index":734,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["exit",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["expect",{"_index":1614,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["experi",{"_index":761,"title":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["experiment.servic",{"_index":942,"title":{},"body":{"modules/LocationModule.html":{}}}],["experimentphag",{"_index":711,"title":{"interfaces/ExperimentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["experimentservic",{"_index":758,"title":{"injectables/ExperimentService.html":{}},"body":{"injectables/ExperimentService.html":{},"modules/LocationModule.html":{},"coverage.html":{},"overview.html":{}}}],["expir",{"_index":1718,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["export",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"overview.html":{}}}],["express",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["extend",{"_index":211,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["f1numberfract",{"_index":2403,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2",{"_index":2402,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2numberfract",{"_index":2404,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["facebook",{"_index":1871,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":168,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["far",{"_index":2330,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["featur",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{}}}],["fetch",{"_index":1584,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["field",{"_index":1589,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"todo.html":{}}}],["filecod",{"_index":2479,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["fill",{"_index":1590,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["find",{"_index":1537,"title":{},"body":{"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["findfridgebyscenown",{"_index":1997,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["findfridgebyscenowner(req",{"_index":2137,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["finish",{"_index":2070,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["first",{"_index":228,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["firstnam",{"_index":215,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["fix",{"_index":1666,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["fname",{"_index":1091,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["follow",{"_index":2168,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["for(let",{"_index":1016,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["forbiddencurr",{"_index":2045,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["forbiddenif",{"_index":2037,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["forc",{"_index":1705,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["forget",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{}}}],["forgetpassword",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forgetpassword(bodi",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordcompon",{"_index":89,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":989,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["format",{"_index":660,"title":{},"body":{"components/CourseScenarioComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["formataccess",{"_index":652,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(isgr",{"_index":657,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(student.statu",{"_index":710,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formatname:isrevers",{"_index":1088,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["formatphagetyp",{"_index":1512,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["formsmodul",{"_index":311,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":1070,"title":{},"body":{"components/PageNotFoundComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["found')if",{"_index":2136,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["found'},{'nam",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["found.compon",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.t",{"_index":1066,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1072,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.template.html",{"_index":1071,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/pag",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["foundif",{"_index":2186,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundphag",{"_index":2149,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["foundther",{"_index":2055,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["foundun",{"_index":2175,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundus",{"_index":2050,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["frame",{"_index":2268,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["framelist",{"_index":2351,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frameshift",{"_index":739,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["frameshift(",{"_index":2316,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["frameshift/phenotyp",{"_index":2337,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["framesstoplist",{"_index":2457,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["framestoplist",{"_index":2289,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["framshift",{"_index":2349,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frequenc",{"_index":2419,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["fridg",{"_index":667,"title":{"interfaces/Fridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["fridge')if",{"_index":2139,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridge'},{'nam",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["fridge.accessgr",{"_index":1409,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.compon",{"_index":1503,"title":{},"body":{"modules/StudentModule.html":{}}}],["fridge.component.t",{"_index":1345,"title":{},"body":{"components/StudentFridgeComponent.html":{},"coverage.html":{}}}],["fridge.component.ts:114",{"_index":1354,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:129",{"_index":1371,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:150",{"_index":1366,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:25",{"_index":1373,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:29",{"_index":1374,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:33",{"_index":1376,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:37",{"_index":1379,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:45",{"_index":1381,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:49",{"_index":1380,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:54",{"_index":1352,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:71",{"_index":1367,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.own",{"_index":1406,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.label",{"_index":1408,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.scencod",{"_index":1407,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.strain",{"_index":1388,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.template.html",{"_index":1346,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge/fridge.compon",{"_index":943,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/phag",{"_index":944,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/stud",{"_index":1344,"title":{},"body":{"components/StudentFridgeComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["fridgecompon",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fridgefridgefridg",{"_index":2143,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgefridgelog",{"_index":2118,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgephag",{"_index":722,"title":{"interfaces/FridgePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["frist",{"_index":1084,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["front",{"_index":1696,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["full",{"_index":784,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["function",{"_index":224,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["function(a,b",{"_index":238,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["function(error",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function(person",{"_index":1101,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["futur",{"_index":893,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["g",{"_index":2486,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["g/c",{"_index":2279,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["g/c'",{"_index":2264,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gcprob",{"_index":2262,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["gcprobnumbergc",{"_index":2277,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gene",{"_index":1000,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["genear",{"_index":965,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["genelength",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gener",{"_index":777,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["generatedelet",{"_index":2237,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generateframeshift",{"_index":2234,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generatepl",{"_index":2245,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["generateplexerpl",{"_index":2250,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["generateplexerplate(lawntypestr",{"_index":2444,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["generatescenario",{"_index":2228,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["generatescenario(scenario",{"_index":2256,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["genet",{"_index":871,"title":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolist",{"_index":2397,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolistarraylist",{"_index":2446,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotyp",{"_index":1178,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotypephag",{"_index":738,"title":{"interfaces/GenotypePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["geonotyp",{"_index":2427,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["get",{"_index":618,"title":{"changelog.html":{},"index.html":{},"todo.html":{}},"body":{"components/CourseListComponent.html":{},"components/NavComponent.html":{},"changelog.html":{}}}],["get(`${this._baseurl}/${adminid}/stud",{"_index":1573,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1574,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1578,"title":{},"body":{"injectables/StudentService.html":{}}}],["getblockclass",{"_index":969,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getblockclass(strain",{"_index":973,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getbuttonclass",{"_index":1350,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass(&#39;all&#39",{"_index":1358,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass(&#39;graded&#39",{"_index":1364,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('al",{"_index":1398,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('grad",{"_index":1399,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass(src",{"_index":1353,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getcours",{"_index":1983,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getcourse(req",{"_index":2059,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getfram",{"_index":2240,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["getframes(whosay",{"_index":2344,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["getfridg",{"_index":1546,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridge(adminid",{"_index":1556,"title":{},"body":{"injectables/StudentService.html":{}}}],["getfridge(req",{"_index":2104,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo",{"_index":2000,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo(fridg",{"_index":2142,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getnewspot",{"_index":2236,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["getpossibleinstructor",{"_index":1985,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getpossibleinstructors(req",{"_index":2074,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenario",{"_index":908,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenario(scenid",{"_index":912,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenariostatu",{"_index":1987,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getscenariostatus(req",{"_index":2084,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenstatu",{"_index":1418,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scenario.scencod",{"_index":1483,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scencod",{"_index":1430,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstud",{"_index":1547,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getstudent(adminid",{"_index":1558,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentcours",{"_index":1419,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstudentfridg",{"_index":1990,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudentfridge(req",{"_index":2107,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudents(req",{"_index":2065,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getus",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuser(req",{"_index":2021,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo",{"_index":2008,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo(us",{"_index":2224,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["given",{"_index":889,"title":{},"body":{"components/LandingRoomComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["go",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["goal",{"_index":886,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["goe",{"_index":1067,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["googl",{"_index":1872,"title":{},"body":{"dependencies.html":{}}}],["gotofridg",{"_index":653,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["gotofridge(studentid",{"_index":665,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["grace",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["grade",{"_index":736,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["grant",{"_index":662,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["grantaccess",{"_index":654,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(req",{"_index":2209,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(scencod",{"_index":1435,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["grantaccess(studentindex",{"_index":670,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["grantscenaccess",{"_index":1548,"title":{},"body":{"injectables/StudentService.html":{}}}],["grantscenaccess(adminid",{"_index":1560,"title":{},"body":{"injectables/StudentService.html":{}}}],["greater",{"_index":1450,"title":{},"body":{"components/StudentIndivComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["group",{"_index":1124,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["gt",{"_index":1359,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{}}}],["guess",{"_index":757,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["guesses.pip",{"_index":1506,"title":{},"body":{"modules/StudentModule.html":{}}}],["guesses.pipe.t",{"_index":1129,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"coverage.html":{}}}],["guesses.pipe.ts:8",{"_index":1132,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[i",{"_index":1135,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[strain.strainnum",{"_index":1392,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["handl",{"_index":1085,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["handleplex",{"_index":2001,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["handleplexer(req",{"_index":2152,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["hasauthor",{"_index":1978,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["hasauthorization(req",{"_index":2032,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["hasfridg",{"_index":1347,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["hasfridgeauthor",{"_index":1998,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasfridgeauthorization(req",{"_index":2140,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["hashlocationstrategi",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["hasphageauthor",{"_index":1999,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasphageauthorization(req",{"_index":2141,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["have",{"_index":2155,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["header",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["helmet",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":838,"title":{},"body":{"components/HelpComponent.html":{},"components/NavComponent.html":{},"todo.html":{}}}],["help'},{'nam",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["help.compon",{"_index":851,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.rout",{"_index":850,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.style.css",{"_index":839,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.template.html",{"_index":840,"title":{},"body":{"components/HelpComponent.html":{}}}],["help/help.modul",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["helpcompon",{"_index":94,"title":{"components/HelpComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helper",{"_index":472,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["helpinform",{"_index":844,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpmodul",{"_index":258,"title":{"modules/HelpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelpModule.html":{},"modules.html":{},"overview.html":{}}}],["helprout",{"_index":849,"title":{},"body":{"modules/HelpModule.html":{}}}],["hidden",{"_index":1681,"title":{},"body":{"changelog.html":{}}}],["hide",{"_index":1917,"title":{},"body":{"todo.html":{}}}],["home",{"_index":172,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["home'},{'nam",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.compon",{"_index":198,"title":{},"body":{"modules/AdminModule.html":{},"modules/HomeModule.html":{}}}],["home.component.t",{"_index":171,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["home.rout",{"_index":879,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.style.css",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.template.html",{"_index":173,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home/admin",{"_index":170,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["home/home.modul",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["homecompon",{"_index":96,"title":{"components/HomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodul",{"_index":259,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homerout",{"_index":878,"title":{},"body":{"modules/HomeModule.html":{}}}],["hopefulli",{"_index":1682,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":930,"title":{},"body":{"components/LocationComponent.html":{}}}],["hour",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":1434,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["html5",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["http",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["http://mongoosejs.com/docs/connections.html#us",{"_index":1935,"title":{},"body":{"todo.html":{}}}],["httpclient",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["httpclientmodul",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["https://github.com/iconic/open",{"_index":1867,"title":{},"body":{"dependencies.html":{}}}],["human",{"_index":1248,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/models/scenario-model.html":{}}}],["i.",{"_index":763,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["icon",{"_index":1866,"title":{},"body":{"dependencies.html":{}}}],["iconic.git",{"_index":1868,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":720,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["id'",{"_index":2398,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["id')if",{"_index":2095,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["id=\"model",{"_index":1046,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["id=\"viewpar",{"_index":1123,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["ident",{"_index":2414,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identicalbooleanar",{"_index":2421,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identif",{"_index":2451,"title":{},"body":{"additional-documentation/models/course-model.html":{}}}],["identifi",{"_index":888,"title":{},"body":{"components/LandingRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["iderr",{"_index":1618,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["idstringcours",{"_index":2090,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["idstringmongodb",{"_index":2134,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["idstringscenario",{"_index":2169,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["idstringuser'",{"_index":2217,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["if(c",{"_index":1243,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(error",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(error.error",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isloggedin",{"_index":959,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["if(n",{"_index":1626,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(numpar",{"_index":1151,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(out",{"_index":1090,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageGuessesPipe.html":{}}}],["if(p",{"_index":1242,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(r",{"_index":702,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["if(result",{"_index":560,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["if(revers",{"_index":1095,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["if(rol",{"_index":163,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["if(sorted.length",{"_index":1160,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(strain.phagetyp",{"_index":1404,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this._admin",{"_index":1475,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.coursedetails.coursenum",{"_index":432,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["if(this.credentials.token",{"_index":1234,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.errormessag",{"_index":1238,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.getus",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["if(this.hasfridg",{"_index":1389,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this.keys.length",{"_index":1022,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["if(this.passwordmessag",{"_index":1621,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(this.phag",{"_index":1524,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.phage.phagetyp",{"_index":1527,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.selectedadd",{"_index":544,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["if(this.ssubscript",{"_index":926,"title":{},"body":{"components/ListComponent.html":{}}}],["if(this.student.rol",{"_index":1477,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.student.userid",{"_index":1476,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.subscript",{"_index":446,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{}}}],["if(this.user.cours",{"_index":1337,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.user.password",{"_index":1338,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.viewstrain",{"_index":1401,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(x",{"_index":1137,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["if(x.length",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["ignor",{"_index":1167,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["implement",{"_index":157,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["import",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["in.guard.servic",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["in.guard.service.t",{"_index":952,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["in.guard.service.ts:12",{"_index":956,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:28",{"_index":957,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:6",{"_index":954,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["inact",{"_index":1025,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["includ",{"_index":596,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["incorrect",{"_index":1215,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["increment",{"_index":2515,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["incub",{"_index":1919,"title":{},"body":{"todo.html":{}}}],["incubatemodel",{"_index":1921,"title":{},"body":{"todo.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["indic",{"_index":741,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["indiv",{"_index":576,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv'},{'nam",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["indiv.compon",{"_index":633,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["indiv.component.t",{"_index":575,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{}}}],["indiv.component.ts:113",{"_index":1431,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:132",{"_index":1433,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:146",{"_index":1436,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:167",{"_index":1449,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:194",{"_index":1440,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:208",{"_index":1426,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:223",{"_index":1428,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:240",{"_index":1424,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:259",{"_index":1423,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:274",{"_index":1437,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:30",{"_index":593,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:34",{"_index":586,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:37",{"_index":1458,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:38",{"_index":591,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:39",{"_index":589,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:40",{"_index":590,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:41",{"_index":1457,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:45",{"_index":580,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:46",{"_index":1452,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:50",{"_index":1454,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:54",{"_index":1451,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:58",{"_index":1456,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:59",{"_index":583,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:62",{"_index":1453,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:67",{"_index":1422,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:84",{"_index":1438,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:86",{"_index":581,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.style.css",{"_index":577,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.template.html",{"_index":578,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv/cours",{"_index":574,"title":{},"body":{"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["indiv/stud",{"_index":1410,"title":{},"body":{"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["individu",{"_index":595,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["inform",{"_index":208,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["init",{"_index":493,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["initi",{"_index":584,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["inject",{"_index":143,"title":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["inlist.length+1",{"_index":2371,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraymut",{"_index":2368,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraystrain",{"_index":2435,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["input",{"_index":385,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["input/par",{"_index":2437,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["insensit",{"_index":235,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["insert",{"_index":2310,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["instead",{"_index":1932,"title":{},"body":{"todo.html":{}}}],["instr",{"_index":512,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["instr'",{"_index":2020,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["instrctor",{"_index":2077,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrcutor",{"_index":2076,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrs.sort(sortstud",{"_index":537,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["instructor",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Course.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"components/StudentIndivComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["instuctor",{"_index":2080,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["integ",{"_index":2485,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["interest",{"_index":1382,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["interfac",{"_index":204,"title":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/models/phage-model.html":{}}}],["interfaces/course.interfac",{"_index":515,"title":{},"body":{"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/phage.interfac",{"_index":1121,"title":{},"body":{"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["interfaces/scenario.interfac",{"_index":683,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ListComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/student.interfac",{"_index":516,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["interfaces/user.interfac",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["intermutedist",{"_index":2270,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["intern",{"_index":2017,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["intramutedist",{"_index":2269,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["invalid",{"_index":1703,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["isadmin",{"_index":1979,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["isadmin(req",{"_index":2039,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["isdestroy",{"_index":456,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["isdis",{"_index":1219,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isgrant",{"_index":663,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["isinstructor",{"_index":1980,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["isinstructor(req",{"_index":2041,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["isloggedin",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{}}}],["isn't",{"_index":1594,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["issu",{"_index":1672,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":2494,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["itself",{"_index":2072,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["jqueri",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["jsdoc2md",{"_index":2040,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["json",{"_index":2014,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["json.parse(dat",{"_index":1035,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.parse(this.fridge.guess",{"_index":1390,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["json.stringify(credenti",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(this.guess",{"_index":1030,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.stringify(us",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["k",{"_index":1170,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["karma",{"_index":1893,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1608,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["key",{"_index":966,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["keymutesarraydelet",{"_index":2333,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["keymutesarraymut",{"_index":2317,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["know",{"_index":2111,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["known",{"_index":727,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["lab",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["label",{"_index":836,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["labroomcompon",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["land",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["landingroomcompon",{"_index":100,"title":{"components/LandingRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["larg",{"_index":786,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["largeplaqu",{"_index":1181,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["last",{"_index":227,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["lastlogin",{"_index":2498,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["lastmadenumberth",{"_index":2319,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["lastnam",{"_index":216,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["later",{"_index":2274,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["lawn",{"_index":779,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["lawntyp",{"_index":1171,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestring",{"_index":2392,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestrstring",{"_index":2445,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["lead",{"_index":801,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{}}}],["leak",{"_index":904,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["learn",{"_index":892,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["left",{"_index":1679,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":179,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["length",{"_index":999,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{}}}],["limit",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["link",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/CourseIndivComponent.html":{},"components/NavComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["linkshom",{"_index":1905,"title":{},"body":{"todo.html":{}}}],["list",{"_index":401,"title":{},"body":{"interfaces/Course.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["list'},{'nam",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["list(req",{"_index":2157,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["list.compon",{"_index":635,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["list.component.t",{"_index":611,"title":{},"body":{"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{}}}],["list.component.ts:22",{"_index":619,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:23",{"_index":615,"title":{},"body":{"components/CourseListComponent.html":{},"components/StudentListComponent.html":{}}}],["list.component.ts:27",{"_index":1492,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:31",{"_index":1488,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:33",{"_index":617,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:41",{"_index":616,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:46",{"_index":1490,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:60",{"_index":1489,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.template.html",{"_index":614,"title":{},"body":{"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/StudentListComponent.html":{}}}],["list/cours",{"_index":610,"title":{},"body":{"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["list/list.compon",{"_index":1262,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["list/stud",{"_index":1484,"title":{},"body":{"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["listcompon",{"_index":102,"title":{"components/ListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listcours",{"_index":1981,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum",{"_index":1982,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum(req",{"_index":2052,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["liststud",{"_index":1549,"title":{},"body":{"injectables/StudentService.html":{}}}],["liststudents(adminid",{"_index":1564,"title":{},"body":{"injectables/StudentService.html":{}}}],["listus",{"_index":1975,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["listusers(req",{"_index":2009,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["liter",{"_index":1342,"title":{},"body":{"interfaces/StudentFridge.html":{}}}],["lname",{"_index":1093,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["load",{"_index":2094,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["loadash",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":1874,"title":{},"body":{"dependencies.html":{}}}],["locat",{"_index":716,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LocationComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"interfaces/StudentPhage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["location'},{'nam",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["location.compon",{"_index":945,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.rout",{"_index":941,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.style.css",{"_index":932,"title":{},"body":{"components/LocationComponent.html":{}}}],["location.template.html",{"_index":933,"title":{},"body":{"components/LocationComponent.html":{}}}],["locationcompon",{"_index":104,"title":{"components/LocationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locationmodul",{"_index":934,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationrout",{"_index":940,"title":{},"body":{"modules/LocationModule.html":{}}}],["locationstrategi",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["loggedinguard",{"_index":263,"title":{"injectables/LoggedInGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggedInGuard.html":{},"coverage.html":{},"overview.html":{}}}],["logic",{"_index":867,"title":{"additional-documentation/genetics/phage-logic.html":{}},"body":{"components/HomeComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["login",{"_index":2200,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["logo",{"_index":1904,"title":{},"body":{"todo.html":{}}}],["longer",{"_index":733,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/models/user-model.html":{}}}],["look",{"_index":1432,"title":{},"body":{"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["lot",{"_index":2109,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["lowercas",{"_index":231,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2320,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mail",{"_index":1628,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["main",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/UserProfileComponent.html":{}}}],["mainli",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["maintain",{"_index":1646,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["make",{"_index":230,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/ExperimentService.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["makedeletionphag",{"_index":2233,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makedeletionphage(phag",{"_index":2304,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphag",{"_index":2232,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphage(phag",{"_index":2302,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makegen",{"_index":2229,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makegene(gcprob",{"_index":2275,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makephag",{"_index":2230,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makephage(phagedetail",{"_index":2291,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphag",{"_index":2231,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphage(phag",{"_index":2298,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mani",{"_index":2363,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["manner",{"_index":2226,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["match",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["math.abs(x",{"_index":1145,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["math.ceil(scenarioglobals.genelength/this.steps",{"_index":1015,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["maximum",{"_index":1173,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"miscellaneous/variables.html":{}}}],["mb",{"_index":1125,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["mcbreadcrumbsconfig",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["mcbreadcrumbsmodul",{"_index":1281,"title":{},"body":{"modules/SharedModule.html":{}}}],["mcbreadcrumbsmodule.forroot",{"_index":1295,"title":{},"body":{"modules/SharedModule.html":{}}}],["md",{"_index":1041,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["mechan",{"_index":772,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["memcach",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["memori",{"_index":903,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["messag",{"_index":386,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseIndivComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["messagestringvalu",{"_index":2523,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["met",{"_index":1595,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["method",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["middl",{"_index":2473,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["middlewar",{"_index":2034,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["minim",{"_index":1683,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":2266,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstop",{"_index":2265,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstopsnumberminimum",{"_index":2282,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["minu",{"_index":2464,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["minumum",{"_index":2489,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["miscellan",{"_index":1939,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mlength",{"_index":1113,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["modal",{"_index":557,"title":{},"body":{"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["model",{"_index":107,"title":{"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["modelref",{"_index":552,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.componentinstance.messag",{"_index":558,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.result.then((result",{"_index":559,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelroomcompon",{"_index":106,"title":{"components/ModelRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modul",{"_index":176,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{},"todo.html":{}}}],["moment",{"_index":1538,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["mongo",{"_index":1826,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["mongodb",{"_index":718,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{}}}],["mongoos",{"_index":1856,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["more",{"_index":746,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["morgan",{"_index":1860,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1911,"title":{},"body":{"todo.html":{}}}],["multipl",{"_index":1377,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["mut",{"_index":2272,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutagen",{"_index":2241,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["mutagenize(inlist",{"_index":2364,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["mutant",{"_index":1706,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["mutantlist",{"_index":2345,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymut",{"_index":2340,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymutat",{"_index":2348,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutants/recombin",{"_index":2433,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutat",{"_index":726,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutation(",{"_index":2314,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutationfreq",{"_index":2258,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutationlist",{"_index":755,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["mutations.pip",{"_index":1507,"title":{},"body":{"modules/StudentModule.html":{}}}],["mutations.pipe.t",{"_index":1141,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"coverage.html":{}}}],["mutations.pipe.ts:6",{"_index":1144,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["mutations/delet",{"_index":2495,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["mutatnt",{"_index":1180,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["mutfreq",{"_index":2412,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutfreqnumbermut",{"_index":2418,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n",{"_index":1624,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["n1.strainnum",{"_index":1155,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n1numbernumb",{"_index":2415,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2",{"_index":2410,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2)=>{return",{"_index":1154,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2.strainnum",{"_index":1156,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2numbernumb",{"_index":2416,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["na",{"_index":1329,"title":{},"body":{"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{}}}],["na.concat(oth",{"_index":1333,"title":{},"body":{"components/SignupComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["name.pip",{"_index":1288,"title":{},"body":{"modules/SharedModule.html":{}}}],["name.pipe.t",{"_index":1098,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["name.pipe.ts:22",{"_index":1100,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["names.pip",{"_index":1290,"title":{},"body":{"modules/SharedModule.html":{}}}],["names.pipe.t",{"_index":1076,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["names.pipe.ts:13",{"_index":1080,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["nav",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{},"todo.html":{}}}],["nav'},{'nam",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["nav.style.css",{"_index":1051,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.template.html",{"_index":1052,"title":{},"body":{"components/NavComponent.html":{}}}],["nav/nav.compon",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["navcompon",{"_index":108,"title":{"components/NavComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LocationComponent.html":{},"components/NavComponent.html":{},"components/UpdatePasswordComponent.html":{},"todo.html":{}}}],["navigation/head",{"_index":1903,"title":{},"body":{"todo.html":{}}}],["nblock",{"_index":1014,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["necessari",{"_index":901,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["necessarili",{"_index":2023,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["need",{"_index":209,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["neg",{"_index":740,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["new",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["newcours",{"_index":430,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["newli",{"_index":783,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["newpassword",{"_index":1214,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["newpasswordstringth",{"_index":2513,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["newrol",{"_index":1413,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["next",{"_index":2033,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next('fail",{"_index":2093,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["next('invalid",{"_index":2218,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next('phag",{"_index":2135,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["next('us",{"_index":2220,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()abl",{"_index":2221,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()go",{"_index":2038,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["next()if",{"_index":2046,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next()on",{"_index":2202,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next(error)if",{"_index":2091,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next(error)on",{"_index":2170,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["nextfunctionnext",{"_index":2043,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["nextfunctionth",{"_index":2035,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["nextobjectnext",{"_index":2216,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["nfridgeshelf",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nfridgespot",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":394,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":1278,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":388,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["ngbmodal",{"_index":393,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["ngbmodul",{"_index":1280,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngbmodule.forroot",{"_index":1294,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngmodul",{"_index":192,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["ngondestori",{"_index":413,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/ModelRoomComponent.html":{}}}],["ngondestroy",{"_index":465,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngoninit",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngx",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nme",{"_index":1205,"title":{},"body":{"injectables/ProfileService.html":{}}}],["nnumbertot",{"_index":2406,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["node:1293",{"_index":1927,"title":{},"body":{"todo.html":{}}}],["nodemail",{"_index":1864,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1208,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["none",{"_index":1139,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["normal",{"_index":2276,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["notauthcompon",{"_index":110,"title":{"components/NotAuthComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["note",{"_index":2210,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["noth",{"_index":489,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["nr",{"_index":2411,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nrnumberratio",{"_index":2417,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nshift",{"_index":2308,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nshiftsnumbernumb",{"_index":2311,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleic",{"_index":2285,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleotid",{"_index":2283,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["null",{"_index":704,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["nullsecond",{"_index":2391,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["num",{"_index":1157,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"changelog.html":{}}}],["number",{"_index":218,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["number.parseint(k",{"_index":1021,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["numbers/typ",{"_index":2423,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numdesir",{"_index":2365,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numdesirednumbernumb",{"_index":2369,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numer",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numgeno",{"_index":2426,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinput",{"_index":2432,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinputnumbernumb",{"_index":2436,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nummber",{"_index":982,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["nummut",{"_index":2428,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numoffspr",{"_index":2424,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numpar",{"_index":735,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["numphag",{"_index":714,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["numphage:1000000",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numrecomb",{"_index":2429,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nums[0",{"_index":1161,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["nums[1",{"_index":1162,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["numtodo",{"_index":2356,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numtodonumberhow",{"_index":2362,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxov",{"_index":2355,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxovernumbernumb",{"_index":2361,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["nxm",{"_index":2154,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["o",{"_index":1592,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["oauth",{"_index":1873,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":719,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["object.keys(dels).map((k",{"_index":1020,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["observ",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["occur",{"_index":2290,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["odd",{"_index":2470,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["offspr",{"_index":2358,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["okclean",{"_index":2025,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["okif",{"_index":2019,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okinform",{"_index":2064,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["oklist",{"_index":2051,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oknewli",{"_index":2058,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["okon",{"_index":2176,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okreturn",{"_index":2121,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["oksend",{"_index":2208,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["oksuccessfulli",{"_index":2151,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okth",{"_index":2061,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oktrim",{"_index":2173,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okupd",{"_index":2029,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["okuser'",{"_index":2106,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["old",{"_index":1213,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["oldpassword",{"_index":2511,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["oldpasswordstringus",{"_index":2512,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["on",{"_index":723,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["onc",{"_index":1212,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["oncancel",{"_index":466,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["ondestroy",{"_index":613,"title":{},"body":{"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["oninit",{"_index":612,"title":{},"body":{"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["open",{"_index":487,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"todo.html":{}}}],["openuri",{"_index":1931,"title":{},"body":{"todo.html":{}}}],["opposit",{"_index":2466,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["option",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["order",{"_index":1491,"title":{},"body":{"components/StudentListComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["organ",{"_index":1910,"title":{},"body":{"todo.html":{}}}],["origin",{"_index":2399,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["otherphag",{"_index":2273,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["otherwis",{"_index":664,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["out",{"_index":190,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["outlin",{"_index":985,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["outline&#39",{"_index":1363,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["output",{"_index":1730,"title":{},"body":{"changelog.html":{}}}],["over",{"_index":1175,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["overflow",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["overload",{"_index":1689,"title":{},"body":{"changelog.html":{}}}],["overrid",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["overview",{"_index":1896,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["own",{"_index":2453,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["owner",{"_index":833,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["owner/scenario",{"_index":2113,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["p",{"_index":984,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["packag",{"_index":1801,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":65,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/models/scenario-model.html":{}}}],["pagenotfoundcompon",{"_index":112,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pair",{"_index":749,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["param",{"_index":494,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["paramet",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["paramobserv",{"_index":457,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["params['coursenum",{"_index":529,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["params['scenid",{"_index":690,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["params['studentid",{"_index":1384,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["parent",{"_index":731,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["parent(",{"_index":2478,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["parents.length",{"_index":1152,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.pip",{"_index":1292,"title":{},"body":{"modules/SharedModule.html":{}}}],["parents.pipe.t",{"_index":1147,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["parents.pipe.ts:7",{"_index":1150,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.sort((n1",{"_index":1153,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parser",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2516,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["particular",{"_index":2069,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["pass",{"_index":2092,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["passport",{"_index":1869,"title":{},"body":{"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["password",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["password'},{'nam",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["password.compon",{"_index":320,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{}}}],["password.component.t",{"_index":810,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:110",{"_index":1587,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:12",{"_index":819,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:13",{"_index":820,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:133",{"_index":1597,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:14",{"_index":818,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":815,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":1228,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1222,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":817,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1615,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:29",{"_index":1604,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1226,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":1607,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:34",{"_index":816,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":1605,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:38",{"_index":1227,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:41",{"_index":1583,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:56",{"_index":1223,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:68",{"_index":1600,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:70",{"_index":1225,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:85",{"_index":1601,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.template.html",{"_index":812,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password/forget",{"_index":319,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":321,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password/upd",{"_index":1194,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["passwordmessag",{"_index":1581,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["passwordtest",{"_index":1926,"title":{},"body":{"todo.html":{}}}],["path",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["peoplelistnam",{"_index":608,"title":{},"body":{"components/CourseIndivComponent.html":{},"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnamespip",{"_index":1074,"title":{"pipes/PeopleListNamesPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["per",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["percent",{"_index":2263,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["perform",{"_index":760,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"todo.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{}}}],["performplex",{"_index":766,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["performplexer(data",{"_index":788,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["person",{"_index":1087,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["person.firstnam",{"_index":1092,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["person.lastnam",{"_index":1094,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["personlist",{"_index":1081,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["personnam",{"_index":572,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"pipes/PersonNamePipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["personname(person",{"_index":1103,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["personname:tru",{"_index":573,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["personnamepip",{"_index":1096,"title":{"pipes/PersonNamePipe.html":{}},"body":{"pipes/PersonNamePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phage",{"_index":115,"title":{"interfaces/Phage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["phage'},{'nam",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["phage(1|2",{"_index":2150,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["phage+1",{"_index":1047,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["phage.com",{"_index":1530,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.compon",{"_index":1504,"title":{},"body":{"modules/StudentModule.html":{}}}],["phage.component.t",{"_index":1510,"title":{},"body":{"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["phage.component.ts:16",{"_index":1513,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.component.ts:32",{"_index":1514,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.delet",{"_index":1532,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.guess",{"_index":1533,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.interfac",{"_index":834,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{}}}],["phage.mutationlist",{"_index":1531,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.par",{"_index":1126,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phage.strainnum",{"_index":1122,"title":{},"body":{"components/PhageDialogComponent.html":{},"components/StudentPhageComponent.html":{}}}],["phage.strainnum+1).tostr",{"_index":1159,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phage.template.html",{"_index":1511,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage1",{"_index":1165,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage1objectfirst",{"_index":2389,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2",{"_index":1166,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2object",{"_index":2390,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phagebyid",{"_index":1996,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["phagebyid(req",{"_index":2133,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagedelet",{"_index":1110,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagedeletionspip",{"_index":1104,"title":{"pipes/PhageDeletionsPipe.html":{}},"body":{"pipes/PhageDeletionsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagedetailsobjectphag",{"_index":2293,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagedialogcompon",{"_index":114,"title":{"components/PhageDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phagegeno1objectgenotyp",{"_index":2359,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2",{"_index":2354,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2objectgenotyp",{"_index":2360,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phageguess",{"_index":1130,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phageguessespip",{"_index":1128,"title":{"pipes/PhageGuessesPipe.html":{}},"body":{"pipes/PhageGuessesPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageid",{"_index":2131,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagemut",{"_index":1142,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagemutationspip",{"_index":1140,"title":{"pipes/PhageMutationsPipe.html":{}},"body":{"pipes/PhageMutationsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageobjectconfigur",{"_index":2305,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phageobjectphag",{"_index":2299,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagepar",{"_index":1148,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phageparents:phage.numpar",{"_index":1127,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phageparentspip",{"_index":1146,"title":{"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PhageParentsPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagetyp",{"_index":728,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["phagetypestringrefer",{"_index":2296,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phenotyp",{"_index":1177,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["pipe",{"_index":1073,"title":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({nam",{"_index":1089,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["pipes/peopl",{"_index":1289,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/person",{"_index":1287,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/phag",{"_index":1291,"title":{},"body":{"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["pipetransform",{"_index":1082,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["plaqu",{"_index":787,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plate",{"_index":713,"title":{"additional-documentation/genetics/plate-experiment.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["platecapac",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plateinput",{"_index":774,"title":{"interfaces/PlateInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plateresult",{"_index":802,"title":{"interfaces/PlateResults.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["play",{"_index":2335,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["plexer",{"_index":119,"title":{"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plexercapac",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plexerinput",{"_index":789,"title":{"interfaces/PlexerInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plexerroomcompon",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plu",{"_index":2462,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["plus/minu",{"_index":2461,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["pnumberrecombin",{"_index":2405,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["po",{"_index":974,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["point",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"components/LandingRoomComponent.html":{}}}],["popper.j",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["posguess",{"_index":1023,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["posit",{"_index":673,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["positive/neg",{"_index":2460,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["possibl",{"_index":485,"title":{},"body":{"components/CourseEditComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["possibleinstr",{"_index":458,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["post",{"_index":1901,"title":{},"body":{"todo.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1575,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1579,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/pl",{"_index":804,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["post(`${this._baseurl}/plex",{"_index":808,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["potenti",{"_index":587,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["prefil",{"_index":1900,"title":{},"body":{"todo.html":{}}}],["present",{"_index":1108,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["preset",{"_index":2324,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["press",{"_index":498,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["prevent",{"_index":902,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["previou",{"_index":2138,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["primari",{"_index":1039,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["primary&#39",{"_index":1362,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["privat",{"_index":28,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["probabl",{"_index":2278,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["problem",{"_index":1644,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["proce",{"_index":2042,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["produc",{"_index":1515,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["profil",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{}}}],["profile.compon",{"_index":1193,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.component.t",{"_index":1633,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:24",{"_index":1648,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1650,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1645,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1639,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1641,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:77",{"_index":1643,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":1640,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.rout",{"_index":1190,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.servic",{"_index":1191,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.template.html",{"_index":1635,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/profile.modul",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["profile/us",{"_index":1192,"title":{},"body":{"modules/ProfileModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profilemodul",{"_index":260,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerout",{"_index":1189,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profileservic",{"_index":1187,"title":{"injectables/ProfileService.html":{}},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["prominantli",{"_index":1606,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["promot",{"_index":1925,"title":{},"body":{"todo.html":{}}}],["properti",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["protect",{"_index":651,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["provid",{"_index":182,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["pswd",{"_index":811,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pswd'},{'name",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["public",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"injectables/CourseResolver.html":{},"components/PhageDialogComponent.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["public/.../read",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../scenario.globals.t",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.interface.t",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.roles.t",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/app/admin/admin",{"_index":169,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.t",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.ts:23",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:24",{"_index":37,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:30",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.guard.service.t",{"_index":145,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["public/app/admin/admin.guard.service.ts:10",{"_index":153,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.guard.service.ts:6",{"_index":148,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.module.t",{"_index":191,"title":{},"body":{"modules/AdminModule.html":{}}}],["public/app/admin/course/cours",{"_index":403,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["public/app/admin/course/course.module.t",{"_index":630,"title":{},"body":{"modules/CourseModule.html":{}}}],["public/app/admin/course/course.resolver.t",{"_index":642,"title":{},"body":{"injectables/CourseResolver.html":{},"coverage.html":{}}}],["public/app/admin/course/course.resolver.ts:15",{"_index":646,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.resolver.ts:9",{"_index":644,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.service.t",{"_index":1747,"title":{},"body":{"coverage.html":{}}}],["public/app/admin/not",{"_index":1061,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/stud",{"_index":1343,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/student.module.t",{"_index":1500,"title":{},"body":{"modules/StudentModule.html":{}}}],["public/app/admin/student/student.resolver.t",{"_index":1534,"title":{},"body":{"injectables/StudentResolver.html":{},"coverage.html":{}}}],["public/app/admin/student/student.resolver.ts:13",{"_index":1535,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.resolver.ts:28",{"_index":1536,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.roles.t",{"_index":1758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/admin/student/student.service.t",{"_index":1543,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["public/app/admin/student/student.service.ts:101",{"_index":1562,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:18",{"_index":1551,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:32",{"_index":1565,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:45",{"_index":1559,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:59",{"_index":1568,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:73",{"_index":1553,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:87",{"_index":1557,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/app.component.t",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["public/app/app.component.ts:11",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["public/app/app.module.t",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["public/app/authentication/authentication.module.t",{"_index":310,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["public/app/authentication/authentication.service.t",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["public/app/authentication/authentication.service.ts:11",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:12",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:15",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:17",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:22",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:26",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:30",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:34",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:43",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:50",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:57",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:61",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:65",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/forget",{"_index":809,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/log",{"_index":951,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["public/app/authentication/reset",{"_index":1218,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.t",{"_index":1297,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.ts:13",{"_index":1303,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:14",{"_index":1302,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:15",{"_index":1299,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:20",{"_index":1301,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:34",{"_index":1300,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signout/signout.component.t",{"_index":1308,"title":{},"body":{"components/SignoutComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signout/signout.component.ts:15",{"_index":1309,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signout/signout.component.ts:22",{"_index":1310,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signup/signup.component.t",{"_index":1313,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signup/signup.component.ts:17",{"_index":1324,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:18",{"_index":1323,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:19",{"_index":1326,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:20",{"_index":1325,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:21",{"_index":1317,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:29",{"_index":1319,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:37",{"_index":1321,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:48",{"_index":1322,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:67",{"_index":1320,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/help/help.component.t",{"_index":837,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["public/app/help/help.component.ts:9",{"_index":841,"title":{},"body":{"components/HelpComponent.html":{}}}],["public/app/help/help.module.t",{"_index":848,"title":{},"body":{"modules/HelpModule.html":{}}}],["public/app/home/home.component.t",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["public/app/home/home.component.ts:22",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:26",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:30",{"_index":859,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.module.t",{"_index":877,"title":{},"body":{"modules/HomeModule.html":{}}}],["public/app/interfaces/course.interface.t",{"_index":399,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["public/app/interfaces/experiment.interface.t",{"_index":1163,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["public/app/interfaces/fridge.interface.t",{"_index":827,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"coverage.html":{}}}],["public/app/interfaces/phage.interface.t",{"_index":712,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["public/app/interfaces/scenario.interface.t",{"_index":1246,"title":{},"body":{"interfaces/Scenario.html":{},"coverage.html":{}}}],["public/app/interfaces/student.interface.t",{"_index":206,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/interfaces/user.interface.t",{"_index":1627,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.t",{"_index":1048,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.ts:20",{"_index":1060,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:24",{"_index":1054,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:32",{"_index":1057,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:42",{"_index":1055,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/pag",{"_index":1065,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["public/app/pipes/peopl",{"_index":1075,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["public/app/pipes/person",{"_index":1097,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["public/app/pipes/phag",{"_index":1105,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["public/app/profile/profile.module.t",{"_index":1188,"title":{},"body":{"modules/ProfileModule.html":{}}}],["public/app/profile/profile.service.t",{"_index":1196,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["public/app/profile/profile.service.ts:16",{"_index":1202,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:33",{"_index":1204,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:49",{"_index":1211,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/upd",{"_index":1580,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["public/app/profile/us",{"_index":1632,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["public/app/scenario/fridge/fridge.component.t",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/fridge/phag",{"_index":1117,"title":{},"body":{"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.t",{"_index":916,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.ts:20",{"_index":923,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:24",{"_index":922,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:25",{"_index":921,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:26",{"_index":918,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:32",{"_index":920,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:40",{"_index":919,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/location/experiment.service.t",{"_index":759,"title":{},"body":{"injectables/ExperimentService.html":{},"coverage.html":{}}}],["public/app/scenario/location/experiment.service.ts:16",{"_index":768,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:35",{"_index":775,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:54",{"_index":790,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/lab",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/location/land",{"_index":881,"title":{},"body":{"components/LandingRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.component.t",{"_index":929,"title":{},"body":{"components/LocationComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.module.t",{"_index":939,"title":{},"body":{"modules/LocationModule.html":{}}}],["public/app/scenario/location/model",{"_index":962,"title":{},"body":{"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/plex",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/scenario.component.t",{"_index":1255,"title":{},"body":{"components/ScenarioComponent.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.globals.t",{"_index":1795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/scenario/scenario.module.t",{"_index":1259,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["public/app/scenario/scenario.resolver.t",{"_index":1264,"title":{},"body":{"injectables/ScenarioResolver.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.resolver.ts:14",{"_index":1266,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.resolver.ts:28",{"_index":1267,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.service.t",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["public/app/shared/confirm",{"_index":381,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"coverage.html":{}}}],["public/app/shared/read",{"_index":1798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/shared/shared.module.t",{"_index":1276,"title":{},"body":{"modules/SharedModule.html":{}}}],["pupros",{"_index":2497,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["purpos",{"_index":885,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["push",{"_index":1427,"title":{},"body":{"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["quot;all&quot",{"_index":1357,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["quot;reference&quot",{"_index":1516,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;student&quot",{"_index":1442,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["quot;submission&quot",{"_index":1520,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;unkown&quot",{"_index":1517,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;user&quot",{"_index":1519,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["random",{"_index":1877,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["rare",{"_index":1631,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["rate",{"_index":1701,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":694,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/NavComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["react",{"_index":1285,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["read",{"_index":2002,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["read(req",{"_index":2162,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["readabl",{"_index":1249,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["readablestringshould",{"_index":2313,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["readerrormessag",{"_index":517,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["readerrormessage(err",{"_index":543,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["readerrormessage(err2",{"_index":539,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["readerrormessage(error",{"_index":540,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["readerrormessage(iderr",{"_index":1619,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["realstop",{"_index":2288,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["reason",{"_index":1252,"title":{},"body":{"interfaces/Scenario.html":{}}}],["recfreq",{"_index":2413,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recfreqnumberfrequ",{"_index":2420,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recomb",{"_index":2430,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recombin",{"_index":1707,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombinationfreq",{"_index":2261,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombine(phagegeno1",{"_index":2353,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["redirect",{"_index":1306,"title":{},"body":{"components/SigninComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["redirecturl",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refer",{"_index":724,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["referencephag",{"_index":2271,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reflect",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["rel",{"_index":2482,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["relat",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["relativeto",{"_index":442,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["relev",{"_index":891,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reliv",{"_index":866,"title":{},"body":{"components/HomeComponent.html":{}}}],["rememb",{"_index":511,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["remov",{"_index":551,"title":{},"body":{"components/CourseEditComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["render",{"_index":2114,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["repres",{"_index":797,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/StudentResolver.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["represent",{"_index":2400,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["req",{"_index":2171,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["req.curus",{"_index":2222,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["reqobjectexpress",{"_index":2011,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["request",{"_index":1585,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["requesterror",{"_index":2100,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["requestif",{"_index":2194,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["requestnumb",{"_index":2148,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["requeston",{"_index":2083,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requir",{"_index":434,"title":{},"body":{"components/CourseCreateComponent.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["requireslogin",{"_index":2006,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requireslogin(req",{"_index":2213,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["res.accessgranted[scencod",{"_index":1469,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["res.accessgranted[scenid",{"_index":706,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["res.email",{"_index":1617,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["res.firstnam",{"_index":1653,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.id",{"_index":1651,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.lastnam",{"_index":1654,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["reset",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["resetpassword",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(credenti",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword(req",{"_index":2191,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(this.credenti",{"_index":1239,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcompon",{"_index":120,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpasswordemail",{"_index":2005,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordemail(req",{"_index":2182,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordexpir",{"_index":2500,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resetpasswordtoken",{"_index":2499,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resobjectexpress",{"_index":2012,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resolv",{"_index":643,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["resolve(rout",{"_index":645,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["respons",{"_index":1662,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["rest",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["result.coursenum",{"_index":441,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["result.messag",{"_index":826,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["retreiv",{"_index":2167,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["return",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["returns{observ",{"_index":1577,"title":{},"body":{"injectables/StudentService.html":{}}}],["revers",{"_index":1079,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["revok",{"_index":1563,"title":{},"body":{"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["role",{"_index":161,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["role.label",{"_index":1482,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass",{"_index":1420,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;admin&#39",{"_index":1446,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;student&#39",{"_index":1443,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass('admin",{"_index":1473,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(src",{"_index":1439,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledis",{"_index":1421,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledisabled(src",{"_index":1448,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roleerror",{"_index":2524,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["rolesenum",{"_index":2503,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["room",{"_index":737,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["room'},{'nam",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["room.compon",{"_index":946,"title":{},"body":{"modules/LocationModule.html":{}}}],["room.component.t",{"_index":883,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:112",{"_index":975,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:129",{"_index":996,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:139",{"_index":993,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:22",{"_index":1004,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:23",{"_index":907,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:26",{"_index":1005,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:27",{"_index":895,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:30",{"_index":1003,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:34",{"_index":1007,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:38",{"_index":1006,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:42",{"_index":1008,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:43",{"_index":1002,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:47",{"_index":905,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["room.component.ts:48",{"_index":972,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:63",{"_index":899,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:71",{"_index":991,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:96",{"_index":990,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.style.css",{"_index":963,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.template.html",{"_index":894,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["room/lab",{"_index":947,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["room/land",{"_index":882,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["room/model",{"_index":949,"title":{},"body":{"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room/plex",{"_index":948,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["root",{"_index":1269,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["rout",{"_index":154,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"changelog.html":{},"todo.html":{}}}],["route.params['coursenum",{"_index":647,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["route.params['scenid",{"_index":1272,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["route.params['studentid",{"_index":1541,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["router",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{}}}],["routermodul",{"_index":193,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/StudentModule.html":{}}}],["routermodule.forchild(adminrout",{"_index":203,"title":{},"body":{"modules/AdminModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":322,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["routermodule.forchild(courserout",{"_index":641,"title":{},"body":{"modules/CourseModule.html":{}}}],["routermodule.forchild(helprout",{"_index":852,"title":{},"body":{"modules/HelpModule.html":{}}}],["routermodule.forchild(homerout",{"_index":880,"title":{},"body":{"modules/HomeModule.html":{}}}],["routermodule.forchild(locationrout",{"_index":950,"title":{},"body":{"modules/LocationModule.html":{}}}],["routermodule.forchild(profilerout",{"_index":1195,"title":{},"body":{"modules/ProfileModule.html":{}}}],["routermodule.forchild(scenariorout",{"_index":1263,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["routermodule.forchild(studentrout",{"_index":1509,"title":{},"body":{"modules/StudentModule.html":{}}}],["routermodule.forroot(approut",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesanpshot",{"_index":1270,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["routerstatesnapshot",{"_index":152,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["row",{"_index":791,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["rowphag",{"_index":805,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["rowphagearraylist",{"_index":2439,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["run",{"_index":1892,"title":{},"body":{"index.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["rxj",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/operator/concat",{"_index":1328,"title":{},"body":{"components/SignupComponent.html":{}}}],["rxjs/add/operator/filt",{"_index":1327,"title":{},"body":{"components/SignupComponent.html":{}}}],["rxjs/add/operator/takeuntil",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["rxjs/behaviorsubject",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rxjs/observ",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["rxjs/subject",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["rxjs/subscript",{"_index":426,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentIndivComponent.html":{}}}],["s",{"_index":1464,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["s.cours",{"_index":1465,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["s.course.coursenum",{"_index":1466,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["same",{"_index":751,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["save",{"_index":502,"title":{},"body":{"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedata",{"_index":970,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["savedelet",{"_index":1991,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(req",{"_index":2115,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(this.guess",{"_index":1031,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["sceanrio",{"_index":2158,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scen",{"_index":605,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scen'},{'nam",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scen.label",{"_index":609,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["scen1",{"_index":2517,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen2",{"_index":2518,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen3",{"_index":2519,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scenario",{"_index":103,"title":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["scenario'},{'nam",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scenario.compon",{"_index":637,"title":{},"body":{"modules/CourseModule.html":{},"modules/ScenarioModule.html":{}}}],["scenario.component.t",{"_index":648,"title":{},"body":{"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario.component.ts:102",{"_index":658,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:113",{"_index":671,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:133",{"_index":666,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:137",{"_index":674,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:35",{"_index":682,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:36",{"_index":678,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:40",{"_index":681,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:41",{"_index":679,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:42",{"_index":680,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:46",{"_index":677,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:48",{"_index":656,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:67",{"_index":675,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.glob",{"_index":1010,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["scenario.label",{"_index":709,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenario.purpos",{"_index":913,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.relev",{"_index":914,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.rout",{"_index":1261,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenario.scencod",{"_index":708,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.servic",{"_index":909,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["scenario.startingpoint",{"_index":915,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.style.css",{"_index":649,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.template.html",{"_index":650,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ScenarioComponent.html":{}}}],["scenario/cours",{"_index":636,"title":{},"body":{"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario/experi",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scenario/scenario.glob",{"_index":1133,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenario/scenario.modul",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.resolv",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.servic",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenariobycod",{"_index":2003,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariobycode(req",{"_index":2166,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scenariocompon",{"_index":122,"title":{"components/ScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scenariodata",{"_index":807,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["scenariodetail",{"_index":829,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["scenarioexternal:scneariocurr",{"_index":2123,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["scenarioglob",{"_index":1009,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenarioglobals.deletionguesslength",{"_index":1012,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["scenarioglobals.genelength",{"_index":1138,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenarioid",{"_index":967,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariomodul",{"_index":261,"title":{"modules/ScenarioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScenarioModule.html":{},"modules.html":{},"overview.html":{}}}],["scenarioobjectparamet",{"_index":2257,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scenarioorigin",{"_index":2458,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["scenarioresolv",{"_index":264,"title":{"injectables/ScenarioResolver.html":{}},"body":{"modules/AppModule.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"overview.html":{}}}],["scenariorout",{"_index":1260,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenarios/fridg",{"_index":1902,"title":{},"body":{"todo.html":{}}}],["scenarioscenariocurr",{"_index":2099,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["scenarioscenarioscenario",{"_index":2087,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenarioservic",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scencod",{"_index":689,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["scendata",{"_index":2292,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectcomput",{"_index":2300,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectconfigur",{"_index":2306,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectcurr",{"_index":2303,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectscenario",{"_index":2297,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["scenerio",{"_index":1899,"title":{},"body":{"todo.html":{}}}],["scenid",{"_index":698,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{}}}],["schema",{"_index":2449,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["second",{"_index":2193,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["secondari",{"_index":986,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["secondary&#39",{"_index":1445,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["section",{"_index":980,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["see",{"_index":928,"title":{},"body":{"components/ListComponent.html":{},"todo.html":{}}}],["select",{"_index":174,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseEditComponent.html":{},"components/LocationComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"todo.html":{}}}],["selectedadd",{"_index":459,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["selector",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["semest",{"_index":2071,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["send",{"_index":481,"title":{},"body":{"components/CourseEditComponent.html":{},"injectables/ScenarioResolver.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["sendforget",{"_index":814,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendreset",{"_index":1221,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sent",{"_index":1698,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["separ",{"_index":750,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{}}}],["sequenc",{"_index":1858,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["server",{"_index":475,"title":{},"body":{"components/CourseEditComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["server/databas",{"_index":1209,"title":{},"body":{"injectables/ProfileService.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["servic",{"_index":473,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["services/stream",{"_index":1599,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["session",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":992,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["setinstructor",{"_index":1986,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["setinstructor(req",{"_index":2078,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["setphag",{"_index":1351,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setphage(src",{"_index":1370,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setrol",{"_index":1977,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["setrole(req",{"_index":2027,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["setstudentrol",{"_index":1550,"title":{},"body":{"injectables/StudentService.html":{}}}],["setstudentrole(adminid",{"_index":1567,"title":{},"body":{"injectables/StudentService.html":{}}}],["setus",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setuser(us",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sever",{"_index":585,"title":{},"body":{"components/CourseIndivComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{}}}],["shared/confirm",{"_index":513,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["shared/read",{"_index":518,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/shared.modul",{"_index":194,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["sharedmodul",{"_index":187,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":1909,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["shelflab",{"_index":1912,"title":{},"body":{"todo.html":{}}}],["shelv",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":742,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["shifttypenumbershould",{"_index":2309,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["short",{"_index":1253,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["show",{"_index":884,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["shuffl",{"_index":1704,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["shuffleplaquelist",{"_index":2248,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["side",{"_index":1572,"title":{},"body":{"injectables/StudentService.html":{}}}],["sign",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SigninComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin'},{'nam",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signin(credenti",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signin(req",{"_index":2197,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signin(this.credenti",{"_index":1304,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.template.html",{"_index":1298,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin/signin.compon",{"_index":316,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signincompon",{"_index":124,"title":{"components/SigninComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signout",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignoutComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signout'},{'nam",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signout(req",{"_index":2206,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signout/signout.compon",{"_index":318,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signoutcompon",{"_index":126,"title":{"components/SignoutComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signup",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signup'},{'nam",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signup(req",{"_index":2203,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signup(this.us",{"_index":1340,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup(us",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signup.template.html",{"_index":1314,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":317,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signupcompon",{"_index":128,"title":{"components/SignupComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpl",{"_index":659,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["singl",{"_index":1411,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["site",{"_index":1050,"title":{},"body":{"components/NavComponent.html":{}}}],["size",{"_index":554,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["skyhook",{"_index":1283,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["skyhookdndmodul",{"_index":1282,"title":{},"body":{"modules/SharedModule.html":{}}}],["skyhookdndmodule.forroot",{"_index":1296,"title":{},"body":{"modules/SharedModule.html":{}}}],["sm",{"_index":555,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["small",{"_index":785,"title":{},"body":{"injectables/ExperimentService.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["small&#39",{"_index":1361,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["small/larg",{"_index":799,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{}}}],["smaller",{"_index":1699,"title":{},"body":{"changelog.html":{}}}],["smallplaqu",{"_index":1179,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["snapshot",{"_index":1271,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["solut",{"_index":1914,"title":{},"body":{"todo.html":{}}}],["solv",{"_index":1907,"title":{},"body":{"todo.html":{}}}],["soon",{"_index":843,"title":{},"body":{"components/HelpComponent.html":{}}}],["sort",{"_index":225,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"miscellaneous/variables.html":{}}}],["sorted.map((phage)=>{return",{"_index":1158,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["sortstud",{"_index":237,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/Student.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["special",{"_index":780,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialobjectoth",{"_index":2441,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialsobjectoth",{"_index":2393,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["specif",{"_index":831,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["specifc",{"_index":2164,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["specifi",{"_index":1235,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["spinner",{"_index":1677,"title":{},"body":{"changelog.html":{}}}],["sposnumberstart",{"_index":2380,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["spot",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["spots/length",{"_index":2325,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["src",{"_index":753,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{}}}],["ssl",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["ssubscript",{"_index":917,"title":{},"body":{"components/ListComponent.html":{}}}],["stain",{"_index":1356,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["start",{"_index":743,"title":{"changelog.html":{},"index.html":{},"todo.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["start/stop",{"_index":748,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["startingpoint",{"_index":1247,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stat",{"_index":697,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["state",{"_index":151,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"interfaces/Phage.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["state.url",{"_index":160,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["statement",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":223,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["statusdescript",{"_index":2015,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["step",{"_index":1001,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["stepsiz",{"_index":968,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["stock",{"_index":2098,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridg",{"_index":1989,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridge(req",{"_index":2096,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stop",{"_index":744,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stoplist",{"_index":2339,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["stoplistarrayloc",{"_index":2341,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["store",{"_index":721,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/models/user-model.html":{}}}],["strain",{"_index":762,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Scenario.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["strain'",{"_index":1109,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["strain.guess",{"_index":1393,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strain.submit",{"_index":1405,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strainlist",{"_index":1348,"title":{},"body":{"components/StudentFridgeComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainlistarraylist",{"_index":2447,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainnum",{"_index":717,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["strainnumnumberstrain",{"_index":2295,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["strainphagephag",{"_index":2130,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stream",{"_index":1058,"title":{},"body":{"components/NavComponent.html":{}}}],["string",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["stringifi",{"_index":2117,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["student",{"_index":18,"title":{"interfaces/Student.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["student'",{"_index":668,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{}}}],["student.course.coursenum",{"_index":1481,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.email",{"_index":1480,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["student.interfac",{"_index":402,"title":{},"body":{"interfaces/Course.html":{}}}],["student.resolv",{"_index":1505,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.rol",{"_index":1459,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.rout",{"_index":1502,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.servic",{"_index":1383,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["student/student.servic",{"_index":202,"title":{},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{}}}],["student/us",{"_index":1554,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentfridg",{"_index":835,"title":{"interfaces/StudentFridge.html":{}},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["studentfridgecompon",{"_index":130,"title":{"components/StudentFridgeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentid",{"_index":669,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentindex",{"_index":672,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["studentindivcompon",{"_index":131,"title":{"components/StudentIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentlistcompon",{"_index":132,"title":{"components/StudentListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentmodul",{"_index":1494,"title":{"modules/StudentModule.html":{}},"body":{"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["studentnum",{"_index":1540,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["studentphag",{"_index":754,"title":{"interfaces/StudentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["studentphagecompon",{"_index":133,"title":{"components/StudentPhageComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentresolv",{"_index":1499,"title":{"injectables/StudentResolver.html":{}},"body":{"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"coverage.html":{},"overview.html":{}}}],["studentrolesarray",{"_index":1455,"title":{},"body":{"components/StudentIndivComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentrout",{"_index":1501,"title":{},"body":{"modules/StudentModule.html":{}}}],["students.sort(sortstud",{"_index":601,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["students/us",{"_index":1566,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservic",{"_index":188,"title":{"injectables/StudentService.html":{}},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["studentuserstud",{"_index":2112,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentuserth",{"_index":2024,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["studentuserus",{"_index":2081,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["studet",{"_index":1102,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["style",{"_index":1906,"title":{},"body":{"todo.html":{}}}],["styleurl",{"_index":407,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{}}}],["subject",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["submiss",{"_index":1523,"title":{},"body":{"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{}}}],["submit",{"_index":448,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["subscrib",{"_index":439,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{}}}],["subscribe((cours",{"_index":621,"title":{},"body":{"components/CourseListComponent.html":{}}}],["subscribe((dat",{"_index":1034,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["subscribe((fridg",{"_index":1386,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["subscribe((info",{"_index":532,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((instr",{"_index":535,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["subscribe((r",{"_index":564,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe((result",{"_index":825,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe((scen",{"_index":603,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((scenario",{"_index":925,"title":{},"body":{"components/ListComponent.html":{}}}],["subscribe((stat",{"_index":696,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscribe((stud",{"_index":599,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["subscribe((upd",{"_index":547,"title":{},"body":{"components/CourseEditComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe(param",{"_index":688,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscript",{"_index":411,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":484,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["successfulli",{"_index":2196,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["successlist",{"_index":2073,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["successmessag",{"_index":813,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":520,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/StudentService.html":{}}}],["sumit",{"_index":1518,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["support",{"_index":1721,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sure",{"_index":390,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["svg",{"_index":1894,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1728,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":1485,"title":{},"body":{"components/StudentListComponent.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["systemj",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":1525,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["tab",{"_index":931,"title":{},"body":{"components/LocationComponent.html":{}}}],["tabl",{"_index":1680,"title":{},"body":{"changelog.html":{},"coverage.html":{},"todo.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["takeuntil(this.isdestroy",{"_index":531,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["teach",{"_index":1486,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["teacher",{"_index":2048,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["tell",{"_index":474,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":1667,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"todo.html":{},"additional-documentation/models/course-model.html":{}}}],["textual",{"_index":1107,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["there'",{"_index":1603,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["think",{"_index":979,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._admin",{"_index":526,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._admin.id",{"_index":1470,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._admin.rol",{"_index":1471,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._authenticationservic",{"_index":824,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authenticationservice.canaccessadmin",{"_index":162,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._authenticationservice.getus",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{}}}],["this._authenticationservice.isloggedin",{"_index":958,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._authenticationservice.redirecturl",{"_index":165,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/SigninComponent.html":{}}}],["this._authenticationservice.setuser(result",{"_index":1305,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authservice.getus",{"_index":429,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this._authservice.setuser(nul",{"_index":1312,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._authservice.setuser(upd",{"_index":1659,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._authservice.signout",{"_index":1311,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._calldelet",{"_index":1478,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._calldeletecours",{"_index":561,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._calldeletecoursestud",{"_index":566,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._checkpassword",{"_index":1237,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this._courseservic",{"_index":436,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._courseservice.deletecourse(this._admin.id",{"_index":563,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.deletestudents(this._admin.id",{"_index":567,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourse(admin.id",{"_index":597,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{}}}],["this._courseservice.getcourse(this._admin.id",{"_index":530,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourselist",{"_index":1334,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._courseservice.getpossibleinstructors(this._admin.id",{"_index":534,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getscenariostatus(this.admin.id",{"_index":695,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._courseservice.getstudents(admin.id",{"_index":598,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["this._courseservice.listcourses(admin.id",{"_index":620,"title":{},"body":{"components/CourseListComponent.html":{}}}],["this._http",{"_index":803,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["this._modalservice.open(confirmdeletedialogcompon",{"_index":553,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._profileservice.editprofile(this.userid",{"_index":1655,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._profileservice.updatepassword(this.user.id",{"_index":1622,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._reordercourses(r",{"_index":1336,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._rout",{"_index":443,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._route.param",{"_index":687,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._route.params.subscribe(param",{"_index":528,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._route.parent.snapshot.parammap.get('scenid",{"_index":910,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["this._route.snapshot.parammap.get('token",{"_index":1233,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._router.navig",{"_index":440,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["this._router.navigate(['/admin/cours",{"_index":565,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._router.navigate(['/admin/not",{"_index":166,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._router.navigate(['/admin/stud",{"_index":707,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._router.navigate(['/profil",{"_index":1623,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._router.navigate(['authentication/signin",{"_index":960,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._router.navigate([redirect",{"_index":1307,"title":{},"body":{"components/SigninComponent.html":{}}}],["this._scenarioservic",{"_index":911,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["this._scenarioservice.getscenario(scencod",{"_index":693,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["this._scenarioservice.listscenario",{"_index":602,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._scenarioservice.setscenario(nul",{"_index":1036,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._studentservice.deletestudent(this._admin.id",{"_index":1479,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.getfridge(admin.id",{"_index":1385,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this._studentservice.getstudent(admin.id",{"_index":1542,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["this._studentservice.getstudent(this._admin.id",{"_index":1460,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this._admin.id",{"_index":1467,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this.admin.id",{"_index":701,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._studentservice.liststudents(admin.id",{"_index":1493,"title":{},"body":{"components/StudentListComponent.html":{}}}],["this._studentservice.setstudentrole(this._admin.id",{"_index":1474,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._user.asobserv",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.getvalu",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.next(us",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.admin",{"_index":428,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["this.adminus",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.canactivate(rout",{"_index":961,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this.cours",{"_index":622,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["this.coursedetail",{"_index":438,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["this.coursedetails.coursenum",{"_index":431,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["this.courseinfo",{"_index":533,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["this.courseinfo.coursenum",{"_index":542,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.coursenum",{"_index":691,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.cpassword",{"_index":1339,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.credenti",{"_index":1229,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.confirmpassword",{"_index":1241,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.newpassword",{"_index":1625,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.credentials.password",{"_index":1240,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.token",{"_index":1232,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.credentials['usernam",{"_index":1616,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.email",{"_index":823,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errormessag",{"_index":433,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fridg",{"_index":1375,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strain",{"_index":1391,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.filter((strain",{"_index":1403,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.sort((a,b)=>{return",{"_index":1394,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.genear",{"_index":1013,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.getus",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuser().rol",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.guess",{"_index":1017,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.guesses[strain][po",{"_index":1024,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.hasfridg",{"_index":1387,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.http.get(this._baseurl",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(this._baseurl",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["this.isdestroy",{"_index":522,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.next(tru",{"_index":569,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.unsubscrib",{"_index":570,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdis",{"_index":1236,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.key",{"_index":1019,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.newrol",{"_index":1461,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.paramobserv",{"_index":527,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.paramobserver.unsubscrib",{"_index":568,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.passwordmessag",{"_index":1620,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.phage.phagetyp",{"_index":1526,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.phagetype.touppercas",{"_index":1529,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.submit",{"_index":1528,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.possibleinstr",{"_index":536,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.possibleinstr.filter((elm",{"_index":548,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.scenario",{"_index":604,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.scenario.scencod",{"_index":699,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.scenarioid",{"_index":1033,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.selectedadd",{"_index":546,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.setphage('al",{"_index":1397,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.ssubscript",{"_index":924,"title":{},"body":{"components/ListComponent.html":{}}}],["this.ssubscription.unsubscrib",{"_index":927,"title":{},"body":{"components/ListComponent.html":{}}}],["this.steps",{"_index":1011,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.strainlist",{"_index":1402,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.stud",{"_index":600,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["this.student.accessgranted[scencod",{"_index":1463,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.rol",{"_index":1462,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.userid",{"_index":1468,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.students[studentindex].statu",{"_index":705,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.students[studentindex].userid",{"_index":700,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.subscript",{"_index":435,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.subscription.unsubscrib",{"_index":447,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.successmessag",{"_index":822,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.us",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.userid",{"_index":1032,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.userinfo",{"_index":1652,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.viewstrain",{"_index":1400,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["through",{"_index":1687,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":2327,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["ti",{"_index":229,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":397,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["tmp",{"_index":1335,"title":{},"body":{"components/SignupComponent.html":{}}}],["todo",{"_index":550,"title":{"todo.html":{}},"body":{"components/CourseEditComponent.html":{},"components/SigninComponent.html":{}}}],["togeth",{"_index":2367,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["toggl",{"_index":997,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["toggleblock",{"_index":971,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["toggleblock(strain",{"_index":995,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["token",{"_index":1231,"title":{},"body":{"components/ResetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["told",{"_index":2496,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["top",{"_index":1049,"title":{},"body":{"components/NavComponent.html":{},"changelog.html":{}}}],["total",{"_index":2312,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["touch",{"_index":1286,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["touchbackend",{"_index":1284,"title":{},"body":{"modules/SharedModule.html":{}}}],["toward",{"_index":2434,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["track",{"_index":1609,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["transfer",{"_index":1700,"title":{},"body":{"changelog.html":{}}}],["transform",{"_index":1077,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["transform(delet",{"_index":1111,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["transform(guess",{"_index":1131,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["transform(mut",{"_index":1143,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["transform(par",{"_index":1149,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["transform(person",{"_index":1099,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["transform(personlist",{"_index":1078,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["transport",{"_index":2185,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["tri",{"_index":1665,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["trim",{"_index":2225,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["tripl",{"_index":2408,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["true",{"_index":164,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["true/fals",{"_index":1447,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["tslib",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1675,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["tube/pl",{"_index":715,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["two",{"_index":2422,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["unabl",{"_index":2101,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["unaccept",{"_index":2525,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["unauthorizederror",{"_index":2181,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unauthorizedif",{"_index":2214,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["undefin",{"_index":703,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["under",{"_index":1711,"title":{},"body":{"changelog.html":{}}}],["uneven",{"_index":1727,"title":{},"body":{"changelog.html":{}}}],["uniqu",{"_index":2450,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["unknown",{"_index":725,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["unkown",{"_index":1522,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["unprocess",{"_index":2189,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unreleas",{"_index":1661,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":2493,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["unsubscrib",{"_index":582,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["until",{"_index":1647,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["unus",{"_index":1918,"title":{},"body":{"todo.html":{}}}],["up",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updat",{"_index":467,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["updated.email",{"_index":1658,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.firstnam",{"_index":1656,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.lastnam",{"_index":1657,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatedst",{"_index":1561,"title":{},"body":{"injectables/StudentService.html":{}}}],["updatepassword",{"_index":1201,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(req",{"_index":2177,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(userid",{"_index":1210,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatepasswordcompon",{"_index":135,"title":{"components/UpdatePasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updatephag",{"_index":1994,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updatephage(req",{"_index":2128,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["updateprofil",{"_index":1637,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["url",{"_index":159,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["us",{"_index":219,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["usag",{"_index":1086,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["useddeletespot",{"_index":2329,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["useddeletespotsarraydelet",{"_index":2334,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["useddeletespotsarraylist",{"_index":2326,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["usedshiftspot",{"_index":2456,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["usemongocli",{"_index":1933,"title":{},"body":{"todo.html":{}}}],["user",{"_index":47,"title":{"interfaces/User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user'",{"_index":1083,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user')if",{"_index":2219,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["user.interfac",{"_index":214,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{}}}],["user/scenario",{"_index":828,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["user/stud",{"_index":210,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["userbyid",{"_index":2007,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["userbyid(req",{"_index":2215,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["userid",{"_index":217,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["userinfo",{"_index":1636,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["usernam",{"_index":2201,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["userprofilecompon",{"_index":137,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users'",{"_index":2119,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["useruserus",{"_index":2227,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["usual",{"_index":887,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["v1.0.2",{"_index":1724,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":1713,"title":{},"body":{"changelog.html":{}}}],["v1.0.6",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":1693,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":1690,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":1668,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":776,"title":{},"body":{"injectables/ExperimentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["valu",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["valuesstring[\"admin\",\"instr\",\"student\"]accept",{"_index":2522,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["var",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["vari",{"_index":2342,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["variabl",{"_index":510,"title":{"miscellaneous/variables.html":{}},"body":{"components/CourseEditComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":1588,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["via",{"_index":2481,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["view",{"_index":500,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/LocationComponent.html":{},"components/PhageDialogComponent.html":{},"components/ScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{}}}],["viewstrain",{"_index":1349,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["virtual",{"_index":764,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["visibl",{"_index":1250,"title":{},"body":{"interfaces/Scenario.html":{},"components/StudentFridgeComponent.html":{}}}],["visual",{"_index":1069,"title":{},"body":{"components/PageNotFoundComponent.html":{},"todo.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["vs",{"_index":2280,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["w",{"_index":1044,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["want",{"_index":391,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["watch",{"_index":1938,"title":{},"body":{"todo.html":{}}}],["way",{"_index":1695,"title":{},"body":{"changelog.html":{}}}],["webpag",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["websit",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["welcom",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{}}}],["went",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["weren't",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["wheater",{"_index":978,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["whocal",{"_index":2388,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringloc",{"_index":2443,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringlocation/room",{"_index":2395,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["whole",{"_index":2350,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["whosaysstringwho",{"_index":2346,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["width",{"_index":998,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["windowclass",{"_index":556,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["within",{"_index":685,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["word",{"_index":870,"title":{},"body":{"components/HomeComponent.html":{}}}],["work",{"_index":1613,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["wrong",{"_index":1216,"title":{},"body":{"injectables/ProfileService.html":{}}}],["wt",{"_index":1176,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["wtgene",{"_index":2284,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["x",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{},"todo.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["x[0].text",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["y",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["y=0",{"_index":1134,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["z",{"_index":1136,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["zone.j",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":189,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/HomeModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Entrance component for admin features\nMainly, it is a card that allows navigation between course-related\ninfo and student-related info\nContent of the card is determined by router\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin\n            \n\n\n\n\n            \n                templateUrl\n                ./admin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adminUser\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            adminUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adminUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Entrance component for admin features\n * Mainly, it is a card that allows navigation between course-related\n * info and student-related info\n * Content of the card is determined by router\n */\n@Component({\n  selector: 'admin',\n  templateUrl: './admin.template.html'\n})\n\nexport class AdminComponent{\n  /**\n   * Logged in user\n   */\n  private adminUser: User;\n  private errorMessage: string = '';\n\n  constructor(\n    private _authenticationService: AuthenticationService\n  ){}\n\n  ngOnInit(){\n    this.adminUser = this._authenticationService.getUser();\n  }\n\n}\n\n    \n\n    \n        \n\n  Administrator Page\n  Instructor Page\n  \n    \n      \n        \n          \n             \n            Courses\n            \n            \n            \n              \n            Students\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Administrator Page  Instructor Page                                                       Courses                                                              Students                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/admin.guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.guard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.guard.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Injectable()\nexport class AdminGuard implements CanActivateChild {\n\n  constructor(private _authenticationService: AuthenticationService, private _router: Router) {}\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    let role: boolean = this._authenticationService.canAccessAdmin();\n    if(role)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['/admin/not-auth']);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminHomeComponent.html":{"url":"components/AdminHomeComponent.html","title":"component - AdminHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin-home/admin-home.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin-home\n            \n\n\n\n\n            \n                templateUrl\n                ./admin-home.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'admin-home',\n  templateUrl: './admin-home.template.html'\n})\n\nexport class AdminHomeComponent{}\n\n    \n\n    \n        \n  Select Courses or Students above.\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Select Courses or Students above.'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/admin.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminComponent\n                            \n                            \n                                AdminHomeComponent\n                            \n                            \n                                NotAuthComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AdminGuard\n                            \n                            \n                                     StudentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AdminRoutes } from './admin.routes';\nimport { AdminComponent } from './admin.component';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { NotAuthComponent } from './not-auth/not-auth.component';\n\nimport { AdminGuard } from './admin.guard.service';\n\nimport { StudentService } from './student/student.service';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(AdminRoutes)\n  ],\n  declarations: [\n    AdminComponent,\n    AdminHomeComponent,\n    NotAuthComponent\n  ],\n  providers: [\n    AdminGuard,\n    StudentService\n  ]\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminStudent.html":{"url":"interfaces/AdminStudent.html","title":"interface - AdminStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AdminStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information needed for admin pages about a user/student\n\n            \n\n            \n                Extends\n            \n            \n                    Student\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:     Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component;\nLinks the nav bar to the content needed based on the url\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-app\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/app.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The main application component;\n * Links the nav bar to the content needed based on the url\n */\n@Component({\n    selector: 'cricket-app',\n    template: ''\n})\nexport class AppComponent {\n    constructor() { }\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                NavComponent\n                            \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthenticationService\n                            \n                            \n                                     CourseService\n                            \n                            \n                                     LoggedInGuard\n                            \n                            \n                                     ScenarioResolver\n                            \n                            \n                                     ScenarioService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AdminModule\n                            \n                            \n                                    AuthenticationModule\n                            \n                            \n                                    HelpModule\n                            \n                            \n                                    HomeModule\n                            \n                            \n                                    ProfileModule\n                            \n                            \n                                    ScenarioModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { McBreadcrumbsConfig } from 'ngx-breadcrumbs';\n\nimport { AppRoutes } from './app.routes';\n\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { LoggedInGuard } from './authentication/logged-in.guard.service';\nimport { ScenarioService } from './scenario/scenario.service';\nimport { CourseService } from './admin/course/course.service';\nimport { ScenarioResolver } from './scenario/scenario.resolver';\n\nimport { SharedModule } from './shared/shared.module';\nimport { AdminModule } from './admin/admin.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { HelpModule } from './help/help.module';\nimport { HomeModule } from './home/home.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { ScenarioModule } from './scenario/scenario.module';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n      SharedModule,\n        HttpClientModule,\n      HomeModule,\n      HelpModule,\n      AdminModule,\n      ProfileModule,\n        AuthenticationModule,\n        //ArticleModule,\n      ScenarioModule,\n      RouterModule.forRoot(AppRoutes)\n    ],\n    declarations: [\n        AppComponent,\n        NavComponent,\n      PageNotFoundComponent\n    ],\n    providers: [\n      AuthenticationService,\n      LoggedInGuard,\n      ScenarioService,\n      CourseService,\n      ScenarioResolver\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\nconstructor(breadcrumbsConfig: McBreadcrumbsConfig) {\n\n    breadcrumbsConfig.postProcess = (x) => {\n\n      // Ensure that the first breadcrumb always points to home\n\n      let y = x;\n\n      if(x.length && x[0].text !== 'Home') {\n        y = [\n          {\n            text: 'Home',\n            path: ''\n          }\n        ].concat(x);\n      }\n\n      return y;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/authentication/authentication.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ForgetPasswordComponent\n                            \n                            \n                                ResetPasswordComponent\n                            \n                            \n                                SigninComponent\n                            \n                            \n                                SignoutComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticationRoutes } from './authentication.routes';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SignoutComponent } from './signout/signout.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(AuthenticationRoutes)\n    ],\n    declarations: [\n        SigninComponent,\n        SignupComponent,\n      SignoutComponent,\n      ForgetPasswordComponent,\n      ResetPasswordComponent\n    ]\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                            \n                                    Private\n                                _user\n                            \n                            \n                                getUser$\n                            \n                            \n                                    Public\n                                redirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAccessAdmin\n                            \n                            \n                                forgetPassword\n                            \n                            \n                                getUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setUser\n                            \n                            \n                                signin\n                            \n                            \n                                signout\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAccessAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAccessAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nforgetPassword(body: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signout\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/auth/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._user.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { User } from '../interfaces/user.interface';\n\n@Injectable()\nexport class AuthenticationService {\n    private _user: BehaviorSubject = new BehaviorSubject(null);\n    getUser$ = this._user.asObservable();\n\n    //private _user2: User;\n    private _baseUrl = '/api/auth/'\n\n    public redirectUrl: string = '/';\n\n    constructor(private http: HttpClient) {\n    }\n\n  setUser(user: User){\n    this._user.next(user);\n  }\n\n  getUser(): User{\n    return this._user.getValue();\n  }\n\n  isLoggedIn(): boolean{\n    return (!!this.getUser());\n  }\n\n  canAccessAdmin(): boolean{\n    if(this.getUser()){\n      return this.getUser().role > 0\n    }\n    else{\n      return false;\n    }\n  }\n\n  signin(credentials: any): Observable {\n      let body = JSON.stringify(credentials);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signin', body, { headers: headers });\n  }\n\n  signup(user: any): Observable {\n      let body = JSON.stringify(user);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signup', body, { headers: headers });\n  }\n\n  signout(): Observable{\n    return this.http.get(this._baseUrl + 'signout');\n  }\n\n  forgetPassword(body: any): Observable{\n    return this.http.post(this._baseUrl + 'forget-password', body);\n  }\n\n  resetPassword(credentials: any): Observable{\n    return this.http.post(this._baseUrl + 'reset-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDeleteDialogComponent.html":{"url":"components/ConfirmDeleteDialogComponent.html","title":"component - ConfirmDeleteDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDeleteDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/shared/confirm-delete-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-delete-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-delete-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/shared/confirm-delete-dialog.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Are you sure you want to delete?'\n                        \n                    \n                \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'confirm-delete-dialog',\n  templateUrl: './confirm-delete-dialog.template.html'\n})\n\nexport class ConfirmDeleteDialogComponent{\n\n  @Input() message: string = 'Are you sure you want to delete?'\n\n  constructor(public activeModal: NgbActiveModal){\n\n  }\n}\n\n    \n\n    \n        \n  \n      &times;\n    \n\n\n\n  \n    {{ message }}\n  \n\n\n\n  \n    Cancel\n  \n  \n    Confirm\n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        ×          {{ message }}        Cancel        Confirm  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDeleteDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/course.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information about a course\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courseNum\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        instructors\n                                \n                                \n                                            Optional\n                                        students\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseNum\n                                    \n                                \n                                \n                                    \n                                        courseNum:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the course\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructors\n                                    \n                                \n                                \n                                    \n                                        instructors:     _User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Instructors of the course, if any\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                    \n                                \n                                \n                                    \n                                        students:     Student[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Student[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of students in the course, if any\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Student } from './student.interface';\nimport { _User } from './user.interface';\n\n/**\n * Information about a course\n */\nexport interface Course {\n  /**\n   * Course number\n   */\n  courseNum: string;\n  /**\n   * Description of the course\n   */\n  description: string;\n  /**\n   * List of students in the course, if any\n   */\n  students?: Student[];\n  /**\n   * Instructors of the course, if any\n   */\n  instructors?: _User[]\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseCreateComponent.html":{"url":"components/CourseCreateComponent.html","title":"component - CourseCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-create/course-create.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-create\n            \n\n            \n                styleUrls\n                course-create.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-create.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseDetails\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                ngOnDestory\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _router: Router, _route: ActivatedRoute, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-create/course-create.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestory\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseDetails:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { User } from '../../../interfaces/user.interface';\n\n@Component({\n  selector: 'course-create',\n  templateUrl: './course-create.template.html',\n  styleUrls: ['./course-create.style.css']\n})\n\nexport class CourseCreateComponent {\n  private errorMessage: string = '';\n  private subscription: Subscription;\n  private courseDetails: any = {};\n  private admin: User;\n\n  constructor(\n    private _courseService: CourseService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n     private _authService: AuthenticationService\n  ){}\n\n  ngOnInit(){\n    this.admin = this._authService.getUser();\n  }\n\n  createCourse(){\n    //let newCourse = this.courseDetails.courseNum;\n    if(this.courseDetails.courseNum===''){\n      this.errorMessage = 'Course number is required'\n    } else {\n      this.subscription = this._courseService\n      .createCourse(this.admin.id, this.courseDetails)\n    .subscribe( (result)=>{\n      this._router.navigate(['../', result.courseNum], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    });\n    }\n  }\n\n  ngOnDestory(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Create Course\n  \n  \n    Course Number\n  \n  \n\n  \n    Course Description\n  \n  \n\n  \n    Submit\n  \n  \n    {{errorMessage}}\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create Course        Course Number          Course Description          Submit        {{errorMessage}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseEditComponent.html":{"url":"components/CourseEditComponent.html","title":"component - CourseEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-edit/course-edit.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-edit\n            \n\n            \n                styleUrls\n                course-edit.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-edit.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                possibleInstr\n                            \n                            \n                                selectedAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _callDeleteCourse\n                            \n                            \n                                _callDeleteCourseStudents\n                            \n                            \n                                addInstructor\n                            \n                            \n                                deleteCourse\n                            \n                            \n                                deleteCourseStudents\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-edit/course-edit.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Helper method which uses service to tell server to delete the course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:189\n                            \n                        \n\n\n                \n                    \n                            Helper method with tells service to delete all of the\nstudents in this course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addInstructor\n                            \n                            \n                        \n                    \n                \n                \n                    \naddInstructor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            When add instructor button is clicked, send the selected\ninstructor (by userId) to the backend to be added as an instructor\nIf successful, update list of possible instructors\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            When clicking delete course button, open a dialog\nto confirm deletion\nIf confirmed, call helper method\nIf cancel, do nothing\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:172\n                            \n                        \n\n\n                \n                    \n                            When delete students button is click,\nopen a dialog to confirm deletion\nIf confirm, call helper method\nIf cancel, do nothing\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:200\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            On init\n\nget the logged in user\nUse the url param to get course number\nGet course details (using coureNum)\nGet possible instructors (using courseNum)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            When the cancel button is pressed, navigate back to course view page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            When submit button is clicked, submit the updates to be\nsaved in the backend\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:45\n                            \n                        \n\n                \n                    \n                        the logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:33\n                            \n                        \n\n                \n                    \n                        Course being edited\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            possibleInstr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        possibleInstr:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:37\n                            \n                        \n\n                \n                    \n                        List of possible instructors who could be added\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAdd:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:41\n                            \n                        \n\n                \n                    \n                        Variable used to remember instr selected when adding\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { User } from '../../../interfaces/user.interface';\nimport { Student, AdminStudent, sortStudents } from '../../../interfaces/student.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n@Component({\n  selector: 'course-edit',\n  templateUrl: './course-edit.template.html',\n  styleUrls: ['./course-edit.style.css']\n})\n\n/**\n * Component for editting course details such as\n * adding/removing instructors, updating course description\n */\nexport class CourseEditComponent{\n\n  /**\n   * Course being edited\n   */\n  courseInfo: Course;\n  /**\n   * List of possible instructors who could be added\n   */\n  private possibleInstr: AdminStudent[];\n  /**\n   * Variable used to remember instr selected when adding\n   */\n  selectedAdd: number;\n  /**\n   * the logged in user\n   */\n  private _admin: User;\n  private paramObserver: any;\n  private isDestroyed$: Subject;\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n        private _route: ActivatedRoute,\n               private _courseService: CourseService,\n              private _authService: AuthenticationService,\n              private _modalService: NgbModal){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * On init\n   * 1. get the logged in user\n   * 2. Use the url param to get course number\n   * 3. Get course details (using coureNum)\n   * 3. Get possible instructors (using courseNum)\n   */\n  ngOnInit(){\n    this._admin = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n\n            this._courseService.getCourse(this._admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n                this.courseInfo = info;\n                this._courseService.getPossibleInstructors(this._admin.id, course)\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((instrs)=>{\n                    this.possibleInstr = instrs.sort(sortStudents);\n                }, (err2)=>{\n                  this.errorMessage = readErrorMessage(err2);\n                  this.possibleInstr = [];\n                });\n              },(error) => {\n                this.errorMessage = readErrorMessage(error);\n              });\n        });\n  }\n\n  /**\n   * When the cancel button is pressed, navigate back to course view page\n   */\n  onCancel(){\n    this._router.navigate(['../'], {relativeTo: this._route});\n  }\n\n  /**\n   * When submit button is clicked, submit the updates to be\n   * saved in the backend\n   */\n  update(){\n    this._courseService\n      .editCourse(this._admin.id, this.courseInfo.courseNum, this.courseInfo)\n    .takeUntil(this.isDestroyed$)\n    .subscribe( (result)=>{\n      // success\n      this._router.navigate(['../'], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * When add instructor button is clicked, send the selected\n   * instructor (by userId) to the backend to be added as an instructor\n   * If successful, update list of possible instructors\n   */\n  addInstructor(){\n    if(this.selectedAdd){\n    this._courseService\n      .addInstructor(this._admin.id, this.courseInfo.courseNum, this.selectedAdd)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.courseInfo = updated;\n      this.possibleInstr = this.possibleInstr.filter((elm)=>{\n        return elm.userId != this.selectedAdd\n      });\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n    }\n  }\n  // TODO: remove instructor\n\n  /**\n   * When clicking delete course button, open a dialog\n   * to confirm deletion\n   * If confirmed, call helper method\n   * If cancel, do nothing\n   */\n  deleteCourse(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm', windowClass: 'delete-modal'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourse()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method which uses service to tell server to delete the course\n   */\n  _callDeleteCourse(){\n    this._courseService.deleteCourse(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * When delete students button is click,\n   * open a dialog to confirm deletion\n   * If confirm, call helper method\n   * If cancel, do nothing\n   */\n  deleteCourseStudents(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete all students in course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourseStudents()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method with tells service to delete all of the\n   * students in this course\n   */\n  _callDeleteCourseStudents(){\n    this._courseService.deleteStudents(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses/', this.courseInfo.courseNum]);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    {{ courseInfo.courseNum }}\n\n    \n      \n        Instructors\n      \n      \n        {{ instr | personName }}\n      \n    \n\n    \n      \n        Add Instructor\n      \n      \n        \n        Instructor to add\n        {{instr | personName:true }}\n      \n        \n          Add\n        \n      \n    \n    \n      Description\n    \n    \n    \n      \n        Submit\n        Cancel\n      \n    \n    \n      Delete course\n      Delete students in course\n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}        {{ courseInfo.courseNum }}                  Instructors                    {{ instr | personName }}                            Add Instructor                            Instructor to add        {{instr | personName:true }}                        Add                            Description                          Submit        Cancel                    Delete course      Delete students in course        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseIndivComponent.html":{"url":"components/CourseIndivComponent.html","title":"component - CourseIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-indiv/course-indiv.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-indiv\n            \n\n            \n                styleUrls\n                course-indiv.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:86\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from subscriptions\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Initialize all content on the page using several services\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:34\n                            \n                        \n\n                \n                    \n                        Course info: courseNum, description, instructors\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:45\n                            \n                        \n\n                \n                    \n                        Potential error message that could arise\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:38\n                            \n                        \n\n                \n                    \n                        list of available scenarios (used for linking)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:30\n                            \n                        \n\n                \n                    \n                        List of students enrolled in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { Course, Student, sortStudents, Scenario, User } from '../../../interfaces';\n\n@Component({\n  selector: 'course-indiv',\n  templateUrl: './course-indiv.template.html',\n  styleUrls: ['./course-indiv.style.css']\n})\n\n\n/**\n * Component to view an individual course\n * Includes information such as course number, description, instructors, and students\n */\nexport class CourseIndivComponent{\n\n  /**\n   * List of students enrolled in the course\n   */\n  private students: Student[] = [];\n  /**\n   * Course info: courseNum, description, instructors\n   */\n  courseInfo: Course;\n  /**\n   * list of available scenarios (used for linking)\n   */\n  private scenarios: Scenario[];\n  private isDestroyed$: Subject;\n  private paramObserver: any;\n\n  /**\n   * Potential error message that could arise\n   */\n  private errorMessage: string = '';\n\n  constructor(\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _courseService: CourseService,\n    private _authService: AuthenticationService,\n    private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize all content on the page using several services\n   */\n  ngOnInit(){\n    let admin: User = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n            this._courseService.getCourse(admin.id, course)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n              this.courseInfo = info;\n              this._courseService.getStudents(admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((students)=>{\n                this.students = students.sort(sortStudents);\n                this._scenarioService.listScenarios()\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((scens)=>{\n                    this.scenarios = scens;\n                });\n              });\n            },(error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Unsubscribe from subscriptions\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          {{ courseInfo.courseNum }}\n        \n      \n      Edit\n    \n\n    \n      \n          Description\n        \n        {{ courseInfo.description }}\n     \n    \n      \n          Instructors\n        \n        {{ courseInfo.instructors | peopleListNames }}\n     \n  \n  \n  \n      View Scenario Status \n    \n      \n        By Student\n        \n          {{ student | personName:true }}\n        \n        \n      \n      \n      \n        By Scenario\n        \n          {{ scen.label }}\n        \n      \n      \n    \n    \n     \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                {{ courseInfo.courseNum }}                    Edit                        Description                {{ courseInfo.description }}                         Instructors                {{ courseInfo.instructors | peopleListNames }}                 View Scenario Status                   By Student                  {{ student | personName:true }}                                          By Scenario                  {{ scen.label }}                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseListComponent.html":{"url":"components/CourseListComponent.html","title":"component - CourseListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-list/course-list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists available courses based on logged-in user role\nIf admin, lists all available courses\nIf instr, list courses which instructor of\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-list\n            \n\n\n\n\n            \n                templateUrl\n                ./course-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-list/course-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Initialize component by getting list of courses\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:22\n                            \n                        \n\n                \n                    \n                        List of courses\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\n\nimport { Course, User } from '../../../interfaces';\n\n/**\n * Component which lists available courses based on logged-in user role\n * If admin, lists all available courses\n * If instr, list courses which instructor of\n */\n@Component({\n    selector: 'course-list',\n    templateUrl: './course-list.template.html'\n})\nexport class CourseListComponent implements OnInit, OnDestroy{\n  /**\n   * List of courses\n   */\n    private courses: Course[];\n  private subscription: Subscription;\n\n    constructor(\n      private _courseService: CourseService,\n      private _authService: AuthenticationService\n    ) {}\n\n    /**\n     * Initialize component by getting list of courses\n     */\n    ngOnInit() {\n      let admin: User = this._authService.getUser();\n      this.subscription = this._courseService.listCourses(admin.id)\n        .subscribe((courses) => {\n        this.courses = courses\n      });\n    }\n\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \nCourses\n\n  Create new course\n  \n      {{course.courseNum}}\n   \n \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Courses  Create new course        {{course.courseNum}}    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CourseModule.html":{"url":"modules/CourseModule.html","title":"module - CourseModule","body":"\n                   \n\n\n\n\n  Modules\n  CourseModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_imports\n\n\n\ncluster_CourseModule_providers\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/course/course.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseCreateComponent\n                            \n                            \n                                CourseEditComponent\n                            \n                            \n                                CourseIndivComponent\n                            \n                            \n                                CourseListComponent\n                            \n                            \n                                CourseScenarioComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CourseResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CourseCreateComponent } from './course-create/course-create.component';\nimport { CourseIndivComponent } from './course-indiv/course-indiv.component';\nimport { CourseEditComponent } from './course-edit/course-edit.component';\nimport { CourseListComponent } from './course-list/course-list.component';\nimport { CourseScenarioComponent } from './course-scenario/course-scenario.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { CourseRoutes } from './course.routes';\nimport { CourseResolver } from './course.resolver';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(CourseRoutes)\n  ],\n  declarations: [\n    CourseCreateComponent,\n    CourseIndivComponent,\n    CourseEditComponent,\n    CourseListComponent,\n    CourseScenarioComponent\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    CourseResolver\n  ]\n})\nexport class CourseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseResolver.html":{"url":"injectables/CourseResolver.html","title":"injectable - CourseResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/course/course.resolver.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course.resolver.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course.resolver.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { CourseService } from './course.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { Course } from '../../interfaces/course.interface';\n\n@Injectable()\nexport class CourseResolver implements Resolve {\n\n  constructor(private _courseService: CourseService,\n              private _authService: AuthenticationService\n              ) { }\n\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n    const courseNum = route.params['courseNum'];\n\n    if (courseNum) {\n      return this._courseService.getCourse(admin.id, courseNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseScenarioComponent.html":{"url":"components/CourseScenarioComponent.html","title":"component - CourseScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-scenario/course-scenario.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-scen\n            \n\n            \n                styleUrls\n                course-scenario.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-scenario.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseNum\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Protected\n                                scenario\n                            \n                            \n                                    Protected\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatAccess\n                            \n                            \n                                goToFridge\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _courseService: CourseService, _studentService: StudentService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatAccess(isGranted: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Simple formatting function which returns formatted string\ndepending on if student has access granted or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isGranted\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nhas access been granted\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \nformatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToFridge(studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            On \"View Fridge\" button, navigates to that student's fridge\nfor this scenario\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe student's userID\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(studentIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            On \"Grant access\" button click, calls service to grant\nthe student access to the scenario\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npositional index of student in the list of students\nThis is NOT the student's userId\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:137\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Initalize the component\n\nGet the logged in user\nBased on the URL, get the course number and scenario code\nGet the scenario information\nGet the scenario status of students in the course\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:46\n                            \n                        \n\n                \n                    \n                        The logged in admin user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseNum:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:40\n                            \n                        \n\n                \n                    \n                        Information about the scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:35\n                            \n                        \n\n                \n                    \n                        List of students in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../../student/student.service';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { Student } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\nimport { User } from '../../../interfaces/user.interface';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n@Component({\n  selector: 'course-scen',\n  templateUrl: './course-scenario.template.html',\n  styleUrls: ['./course-scenario.style.css']\n})\n\n/**\n * This component displays the scenario status of all students\n * within the course and allows for navigation to student fridges\n * and grant access for a student\n */\nexport class CourseScenarioComponent{\n\n  /**\n   * List of students in the course\n   */\n  protected students: Student[] = [];\n  private courseNum: string;\n  /**\n   * Information about the scenario\n   */\n  protected scenario: Scenario;\n  private isDestroyed$: Subject;\n  private paramObserver: any;\n  /**\n  * The logged in admin user\n  */\n  private admin: User;\n\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _authService: AuthenticationService,\n    private _courseService: CourseService,\n    private _studentService: StudentService,\n    private _scenarioService: ScenarioService\n              ){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initalize the component\n   * 1. Get the logged in user\n   * 2. Based on the URL, get the course number and scenario code\n   * 3. Get the scenario information\n   * 4. Get the scenario status of students in the course\n   */\n  ngOnInit() {\n    this.admin = this._authService.getUser();\n    this.paramObserver = this._route.params\n      .subscribe(params => {\n          let course = params['courseNum'];\n          let scenCode = params['scenId'];\n      this.courseNum = course.toUpperCase();\n      this._scenarioService.getScenario(scenCode)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n          // success\n          this.scenario = res;\n        this._courseService.getScenarioStatus(this.admin.id, course, scenCode)\n          .takeUntil(this.isDestroyed$)\n          .subscribe((stats)=>{\n\n            this.students = stats;\n        }, (err2)=>{\n          this.errorMessage = readErrorMessage(err2);\n        });\n\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n        });\n  }\n\n  /**\n   * Simple formatting function which returns formatted string\n   * depending on if student has access granted or not\n   *\n   * @param {boolean} isGranted - has access been granted\n   *\n   * @returns {string} - formatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n   */\n  formatAccess(isGranted: boolean): string{\n    return (isGranted ? 'Access granted' : 'Access not granted');\n  }\n\n  /**\n   * On \"Grant access\" button click, calls service to grant\n   * the student access to the scenario\n   *\n   * @param {number} studentIndex - positional index of student in the list of students\n   * This is NOT the student's userId\n   */\n  grantAccess(studentIndex: number){\n    let scenId = this.scenario.scenCode;\n    let studentId = this.students[studentIndex].userId;\n    this._studentService.grantScenAccess(this.admin.id, studentId, scenId, true)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        if(res !== undefined && res !== null){\n          this.students[studentIndex].status = res.accessGranted[scenId];\n        }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * On \"View Fridge\" button, navigates to that student's fridge\n   * for this scenario\n   *\n   * @param {number} studentId - the student's userID\n   */\n  goToFridge(studentId: number){\n    this._router.navigate(['/admin/students/', studentId, this.scenario.scenCode]);\n  }\n\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      {{ courseNum }} \n    \n\n    \n      {{scenario.scenCode}}\n      {{ scenario.label }}\n    \n\n    \n      \n        \n        {{student | personName}}: {{ formatAccess(student.status) }}\n        \n        \n          Grant access\n          View fridge\n        \n         \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}              {{ courseNum }}               {{scenario.scenCode}}      {{ scenario.label }}                              {{student | personName}}: {{ formatAccess(student.status) }}                          Grant access          View fridge                             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExperimentPhage.html":{"url":"interfaces/ExperimentPhage.html","title":"interface - ExperimentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExperimentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage interface used for plating and plexer\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        numPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numPhage\n                                    \n                                \n                                \n                                    \n                                        numPhage:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of this phage in the tube/plate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExperimentService.html":{"url":"injectables/ExperimentService.html","title":"injectable - ExperimentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ExperimentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/location/experiment.service.ts\n        \n\n            \n                Description\n            \n            \n                This service performs the plate and plexer experiments used\nwhen crossing or mutating phage strains, i.e. performing a\nvirtual experiment\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPlate\n                            \n                            \n                                performPlexer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/experiment.service.ts:16\n                            \n                        \n\n                \n                    \n                            Construct the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Anguar mechanism to make calls to backend server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPlate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatePlate(plate: PlateInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            With valid input for the plate, calls the backend to generate\na new plate that is displayed in the lab room\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        plate\n                                                        \n                                                                    PlateInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninformation needed to generate the new plate\nIncludes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nnewly generate plate with info about parents and (is plate full or list of small and large plaques)\nif error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            performPlexer\n                            \n                            \n                        \n                    \n                \n                \n                    \nperformPlexer(data: PlexerInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            With valid input, call the backend to generate valid results for the plexer\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    PlexerInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                information needed to generate the\nplexer results\n\nInputs a list of phage Ids for the rows and columns, E. coli\nlawn type, location, specials, individual plexer plate capacity\nand scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    the results of the plexer as a 2D array\nwere each cell in the array represents a plate and has\nis plate full or counts of small/large plaques\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/cricket'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:16\n                            \n                        \n\n                \n                    \n                        Leading backend URL path\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PlateInput, PlateResults, PlexerInput } from '../../interfaces';\n\n/**\n * This service performs the plate and plexer experiments used\n * when crossing or mutating phage strains, i.e. performing a\n * virtual experiment\n */\n@Injectable()\nexport class ExperimentService {\n  /**\n   * Leading backend URL path\n   */\n  private _baseURL = 'api/cricket';\n\n  /**\n   * Construct the service\n   *\n   * @param {HttpClient} _http Anguar mechanism to make calls to backend server\n   */\n  constructor(private _http: HttpClient) { }\n\n  /**\n   * With valid input for the plate, calls the backend to generate\n   * a new plate that is displayed in the lab room\n   *\n   * @param {PlateInput} plate - information needed to generate the new plate\n   * - Includes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n   *\n   * @returns {Observable} - newly generate plate with info about parents and (is plate full or list of small and large plaques)\n   * - if error\n   */\n  createPlate(plate: PlateInput): Observable{\n    var res = this._http\n    .post(`${this._baseURL}/plate`, plate)\n    return res;\n  }\n\n  /**\n   * With valid input, call the backend to generate valid results for the plexer\n   *\n   * @param {PlexerInput} data information needed to generate the\n   * plexer results\n   * - Inputs a list of phage Ids for the rows and columns, E. coli\n   * lawn type, location, specials, individual plexer plate capacity\n   * and scenario data\n   *\n   * @returns {Observable} the results of the plexer as a 2D array\n   * were each cell in the array represents a plate and has\n   * is plate full or counts of small/large plaques\n   */\n  performPlexer(data: PlexerInput): Observable{\n    // data will have rowPhage, colPhage, lawn type, location, specials, capacity, scenarioData\n    var res = this._http\n    .post(`${this._baseURL}/plexer`, data);\n    return res;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/forget-password/forget-password.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                forget-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./forget-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                email\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                sendForget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/forget-password/forget-password.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendForget\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendForget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n@Component({\n    selector: 'forget-pswd',\n    templateUrl: './forget-password.template.html'\n})\nexport class ForgetPasswordComponent {\n    private errorMessage: string = '';\n  private successMessage: string = '';\n    private email: string;\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService) { }\n\n    sendForget() {\n      this.successMessage = '';\n      this.errorMessage = '';\n      let body = {email: this.email};\n        this.subscription = this._authenticationService\n          .forgetPassword(body)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Forget Password?\n    \n    Email\n    \n      \n    Submit\n  {{ successMessage }}\n  {{ errorMessage }}\n      \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forget Password?        Email              Submit  {{ successMessage }}  {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fridge.html":{"url":"interfaces/Fridge.html","title":"interface - Fridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Fridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                A user/scenario fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessGranted\n                                \n                                \n                                        guesses\n                                \n                                \n                                        scenarioDetails\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        strains\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Has access already been granted for this user/scenario;\nFridges for each scenario are the same when access not granted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Deletion guesses\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioDetails\n                                    \n                                \n                                \n                                    \n                                        scenarioDetails:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information for this specific user/scenario needed when\nsubmitting the plexer or generating a new plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario id this fridge belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     FridgePhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FridgePhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id for owner of this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FridgePhage.html":{"url":"interfaces/FridgePhage.html","title":"interface - FridgePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FridgePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage stored in the fridge\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                            Optional\n                                        numParents\n                                \n                                \n                                            Optional\n                                        parents\n                                \n                                \n                                        phageType\n                                \n                                \n                                            Optional\n                                        submitted\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description for this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numParents\n                                    \n                                \n                                \n                                    \n                                        numParents:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If user phage, number of parents in the cross to create this phage;\nused to check if one of the parents no longer exists\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If a user phage, the phage used in the cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phageType\n                                    \n                                \n                                \n                                    \n                                        phageType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage type; one of \"reference\", \"unknown\", and \"user\" depending\non who created it and if mutation state is known\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                    \n                                \n                                \n                                    \n                                        submitted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For user phage, should this phage be graded\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenotypePhage.html":{"url":"interfaces/GenotypePhage.html","title":"interface - GenotypePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GenotypePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage on the lab room plate that will be saved to\nthe fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                        parents\n                                \n                                \n                                        shifts\n                                \n                                \n                                            Optional\n                                        src\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop locations of deletion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage used in cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shifts\n                                    \n                                \n                                \n                                    \n                                        shifts:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                    \n                                \n                                \n                                    \n                                        src:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Where the phage is being dragged from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/help/help.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                help\n            \n\n            \n                styleUrls\n                help.style.css\n            \n\n\n\n            \n                templateUrl\n                ./help.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/help/help.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'help',\n  templateUrl: './help.template.html',\n  styleUrls: ['./help.style.css']\n})\n\nexport class HelpComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n\n  Help\nInformation coming soon\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  HelpInformation coming soon'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelpModule.html":{"url":"modules/HelpModule.html","title":"module - HelpModule","body":"\n                   \n\n\n\n\n  Modules\n  HelpModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_HelpModule_imports\n\n\n\n\nHelpComponent\n\nHelpComponent\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/help/help.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HelpComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HelpRoutes } from './help.routes';\nimport { HelpComponent } from './help.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(HelpRoutes)\n  ],\n  declarations: [\n    HelpComponent\n  ]\n})\nexport class HelpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        The home landing page when going to the website\nMainly a view component, but some aspects are dependent\non if a user is logged in and the user role\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                styleUrls\n                home.style.css\n            \n\n\n\n            \n                templateUrl\n                ./home.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/home/home.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/home/home.component.ts:22\n                            \n                        \n\n                \n                    \n                        The logged in user, if any\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\n\nimport { User } from '../interfaces/user.interface';\n\n/**\n * The home landing page when going to the website\n * Mainly a view component, but some aspects are dependent\n * on if a user is logged in and the user role\n */\n@Component({\n  selector: 'home',\n  templateUrl: './home.template.html',\n  styleUrls: ['./home.style.css']\n})\n\nexport class HomeComponent{\n  /**\n   * The logged in user, if any\n   */\n  private user: User;\n\n  constructor(private _authenticationService: AuthenticationService){}\n\n  ngOnInit(){\n    this.user = this._authenticationService.getUser();\n  }\n\n  ngOnDestroy(){\n    this.user = undefined;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Welcome to Crick et al.\n\n    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.\n    \n    \n      \n        Instructor Page\n        Administrator Page\n      \n      \n        Sign out\n      \n    \n    \n    \n      \n        Sign in\n        \n      \n        Sign up\n      \n    \n    \n\n  \n    \n  \n\n\n  Go to Scenarios\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome to Crick et al.    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.                      Instructor Page        Administrator Page                    Sign out                                Sign in                      Sign up                        Go to Scenarios'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HomeRoutes } from './home.routes';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(HomeRoutes)\n  ],\n  declarations: [\n    HomeComponent\n  ]\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingRoomComponent.html":{"url":"components/LandingRoomComponent.html","title":"component - LandingRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/landing-room/landing-room.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows the scenario details including\n\npurpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\nrelevance - why the scenario is relevant for learning and future scenarios\nstarting point - description of the phage students start the scenario with\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                landing-room\n            \n\n\n\n\n            \n                templateUrl\n                ./landing-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scenario\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                            Component contructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular router\n\n                                                        \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The current URL route to get scenario id\n\n                                                        \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get scenario information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            When destroying the component, unsubscribe if necessary to\nprevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\nGet the details for scenarios\nIf error, go back to home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:23\n                            \n                        \n\n                \n                    \n                        The current scenario we are viewing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                        Subscription to the getScenario method of scenario service\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ScenarioService } from '../../scenario.service';\nimport { Scenario } from '../../../interfaces';\n\n/**\n * This component shows the scenario details including\n * 1. purpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\n * 2. relevance - why the scenario is relevant for learning and future scenarios\n * 3. starting point - description of the phage students start the scenario with\n */\n@Component({\n  selector: 'landing-room',\n  templateUrl: './landing-room.template.html'\n})\n\nexport class LandingRoomComponent implements OnInit, OnDestroy {\n\n  /**\n   * The current scenario we are viewing\n   */\n  scenario: Scenario;\n  /**\n   * Subscription to the getScenario method of scenario service\n   */\n  private subscription: any;\n\n  /**\n   * Component contructor\n   * @param {Router} _router Angular router\n   * @param {ActivatedRoute} _route The current URL route to get scenario id\n   * @param {ScenarioService} _scenarioService Service to get scenario information\n   */\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _scenarioService: ScenarioService){\n\n  }\n\n  /**\n   * Initialize the component\n   * 1. Get scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\n   * 2. Get the details for scenarios\n   * If error, go back to home page\n   */\n  ngOnInit(){\n    let scenId = this._route.parent.snapshot.paramMap.get('scenId');\n    this.subscription = this._scenarioService\n      .getScenario(scenId)\n      .subscribe(\n      scenario => {\n        this.scenario = scenario;\n      },\n      error => this._router.navigate(['/'])\n    );\n  }\n\n  /**\n   * When destroying the component, unsubscribe if necessary to\n   * prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{scenario.label}} \n  Purpose\n  {{scenario.purpose}}\n\n  Relevance\n  {{scenario.relevance}}\n\n  Starting Point\n  {{scenario.startingPoint}}\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{scenario.label}}   Purpose  {{scenario.purpose}}  Relevance  {{scenario.relevance}}  Starting Point  {{scenario.startingPoint}}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists all available scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario-list\n            \n\n\n\n\n            \n                templateUrl\n                ./list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                scenarios\n                            \n                            \n                                    Private\n                                sSubscription\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:24\n                            \n                        \n\n                \n                    \n                        list of available scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object of logged in user, if available\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { ScenarioService } from '../scenario.service';\n\nimport { User } from '../../interfaces/user.interface';\nimport { Scenario } from '../../interfaces/scenario.interface';\n\n/**\n * Component which lists all available scenarios\n */\n@Component({\n    selector: 'scenario-list',\n    templateUrl: './list.template.html'\n})\nexport class ListComponent implements OnInit, OnDestroy{\n  /**\n   * User object of logged in user, if available\n   */\n    user: User;\n  /**\n  * list of available scenarios\n  */\n    scenarios: Scenario[];\n    errorMessage: string;\n  private sSubscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService, private _scenarioService: ScenarioService) {\n\n    }\n\n    ngOnInit() {\n      this.user = this._authenticationService.getUser();\n      this.sSubscription = this._scenarioService.listScenarios()\n        .subscribe((scenarios) => {\n        this.scenarios = scenarios\n      });\n    }\n\n  ngOnDestroy(){\n    if(this.sSubscription)\n    this.sSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  Available Scenarios\n  \n    \n      {{scenario.label}}\n    \n    \n  \n  \n    \n      Sign in or Sign up to see scenarios.\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Available Scenarios            {{scenario.label}}                      Sign in or Sign up to see scenarios.  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationComponent.html":{"url":"components/LocationComponent.html","title":"component - LocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/location.component.ts\n\n\n    \n        Description\n    \n    \n        This is a view component which hosts the location\ntab selection navigator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                location\n            \n\n            \n                styleUrls\n                location.style.css\n            \n\n\n\n            \n                templateUrl\n                ./location.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * This is a view component which hosts the location\n * tab selection navigator\n */\n@Component({\n  selector: 'location',\n  templateUrl: './location.template.html',\n  styleUrls: ['./location.style.css']\n})\n\nexport class LocationComponent {\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n        \n          \n             \n            Info\n            \n            \n            \n              \n            Lab\n          \n            \n            \n              \n            Plexer\n          \n            \n            \n              \n            Model\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                               Info                                                              Lab                                                            Plexer                                                            Model                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FridgeComponent\n                            \n                            \n                                LabRoomComponent\n                            \n                            \n                                LandingRoomComponent\n                            \n                            \n                                LocationComponent\n                            \n                            \n                                ModelRoomComponent\n                            \n                            \n                                PhageDialogComponent\n                            \n                            \n                                PlexerRoomComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                PhageDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ExperimentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { LocationRoutes } from './location.routes';\n\nimport { ExperimentService } from './experiment.service';\n\nimport { FridgeComponent } from '../fridge/fridge.component';\nimport { PhageDialogComponent } from '../fridge/phage-dialog.component';\n\nimport { LocationComponent } from './location.component';\nimport { LandingRoomComponent } from './landing-room/landing-room.component';\nimport { LabRoomComponent } from './lab-room/lab-room.component';\nimport { PlexerRoomComponent } from './plexer-room/plexer-room.component';\nimport { ModelRoomComponent } from './model-room/model-room.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(LocationRoutes)\n  ],\n  declarations: [\n    FridgeComponent,\n    PhageDialogComponent,\n    LocationComponent,\n    LabRoomComponent,\n    PlexerRoomComponent,\n    ModelRoomComponent,\n    LandingRoomComponent\n  ],\n   entryComponents: [\n    PhageDialogComponent\n  ],\n  providers: [\n    ExperimentService\n  ]\n})\nexport class LocationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggedInGuard.html":{"url":"injectables/LoggedInGuard.html","title":"injectable - LoggedInGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoggedInGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/logged-in.guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/logged-in.guard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class LoggedInGuard implements CanActivate, CanActivateChild {\n\n  constructor(\n    private _authenticationService: AuthenticationService,\n    private _router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n     state: RouterStateSnapshot\n  ): boolean {\n    let url: string = state.url;\n\n    let isLoggedIn: boolean = this._authenticationService.isLoggedIn();\n    if(isLoggedIn)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['authentication/signin']);\n      return false;\n    }\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelRoomComponent.html":{"url":"components/ModelRoomComponent.html","title":"component - ModelRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/model-room/model-room.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                model-room\n            \n\n            \n                styleUrls\n                model-room.style.css\n            \n\n\n\n            \n                templateUrl\n                ./model-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                geneAr\n                            \n                            \n                                    Private\n                                guesses\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                keys\n                            \n                            \n                                    Private\n                                scenarioId\n                            \n                            \n                                    Private\n                                stepSize\n                            \n                            \n                                    Private\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockClass\n                            \n                            \n                                ngOnDestory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveData\n                            \n                            \n                                toggleBlock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/model-room/model-room.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBlockClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBlockClass(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Get the CSS classes for a strain guess block\nBlock indicates wheater user thinks that section of the chromosome\nis deleted in the strain\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'guess-block btn p-0': boolean; 'btn-outline-secondary': boolean; 'bg-dark': any; }\n\n                            \n                                \n                                    \napplicable CSS classes in the form\n{'class': boolean, ...}\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestory\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet user id\nGet the scenario id from parent URL\nGet user guesses from scenario service (set by fridge)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveData\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Saves the guesses to the backend/database using the service\ncalled on (click) of Save Button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlock\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleBlock(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Toggle block guess from true to false OR false to true\ncalled on (click) of the block\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _width:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:47\n                            \n                        \n\n                \n                    \n                        CSS width of each block dependent on length of gene and step size\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geneAr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geneAr:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            guesses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guesses:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:22\n                            \n                        \n\n                \n                    \n                        Current user guesses as object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keys:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:26\n                            \n                        \n\n                \n                    \n                        Array of strain numbers included\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarioId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarioId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:38\n                            \n                        \n\n                \n                    \n                        Scenario code\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stepSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:34\n                            \n                        \n\n                \n                    \n                        Size of each block\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:42\n                            \n                        \n\n                \n                    \n                        User id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../scenario.service';\nimport { ScenarioGlobals } from '../../scenario.globals';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n@Component({\n    selector: 'model-room',\n    templateUrl: './model-room.template.html',\n  styleUrls: ['./model-room.style.css']\n})\n\nexport class ModelRoomComponent {\n\n  /**\n   * Current user guesses as object\n   */\n  private guesses: any;\n  /**\n   * Array of strain numbers included\n   */\n  private keys: number[];\n  /**\n   *\n   */\n  private geneAr: number[];\n  /**\n   * Size of each block\n   */\n  private stepSize: number;\n  /**\n   * Scenario code\n   */\n  private scenarioId: string;\n  /**\n   * User id\n   */\n  private userId: number;\n  private errorMessage: string = '';\n  /**\n   * CSS width of each block dependent on length of gene and step size\n   */\n  private _width: string;\n  private isDestroyed$: Subject;\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _authenticationService: AuthenticationService,\n              private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n\n    this.stepSize = ScenarioGlobals.deletionGuessLength;\n    this.geneAr = [];\n    let nBlocks: number = Math.ceil(ScenarioGlobals.geneLength/this.stepSize);\n    for(let i = 0; i  {\n      this.guesses = dels;\n\n      this.keys = Object.keys(dels).map((k)=> {return Number.parseInt(k);});\n      if(this.keys.length === 0){\n        this.errorMessage = 'No phage available for modelling'\n      } else {\n        this.errorMessage = '';\n      }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * Destroy the component by unsubscribing\n   */\n  ngOnDestory(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  /**\n   * Get the CSS classes for a strain guess block\n   * Block indicates wheater user thinks that section of the chromosome\n   * is deleted in the strain\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   *\n   * @returns {Object} - applicable CSS classes in the form\n   * {'class': boolean, ...}\n   */\n  getBlockClass(strain: number, pos: number){\n    let posGuess = this.guesses[strain][pos];\n    return {\n      'guess-block btn p-0': true,\n      'btn-outline-secondary': !posGuess, // inactive\n      'bg-dark': posGuess // active\n    }\n  }\n\n  /**\n   * Toggle block guess from true to false OR false to true\n   *\n   * called on (click) of the block\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   */\n  toggleBlock(strain: number, pos: number){\n    let c = this.guesses[strain][pos];\n    this.guesses[strain][pos] = !c;\n  }\n\n  /**\n   * Saves the guesses to the backend/database using the service\n   *\n   * called on (click) of Save Button\n   */\n  saveData(){\n    // clear error message beforehand\n    this.errorMessage = '';\n    // use service and save data (as a string)\n    let out = JSON.stringify(this.guesses)\n    this._scenarioService\n      .saveDeletions(this.guesses, this.userId, this.scenarioId)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((dat)=>{\n      this.guesses = JSON.parse(dat);\n      this._scenarioService.setScenario(null, dat);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{errorMessage}}\n   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">\n      Save\n  \n \n 0\" class=\"row w-100\" id=\"modeller\">\n  \n    \n      {{phage+1}}\n    \n  \n  \n    \n      \n         \n      \n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{errorMessage}}   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">      Save    0\" class=\"row w-100\" id=\"modeller\">            {{phage+1}}                                         '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/nav/nav.component.ts\n\n\n    \n        Description\n    \n    \n        Navigation bar at the top of the site\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-nav\n            \n\n            \n                styleUrls\n                nav.style.css\n            \n\n\n\n            \n                templateUrl\n                ./nav.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing, if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Initiate the component by getting the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription stream for the authetnication service\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object used to determine if profile link should be\nincluded in the nav bar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Navigation bar at the top of the site\n */\n@Component({\n    selector: 'cricket-nav',\n    templateUrl: './nav.template.html',\n    styleUrls: ['./nav.style.css']\n})\nexport class NavComponent implements OnInit, OnDestroy {\n\n  /**\n   * User object used to determine if profile link should be\n   * included in the nav bar\n   */\n  private user: User;\n  /**\n   * Subscription stream for the authetnication service\n   */\n  private subscription: any;\n\n  constructor(private _authService: AuthenticationService) {\n    }\n\n  /**\n   * Initiate the component by getting the current user\n   */\n  ngOnInit(){\n    this.subscription = this._authService.getUser$\n    .subscribe((res)=>{\n      this.user = res\n    });\n  }\n\n  /**\n   * Destory the component by unsubscribing, if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n    \n  \n-->\n\n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n      \n        Help\n      \n      \n        Profile\n        \n          Sign out\n        \n      \n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Cricket                              Scenarios            -->          Cricket                              Scenarios                    Help                    Profile                  Sign out                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotAuthComponent.html":{"url":"components/NotAuthComponent.html","title":"component - NotAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/not-auth/not-auth.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-auth\n            \n\n\n\n\n            \n                templateUrl\n                ./not-auth.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'not-auth',\n  templateUrl: './not-auth.template.html'\n})\n\nexport class NotAuthComponent{\n\n}\n\n    \n\n    \n        \n  \n    NOT AUTHORIZED\n    Return\n      Home\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NOT AUTHORIZED    Return      Home      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        When URL goes to a page that doesn't exist;\nThis is simple, visual component needed to get the template\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/page-not-found/page-not-found.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * When URL goes to a page that doesn't exist;\n * This is simple, visual component needed to get the template\n */\n@Component({\n  selector: 'page-not-found',\n  templateUrl: './page-not-found.template.html',\n})\n\nexport class PageNotFoundComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n  Page Not Found\n\n  Go Back Home\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Page Not Found  Go Back Home'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PeopleListNamesPipe.html":{"url":"pipes/PeopleListNamesPipe.html","title":"pipe - PeopleListNamesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PeopleListNamesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/people-list-names.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        peopleListNames\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(personList: any[], reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/people-list-names.pipe.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personList\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n * Format a list of user's or students frist and last name as \"firstName lastName\"\n * When reverse is true, format as \"lastName, firstName\"\n * Handles when only first or last name is set\n * Usage:\n *   person | formatName:isReverse\n */\n@Pipe({name: 'peopleListNames'})\nexport class PeopleListNamesPipe implements PipeTransform {\n\n  transform(personList: any[], reverse: boolean): string {\n    let out = '';\n    for(let person of personList){\n      if(out !== ''){\n        out += (reverse ? '; ' : ', ');\n      }\n      let fName: string = person.firstName || '';\n      let lName: string = person.lastName || '';\n    if(reverse){\n      out += lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n      } else {\n    out += fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n      }\n    }// end for\n    return out\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PersonNamePipe.html":{"url":"pipes/PersonNamePipe.html","title":"pipe - PersonNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PersonNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/person-name.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        personName\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(person: any, reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/person-name.pipe.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n//export const PersonName = function(person: any, reverse: boolean): string{\n//   let fName: string = person.firstName || '';\n//    let lName: string = person.lastName || '';\n//  if(reverse){\n//    return lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n//  } else {\n//    return fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n//  }\n//}\n/*\n * Format a user's or studets frist and last name as \"firstName lastName\"\n * When reverse is true, format as \"lastName, firstName\"\n * Handles when only first or last name is set\n * Usage:\n *   person | formatName:isReverse\n*/\n@Pipe({name: 'personName'})\nexport class PersonNamePipe implements PipeTransform {\n\n  transform(person: any, reverse: boolean): string {\n    let fName: string = person.firstName || '';\n    let lName: string = person.lastName || '';\n  if(reverse){\n    return lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n  } else {\n    return fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n  }\n//    return PersonName(person, reverse);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Phage.html":{"url":"interfaces/Phage.html","title":"interface - Phage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Phage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Base phage interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        strainNum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MongoDB object ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strainNum\n                                    \n                                \n                                \n                                    \n                                        strainNum:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Location in fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageDeletionsPipe.html":{"url":"pipes/PhageDeletionsPipe.html","title":"pipe - PhageDeletionsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageDeletionsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-deletions.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's deletions\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageDeletions\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(deletion: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-deletions.pipe.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deletion\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format the textual presentation of a phage strain's deletions\n */\n@Pipe({name: 'phageDeletions'})\nexport class PhageDeletionsPipe implements PipeTransform {\n\n  transform(deletion: number[]): string {\n    let out = '';\n    let mLength = (deletion.length % 2 === 0 ? deletion.length : deletion.length -1);\n\n    for(let i = 0; i  1 ? ', ' : '');\n      out += deletion[i] + ' - ' + deletion[i+1];\n    }\n\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhageDialogComponent.html":{"url":"components/PhageDialogComponent.html","title":"component - PhageDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhageDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/fridge/phage-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Modal dialog box for individual phage strains\nUsed to edit phage comment, view phage parents, or delete phage\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                phage-dialog-content\n            \n\n\n\n\n            \n                templateUrl\n                ./phage-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/fridge/phage-dialog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                            \n                            Type:    FridgePhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\nimport { FridgePhage } from '../../interfaces/phage.interface';\n\n/**\n * Modal dialog box for individual phage strains\n * Used to edit phage comment, view phage parents, or delete phage\n */\n@Component({\n  selector: 'phage-dialog-content',\n  templateUrl: './phage-dialog.template.html'\n})\nexport class PhageDialogComponent {\n  @Input() phage: FridgePhage;\n\n  constructor(public activeModal: NgbActiveModal) {\n  }\n\n}\n\n    \n\n    \n        \n  Strain {{phage.strainNum + 1}}\n  \n        &times;\n      \n\n\n  \n    \n      Type\n      \n        \n      \n    \n    \n    \n      Comment\n      \n        \n      \n    \n    \n    \n      Submitted\n      \n        \n      \n    \n    \n\n     0\" id=\"viewParents\" class=\"row form-group mb-1\">\n      Parents\n      \n        {{phage.parents | phageParents:phage.numParents}}\n      \n    \n    \n  \n\n\n\n  Delete\n  Cancel\n  Save\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Strain {{phage.strainNum + 1}}          ×                  Type                                      Comment                                      Submitted                                 0\" id=\"viewParents\" class=\"row form-group mb-1\">      Parents              {{phage.parents | phageParents:phage.numParents}}                  Delete  Cancel  Save'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhageDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageGuessesPipe.html":{"url":"pipes/PhageGuessesPipe.html","title":"pipe - PhageGuessesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageGuessesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-guesses.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageGuesses\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(guesses: boolean[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-guesses.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        guesses\n                                                        \n                                                                    boolean[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ScenarioGlobals } from '../scenario/scenario.globals';\n\n@Pipe({name: 'phageGuesses'})\nexport class PhageGuessesPipe implements PipeTransform {\n\n  transform(guesses: boolean[]): string {\n    let stepSize = ScenarioGlobals.deletionGuessLength;\n    let out = '';\n    let x=-1;\n    //for(let y=0; y  0 && guesses[y] === false){\n        let z = (stepSize * y);\n        out += (out === '' ? '' : ', ');\n        out += x + ' - ' + z;\n        x = -1;\n      }\n    }\n    // check for the last possible deletion\n    if(x != -1){\n      out += (out === '' ? '' : ', ');\n      out += x + ' - ' + ScenarioGlobals.geneLength;\n    }\n    if(out === ''){\n      return 'None';\n    } else {\n    return out;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageMutationsPipe.html":{"url":"pipes/PhageMutationsPipe.html","title":"pipe - PhageMutationsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageMutationsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-mutations.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageMutations\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(mutations: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-mutations.pipe.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mutations\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'phageMutations'})\nexport class PhageMutationsPipe implements PipeTransform {\n\n  transform(mutations: number[]): string {\n    let out = '';\n    //for(let y=0; y  0 ? '+1' : '-1');\n      let z = Math.abs(x);\n      out += y + ' at ' + z;\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageParentsPipe.html":{"url":"pipes/PhageParentsPipe.html","title":"pipe - PhageParentsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageParentsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-parents.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageParents\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(parents: Phage[], numParents: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-parents.pipe.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parents\n                                                        \n                                                                    Phage[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        numParents\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Phage } from '../interfaces/phage.interface';\n\n@Pipe({name: 'phageParents'})\nexport class PhageParentsPipe implements PipeTransform {\n\n  transform(parents: Phage[], numParents: number): string {\n    let out = '';\n    if(numParents === undefined){\n      numParents = parents.length\n    }\n    let sorted: Phage[] = parents.sort((n1, n2)=>{return n1.strainNum - n2.strainNum});\n    let nums = sorted.map((phage)=>{return (phage.strainNum+1).toString()});\n\n    if(sorted.length === 1 && numParents === 1){\n\n      out = 'Strain ' + nums[0];\n    } else if(sorted.length === 1 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ?';\n    } else if(sorted.length === 2 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ' + nums[1];\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateInput.html":{"url":"interfaces/PlateInput.html","title":"interface - PlateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to create a new plate\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        phage1\n                                \n                                \n                                        phage2\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phage1\n                                    \n                                \n                                \n                                    \n                                        phage1:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phage2\n                                    \n                                \n                                \n                                    \n                                        phage2:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateResults.html":{"url":"interfaces/PlateResults.html","title":"interface - PlateResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Data from server representing the lab room plate\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        full\n                                \n                                \n                                        genotypes\n                                \n                                \n                                        largePlaque\n                                \n                                \n                                        parents\n                                \n                                \n                                        smallPlaque\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        full\n                                    \n                                \n                                \n                                    \n                                        full:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is the plate over capacity?\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genotypes\n                                    \n                                \n                                \n                                    \n                                        genotypes:     _genotype[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _genotype[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of genotypes of the phage of the plate; several individual\nphage from \"smallPlaque\" and \"largePlaque\" can correspond to the\nsame genotype\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        largePlaque\n                                    \n                                \n                                \n                                    \n                                        largePlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    mutatnt phenotype phage on the plate; each number indicates\nthe index of the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage used to create this plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smallPlaque\n                                    \n                                \n                                \n                                    \n                                        smallPlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    WT-phenotype phage on the plate; each number indicates the index\nof the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlexerInput.html":{"url":"interfaces/PlexerInput.html","title":"interface - PlexerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlexerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to submit the plexer\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colPhage\n                                \n                                \n                                        rowPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colPhage\n                                    \n                                \n                                \n                                    \n                                        colPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the columns of the plexer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowPhage\n                                    \n                                \n                                \n                                    \n                                        rowPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the rows of the plexer\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  ProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/profile/profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                UpdatePasswordComponent\n                            \n                            \n                                UserProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProfileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ProfileRoutes } from './profile.routes';\nimport { ProfileService } from './profile.service';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ProfileRoutes)\n  ],\n  declarations: [\n    UserProfileComponent,\n    UpdatePasswordComponent\n  ],\n  providers: [\n    ProfileService\n  ]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Functions which communicate to backend to allow\nusers to update their profile and/or change the password\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editProfile\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \neditProfile(userId: number, details: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Edit details about the user profile including\n\nNme\nEmail address\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of the logged in user\n\n                                                        \n                                                \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                user details to update with\nexisiting information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe updated user information\nor error \"User does not exist\" if non-existant user\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword(userId: number, credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Update the user's password once already signed in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of logged in user\n\n                                                        \n                                                \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npassword information\nincludes: \"password\" (old password) and \"newPassword\"  (password to update to)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about the user just updated\nor error \"User does not exist\" if non-existant user\nor error \"Incorrect password\" if wrong old password\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/users/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                        Leading backend url path\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Functions which communicate to backend to allow\n * users to update their profile and/or change the password\n */\n@Injectable()\nexport class ProfileService {\n\n  /**\n   * Leading backend url path\n   */\n  private _baseUrl: string = '/api/users/';\n\n  constructor(private http: HttpClient){}\n\n  /**\n   * Edit details about the user profile including\n   * 1. Nme\n   * 2. Email address\n   *\n   * @param {number} userId userID of the logged in user\n   * @param {any} details user details to update with\n   * exisiting information\n   *\n   * @returns {Observable} - The updated user information\n   * - or error \"User does not exist\" if non-existant user\n   * - or other server/database error\n   */\n  editProfile(userId: number, details: any): Observable{\n    return this.http.post(this._baseUrl + userId, details);\n  }\n\n  /**\n   * Update the user's password once already signed in\n   *\n   * @param {number} userId userID of logged in user\n   * @param {any} credentials - password information\n   * - includes: \"password\" (old password) and \"newPassword\"  (password to update to)\n   *\n   * @returns {Observable} - information about the user just updated\n   * - or error \"User does not exist\" if non-existant user\n   * - or error \"Incorrect password\" if wrong old password\n   * - or other server/database error\n   */\n  updatePassword(userId: number, credentials: any): Observable{\n    return this.http.post(this._baseUrl + userId + '/update-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                reset-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDisabled\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/reset-password/reset-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n_checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     \"Enter new password\" | \"Confirm new password\" | \"Confirm password does not match\" | \"\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendReset\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendReset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n@Component({\n    selector: 'reset-pswd',\n    templateUrl: './reset-password.template.html'\n})\nexport class ResetPasswordComponent {\n    private errorMessage: string = '';\n  private successMessage: string = '';\n    private credentials: any;\n  private subscription: Subscription;\n  private isDisabled: boolean = false;\n\n    constructor(\n      private _authenticationService: AuthenticationService,\n      private _route: ActivatedRoute\n    ) {\n      this.credentials = {\n        password: '',\n        confirmPassword: '',\n        token: null\n      }\n    }\n\n  ngOnInit(){\n    this.credentials.token = this._route.snapshot.paramMap.get('token');\n    if(this.credentials.token === ''){\n      this.errorMessage = 'No token specified';\n      this.isDisabled = true;\n    }\n  }\n\n    sendReset() {\n      this.successMessage = '';\n       this.errorMessage = this._checkPasswords();\n      if(this.errorMessage === ''){ // able to submit\n        this.subscription = this._authenticationService\n          .resetPassword(this.credentials)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.credentials.password = '';\n          this.credentials.confirmPassword = '';\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n      }\n    }\n\n  _checkPasswords(){\n    let p = this.credentials.password;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Reset Password\n    \n      New Password\n      \n        \n        \n        Must have at least 6 characters\n        \n      \n    \n    \n    \n      Confirm\n      \n        \n\n      \n    \n    \n    Submit\n\n    \n      {{ successMessage }} Go sign in.\n    \n    \n      {{ errorMessage }}\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Reset Password          New Password                              Must have at least 6 characters                                Confirm                                Submit          {{ successMessage }} Go sign in.              {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenario.html":{"url":"interfaces/Scenario.html","title":"interface - Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/scenario.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed about each scenario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        purpose\n                                \n                                \n                                        relevance\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        startingPoint\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human-readable visible label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purpose\n                                    \n                                \n                                \n                                    \n                                        purpose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Goal for completing the scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relevance\n                                    \n                                \n                                \n                                    \n                                        relevance:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The reason this scenario is important for learning\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Short string ID for the scenario; used in the URL and for linking\nscenario to other objects\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startingPoint\n                                    \n                                \n                                \n                                    \n                                        startingPoint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of phage strains to begin the scenario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Scenario{\n  /**\n   * Human-readable visible label\n   */\n  label: string;\n  /**\n   * Short string ID for the scenario; used in the URL and for linking\n   * scenario to other objects\n   */\n  scenCode: string;\n  /**\n   * Goal for completing the scenario\n   */\n  purpose: string;\n  /**\n   * Description of phage strains to begin the scenario\n   */\n  startingPoint: string;\n  /**\n   * The reason this scenario is important for learning\n   */\n  relevance: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScenarioComponent.html":{"url":"components/ScenarioComponent.html","title":"component - ScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/scenario.component.ts\n\n\n    \n        Description\n    \n    \n        View component used to link the breadcrumb with the location\nmodule components or scenario list\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario\n            \n\n\n\n\n            \n                templateUrl\n                ./scenario.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * View component used to link the breadcrumb with the location\n * module components or scenario list\n */\n@Component({\n  selector: 'scenario',\n  templateUrl: './scenario.template.html'\n})\n\nexport class ScenarioComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScenarioModule.html":{"url":"modules/ScenarioModule.html","title":"module - ScenarioModule","body":"\n                   \n\n\n\n\n  Modules\n  ScenarioModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_ScenarioModule_imports\n\n\n\n\nListComponent\n\nListComponent\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/scenario.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ListComponent\n                            \n                            \n                                ScenarioComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ScenarioRoutes } from './scenario.routes';\nimport { ScenarioComponent } from './scenario.component';\nimport { ListComponent } from './list/list.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ScenarioRoutes)\n  ],\n  declarations: [\n    ScenarioComponent,\n    ListComponent\n  ]\n})\nexport class ScenarioModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScenarioResolver.html":{"url":"injectables/ScenarioResolver.html","title":"injectable - ScenarioResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ScenarioResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/scenario.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Resolves a route URL to get the scenario id (from the url)\nthen uses that to get the scenario label using scenario service\nThis is used to generate human-readable breadcrumb labels\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/scenario.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/scenario.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method required by implementation\nBased on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                current root URL\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe scenario object corresponding to do the url param ID if it exists\nor empty scenario if it does not exist\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { ScenarioService } from './scenario.service';\nimport { Scenario } from '../interfaces/scenario.interface';\n\n/**\n * Resolves a route URL to get the scenario id (from the url)\n * then uses that to get the scenario label using scenario service\n *\n * This is used to generate human-readable breadcrumb labels\n */\n@Injectable()\nexport class ScenarioResolver implements Resolve {\n\n  constructor(private _scenarioService: ScenarioService) { }\n\n  /**\n   * Method required by implementation\n   * Based on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n   *\n   * @param {ActivatedRouteSnapshot} route current root URL\n   * @param {RouterStateSanpshot} current route snapshot\n   *\n   * @returns {Scenario} - The scenario object corresponding to do the url param ID if it exists\n   - or empty scenario if it does not exist\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\n    const scenCode = route.params['scenId'];\n\n    if (scenCode) {\n      return this._scenarioService.getScenario(scenCode);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                            \n                                PeopleListNamesPipe\n                            \n                            \n                                PersonNamePipe\n                            \n                            \n                                PhageParentsPipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfirmDeleteDialogComponent\n                            \n                            \n                                    PeopleListNamesPipe\n                            \n                            \n                                    PersonNamePipe\n                            \n                            \n                                    PhageParentsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DndModule } from 'ng2-dnd';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { McBreadcrumbsModule } from 'ngx-breadcrumbs';\nimport { SkyhookDndModule } from 'angular-skyhook';\nimport { default as TouchBackend } from 'react-dnd-touch-backend';\n\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog.component';\n\nimport { PersonNamePipe } from '../pipes/person-name.pipe';\nimport { PeopleListNamesPipe } from '../pipes/people-list-names.pipe';\nimport { PhageParentsPipe } from '../pipes/phage-parents.pipe';\n\n@NgModule({\n    imports: [\n      CommonModule,\n      FormsModule,\n      DndModule.forRoot(),\n      NgbModule.forRoot(),\n      McBreadcrumbsModule.forRoot(),\n      SkyhookDndModule.forRoot({ backend: TouchBackend })\n    ],\n  declarations: [\n    PersonNamePipe,\n    PeopleListNamesPipe,\n    PhageParentsPipe,\n    ConfirmDeleteDialogComponent\n  ],\n    exports: [\n      CommonModule,\n      FormsModule,\n      DndModule,\n      NgbModule,\n      McBreadcrumbsModule,\n      PersonNamePipe,\n      PeopleListNamesPipe,\n      PhageParentsPipe,\n      SkyhookDndModule,\n      ConfirmDeleteDialogComponent\n    ],\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signin/signin.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signin\n            \n\n\n\n\n            \n                templateUrl\n                ./signin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signin/signin.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n@Component({\n    selector: 'signin',\n    templateUrl: './signin.template.html'\n})\nexport class SigninComponent {\n    errorMessage: string;\n    credentials: any = {};\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService,\n        private _router: Router) { }\n\n    signin() {\n        this.subscription = this._authenticationService\n          .signin(this.credentials)\n          .subscribe((result) => {\n          // TODO: update\n          this._authenticationService.setUser(result);\n          let redirect = this._authenticationService.redirectUrl ? this._authenticationService.redirectUrl : '/';\n          this._router.navigate([redirect]);\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign in\n    \n      Email\n      \n        \n      \n    \n    \n    \n      Password\n      \n        \n      \n    \n    {{errorMessage}}\n    \n      \n        Sign in \n      \n      \n        Forget password?\n      \n    \n\n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign in          Email                                      Password                            {{errorMessage}}                  Sign in                     Forget password?            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignoutComponent.html":{"url":"components/SignoutComponent.html","title":"component - SignoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signout/signout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signout\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signout/signout.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\n\n\n@Component({\n  selector: 'signout',\n  template: ''\n})\n\nexport class SignoutComponent{\n\n  private subscription: Subscription;\n\n  constructor(\n    private _authService: AuthenticationService,\n    private _router: Router\n  ){}\n\n  ngOnInit(){\n    this.subscription = this._authService.signout()\n      .subscribe((res)=>{\n        this._authService.setUser(null);\n        this._router.navigate(['/']);\n    })\n  }\n\n  /*ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }*/\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signup\n            \n\n\n\n\n            \n                templateUrl\n                ./signup.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                cPassword\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _reorderCourses\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _courseService: CourseService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signup/signup.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _reorderCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n_reorderCourses(courses: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/concat'\n\nimport { AuthenticationService } from '../authentication.service';\nimport { CourseService } from '../../admin/course/course.service';\n\n@Component({\n    selector: 'signup',\n    templateUrl: './signup.template.html'\n})\nexport class SignupComponent implements OnDestroy {\n    errorMessage: string = '';\n  private courses: string[] = [];\n    user: any = {};\n  private isDestroyed$: Subject;\n  private cPassword: string;\n\n    constructor(private _authenticationService: AuthenticationService,\n                 private _courseService: CourseService,\n        private _router: Router) {\n      this.isDestroyed$ = new Subject();\n    }\n\n  _reorderCourses(courses: any): any{\n    let na = courses.filter((c)=>{return c.courseNum === 'NA'});\n    let other = courses.filter((c)=>{\n      return c.courseNum !== 'NA'\n    });\n    return na.concat(other);\n  }\n\n  ngOnInit(){\n    this._courseService.getCourseList()\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        let tmp = this._reorderCourses(res);\n        this.courses = tmp;\n    }, (err)=>{\n      this.courses = [];\n    });\n  }\n\n    signup() {\n      if(this.user.course === undefined){\n        this.errorMessage = 'Select a course'\n      } else if(this.user.password !== this.cPassword){\n        this.errorMessage = 'Passwords must match'\n      } else {\n          this._authenticationService\n          .signup(this.user)\n      .takeUntil(this.isDestroyed$)\n          .subscribe((result) => {\n          this._authenticationService.setUser(result);\n          this._router.navigate(['/'])\n        },\n            (error) => {\n          this.errorMessage = error.error.message\n        });\n      }\n    }\n\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign up \n\n    \n      \n        First name\n        \n      \n\n      \n        Last name\n        \n      \n    \n    \n\n    \n      Email address\n      \n    \n    \n\n    \n      Course\n      \n        Select course\n        {{ course.courseNum }}\n      \n    \n    \n\n    \n      \n        Password\n        \n        \n        Must have at least 6 characters\n        \n      \n      \n          \n        \n      \n    \n    {{errorMessage}}\n    Sign up\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign up                   First name                            Last name                                Email address                        Course              Select course        {{ course.courseNum }}                                Password                        Must have at least 6 characters                                                    {{errorMessage}}    Sign up  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Student.html":{"url":"interfaces/Student.html","title":"interface - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed as a user using the app in scenarios\n\n            \n\n            \n                Extends\n            \n            \n                    _User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentFridge.html":{"url":"interfaces/StudentFridge.html","title":"interface - StudentFridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentFridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                Fridge information used by admin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        owner\n                                \n                                \n                                        scenario\n                                \n                                \n                                            Optional\n                                        strains\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, has access been granted for this user/scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, the deletion guesses by the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:     _User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Owner of the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenario\n                                    \n                                \n                                \n                                    \n                                        scenario:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario this fridge is for\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     StudentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StudentPhage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If fridge exists, the list of phage that are in this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentFridgeComponent.html":{"url":"components/StudentFridgeComponent.html","title":"component - StudentFridgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentFridgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-fridge.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-fridge\n            \n\n\n\n\n            \n                templateUrl\n                ./student-fridge.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Protected\n                                fridge\n                            \n                            \n                                    Protected\n                                hasFridge\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                strainList\n                            \n                            \n                                    Private\n                                viewStrains\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonClass\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setPhage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            Determine the CSS class for the view strains button depending on selected option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton determining classes for\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            View stains is &quot;all&quot;\ngetButtonClass(&#39;all&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;btn-primary&#39;: true, &#39;btn-primary-outline&#39;: false}\ngetButtonClass(&#39;graded&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;btn-primary&#39;: false, &#39;btn-primary-outline&#39;: true}\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \nclasses which appy to this button in the form {\"class\": boolean, ...}\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            When destorying the component, unsubscribe from services and\nobservables to prevent memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nGet studentId, scenarioId, and admin\nGet the fridge\nIf the fridge exists\n3a. add the \"guesses\" to each strain\n3b. sort the strains by strain number\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPhage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPhage(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            When a viewStrain button is clicked,\nupdate the list of visible phage appropriately\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton which was clicked;\nShould be one of [\"all\", \"graded\"]\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:54\n                            \n                        \n\n                \n                    \n                        Error message from the server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fridge:     StudentFridge\n\n                    \n                \n                    \n                        \n                            Type :     StudentFridge\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:25\n                            \n                        \n\n                \n                    \n                        Fridge object (if it exists)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            hasFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasFridge:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:29\n                            \n                        \n\n                \n                    \n                        If fridge exists determine by if this.fridge has strains\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:33\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:37\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            strainList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        strainList:     StudentPhage[]\n\n                    \n                \n                    \n                        \n                            Type :     StudentPhage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:49\n                            \n                        \n\n                \n                    \n                        List of phage currently being viewed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewStrains\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewStrains:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:45\n                            \n                        \n\n                \n                    \n                        Option to show all strains in fridge or\nonly strains of interest for grading (unknown\nand submitted)\nShould be \"all\" or \"graded\"\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\n\nimport { Course, AdminStudent, Scenario, StudentPhage, StudentFridge } from '../../../interfaces';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n@Component({\n  selector: 'student-fridge',\n  templateUrl: './student-fridge.template.html'\n})\n\nexport class StudentFridgeComponent implements OnInit, OnDestroy {\n\n  /**\n   * Fridge object (if it exists)\n   */\n  protected fridge: StudentFridge;\n  /**\n   * If fridge exists determine by if this.fridge has strains\n   */\n  protected hasFridge: boolean = false;\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n  private isDestroyed$: Subject;\n   /**\n   * Subscription for URL parameters\n   */\n  private paramObserver: any;\n\n  /**\n   * Option to show all strains in fridge or\n   * only strains of interest for grading (unknown\n   * and submitted)\n   * Should be \"all\" or \"graded\"\n   */\n  private viewStrains: string = 'all';\n  /**\n   * List of phage currently being viewed\n   */\n  private strainList: StudentPhage[];\n\n  /**\n   * Error message from the server\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _studentService: StudentService,\n    private _authService: AuthenticationService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize the view\n   * 1. Get studentId, scenarioId, and admin\n   * 2. Get the fridge\n   * 3. If the fridge exists\n   * 3a. add the \"guesses\" to each strain\n   * 3b. sort the strains by strain number\n   */\n  ngOnInit(){\n    this.paramObserver = this._route.params.subscribe(params => {\n      let studentId = params['studentId'];\n      let scenId = params['scenId'];\n      let admin = this._authService.getUser();\n\n      this._studentService.getFridge(admin.id, studentId, scenId)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((fridge) => {\n              this.fridge = fridge;\n              this.hasFridge = (fridge.strains !== undefined);\n              if(this.hasFridge){\n                let guesses = JSON.parse(this.fridge.guesses);\n                for(let strain of this.fridge.strains){\n                  let x = guesses[strain.strainNum];\n                  if(x){\n                    strain.guesses = x;\n                  } else{\n                    strain.guesses = [];\n                  }\n                }\n                this.fridge.strains.sort((a,b)=>{return a.strainNum - b.strainNum});\n              }\n              this.setPhage('all');\n            },\n                (error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Determine the CSS class for the view strains button depending on selected option\n   *\n   * @param {string} src - button determining classes for\n   *\n   * @returns {Object} - classes which appy to this button in the form {\"class\": boolean, ...}\n   *\n   * @example\n   * View stains is \"all\"\n   * getButtonClass('all') -> {'btn btn-small': true, 'btn-primary': true, 'btn-primary-outline': false}\n   * getButtonClass('graded') -> {'btn btn-small': true, 'btn-primary': false, 'btn-primary-outline': true}\n   */\n  getButtonClass(src: string): Object{\n    return {\n      'btn btn-sm': true,\n      'btn-primary': (src === this.viewStrains),\n      'btn-outline-primary': (src !== this.viewStrains)\n    }\n  }\n\n  /**\n   * When a viewStrain button is clicked,\n   * update the list of visible phage appropriately\n   *\n   * @param {string} src - button which was clicked;\n   * Should be one of [\"all\", \"graded\"]\n   */\n  setPhage(src: string){\n    this.viewStrains = src;\n    if(this.viewStrains === 'all'){\n      this.strainList = this.fridge.strains;\n    } else {\n      this.strainList = this.fridge.strains.filter((strain)=>{\n        if(strain.phageType === 'unknown'){\n          return true;\n        } else if(strain.phageType === 'user' && strain.submitted){\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n\n  /**\n   * When destorying the component, unsubscribe from services and\n   * observables to prevent memory leak\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        {{ fridge.owner | personName }}\n      \n    \n\n    \n      {{ fridge.scenario.scenCode }}\n      {{ fridge.scenario.label }}\n      \n        Access granted: {{ fridge.accessGranted }}\n      \n    \n\n    \n      Fridge does not exist yet\n    \n    \n    \n      \n        \n          All Strains\n          Graded Strains\n        \n      \n      \n        \n          \n        \n       \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                      {{ fridge.owner | personName }}                    {{ fridge.scenario.scenCode }}      {{ fridge.scenario.label }}              Access granted: {{ fridge.accessGranted }}                    Fridge does not exist yet                                    All Strains          Graded Strains                                                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentFridgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentIndivComponent.html":{"url":"components/StudentIndivComponent.html","title":"component - StudentIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-indiv/student-indiv.component.ts\n\n\n    \n        Description\n    \n    \n        Component to view information for a single student\nThis includes email/name/role information and access status\nfor all scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-indiv\n            \n\n\n\n\n            \n                templateUrl\n                ./student-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                newRole\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                roles\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Protected\n                                student\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _callDelete\n                            \n                            \n                                checkDelete\n                            \n                            \n                                clickButton\n                            \n                            \n                                deleteDisabled\n                            \n                            \n                                getScenStatus\n                            \n                            \n                                getStudentCourse\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                roleButtonClass\n                            \n                            \n                                roleDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _studentService: StudentService, _scenarioService: ScenarioService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _callDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _callDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:259\n                            \n                        \n\n\n                \n                    \n                            Helper function which implements delete student after user\nconfirmed deletion\nCalls student service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:240\n                            \n                        \n\n\n                \n                    \n                            when clicking delete button, open a modal dialog to confirm delete\nif confirm, delete and redirect to students\notherwise, do nothing\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickButton\n                            \n                            \n                        \n                    \n                \n                \n                    \nclickButton(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:208\n                            \n                        \n\n\n                \n                    \n                            When clicking a role button, update the student role\nby calling student service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrole of button pushed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:223\n                            \n                        \n\n\n                \n                    \n                            Determine if delete button should be disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if viewing page of logged in user or if student is an admin\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScenStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScenStatus(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Return formatted string based on if access granted for scenario\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario to look up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n\"Access granted\", \"Access not granted\", or \"NA\"\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudentCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudentCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Get a formatted HTML string based on the student\nIf student has a course, returns link to the course page\nIf student doesn't have a course, returns 'No course'\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \nformatted HTML\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:146\n                            \n                        \n\n\n                \n                    \n                            Grant access for a specific scenario by calling student service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario to grant access for\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:274\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing to the services\nThis prevents a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Initialize component\n\nGet logged in user\nGet id of student of interest, then get the student's info\nGet list of all scenarios\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:194\n                            \n                        \n\n\n                \n                    \n                            Determine CSS classes for each role button based on the\nstudent's current role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Current student has role &quot;student&quot;\nroleButtonClass(&#39;student&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: true, &#39;btn-secondary-outline&#39;: false}\nroleButtonClass(&#39;admin&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: false, &#39;btn-secondary-outline&#39;: true}\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \npossible classes with true/false as applicable\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleDisabled(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Determine if a role toggle button should be disabled\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ndisable for roles greater than current user\nand if viewing page of current user\n\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:54\n                            \n                        \n\n                \n                    \n                        Logged in user who must be an admin or instructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:67\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:46\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple\nobservables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:62\n                            \n                        \n\n                \n                    \n                        New role to change to if allowed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:50\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roles:     \n\n                    \n                \n                    \n                        \n                            Default value : StudentRolesArray\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:58\n                            \n                        \n\n                \n                    \n                        List of possible roles\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:41\n                            \n                        \n\n                \n                    \n                        List of all scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            student\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        student:     AdminStudent\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:37\n                            \n                        \n\n                \n                    \n                        Student we are viewing\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil';\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../student.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { StudentRolesArray } from '../student.roles';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { User } from '../../../interfaces/user.interface';\nimport { Course } from '../../../interfaces/course.interface';\nimport { AdminStudent } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * Component to view information for a single student\n * This includes email/name/role information and access status\n * for all scenarios\n */\n@Component({\n    selector: 'student-indiv',\n    templateUrl: './student-indiv.template.html'\n})\n\nexport class StudentIndivComponent implements OnInit, OnDestroy {\n\n  /**\n   * Student we are viewing\n   */\n    protected student: AdminStudent;\n  /**\n   * List of all scenarios\n   */\n    private scenarios: Scenario[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple\n   * observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Subscription for URL parameters\n   */\n    private paramObserver: any;\n  /**\n   * Logged in user who must be an admin or instructor\n   */\n    private _admin: User;\n  /**\n   * List of possible roles\n   */\n    private roles = StudentRolesArray;\n  /**\n   * New role to change to if allowed\n   */\n    private newRole: string;\n\n  /**\n   * Potential error message\n   */\n    private errorMessage: string = '';\n\n    constructor(private _router: Router,\n        private _route: ActivatedRoute,\n        private _authService: AuthenticationService,\n        private _studentService: StudentService,\n        private _scenarioService: ScenarioService,\n        private _modalService: NgbModal) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize component\n   * 1. Get logged in user\n   * 2. Get id of student of interest, then get the student's info\n   * 3. Get list of all scenarios\n   */\n    ngOnInit() {\n        this._admin = this._authService.getUser();\n        this.paramObserver = this._route.params.subscribe(params => {\n            let studentId = params['studentId'];\n            this._studentService.getStudent(this._admin.id, studentId)\n                .takeUntil(this.isDestroyed$)\n                .subscribe((info) => {\n                    this.student = info;\n                    this.newRole = this.student.role;\n                    this._scenarioService.listScenarios()\n                        .takeUntil(this.isDestroyed$)\n                        .subscribe((scens) => {\n                            this.scenarios = scens;\n                        });\n                },\n                (error) => {\n                    this.errorMessage = readErrorMessage(error);\n                });\n\n        });\n    }\n\n  /**\n   * Return formatted string based on if access granted for scenario\n   *\n   * @param {string} scenCode - scenario to look up\n   *\n   * @returns {string} - \"Access granted\", \"Access not granted\", or \"NA\"\n   */\n    getScenStatus(scenCode: string): string {\n        let isGranted = this.student.accessGranted[scenCode];\n        if (isGranted === true) {\n            return 'Access granted'\n        } else if (isGranted === false) {\n            return 'Access not granted'\n        } else {\n            return 'NA'\n        }\n    }\n\n  /**\n   * Get a formatted HTML string based on the student\n   *\n   * If student has a course, returns link to the course page\n   * If student doesn't have a course, returns 'No course'\n   *\n   * @returns {string} - formatted HTML\n   */\n    getStudentCourse(): string {\n        let s: AdminStudent = this.student;\n        if (s.course) {\n            return 's.course.courseNum';\n        } else {\n            return 'No course';\n        }\n    }\n\n  /**\n   * Grant access for a specific scenario by calling student service\n   *\n   * @param {string} scenCode - scenario to grant access for\n   */\n    grantAccess(scenCode: string) {\n        this._studentService.grantScenAccess(this._admin.id, this.student.userId, scenCode, true)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                if (res !== undefined && res !== null) {\n                    //this.student.accessGranted[scenCode] = res.accessGranted[scenCode];\n                  this.student = res;\n                }\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if a role toggle button should be disabled\n   *\n   * @param {string} src - name of button/role\n   *\n   * @returns {boolean} - disable for roles greater than current user\n   * and if viewing page of current user\n   */\n    roleDisabled(src: string): boolean {\n        if (this._admin === undefined) {\n            return false\n        } else if (this.student.userId === this._admin.id) {\n            return true;\n        } else if (src === 'admin' && this._admin.role  {'btn btn-small': true, 'bth-secondary': true, 'btn-secondary-outline': false}\n   * roleButtonClass('admin') -> {'btn btn-small': true, 'bth-secondary': false, 'btn-secondary-outline': true}\n   */\n    roleButtonClass(src: string): Object {\n        return {\n            'btn btn-sm': true,\n            'btn-outline-secondary': src !== this.student.role,\n            'btn-secondary': src === this.student.role\n        }\n    }\n\n  /**\n   * When clicking a role button, update the student role\n   * by calling student service\n   *\n   * @param {string} src - role of button pushed\n   */\n    clickButton(src: string) {\n        this._studentService.setStudentRole(this._admin.id, this.student.userId, src)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                this.student = res;\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if delete button should be disabled\n   *\n   * @returns {boolean} - true if viewing page of logged in user or if student is an admin\n   */\n  deleteDisabled(){\n    if(this._admin === undefined){\n      return true;\n    } else if(this.student.userId === this._admin.id){\n      return false;\n    } else if(this.student.role === 'admin'){\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * when clicking delete button, open a modal dialog to confirm delete\n   * if confirm, delete and redirect to students\n   * otherwise, do nothing\n   */\n  checkDelete(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDelete();\n      }\n    }, (dismiss)=>{\n      // do nothing\n      return;\n    });\n  }\n\n  /**\n   * Helper function which implements delete student after user\n   * confirmed deletion\n   * Calls student service\n   */\n  protected _callDelete(){\n    this._studentService.deleteStudent(this._admin.id, this.student.userId)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/students']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * Destroy the component by unsubscribing to the services\n   * This prevents a memory leak\n   */\n    ngOnDestroy() {\n        this.paramObserver.unsubscribe();\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n\n    }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          \n            {{ student | personName }}\n          \n        \n        \n          Delete\n        \n      \n\n      \n        \n          Email\n        \n        {{ student.email }}\n      \n\n      \n        \n          Course\n        \n        \n          {{ student.course.courseNum }}\n          No course\n        \n      \n\n      \n        Role\n        \n          \n          {{ role.label }}\n        \n        \n      \n      \n\n    \n    \n\n    \n      Scenarios\n      \n        \n          \n            {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}\n          \n          \n            Grant access\n            View fridge\n          \n        \n        \n      \n      \n    \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                            {{ student | personName }}                                    Delete                                      Email                {{ student.email }}                              Course                          {{ student.course.courseNum }}          No course                            Role                            {{ role.label }}                                              Scenarios                                    {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}                                Grant access            View fridge                                                  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentListComponent.html":{"url":"components/StudentListComponent.html","title":"component - StudentListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-list/student-list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists students dependent on the role of logged in user;\n if \"admin\", all users in the system\n if \"instr\", all users in courses instr teaches\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-list\n            \n\n\n\n\n            \n                templateUrl\n                ./student-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing from all observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nget logged in user id\nget the list of students\norder the list of students\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error message from server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        List of students\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { AdminStudent, sortStudents } from '../../../interfaces/student.interface';\n\n/**\n * Component which lists students dependent on the role of logged in user;\n  * if \"admin\", all users in the system\n  * if \"instr\", all users in courses instr teaches\n */\n@Component({\n    selector: 'student-list',\n    templateUrl: './student-list.template.html'\n})\nexport class StudentListComponent implements OnInit, OnDestroy {\n  /**\n   * List of students\n   */\n    private students: AdminStudent[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Error message from server\n   */\n    private errorMessage: string = '';\n\n    constructor(\n        private _studentService: StudentService,\n        private _authService: AuthenticationService\n    ) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the view\n   * 1. get logged in user id\n   * 2. get the list of students\n   * 3. order the list of students\n   */\n    ngOnInit() {\n        let admin = this._authService.getUser();\n        this._studentService.listStudents(admin.id)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((students) => {\n                this.students = students.sort(sortStudents);\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Destory the component by unsubscribing from all observables\n   */\n    ngOnDestroy() {\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n    }\n}\n\n    \n\n    \n        \nStudents\n\n  {{ errorMessage }}\n  \n      \n      \n        {{student | personName:true}}\n        {{student.course.courseNum}}\n        {{student.role}}\n      \n    \n   \n \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Students  {{ errorMessage }}                      {{student | personName:true}}        {{student.course.courseNum}}        {{student.role}}              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n  Modules\n  StudentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_imports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/student/student.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PhageDeletionsPipe\n                            \n                            \n                                PhageGuessesPipe\n                            \n                            \n                                PhageMutationsPipe\n                            \n                            \n                                StudentFridgeComponent\n                            \n                            \n                                StudentIndivComponent\n                            \n                            \n                                StudentListComponent\n                            \n                            \n                                StudentPhageComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     StudentResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { StudentRoutes } from './student.routes';\n\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { StudentIndivComponent } from './student-indiv/student-indiv.component';\nimport { StudentFridgeComponent } from './student-fridge/student-fridge.component';\nimport { StudentPhageComponent } from './student-fridge/student-phage.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { StudentResolver } from './student.resolver';\nimport { PhageGuessesPipe } from '../../pipes/phage-guesses.pipe';\nimport { PhageMutationsPipe } from '../../pipes/phage-mutations.pipe';\nimport { PhageDeletionsPipe } from '../../pipes/phage-deletions.pipe';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(StudentRoutes)\n  ],\n  declarations: [\n    StudentListComponent,\n    StudentIndivComponent,\n    StudentFridgeComponent,\n    StudentPhageComponent,\n    PhageGuessesPipe,\n    PhageMutationsPipe,\n    PhageDeletionsPipe\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    StudentResolver\n  ]\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentPhage.html":{"url":"interfaces/StudentPhage.html","title":"interface - StudentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information about the phage used for admin\nand grading\n\n            \n\n            \n                Extends\n            \n            \n                    FridgePhage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        mutationList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop location of deleetion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     boolean[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deletion guesses from the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutationList\n                                    \n                                \n                                \n                                    \n                                        mutationList:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentPhageComponent.html":{"url":"components/StudentPhageComponent.html","title":"component - StudentPhageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentPhageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-phage.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-phage\n            \n\n\n\n\n            \n                templateUrl\n                ./student-phage.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatPhageType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-phage.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                            \n                            Type:    StudentPhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatPhageType\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatPhageType()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Produces formatted string based on phage type and if phage is\nsubmitted to be graded\n\n\n                            \n                                    Example :\n                                        \n                                            reference phage -&gt; &quot;REFERENCE&quot;\nscenario unknown phage -&gt; &quot;UNKOWN&quot;\nuser phage, not sumitted -&gt; &quot;USER&quot;\nsubmitted phage -&gt; &quot;SUBMISSION&quot;\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nformatted string\n\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input} from '@angular/core';\n\nimport { StudentPhage } from '../../../interfaces/phage.interface';\n\n@Component({\n  selector: 'student-phage',\n  templateUrl: './student-phage.template.html'\n})\n\n/**\n * Small component which encompasses a single phage strain being viewed\n * within a student's fridge\n */\nexport class StudentPhageComponent{\n\n  @Input() phage: StudentPhage;\n\n  constructor(){}\n\n  /**\n   * Produces formatted string based on phage type and if phage is\n   * submitted to be graded\n   *\n   * @returns {string} - formatted string\n   *\n   * @example\n   * reference phage -> \"REFERENCE\"\n   * scenario unknown phage -> \"UNKOWN\"\n   * user phage, not sumitted -> \"USER\"\n   * submitted phage -> \"SUBMISSION\"\n   */\n  formatPhageType(){\n    if(this.phage){\n      let t = this.phage.phageType;\n      if(this.phage.phageType === 'user' && this.phage.submitted){\n        return 'SUBMISSION'\n      } else {\n        return this.phage.phageType.toUpperCase();\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n    \n        \n\n  {{ phage.strainNum + 1 }}\n\n\n\n    \n      {{ formatPhageType() }}\n    \n  \n    \n  \n \n\n  \n    Comment\n    {{ phage.comment }}\n  \n   0\">\n    Mutations\n    \n      {{ phage.mutationList | phageMutations }}\n    \n  \n  \n   0\">\n    Deletion\n    \n      {{phage.deletion | phageDeletions}}\n    \n  \n  \n   0\">\n    Guess\n    \n      {{ phage.guesses | phageGuesses }}\n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ phage.strainNum + 1 }}          {{ formatPhageType() }}                   Comment    {{ phage.comment }}     0\">    Mutations          {{ phage.mutationList | phageMutations }}           0\">    Deletion          {{phage.deletion | phageDeletions}}           0\">    Guess          {{ phage.guesses | phageGuesses }}        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentPhageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentResolver.html":{"url":"injectables/StudentResolver.html","title":"injectable - StudentResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Needed for breadcrumbs\nResolves the studentId in the URL to the student it represents\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Based on the URL 'studentId' parameter, find the user\nit belongs to\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The student the id belongs to\nor an empty observable if the id doesn't belong to anyone\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { StudentService } from './student.service';\nimport { AdminStudent } from '../../interfaces/student.interface';\n\n/**\n * Needed for breadcrumbs\n * Resolves the studentId in the URL to the student it represents\n */\n@Injectable()\nexport class StudentResolver implements Resolve {\n\n  constructor(private _studentService: StudentService,\n              private _authService: AuthenticationService) { }\n\n  /**\n   * Based on the URL 'studentId' parameter, find the user\n   * it belongs to\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {Observable} The student the id belongs to\n   * or an empty observable if the id doesn't belong to anyone\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n\n    const studentNum = route.params['studentId'];\n\n    if (studentNum) {\n      return this._studentService.getStudent(admin.id, studentNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.service.ts\n        \n\n            \n                Description\n            \n            \n                Service which deals with all student-related backend calls\nfrom an admin\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteStudent\n                            \n                            \n                                getFridge\n                            \n                            \n                                getStudent\n                            \n                            \n                                grantScenAccess\n                            \n                            \n                                listStudents\n                            \n                            \n                                setStudentRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            Delete a student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student to delete\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    student who was just deleted or error\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFridge(adminId: number, studentId: number, scenId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Get scenario fridge for a student; includes fridge details such as\nfridge strains and guesses\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario Id for fridge to find\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    the student's fridge or error\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Get details about a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to be looked up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ndetails about specified student or error if does not exist\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantScenAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Update scenario access for a student; this deletes the existing\nfridge\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        updatedState\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ntrue to grant access, false to revoke access\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    updated student\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistStudents(adminId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            List of students, content is dependent of logged in user role\nIf \"admin\", return all students/users\nIf \"instr\", returns students of courses instr teachs\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nlist of students\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStudentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStudentRole(adminId: number, studentId: number, role: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Update the role (admin, instr, student) of another student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to update\n\n\n                                                        \n                                                \n                                                \n                                                        role\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nnew role to be assigned; one of: \"admin\", \"instr\", or \"student\"\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe updated student\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/admin'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:18\n                            \n                        \n\n                \n                    \n                        Beginning of the server-side URL routes\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AdminStudent, StudentFridge } from '../../interfaces';\n\n\n/**\n * Service which deals with all student-related backend calls\n * from an admin\n */\n@Injectable()\nexport class StudentService {\n\n  /**\n   * Beginning of the server-side URL routes\n   */\n  private _baseURL = 'api/admin';\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * List of students, content is dependent of logged in user role\n   *\n   * If \"admin\", return all students/users\n   * If \"instr\", returns students of courses instr teachs\n   *\n   * @param {number} adminId - userId of logged in user\n   *\n   * @returns {AdminStudent[]} - list of students\n   */\n  listStudents(adminId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students`);\n  }\n\n  /**\n   * Get details about a student\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to be looked up\n   *\n   * @returns {Observable} - details about specified student or error if does not exist\n   */\n  getStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Update the role (admin, instr, student) of another student/user\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to update\n   * @param {string} role - new role to be assigned; one of: \"admin\", \"instr\", or \"student\"\n   *\n   * @returns {Observable} - the updated student\n   */\n  setStudentRole(adminId: number, studentId: number, role: string): Observable{\n    let body = {role: role};\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}`, body);\n  }\n\n  /**\n   * Delete a student/user\n   *\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student to delete\n   *\n   * @returns {Observable} student who was just deleted or error\n   */\n  deleteStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .delete(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Get scenario fridge for a student; includes fridge details such as\n   * fridge strains and guesses\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {string} scenId - scenario Id for fridge to find\n   *\n   * @returns{Observable} the student's fridge or error\n   */\n  getFridge(adminId: number, studentId: number, scenId: string): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`);\n  }\n\n  /**\n   * Update scenario access for a student; this deletes the existing\n   * fridge\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {boolean} updatedState - true to grant access, false to revoke access\n   *\n   * @returns {Observable} updated student\n   */\n  grantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean): Observable{\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`, {access: updatedState});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdatePasswordComponent.html":{"url":"components/UpdatePasswordComponent.html","title":"component - UpdatePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UpdatePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/update-password/update-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a logged in user to update their password\nby entering their current password then the new password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-password\n            \n\n\n\n\n            \n                templateUrl\n                ./update-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                passwordMessage\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/update-password/update-password.component.ts:41\n                            \n                        \n\n                \n                    \n                            Class constructor for this component;\nIncludes router (for navigation) and services to fetch info\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Navigate to a page not using the browser\n\n                                                        \n                                                \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service when sends request to backend and handles updating the exisitng information\n\n                                                        \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Does various checks to ensure the password fields are valid\n\nAll fields are filled in\nNew password is different from old password\nConfirm password matches new password\n\n\n\n                            \n                            \n                            \n                                Returns :     \"Enter new password\" | \"Confirm new password\" | \"Confirm password does not match\" | \"\" | \"Enter o...\n\n                            \n                                \n                                    error message if at least one condition isn't met or '' if everything is valid\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe to services/streams\nto prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet the logged in user info\nSet up the credentials with email address\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Attempt to update the password\nIf successful, redirects to profile page\nIf there's an error, displays error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:29\n                            \n                        \n\n                \n                    \n                        Password information include old password, new password, and confirm new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:37\n                            \n                        \n\n                \n                    \n                        potential backend error message displayed prominantly\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:33\n                            \n                        \n\n                \n                    \n                        State to keep track of compoenent alive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            passwordMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:41\n                            \n                        \n\n                \n                    \n                        Error message about submission and why the submission didn't work as expected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        The logged in user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Component for a logged in user to update their password\n * by entering their current password then the new password\n */\n@Component({\n  selector: 'user-password',\n  templateUrl: './update-password.template.html'\n})\n\nexport class UpdatePasswordComponent{\n\n  /**\n   * The logged in user\n   */\n  private user: User;\n  /**\n   * Password information include old password, new password, and confirm new password\n   */\n  private credentials: any;\n  /**\n   * State to keep track of compoenent alive\n   */\n  private isDestroyed$: Subject;\n  /**\n   * potential backend error message displayed prominantly\n   */\n  private errorMessage: string = '';\n  /**\n   * Error message about submission and why the submission didn't work as expected\n   */\n  private passwordMessage: string = '';\n\n  /**\n   * Class constructor for this component;\n   * Includes router (for navigation) and services to fetch info\n   *\n   * @param {router} _router Navigate to a page not using the browser\n   * @param {ProfileService} _profileService Service when sends request to backend and handles updating the exisitng information\n   */\n  constructor(\n    private _router: Router,\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n      this.credentials = {\n        password: '',\n        newPassword: '',\n        confirmPassword: ''\n      };\n    }\n\n  /**\n   * Initialize the component\n   * 1. Get the logged in user info\n   * 2. Set up the credentials with email address\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.user = res;\n      this.credentials['username'] = res.email;\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempt to update the password\n   * If successful, redirects to profile page\n   * If there's an error, displays error message\n   */\n  updatePassword(){\n    // do checks\n    this.passwordMessage = this._checkPasswords();\n    if(this.passwordMessage === ''){\n      // can update\n      this._profileService.updatePassword(this.user.id, this.credentials)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n        this._router.navigate(['/profile']);\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n    } else {\n      this.errorMessage = '';\n    }\n  }\n\n  /**\n   * Does various checks to ensure the password fields are valid\n   * 1. All fields are filled in\n   * 2. New password is different from old password\n   * 3. Confirm password matches new password\n   *\n   * @returns {string} error message if at least one condition isn't met or `''` if everything is valid\n   */\n  protected _checkPasswords(){\n    let p = this.credentials.password;\n    let n = this.credentials.newPassword;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter old password';\n    } else if(n === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p === n){\n      return 'New password cannot the same as the old password';\n    } else if(n !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * On component destruction, unsubscribe to services/streams\n   * to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Update Password\n  \n  {{ errorMessage }}\n  \n    \n      Email\n      \n        \n      \n     \n    \n      Old Password\n      \n        \n      \n     \n    \n      New Password\n      \n        \n      \n     \n    \n      Confirm Password\n      \n        \n      \n     \n    {{passwordMessage}}\n    Submit\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Password    {{ errorMessage }}            Email                                   Old Password                                   New Password                                   Confirm Password                             {{passwordMessage}}    Submit  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdatePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                The logged in user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User e-mail; also used for logging in\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to indicate user when making calls to\nthe server\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role to indicate what areas of the app are accesible to the user;\n0 = student, 1 = instr, 2 = admin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/user-profile/user-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Main user profile component; aimed for use to edit name and\nemail address. Also access update password link to update password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                            Class constructor; includes services to fetch info\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service for updating the information\n\n                                                        \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get the current user information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from services to prevent\nmemory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Initialize the component on creation\n\nGet the logged in user\nSave the user's details to object to be able to edit\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Attempts to update the profile if possible or set error\nmessage if there's a problem\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                        State to maintain open subscriptions until component is destoryed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:24\n                            \n                        \n\n                \n                    \n                        Database user id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                        User details (as an object)\nCurrently includes: firstName, lastName, and email\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Main user profile component; aimed for use to edit name and\n * email address. Also access update password link to update password\n */\n@Component({\n  selector: 'user-profile',\n  templateUrl: './user-profile.template.html'\n})\n\nexport class UserProfileComponent{\n\n  /**\n   * Database user id\n   */\n  private userId: number;\n  /**\n   * User details (as an object)\n   * Currently includes: firstName, lastName, and email\n   */\n  private userInfo: any;\n  /**\n   * State to maintain open subscriptions until component is destoryed\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential error message\n   */\n  private errorMessage: string = '';\n\n  /**\n   * Class constructor; includes services to fetch info\n   *\n   * @param {ProfileService} _profileService Service for updating the information\n   * @param {AuthenticationService} _authService Service to get the current user information\n   */\n  constructor(\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the component on creation\n   * 1. Get the logged in user\n   * 2. Save the user's details to object to be able to edit\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.userId = res.id;\n      this.userInfo = {\n        firstName: res.firstName,\n        lastName: res.lastName,\n        email: res.email\n      }\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempts to update the profile if possible or set error\n   * message if there's a problem\n   */\n  updateProfile(){\n    this._profileService.editProfile(this.userId, this.userInfo)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.userInfo = {firstName: updated.firstName,\n                      lastName: updated.lastName,\n                      email: updated.email};\n      this._authService.setUser(updated);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * On component destruction, unsubscribe from services to prevent\n   * memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Profile\n  \n    {{ errorMessage }}\n  \n  \n  Update Password\n    \n  \n    \n      \n        First Name\n        \n       \n\n      \n        Last Name\n        \n       \n     \n    \n      \n        Email\n        \n       \n     \n    Submit\n   \n\n\n \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Profile      {{ errorMessage }}      Update Password                        First Name                             Last Name                                      Email                        Submit    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_User.html":{"url":"interfaces/_User.html","title":"interface - _User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  _User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                base user class which is extended by other interfaces\nand rarely used on its own\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User first name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User last name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to index users\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n[unreleased]\n\nUPDATED responses on error in app controllers\nADDED check for null phage from DB when trying to create a plate\nFIXED testing error with deleting fridge\n\n[v1.0.9] - 2018-04-16\n\nfixed issue with potential incorrect error dropping bact tube to plate directly\nUPDATED plexer submission\nwhen submit button is pushed, a spinner appears in the top left of the results table and the submit button is disabled\nspinner is hidden and button is active once the results come back from the server\nthis will hopefully minimize students sending the same plexer request several times bc they weren't sure if it went through--this causes server overload\n\n\n\n[v1.0.8] - 2018-02-26\n\nSave parent id of phage from plate to fridge\nGet parent info about phage when getting fridge\nDisplay phage parent strain number in dialog\n\n[v1.0.7] - 2018-02-23\n\nUPDATED the way phage mutations are stored to save memory\nupdated all genetics components\nupdated model\nupdated front end interface and pipe\n\n\nUPDATED on rest bacteria, only WT-like genotypes sent to client so smaller data transfer\nREMOVED rate limiting (causing server errors)\nFIXED over capacity for plexer\nADDED \"Page not found\" component for invalid URL\nADDED shuffle plaque lists to force mutants and recombinants to the front\nWhen small/large plaques 100-400\nHandle and shuffle each separately\n\n\n\n[v1.0.6] - 2018-02-20\n\nFIXED recombination error which was under-generating recombinants\nADDED ability to delete non-admin users\nADDED ability to delete course\nREMOVED revoke access option on user fridges\n\n[v1.0.5]\n\nADDED rate limiting\ngenetics routes\nuser auth/update routes\n\n\nUPDATED backend genetics testing\n\n[v1.0.4] - 2018-01-24\n\nADDED Ability to reset password\nsends email to user if user exists\npassword reset token expires after an hour\n\n\nADDED SSL support\nFIXED bugs\ngrant scenario access\nSign out blocking issue\n\n\n\n[v1.0.3] - 2018-01-23\n\nADDED User profile and update password pages\nADDED user controller tests\n\n[v1.0.2] - 2018-01-10\n\nFIXED issues with genetics logic\noverflow on REST bact\nnum phage generated with uneven input phage numbers\nupdated corresponding tests\n\n\nswitched console output to debug\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    public/app/admin/admin-home/admin-home.component.ts\n            \n            \n                component\n            \n            \n                AdminHomeComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.guard.service.ts\n            \n            \n                injectable\n            \n            \n                AdminGuard\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-create/course-create.component.ts\n            \n            \n                component\n            \n            \n                CourseCreateComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-edit/course-edit.component.ts\n            \n            \n                component\n            \n            \n                CourseEditComponent\n            \n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-indiv/course-indiv.component.ts\n            \n            \n                component\n            \n            \n                CourseIndivComponent\n            \n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-list/course-list.component.ts\n            \n            \n                component\n            \n            \n                CourseListComponent\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-scenario/course-scenario.component.ts\n            \n            \n                component\n            \n            \n                CourseScenarioComponent\n            \n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.resolver.ts\n            \n            \n                injectable\n            \n            \n                CourseResolver\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                    public/app/admin/not-auth/not-auth.component.ts\n            \n            \n                component\n            \n            \n                NotAuthComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-fridge.component.ts\n            \n            \n                component\n            \n            \n                StudentFridgeComponent\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-phage.component.ts\n            \n            \n                component\n            \n            \n                StudentPhageComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-indiv/student-indiv.component.ts\n            \n            \n                component\n            \n            \n                StudentIndivComponent\n            \n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-list/student-list.component.ts\n            \n            \n                component\n            \n            \n                StudentListComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.resolver.ts\n            \n            \n                injectable\n            \n            \n                StudentResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.roles.ts\n            \n            \n                variable\n            \n            \n                StudentRolesArray\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.service.ts\n            \n            \n                injectable\n            \n            \n                StudentService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    public/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/authentication/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    public/app/authentication/forget-password/forget-password.component.ts\n            \n            \n                component\n            \n            \n                ForgetPasswordComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    public/app/authentication/logged-in.guard.service.ts\n            \n            \n                injectable\n            \n            \n                LoggedInGuard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    public/app/authentication/reset-password/reset-password.component.ts\n            \n            \n                component\n            \n            \n                ResetPasswordComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    public/app/authentication/signin/signin.component.ts\n            \n            \n                component\n            \n            \n                SigninComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    public/app/authentication/signout/signout.component.ts\n            \n            \n                component\n            \n            \n                SignoutComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    public/app/authentication/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    public/app/help/help.component.ts\n            \n            \n                component\n            \n            \n                HelpComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    public/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/course.interface.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateInput\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateResults\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlexerInput\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                Fridge\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                StudentFridge\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                ExperimentPhage\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                FridgePhage\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                GenotypePhage\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                Phage\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                StudentPhage\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/scenario.interface.ts\n            \n            \n                interface\n            \n            \n                Scenario\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                AdminStudent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                Student\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                variable\n            \n            \n                sortStudents\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                _User\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/nav/nav.component.ts\n            \n            \n                component\n            \n            \n                NavComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    public/app/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/pipes/people-list-names.pipe.ts\n            \n            \n                pipe\n            \n            \n                PeopleListNamesPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/person-name.pipe.ts\n            \n            \n                pipe\n            \n            \n                PersonNamePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-deletions.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageDeletionsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-guesses.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageGuessesPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-mutations.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageMutationsPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-parents.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageParentsPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    public/app/profile/profile.service.ts\n            \n            \n                injectable\n            \n            \n                ProfileService\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    public/app/profile/update-password/update-password.component.ts\n            \n            \n                component\n            \n            \n                UpdatePasswordComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    public/app/profile/user-profile/user-profile.component.ts\n            \n            \n                component\n            \n            \n                UserProfileComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/fridge.component.ts\n            \n            \n                component\n            \n            \n                FridgeComponent\n            \n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/phage-dialog.component.ts\n            \n            \n                component\n            \n            \n                PhageDialogComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    public/app/scenario/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/experiment.service.ts\n            \n            \n                injectable\n            \n            \n                ExperimentService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/lab-room/lab-room.component.ts\n            \n            \n                component\n            \n            \n                LabRoomComponent\n            \n            \n                90 %\n                (37/41)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/landing-room/landing-room.component.ts\n            \n            \n                component\n            \n            \n                LandingRoomComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/location.component.ts\n            \n            \n                component\n            \n            \n                LocationComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/model-room/model-room.component.ts\n            \n            \n                component\n            \n            \n                ModelRoomComponent\n            \n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/plexer-room/plexer-room.component.ts\n            \n            \n                component\n            \n            \n                PlexerRoomComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.component.ts\n            \n            \n                component\n            \n            \n                ScenarioComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.globals.ts\n            \n            \n                variable\n            \n            \n                ScenarioGlobals\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.resolver.ts\n            \n            \n                injectable\n            \n            \n                ScenarioResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.service.ts\n            \n            \n                injectable\n            \n            \n                ScenarioService\n            \n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                    public/app/shared/confirm-delete-dialog.component.ts\n            \n            \n                component\n            \n            \n                ConfirmDeleteDialogComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    public/app/shared/read-error.ts\n            \n            \n                variable\n            \n            \n                readErrorMessage\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/compiler-cli : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/platform-server : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^1.0.0-beta.6\n        \n            angular-skyhook : ^1.0.0-beta.2\n        \n            async : ^2.6.0\n        \n            bcrypt : ^1.0.3\n        \n            body-parser : ^1.15.2\n        \n            bootstrap : ^4.0.0-beta.3\n        \n            clone : ^2.1.1\n        \n            compression : ^1.6.0\n        \n            connect-flash : ^0.1.1\n        \n            connect-mongo : ^1.3.2\n        \n            cookie-parser : ^1.4.3\n        \n            core-js : 2.4.1\n        \n            debug : ^3.1.0\n        \n            ejs : ^2.5.2\n        \n            eslint : ^4.1.1\n        \n            express : ^4.14.0\n        \n            express-brute : ^1.0.1\n        \n            express-brute-memcached : ^0.0.1\n        \n            express-graceful-exit : ^0.4.0\n        \n            express-session : ^1.14.1\n        \n            helmet : ^3.10.0\n        \n            https : ^1.0.0\n        \n            jquery : ^3.2.1\n        \n            loadash : ^1.0.0\n        \n            method-override : ^2.3.6\n        \n            mongoose : ^5.0.7\n        \n            mongoose-sequence : ^4.0.1\n        \n            morgan : ^1.7.0\n        \n            ng2-dnd : ^5.0.2\n        \n            ngx-breadcrumbs : ^0.0.3\n        \n            nodemailer : ^4.4.2\n        \n            open-iconic : https://github.com/iconic/open-iconic.git\n        \n            passport : ^0.3.2\n        \n            passport-facebook : ^2.1.1\n        \n            passport-google-oauth : ^1.0.0\n        \n            passport-local : ^1.0.0\n        \n            popper.js : ^1.12.9\n        \n            random-js : ^1.0.8\n        \n            react-dnd-html5-backend : ^2.5.4\n        \n            react-dnd-touch-backend : ^0.3.20\n        \n            reflect-metadata : ^0.1.8\n        \n            rxjs : ^5.5.2\n        \n            systemjs : ^0.19.39\n        \n            tslib : ^1.8.0\n        \n            zone.js : ^0.8.18\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncricket\nRun angular tests with : karma start\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CourseModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelpModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScenarioModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_providers\n\n\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        34 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTO DO\nModels\n\n[ ] fridge\n[ ] phage\n[X] scenerios\n[X] prefill info\n\n\n[ ] users\n[ ] add course info\n\n\n\nControllers\nURL controllers\n\n[ ] fridge\n[ ] GET methods\n[ ] get scenario fridge\n\n\n[ ] POST methods\n[ ] save scenario fridge\n\n\n\n\n[ ] phage\n[ ] scenerios\n[ ] GET methods\n[X] list of scenarios\n[ ] list of scenarios by course\n[ ] specific scenario\n\n\n\n\n[ ] user\n[ ] GET methods\n[X] sign out\n[ ] profile page\n\n\n[ ] POST methods\n[X] sign up\n[X] sign in\n[ ] update profile\n\n\n\n\n[ ] course\n[ ] GET methods\n[ ] get scenario list for course\n\n\n[ ] POST methods\n[ ] update scenario list for course\n\n\n[ ] DELETE methods\n[ ] delete course and all info\n\n\n\n\n\nGenetics logic controllers\n\n[ ] generate phage\n[ ] perform cross\n[ ] get genotype\n\nRoutes\n\n[ ] scenarios/fridge\n[ ] user\n[ ] update profile\n\n\n\nModules\nNavigation/Header\n\n[X] logo\n[ ] linksHome\n\n[ ] Scenerio list\n[ ] text\n[ ] style\n\n\n[ ] Scenario info\n[ ] text\n[ ] style\n\n\n\nSolve Scenarios\n\n[ ] nav between lab, plexer, model\n[ ] only allowed by scenario\n\n\n[ ] scenario description\n[ ] text\n[ ] \"get started\" button to default location\n[ ] style\n\n\n[ ] fridge componentFridge\n\n[ ] shelf\n[ ] organization\n[ ] drag and drop\n[ ] style\n\n\n[ ] phage\n[ ] add phage by drag\n[ ] remove phage\n\n\n[ ] navigate-shelf\n[ ] add shelf\n[ ] move to shelfLab room\n\n\n\n[ ] diluation tubes\n[ ] add solution by drag\n[ ] remove solution by drag\n[ ] adjustable dilution value\n[ ] style\n\n\n[ ] e. coli tubes\n[ ] dilution value\n[ ] add phage by drag\n[ ] hide unused tube\n[ ] remove solution by drag\n[ ] style\n\n\n[ ] plate\n[ ] add solution\n[ ] incubate\n[ ] clear\n[ ] select phage by click/dragPlexer\n\n\n\n[ ] data table\n[ ] add phage by drag\n[ ] incubateModel\n\n\n\n[] alignments\n\nHelp Info\nUser\n\n[ ] Change name\n[ ] Possible visualization settings\n[ ] change password\n\nAdmin/Course\n\n[ ] admin only access\n[ ] choose scenarios\n[ ] list of users\n[ ] promote to admin\n[ ] forget passwordTests\nBackend\n\n\n\n\nAngular\nErrors\n(node:1293) DeprecationWarning: open() is deprecated in mongoose >= 4.11.0, use openUri() instead, or set the useMongoClient option if using connect() or createConnection(). See http://mongoosejs.com/docs/connections.html#use-mongo-client\n[0] 10:00:52 AM - Compilation complete. Watching for file changes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            readErrorMessage   (public/.../read-error.ts)\n                        \n                        \n                            ScenarioGlobals   (public/.../scenario.globals.ts)\n                        \n                        \n                            sortStudents   (public/.../student.interface.ts)\n                        \n                        \n                            StudentRolesArray   (public/.../student.roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    public/app/shared/read-error.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            readErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        readErrorMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : function(error: any): string {\n  console.log(JSON.stringify(error));\n  let errorMessage = 'Unknown error';\n  if(error.error && error.error.message){\n   return error.error.message\n  } else if(error.error && error.error.text){\n   return error.error.text\n  } else if (error && error.message){\n   return error.message;\n  } else if(error){\n    return error;\n  }\n  //console.error(errorMessage);\n  return errorMessage;\n}\n                        \n                    \n\n\n            \n        \n\n    public/app/scenario/scenario.globals.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ScenarioGlobals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ScenarioGlobals:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /**\n   * Number of starting phage when taken from fridge\n   */\n  numPhage:1000000,\n  /**\n   * Maximum number of plaques allowed on lab room plate\n   */\n  plateCapacity: 1500,\n  /**\n   * Maximum number of plaques allowed on each plexer room plate\n   */\n  plexerCapacity: 200,\n  /**\n   * Number of shelves in the fridge\n   */\n  nFridgeShelf: 32,\n  /**\n   * Number of spots on each shelf of the fridge\n   */\n  nFridgeSpots: 16,\n  /**\n   * Default dilution value for lab room; can be changed by user\n   */\n  defaultLabDilution: 10,\n  /**\n   * Default dilution value for plexer room; can be changed by user\n   */\n  defaultPlexerDilution: 5,\n  /**\n   * Length of the gene in number of basepairs\n   */\n  geneLength: 350,\n  /**\n   * Number of basepairs per \"block\" when guessing deletion location\n   */\n  deletionGuessLength: 10\n}\n                        \n                    \n\n                \n                    \n                        Scenario/experiement-related values used to\n\nSend the correct parameters to backend calls\nMatch some backend parameters\nHave consistent defaults\n\n\n                    \n                \n\n            \n        \n\n    public/app/interfaces/student.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortStudents:     \n\n                    \n                \n                    \n                        \n                            Default value : function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n                        \n                    \n\n                \n                    \n                        Function to sort students alphabetically by last name;\nUses first name for ties\nMakes the name lowercase before sorting to ensure sort is\ncase insensitive\n\n                    \n                \n\n            \n        \n\n    public/app/admin/student/student.roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StudentRolesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        StudentRolesArray:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    key: 'student',\n    label: 'Student',\n    value: 0\n  }, {\n    key: 'instr',\n    label: 'Instructor',\n    value: 1\n  }, {\n    key: 'admin',\n    label: 'Administrator',\n    value: 2\n  }\n]\n                        \n                    \n\n                \n                    \n                        List of user roles with their numeric value (value), string value\nused by MongoDB (key), and string displayed on webpage (label)\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers.html":{"url":"additional-documentation/controllers.html","title":"additional-page - Controllers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Controllers\n\n\n\n  \n    \n      Admin Controller\n    \n    \n      listUsers\n      getUser\n      deleteUser\n      setRole\n      hasAuthorization\n      isAdmin\n    \n  \n  \n  \n    \n      Course Controller\n    \n    \n      isInstructor\n      listCourses\n      listCourseNum\n      createCourse\n      getCourse\n      editCourse\n      deleteCourse\n      getStudents\n      deleteCourseStudents\n      getPossibleInstructors\n      setInstructor\n      getScenarioStatus\n      courseByNum\n    \n  \n  \n  \n    \n      Fridge Controller\n    \n    \n      stockFridge\n      getFridge\n      getStudentFridge\n      saveDeletions\n      deleteStudentFridge\n      addPhageToFridge\n      updatePhage\n      deletePhage\n      phageById\n      findFridgeByScenOwner\n      hasFridgeAuthorization\n      hasPhageAuthorization\n      getFridgeInfo\n    \n  \n  \n  \n    \n      Genetics Controller\n    \n    \n      createPlate\n      handlePlexer\n    \n  \n  \n  \n    \n      Scenario Controller\n    \n    \n      list\n      read\n      scenarioByCode\n    \n  \n  \n  \n    \n      User Controller\n    \n    \n      getUser\n      editUser\n      resetPasswordEmail\n      resetPassword\n      signin\n      signup\n      signout\n      grantAccess\n      requiresLogin\n      userById\n      getUserInfo\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/admin-controller.html":{"url":"additional-documentation/controllers/admin-controller.html","title":"additional-page - Admin Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Admin Controller\n\n  \n    Description\n  \n  \n    The Admin-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                listUsers\n              \n\n                getUser\n              \n\n                deleteUser\n              \n\n                setRole\n              \n\n                hasAuthorization\n              \n\n                isAdmin\n              \n          \n        \n      \n    \n  \n\n      \n  \nlistUsers\n\n  \n    \n      listUsers(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/students\n\n      \n\n        list all users in the system for admin OR\nlist all students for instructor courses for instructor\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    \njson object to response\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error\n\n    \n    200 OKIf user is admin, returns list of all users\nIf user is instr, returns list of students in instr's courses\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetUser\n\n  \n    \n      getUser(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/students/:studentId\n\n      \n\n        Get information about a secondary user (not necessarily the user currently logged in)\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    \njson object to response\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeleteUser\n\n  \n    \n      deleteUser(req, res) ⇒ Object\n    \n\n        DELETE\n/api/admin/:userId/students/:studentId\n\n      \n\n        Delete a secondary user\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    \njson object to response\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsetRole\n\n  \n    \n      setRole(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/students/:studentId\n\n      \n\n        Update a user's role to \"student\", \"instructor\", or \"admin\"\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n      \n      bodyObjectnew role; one of \"student\", \"instr\", \"admin\"\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    \njson object to response\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated user information\n\n      \n\n\n\n\n    \n\n      \n      \n    Request Example :\n    /api/admin/1/students/67Make user 67 an instructor \n  {\n  role: \"instr\"\n}\n \n  \n\n    \n\n  \n\n      \n  \nhasAuthorization\n\n  \n    \n      hasAuthorization(req, res, next) ⇒ Object | function\n    \n\n        Middleware to check if current user is instructor or admin\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionthe next middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    \njson object to response if not authorized otherwise go to next middleware\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin or instructor, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to the next middleware if user is admin or instructor\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nisAdmin\n\n  \n    \n      isAdmin(req, res, next) ⇒ Object | function\n    \n\n        Middleware to check if current user is admin\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionthe next middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    \njson object to response if not authorized otherwise next middleware\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to next middleware if user is an admin\n\n      \n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/course-controller.html":{"url":"additional-documentation/controllers/course-controller.html","title":"additional-page - Course Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Course Controller\n\n  \n    Description\n  \n  \n    The Course-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                isInstructor\n              \n\n                listCourses\n              \n\n                listCourseNum\n              \n\n                createCourse\n              \n\n                getCourse\n              \n\n                editCourse\n              \n\n                deleteCourse\n              \n\n                getStudents\n              \n\n                deleteCourseStudents\n              \n\n                getPossibleInstructors\n              \n\n                setInstructor\n              \n\n                getScenarioStatus\n              \n\n                courseByNum\n              \n          \n        \n      \n    \n  \n\n      \n  \nisInstructor\n\n  \n    \n      isInstructor(req, res, next) ⇒ Object | function\n    \n\n        Middleware to allow only admin and the instructor of the course to proceed\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n      \n      courseCOURSEcourse details from courseByNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    json object to response not allowed or next middleware if allowed\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 Forbiddencurrent user not authorized, send error as {message: 'Not instructor of this course'}\n\n    \n    next()If user authorized, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nlistCourses\n\n  \n    \n      listCourses() ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses\n\n      \n\n        get list of courses\nis user is admin, list all\nif user is instructor, list courses for teacher\n      \n\n      \n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUser is admin and there are no courses OR user is instr role but not the instructor of any courses; sends message as {message: 'No courses found'}\n\n    \n    200 OKList of courses; courses in the list depend on user role\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nlistCourseNum\n\n  \n    \n      listCourseNum(req, res) ⇒ Object\n    \n\n        GET\n/api/courses\n\n      \n\n        Return the list of course numbers that currently exist\n\nThis is used during sign-up and does not require a user to be logged in\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not Foundthere are no courses; sends message as {message: \"No courses found\"}\n\n    \n    200 OKList of courses with properties courseNum and id (DB id)\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ncreateCourse\n\n  \n    \n      createCourse(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/courses\n\n      \n\n        Create a new course and set current user as instructor\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectdetails about new course: courseNum and description\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKNewly created course\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetCourse\n\n  \n    \n      getCourse(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses/:courseNum\n\n      \n\n        Get information about an existing course\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKthe course information including courseNum, description, and list of instructors\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \neditCourse\n\n  \n    \n      editCourse(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/courses/:courseNum\n\n      \n\n        Update the description of an existing course\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      bodyObjectcourse information to update - the description\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated course information\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeleteCourse\n\n  \n    \n      deleteCourse() ⇒ Object\n    \n\n        DELETE\n/api/admin/:userId/courses/:courseNum\n\n      \n\n        Delete a course\n      \n\n      \n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about course just deleted\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetStudents\n\n  \n    \n      getStudents(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses/:courseNum/students\n\n      \n\n        get list of students for a course\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in the course; each student has properties firstName, lastName, userId, accessGranted, and email\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeleteCourseStudents\n\n  \n    \n      deleteCourseStudents(req, res) ⇒ Object\n    \n\n        DELETE\n/api/admin/:userId/courses/:courseNum/students\n\n      \n\n        Bulk delete all students in a particular course\nMost useful when finished with semester and course is over\nDoes not remove the course itself\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 SuccessList of students just deleted\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetPossibleInstructors\n\n  \n    \n      getPossibleInstructors(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses/:courseNum/instructors\n\n      \n\n        Get list of all possible instructors for a specific course (not including the instrcutors currently teaching the course)\nAdmin can add current instructors or students in the course\nInstructors can add other instrctors\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of possible instrcutors; each person has properties firstName, lastName, userId, and role\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsetInstructor\n\n  \n    \n      setInstructor(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/courses/:courseNum/instructors/:studentId'\n\n      \n\n        Add an instuctor to the course and make user \"instructor\" role if user is a student\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      studentUSERuser to make instructor; identified with userById with id studentId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error updating the course, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error updating the user, sends description of error as {message: error-message}\n\n    \n    200 OKThe updated course\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetScenarioStatus\n\n  \n    \n      getScenarioStatus(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses/:courseNum/:scenarioId\n\n      \n\n        Get scenario status (aka access granted) for a scenario for all\nstudents in a course\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum\n\n      \n      scenarioSCENARIOscenario of interested; identified with scenarioByCode with id scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    404 Not FoundThere are no students in the course, sends error as {message: \"no students found\"}\n\n    \n    500 Internal Server ErrorDatabase error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in course with scenario access; each object in list has firstName, lastName, userId, and status\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ncourseByNum\n\n  \n    \n      courseByNum(req, res, next, id) ⇒ function\n    \n\n        :courseNum\n\n      \n\n        Middleware to find course by course number\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n    idstringcourse number from URL\n\n  \n\n\n\n      \n\n      \nReturns :  function    \n    go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass the error to the next middleware\n\n    \n    next('Failed to load course id')If course doesn't exist, pass message to middleware\n\n    \n    next()If success, set request course and go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/fridge-controller.html":{"url":"additional-documentation/controllers/fridge-controller.html","title":"additional-page - Fridge Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Fridge Controller\n\n  \n    Description\n  \n  \n    The Fridge-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                stockFridge\n              \n\n                getFridge\n              \n\n                getStudentFridge\n              \n\n                saveDeletions\n              \n\n                deleteStudentFridge\n              \n\n                addPhageToFridge\n              \n\n                updatePhage\n              \n\n                deletePhage\n              \n\n                phageById\n              \n\n                findFridgeByScenOwner\n              \n\n                hasFridgeAuthorization\n              \n\n                hasPhageAuthorization\n              \n\n                getFridgeInfo\n              \n          \n        \n      \n    \n  \n\n      \n  \nstockFridge\n\n  \n    \n      stockFridge(req, res) ⇒ Object\n    \n\n        GET\n/api/cricket/:userId/:scenarioId/new-fridge\n\n      \n\n        Create a new fridge stocked with the scenario phage\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestError creating phage for this fridge, sends error as {message: 'Unable to create new phage for scenario'}\n\n    \n    500 Internal Server ErrorError saving the new fridge, sends error as {message: 'Unable to save new fridge'}\n\n    \n    200 OKNewly created fridge cleaned by getFridgeInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetFridge\n\n  \n    \n      getFridge(req, res) ⇒ Object\n    \n\n        GET\n/api/cricket/:userId/:scenarioId\n\n      \n\n        Get the current user's fridge\nOnly include info needed to be known for lab room, plexer room, and model room of scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKUser's fridge for this scenario cleaned by getFridgeInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetStudentFridge\n\n  \n    \n      getStudentFridge(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/students/:studentId/:scenarioId\n\n      \n\n        Get a user's fridge and include lots of details only\nadmin/instrs should know\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKIf fridge doesn't exist, return owner/scenario as if the fridge exists (information needed for front-end rendering)\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsaveDeletions\n\n  \n    \n      saveDeletions(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/:userId/:scenarioId/deletions\n\n      \n\n        Update the deletion guesses for the fridge\nguesses come in as object and are stringified when saving\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectupdated guesses to save\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKreturns stringified updated guesses to response\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeleteStudentFridge\n\n  \n    \n      deleteStudentFridge(req, res, next) ⇒ function\n    \n\n        /api/admin/:userId/students/:studentId/:scenarioId\n\n      \n\n        Middleware which deletes a fridge and all phage within the fridge\nCalled after granting access because new fridge\nneeds to be created for the user/scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext function to go to\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioexternal:SCNEARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  function    \n    go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next()If successful, delete the fridge and all phage in the fridge, then go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \naddPhageToFridge\n\n  \n    \n      addPhageToFridge(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/:userId/:scenarioId/fridge-phage\n\n      \n\n        Create new phage with phage type \"user\", save that to DB, and add to the current fridge\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectinformation about new strain; has properties\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bade RequestOn error creating new phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error adding phage to fridge, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about the newly added strain, including info about phage parents (fetch from DB)\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nupdatePhage\n\n  \n    \n      updatePhage(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/:userId/:scenarioId/:phageId\n\n      \n\n        Update the comment or submitted state of a phage\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectupdated strain info; has comment, strainNum, and submitted\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, sends description of error as {message: error-message}\n\n    \n    200 OKreturn updated phage with information about phage parents (from DB)\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeletePhage\n\n  \n    \n      deletePhage(req, res) ⇒ Object\n    \n\n        DELETE\n/api/cricket/:userId/:scenarioId/:phageId\n\n      \n\n        Delete a phage strain and remove it from the fridge\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error deleting phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error removing phage from fridge, sends error as {message: \"Unable to remove strain from fridge\"}\n\n    \n    200 OKreturn the newly deleted phage strain\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nphageById\n\n  \n    \n      phageById(req, res, next, id) ⇒ function\n    \n\n        :phageId\n\n      \n\n        Middleware which identifies a phage strain based on the\nid\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n    idstringmongoDB id of phage strain to look for\n\n  \n\n\n\n      \n\n      \nReturns :  function    \n    go to the next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Phage not found')If phage doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request strain and go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nfindFridgeByScenOwner\n\n  \n    \n      findFridgeByScenOwner(req, next) ⇒ function\n    \n\n        \n      \n\n        Middleware to find a fridge by the current user and current scenario\nuser and scenario were set in previous middleware\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  function    \n    go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Failed to find fridge')If fridge doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request fridge and go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nhasFridgeAuthorization\n\n  \n    \n      hasFridgeAuthorization(req, res, next) ⇒ Object | function\n    \n\n        Middleware to check if current user is fridge owner\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nhasPhageAuthorization\n\n  \n    \n      hasPhageAuthorization(req, res, next) ⇒ Object | function\n    \n\n        Middleware to determine if current user has authorization to\nupdate a phage strain\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress responses object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      strainPHAGEphage strain from phageById with id phageId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetFridgeInfo\n\n  \n    \n      getFridgeInfo(fridge) ⇒ Object\n    \n\n        Helper method to return fridge details in consistent\nformat\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    fridgeFRIDGEfridge object from DB\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    \ncleaned up fridge object with properties\nscenarioDetails, guesses, accessGranted, userId, scenCode, and strains\nEach strain of strains has comment, id, parents, strainNum, phageType, submitted, and numParents\n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/genetics-controller.html":{"url":"additional-documentation/controllers/genetics-controller.html","title":"additional-page - Genetics Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Genetics Controller\n\n  \n    Description\n  \n  \n    The controller which performs genetic crosses/manipulations in\nthe lab and plexer rooms\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                handlePlexer\n              \n          \n        \n      \n    \n  \n\n      \n  \ncreatePlate\n\n  \n    \n      createPlate(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/plate\n\n      \n\n        Creates a plate for the lab room\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to create the plate; has properties phage1 (numPhage and id), (optional) phage2, lawnType, location, capacity, and scenarioData\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    \njson object to response\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestNumber of phage is not set for one of the phage, send error as {message: 'numPhage not set'}\n\n    \n    404 Not foundPhage 1 is not found in DB, send error as {message: Error finding the specified phage(1|2)'}\n\n    \n    500 Internal Server ErrorOn error, sends error message as {message: error-message}\n\n    \n    200 OKsuccessfully generated plate; has properties full, smallPlaque, largePlaque, genotypes, and parents\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nhandlePlexer\n\n  \n    \n      handlePlexer(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/plexer\n\n      \n\n        Generates the NxM plates for the plexer\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to generate plexer;\nhas rowPhage (list with each having id and numPhage),\ncolPhage(list with each having id and numPhage),\nscenarioData, lawnType, location, capacity\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    \njson object to response\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Service ErrorOn error finding phage in DB, send error as {message: error-message}\n\n    \n    200 OKsuccessfully generated plexer result as 2D array where each cell has full, smallPlaque, and largePlaque\n\n      \n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/scenario-controller.html":{"url":"additional-documentation/controllers/scenario-controller.html","title":"additional-page - Scenario Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Scenario Controller\n\n  \n    Description\n  \n  \n    The Scenario-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                list\n              \n\n                read\n              \n\n                scenarioByCode\n              \n          \n        \n      \n    \n  \n\n      \n  \nlist\n\n  \n    \n      list(req, res) ⇒ Object\n    \n\n        GET\n/api/cricket\n\n      \n\n        List all of the sceanrios in order of degree of difficulty\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKReturn list of scenarios\neach scenario has properties label, scenCode, purpose, startingPoint, relevance, and degOfDifficulty\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nread\n\n  \n    \n      read(req, res) ⇒ Object\n    \n\n        GET\n/api/cricket/:scenarioId\n\n      \n\n        Get the details about a specifc scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    returns json object of scenario to response with properties label, scenCode, purpose, startingPoint, relevance, and degOfDiff\n\n\n\n    \n\n  \n\n      \n  \nscenarioByCode\n\n  \n    \n      scenarioByCode(req, res, next, id) ⇒ function\n    \n\n        :scenarioId\n\n      \n\n        Retreives a scenario from a scenario code\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware to follow\n\n  \n    idStringscenario code from URL\n\n  \n\n\n\n      \n\n      \nReturns :  function    \n    \nnext middleware\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)On error, pass the error to next middleware\n\n    \n    next('Failed to load scenario id')\nIf scenario doesn't exist, pass message to next middleware\n\n\n    \n    next()\nif successful, set request scenario and go to next middleware\n\n\n      \n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/user-controller.html":{"url":"additional-documentation/controllers/user-controller.html","title":"additional-page - User Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  User Controller\n\n  \n    Description\n  \n  \n    The User-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                getUser\n              \n\n                editUser\n              \n\n                updatePassword\n              \n\n                resetPasswordEmail\n              \n\n                resetPassword\n              \n\n                signin\n              \n\n                signup\n              \n\n                signout\n              \n\n                grantAccess\n              \n\n                requiresLogin\n              \n\n                userById\n              \n\n                getUserInfo\n              \n          \n        \n      \n    \n  \n\n      \n  \ngetUser\n\n  \n    \n      getUser(req, req) ⇒ Object\n    \n\n        GET\n/api/users/:userId\n\n      \n\n        Get information about a user\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    reqObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKTrimmed user information from getUserInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \neditUser\n\n  \n    \n      editUser(req, res) ⇒ Object\n    \n\n        POST\n/api/users/:userId\n\n      \n\n        Update user info - name and/or email\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectupdated information about user, specifically firstName, lastName, and email\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nupdatePassword\n\n  \n    \n      updatePassword(req, res) ⇒ Object\n    \n\n        POST\n/api/users/:userId/update-password\n\n      \n\n        Update a user password\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectrequest body with password (old password) and newPassword (new password)\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error finding user, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    401 UnauthorizedError changing password, i.e. old password isn't correct, sends error as {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nresetPasswordEmail\n\n  \n    \n      resetPasswordEmail(req, res, next) ⇒ Object\n    \n\n        POST\n/api/auth/forget-password\n\n      \n\n        Sends an email to a user to allow user to reset password\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with email\nincludes \"body\" which has user email\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf error with email transporter, send error as {message: 'Error with server email service'}\n\n    \n    404 Not FoundIf email doesn't belong to a current user send message as {message: 'No account with that email.'}\n\n    \n    422 Unprocessable EntityIf error trying to send reset email, send error to response as {message: error-message}\n\n    \n    200 OKSuccessfully sends the email and sends success message to response\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nresetPassword\n\n  \n    \n      resetPassword(req, res) ⇒ Object\n    \n\n        POST\n/api/auth/reset-password\n\n      \n\n        Allows user to reset the password using a token (sent by email)\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with password (new password),\nconfirmPassword (password entered second time) and token (token sent to email to allow password reset)\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf database error, send {message: error-message}\n\n    \n    404 Not FoundIf token is invalid, send error as {message: 'Invalid token.'}\n\n    \n    403 ForbiddenIf token is expired, send error as {message: 'Token has expired'}\n\n    \n    400 Bad RequestIf password and confirm password don't match, send error as {message: 'Confirm password does not match.'}\n\n    \n    200 OKIf successfully update password, send {message: 'Password has been reset.'}\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsignin\n\n  \n    \n      signin(req, res, next) ⇒ Object | function\n    \n\n        POST\n/api/auth/signin\n\n      \n\n        Using passport authenticate and request login in, attempts to sign users in\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email) and password\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    json object on error or go to next middleware on success\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, send error as {message: error-message}\n\n    \n    next()On success, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsignup\n\n  \n    \n      signup(req, res) ⇒ Object\n    \n\n        POST\n/api/auth/signup\n\n      \n\n        Create a new user\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email), password,\nfirstName, lastName, and courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error creating/saving user, sends {message: error-message}\n\n    \n    400 Bad RequestOn error logging in, sends {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsignout\n\n  \n    \n      signout(req, res) ⇒ Object\n    \n\n        GET\n/api/auth/signout\n\n      \n\n        Sign out a logged in user\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKSends true\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngrantAccess\n\n  \n    \n      grantAccess(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/students/:studentId/:scenarioId\n\n      \n\n        grant access to student for specific scenario\nNote: this function is called after [deleteStudentFridge]{@link fridge-controller.html#deleteStudentFridge} middleware\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent to grant access for from userById with id studentId\n\n      \n      scenarioSCENARIOscenario to grant access for from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectrequest body with access indicating to grant (true) or revoke (false) access\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKIf user doesn't have accessGranted property, send 200 response as if it was successful\n\n    \n    200 OKIf successfully update user, send updated user\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nrequiresLogin\n\n  \n    \n      requiresLogin(req, res, next) ⇒ Object | function\n    \n\n        Middleware to check if current user can access the path depending if they are logged in\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware to follow\n\n  \n\n\n\n      \n\n      \nReturns :  Object | function    \n    \njson response when not logged in otherwise go to next middleware\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    401 UnauthorizedIf not currently logged in, send error as {message: 'User is not logged in'}\n\n    \n    next()If logged in, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nuserById\n\n  \n    \n      userById(req, res, next, id) ⇒ function\n    \n\n        :userId | :studentId\n\n      \n\n        Find user (if they exist) by the user id\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextObjectNext function to go to\n\n  \n    idstringuser's id as a string from URL\n\n  \n\n\n\n      \n\n      \nReturns :  function    \n    \nnext middleware\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next('Invalid user')If id is invalid, pass message to next middleware\n\n    \n    next(error)If some error, pass error to next middleware\n\n    \n    next('User not found')If id doesn't belong to a user, pass message to next middleware\n\n    \n    next()Able to find user\nIf req.curUser isn't set, set request curUser as the logged in user and go to next middleware;\nIf req.curUser is set, set request student as the secondary user and go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetUserInfo\n\n  \n    \n      getUserInfo(user) ⇒ Object\n    \n\n        Returns trimmed user info in a consistent manner\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    userUSERuser object from DB\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    trimmed user object to have properties id, firstName,\nlastName, email, and role\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics.html":{"url":"additional-documentation/genetics.html","title":"additional-page - Genetics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Genetics\n\nPhage\n\n  \n    \n      Phage Scenario\n    \n    \n      generateScenario\n      makeGene\n      makePhage\n      makeWTPhage\n      makeFrameshiftPhage\n      makeDeletionPhage\n      generateFrameshift\n      checkPhageFrameshift\n      getNewSpot\n      generateDeletion\n      checkPhageDeletion\n    \n  \n  \n  \n    \n      Phage Logic\n    \n    \n      doPheno\n      getFrames\n    \n  \n  \n  \n    \n      Phage Experiment\n    \n    \n      recombine\n      mutagenize\n      _validRecombDel\n      _copyDeletion\n    \n  \n  \n \nPlates\n\n  \n    \n      Plate Experiment\n    \n    \n      createPlate\n      createPlatePhage\n      generatePlate\n      computeRecombParameters\n      computeNumOffspring\n      shufflePlaqueList\n    \n  \n  \n  \n    \n      Plexer Experiment\n    \n    \n      createPlexerPlate\n      generatePlexerPlate\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-scenario.html":{"url":"additional-documentation/genetics/phage-scenario.html","title":"additional-page - Phage Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Scenario\n\n  \n    Description\n  \n  \n    Functions which handle creating  phage for different scenarios\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                generateScenario\n              \n\n                makeGene\n              \n\n                makePhage\n              \n\n                makeWTPhage\n              \n\n                makeFrameshiftPhage\n              \n\n                makeDeletionPhage\n              \n\n                _generateFrameshift\n              \n\n                _checkPhageFrameshift\n              \n\n                _getNewSpot\n              \n\n                _generateDeletion\n              \n\n                _checkPhageDeletion\n              \n          \n        \n      \n    \n  \n\n      \n  \ngenerateScenario\n\n  \n    \n      generateScenario(scenario) ⇒ Object\n    \n\n        Generates all of the phage and other necessary info for a given scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    scenarioObjectparameters for the scenario; includes:\n\nmutationFreq (number): chance of mutation as decimal\nrecombinationFreq (number): chance of single recombination as decimal\ngcProb (number): percent of G/C's to use in gene\nminStops (number): minimum number of stop codons when out of frame\nintraMuteDist (number[])\ninterMuteDist (number)\nreferencePhage (string[]): descriptions of reference phage; known WT or mut\notherPhage (string[]): descriptions of non-reference phage; unknown WT or mut\n\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    all info needed for a new scenario\n\nstrains (Object[]): list of strains\nscenarioDetails (Object): scenario info needed for experiments later\n\n\n\n\n    \n\n  \n\n      \n  \nmakeGene\n\n  \n    \n      makeGene(gcProb, minStops) ⇒ Object\n    \n\n        Make a WT gene - has no stop codons normally but has at least\nminStops with frameshifts\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    gcProbnumberGC probability (percent G/C vs A/T)\n\n  \n    minStopsnumberminimum number of stops for frameshifted gene\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    the nucleotide sequence to be used; includes:\n\nwtGene (string): nucleic acids that consitute this gene\nrealStops (number[]): location of stop codons\nframeStopList (number[][]): location and which frameshift the stop occurs\n\n\n\n\n    \n\n  \n\n      \n  \nmakePhage\n\n  \n    \n      makePhage(phageDetails, strainNum, phageType, scenData) ⇒ Object\n    \n\n        Create a phage strain\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageDetailsObjectphage config info (from scenario config)\n\n  \n    strainNumnumberstrain number\n\n  \n    phageTypestringreference or unknown\n\n  \n    scenDataObjectscenario parameters\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    newly created strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n\n    \n\n  \n\n      \n  \nmakeWTPhage\n\n  \n    \n      makeWTPhage(phage, strainNum, phageType, scenData) ⇒ Object\n    \n\n        Create a WT phage - no mutations\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageObjectphage config info (from scenario config)\n\n  \n    strainNumnumberstrain number\n\n  \n    phageTypestringreference or unknown\n\n  \n    scenDataObjectcomputed scenario info\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n\n    \n\n  \n\n      \n  \nmakeFrameshiftPhage\n\n  \n    \n      makeFrameshiftPhage(phage, strainNum, phageType, scenData) ⇒ Object\n    \n\n        Generate a mutant phage strain that has at least 1 frameshift mutation\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageObjectphage config info (from scenario config)\n\n  \n    strainNumnumberstrain number\n\n  \n    phageTypestringreference or unknown\n\n  \n    scenDataObjectcurrent scenario information; used to generate new, valid strain\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n\n    \n\n  \n\n      \n  \nmakeDeletionPhage\n\n  \n    \n      makeDeletionPhage(phage, strainNum, phageType, scenData) ⇒ Object\n    \n\n        Create a phage strain with a large deletion\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageObjectconfiguration for phage to generate from scenario\n\n  \n    strainNumnumberstrain number\n\n  \n    phageTypestringreference or unknown\n\n  \n    scenDataObjectconfiguration for current scenario\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n\n    \n\n  \n\n      \n  \n_generateFrameshift\n\n  \n    \n      _generateFrameshift(shiftType, nShifts, readable, scenData) ⇒ Array\n    \n\n        Attempt to generate a single frameshift mutation\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    shiftTypenumbershould it be insertion, deletion, or random\n\n  \n    nShiftsnumbernumber of shifts total for this phage\n\n  \n    readablestringshould be gene be in frame or not\n\n  \n    scenDataObjectcurrent scenario data to ensure valid phage\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    valid mutation(s) for this new phage or empty list if no valid mutation found\n\n\n\n    \n\n  \n\n      \n  \n_checkPhageFrameshift\n\n  \n    \n      _checkPhageFrameshift(keyMutes, scenData) ⇒ boolean\n    \n\n        Check that the potential frameshift(s) are valid given the\nmutations in other phage in the scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    keyMutesArraymutations to check\n\n  \n    scenDataObjectcurrent scenario data\n\n  \n\n\n\n      \n\n      \nReturns :  boolean    \n    is the frameshift valid?\n\n\n\n    \n\n  \n\n      \n  \n_getNewSpot\n\n  \n    \n      _getNewSpot(lastMade, scenData) ⇒ number\n    \n\n        Attempt to create a new mutation\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    lastMadenumberthe last mutation made\n\n  \n    scenDataObjectcurrent scenario configuration info\n\n  \n\n\n\n      \n\n      \nReturns :  number    \n    location of new frameshift mutation that isn't too close to other mutations\n\n\n\n    \n\n  \n\n      \n  \n_generateDeletion\n\n  \n    \n      _generateDeletion(usedDeleteSpots) ⇒ Array\n    \n\n        Attempt to generate a deletion if we run out of preset deletion spots/lengths\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    usedDeleteSpotsArraylist of deletion spots already used\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    new valid deletion if found or throws error\n\n\n\n    \n\n  \n\n      \n  \n_checkPhageDeletion\n\n  \n    \n      _checkPhageDeletion(keyMutes, usedDeleteSpots) ⇒ boolean\n    \n\n        Check that deletion is valid; far enough away from other deletions\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    keyMutesArraydeletion to check\n\n  \n    usedDeleteSpotsArraydeletions already in play for scenario\n\n  \n\n\n\n      \n\n      \nReturns :  boolean    \n    is the deletion valid?\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-logic.html":{"url":"additional-documentation/genetics/phage-logic.html","title":"additional-page - Phage Logic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Logic\n\n  \n    Description\n  \n  \n    Functions which compute frameshift/phenotype type\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                doPheno\n              \n\n                getFrames\n              \n          \n        \n      \n    \n  \n\n      \n  \ndoPheno\n\n  \n    \n      doPheno(mutantList, stopList) ⇒ string\n    \n\n        Determine the phenotype of a phage based on the list of mutations\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    mutantListArraymutations for this phage strain\n\n  \n    stopListArraylocations of stop codons for varying frameshifts\n\n  \n\n\n\n      \n\n      \nReturns :  string    \n    phenotype; one of \"allTranslated\", \"frameShifted\", \"deleted\", or \"stopped\"\n\n\n\n    \n\n  \n\n      \n  \ngetFrames\n\n  \n    \n      getFrames(whoSays, mutantList, stopList) ⇒ Object\n    \n\n        Get the frame shift for a mutant\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    whoSaysstringwho is asking; not used\n\n  \n    mutantListArraymutatations in this phage\n\n  \n    stopListArraylocations of stop codons depending on framshift\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    includes frame (frameshift number of gene as a whole) and frameList (frameshift cummulatively for each frame)\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-experiment.html":{"url":"additional-documentation/genetics/phage-experiment.html","title":"additional-page - Phage Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Experiments\n\n  \n    Description\n  \n  \n    Functions which perform experiments on the phage strains\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                recombine\n              \n\n                mutagenize\n              \n\n                _validRecombDel\n              \n\n                _copyDeletion\n              \n          \n        \n      \n    \n  \n\n      \n  \nrecombine\n\n  \n    \n      recombine(phageGeno1, phageGeno2, numXOver, numToDo) ⇒ Array\n    \n\n        Recombine 2 strains with specified number of crossovers and number of offspring\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageGeno1Objectgenotype of phage 1 (shifts and deletion)\n\n  \n    phageGeno2Objectgenotype of phage 2 (shifts and deletion)\n\n  \n    numXOvernumbernumber of crossovers\n\n  \n    numToDonumberhow many offspring to create\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    list of recombined offspring genotypes (shifts and deletion)\n\n\n\n    \n\n  \n\n      \n  \nmutagenize\n\n  \n    \n      mutagenize(inList, numDesired) ⇒ Array>\n    \n\n        Create N number of mutants\n\nchecks that mutations aren't too close together on the chromosome\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    inListArraymutations (shifts) of phage to mutagenize\n\n  \n    numDesirednumbernumber of new mutants to generate\n\n  \n\n\n\n      \n\n      \nReturns :  Array>    \n    2D array of new mutants;\nDimensions: numDesired x inList.length+1\n\n\n\n    \n\n  \n\n      \n  \n_validRecombDel\n\n  \n    \n      _validRecombDel(checkPos, delList) ⇒ boolean\n    \n\n        check if recombination position is within a deletion\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    checkPosnumberposition to check\n\n  \n    delListArraylist of deletions for phage\n\n  \n\n\n\n      \n\n      \nReturns :  boolean    \n    true if recombination is valid (not in a deletion); false otherwise\n\n\n\n    \n\n  \n\n      \n  \n_copyDeletion\n\n  \n    \n      _copyDeletion(sPos, ePos, delList) ⇒ Array\n    \n\n        Create a copy of deletions within the start and end positions of\nchromosome chunk to be copied\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    sPosnumberstart position of chrosomome chunk to copy\n\n  \n    ePosnumberend position of chromosome chunk to copy\n\n  \n    delListArraylist of deletions for this phage\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    copy of the deletions\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plate-experiment.html":{"url":"additional-documentation/genetics/plate-experiment.html","title":"additional-page - Plate Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plate Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plates of phage crosses\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                createPlatePhage\n              \n\n                generatePlate\n              \n\n                _computeRecombParameters\n              \n\n                _computeNumOffspring\n              \n\n                _shufflePlaqueList\n              \n          \n        \n      \n    \n  \n\n      \n  \ncreatePlate\n\n  \n    \n      createPlate(phage1, phage2, lawnType, specials, capacity, whoCalled, scenData) ⇒ Object\n    \n\n        Creates the lab room plate\n\nOnly used in the lab room\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phage1Objectfirst phage in the cross\n\n  \n    phage2Object | nullsecond phage in the cross or null if not crossing\n\n  \n    lawnTypestringE. coli bacteria type \"B\" or \"K\"\n\n  \n    specialsObjectother special parameters (not used)\n\n  \n    capacitynumbermax number of plaques allowed on the plate\n\n  \n    whoCalledstringlocation/room asking to generate the plate\n\n  \n    scenDataObjectscenario information\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    new plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques, number is index of genotype in genotypes list\ngenotypes (number[][]): list of genotypes for this plate\nparents (string[]): ids of input phage\n\n\n\n\n    \n\n  \n\n      \n  \ncreatePlatePhage\n\n  \n    \n      createPlatePhage() ⇒ Object\n    \n\n        Create the genotypes and strains for this plate\n\nUsed by both the lab room and plexer room\n      \n\n      \nReturns :  Object    \n    phage for this plate\n\ngenoList (): list of genotypes\nstrainList (number[]): list of indices corresponding to genoList\nparents (string): ID's for original phage used to create plate\n\n\n\n\n    \n\n  \n\n      \n  \ngeneratePlate\n\n  \n    \n      generatePlate() ⇒ object\n    \n\n        Phenotypes the plate phage and ensures not too many phage on the plate\n\nThis function is only used in the lab room\n      \n\n      \nReturns :  object    \n    representation of plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques; number is index of genotype in genotypes list\ngenotypes\n\n\n\n\n    \n\n  \n\n      \n  \n_computeRecombParameters\n\n  \n    \n      _computeRecombParameters(f1, f2, p, n) ⇒ Array\n    \n\n        Compute the recombination parameters\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    f1numberfraction of phage1\n\n  \n    f2numberfraction of phage2\n\n  \n    pnumberrecombination probability\n\n  \n    nnumbertotal number of offspring expected\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    \nnumber of single, double, and triple recombinants to create\n\n\n\n\n    \n\n  \n\n      \n  \n_computeNumOffspring\n\n  \n    \n      _computeNumOffspring(n1, n2, nR, mutFreq, recFreq, identical) ⇒ Object\n    \n\n        Compute the expected number of offspring\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    n1numbernumber of input for phage1\n\n  \n    n2numbernumber of input for phage2\n\n  \n    nRnumberratio of phage1 to phage2\n\n  \n    mutFreqnumbermutation frequency for the scenario\n\n  \n    recFreqnumberfrequency of recombination for scenario\n\n  \n    identicalbooleanare the two phage identical\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    numbers/types of offspring to create\n\nnumOffspring (number): number of offspring aiming for\ntotal (number): actual number of offspring to be generated\nnumGeno (number[]): number of each parental geonotype\nnumMuts (number[]): number of mutants for each parental genotype\nnumRecomb (number[]): number of single, double, and triple recomb\n\n\n\n\n    \n\n  \n\n      \n  \n_shufflePlaqueList\n\n  \n    \n      _shufflePlaqueList(inList, numInput) ⇒ Array\n    \n\n        shuffle strains; force mutants/recombinants to be towards the front of the list\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    inListArraystrain list to shuffle\n\n  \n    numInputnumbernumber of input/parent phage\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    shuffled strain list\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plexer-experiment.html":{"url":"additional-documentation/genetics/plexer-experiment.html","title":"additional-page - Plexer Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plexer Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plexer plates\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlexerPlate\n              \n\n                generatePlexerPlate\n              \n          \n        \n      \n    \n  \n\n      \n  \ncreatePlexerPlate\n\n  \n    \n      createPlexerPlate(rowPhage, colPhage, lawnType, special, capacity, whoCalled, scenData) ⇒ Object\n    \n\n        Creates the plexer results\n\nOnly used in the plexer room\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    rowPhageArraylist of input phage representing the rows\n\n  \n    colPhageArraylist of input phage representing the columns\n\n  \n    lawnTypestringE. coli bacteria type; \"B\" or \"K\"\n\n  \n    specialObjectother parameters; not used\n\n  \n    capacitynumbermaximum number of phage per plate\n\n  \n    whoCalledstringlocation asking to create the plexer\n\n  \n    scenDataObjectcurrent scenario data\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    plexer results; 2D array (but as an object) where each cell is a \"plate\" that has\n\nfull (boolean): plate over capacity?\nsmallPlaque (number): number of small plaque on the plate\nlargePlaque (number): number of large plaque on the plate\n\n\n\n\n    \n\n  \n\n      \n  \ngeneratePlexerPlate\n\n  \n    \n      generatePlexerPlate(lawnTypeStr, genoList, strainList, capacity, scenData) ⇒ Object\n    \n\n        Phenotype the phage and format results for front-end\n\nOnly used by the plexer room\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    lawnTypeStrstringE. coli bacteria type; \"B\" or \"K\"\n\n  \n    genoListArraylist of genotypes on the plate\n\n  \n    strainListArraylist of strains which is the index to the genotype\n\n  \n    capacitynumbercapacity of each plexer plate\n\n  \n    scenDataObjectcurrent scenario data\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    \nresults for this single plexer plate\nfull (boolean): is plate over capacity\nsmallPlaque (number): number of small plaque on plate\nlargePlaque (number): number of large plaque on plate\n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models.html":{"url":"additional-documentation/models.html","title":"additional-page - Models","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Models\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/course-model.html":{"url":"additional-documentation/models/course-model.html","title":"additional-page - Course Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Course Model\n\n  \n    Description\n  \n  \n    Database schema for course\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\ncourseNum\n\n\n\ndescription\n\n\n\ninstructors\n\n\n\n\n\n  \n\nProperties  \n  \n    \n      \n          REQUIRED\n\n      courseNum\n      \n    \n      courseNum : string\n    \n\n      \n        \n          \n          uniquely identifable course ID\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      description\n      \n    \n      description : string\n    \n\n      \n        \n          \n          basic text description of the course\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      instructors\n      \n    \n      instructors : Array\n    \n\n      \n        \n          \n          list of instructors for the course\n\n        \n      \n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/fridge-model.html":{"url":"additional-documentation/models/fridge-model.html","title":"additional-page - Fridge Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Fridge Model\n\n  \n    Description\n  \n  \n    Database schema for fridge\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\nowner\n\n\n\nscenario\n\n\n\naccessGranted\n\n\n\nstrains\n\n\n\nscenarioDetails\n\n\n\nguesses\n\n\n\n\n\n  \n\nProperties  \n  \n    \n      \n      owner\n      \n    \n      owner : USER\n    \n\n      \n        \n          \n          user who owns the fridge\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      scenario\n      \n    \n      scenario : SCENARIO\n    \n\n      \n        \n          \n          scenario the fridge is for\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      accessGranted\n      \n    \n      accessGranted : boolean\n    \n\n      \n        \n          \n          has access been granted by instructor\n\nwhen false, phage strains are the same for all users\nwhen true, phage are generated using random numbers\n\n\n        \n      \n    \n        \n          Default Value : false\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      strains\n      \n    \n      strains : Array\n    \n\n      \n        \n          \n          list of phage strains\nin the fridge\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      scenarioDetails\n      \n    \n      scenarioDetails : String\n    \n\n      \n        \n          \n          \nstringified object of the scenario details generated when\nthe fridge was created and is needed for performing\nexperiments\nincludes interMuteDist, intraMuteDist, mutationFreq, recombinationFreq,\ndeleteSizes, deleteSpots, usedDeleteSpots,\nusedShiftSpots, wtGene, realStops, framesStopList\n\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      guesses\n      \n    \n      guesses : String\n    \n\n      \n        \n          \n          stringified object of user's\nguesses for locations of deletions where the key is the\nstrain number of the guess and the value is an array of\nboolean values indicating if guessed a deletion\n\n        \n      \n      \n        \n          \n    Example : \n  \"{'1': [false, false, false, false, true, true, ...],\n  '2': [true, true, true, false, false, false, ...],\n  '3': [false, false, false, false, false, false, ...]\n }\"\n \n  \n        \n      \n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/phage-model.html":{"url":"additional-documentation/models/phage-model.html","title":"additional-page - Phage Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Phage Model\n\n  \n    Description\n  \n  \n    Database schema for phage strains\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\nstrainNum\n\n\n\nowner\n\n\n\nscenarioOrigin\n\n\n\nphageType\n\n\n\nmutationList\n\n\n\ndeletion\n\n\n\ncomment\n\n\n\nsubmitted\n\n\n\nparents\n\n\n\nnumParents\n\n\n\n\n\n  \n\nProperties  \n  \n    \n      \n          REQUIRED\n      strainNum\n      \n    \n      strainNum : number\n    \n\n      \n        \n          \n          location of the phage in the fridge; note this is 0-based but fridge interface is 1-based\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      owner\n      \n    \n      owner : USER\n    \n\n      \n        \n          \n          user who this phage belongs to\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      scenarioOrigin\n      \n    \n      scenarioOrigin : SCENARIO\n    \n\n      \n        \n          \n          scenario that\nthis phage was created for\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      phageType\n      \n    \n      phageType : String\n    \n\n      \n        \n          \n          description of who created phage; must be one of reference, unknown or user\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      mutationList\n      \n    \n      mutationList : Array\n    \n\n      \n        \n          \n          list of frameshift mutations\n\nfor each mutation, absolute value of number indicates position in the gene\npositive/negative number indicates plus/minus frameshift\n\n\n        \n      \n      \n        \n          \n    Example : \n    One plus frameshift mutation \n  [43]\n \n  \n\n    Example : \n    One minus frameshift mutation \n  [-178]\n \n  \n\n    Example : \n    Two frameshifts of opposite type  \n  [106, -213]\n \n  \n        \n      \n  \n\n\n  \n  \n    \n      \n      deletion\n      \n    \n      deletion : Array\n    \n\n      \n        \n          \n          list of deletions in the strain;\n\nif length 2, [0] is start of deletion and [1] is end\nif length greater than 2, there are multiple deletions that start on even index positions and end on odd index position\n\n\n        \n      \n      \n        \n          \n    Example : \n    80 bp deletion at the beginning of gene \n  [0, 80]\n \n  \n\n    Example : \n    150 bp deletion in the middle of the gene \n  [125, 275]\n \n  \n\n    Example : \n    Multiple deletions: 40 bp-90 bp and 200 bp-280 bp \n  [40, 90, 200, 280]\n \n  \n        \n      \n  \n\n\n  \n  \n    \n      \n      comment\n      \n    \n      comment : String\n    \n\n      \n        \n          \n          User/scenario comment that describes this phage strain; makes it easier to remember details about each phage\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      submitted\n      \n    \n      submitted : boolean\n    \n\n      \n        \n          \n          for user phage, is this a phage that should be graded by instructor\n\nused when scenario asks users to create a phage with a specific mutation and makes it easier for the instr to phage\n\n\n        \n      \n    \n        \n          Default Value : false\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      parents\n      \n    \n      parents : Array\n    \n\n      \n        \n          \n          when phage created in the lab room on the plate, these are the parent(s) used during the experiment\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      numParents\n      \n    \n      numParents : number\n    \n\n      \n        \n          \n          when phage created in lab room on the lab, number of parents used during the experiment\n\nused to know if a phage has a parent that was deleted from the DB\n\n\n        \n      \n    \n        \n          Default Value : 0\n        \n      \n\n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/scenario-model.html":{"url":"additional-documentation/models/scenario-model.html","title":"additional-page - Scenario Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Scenario Model\n\n  \n    Description\n  \n  \n    Database schema for scenarios (scenarios are created when the application runs the first time)\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\nlabel\n\n\n\nfileCode\n\n\n\nscenCode\n\n\n\ndefOfDiff\n\n\n\nmutationFreq\n\n\n\nrecombinationFreq\n\n\n\ngcProb\n\n\n\nminStops\n\n\n\nintraMuteDist\n\n\n\ninterMuteDist\n\n\n\npurpose\n\n\n\nrelevance\n\n\n\nstartingPoint\n\n\n\nreferencePhage\n\n\n\notherPhage\n\n\n\n\n\n  \n\nProperties  \n  \n    \n      \n      label\n      \n    \n      label : string\n    \n\n      \n        \n          \n          human-readable label describing the scenario\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      fileCode\n      \n    \n      fileCode : string\n    \n\n  \n\n\n  \n  \n    \n      \n          INDEX\n      scenCode\n      \n    \n      scenCode : string\n    \n\n      \n        \n          \n          short string used to uniquely\nidentify each scenario via URL\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      defOfDiff\n      \n    \n      defOfDiff : number\n    \n\n      \n        \n          \n          relative degree of difficulty used to order the scenarios on the scenario page\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      mutationFreq\n      \n    \n      mutationFreq : number\n    \n\n      \n        \n          \n          chance creating a new frameshift mutation during an experiment\n\n        \n      \n    \n        \n          Default Value : 0.0004\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      recombinationFreq\n      \n    \n      recombinationFreq : number\n    \n\n      \n        \n          \n          chance of single recombination when crossing two phage in an experiment\n\n        \n      \n    \n        \n          Default Value : 0.04\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      gcProb\n      \n    \n      gcProb : number\n    \n\n      \n        \n          \n          integer number for percent G and C's when creating the WT gene\n\n        \n      \n    \n        \n          Default Value : 72\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      minStops\n      \n    \n      minStops : number\n    \n\n      \n        \n          \n          minumum number of possible stop codons that would be created during frameshifts of a gene\n\n        \n      \n    \n        \n          Default Value : 10\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      intraMuteDist\n      \n    \n      intraMuteDist : Array\n    \n\n      \n        \n          \n          mutations on the same phage are \nbetween [0] and [1] distance apart when interMuteDist isn't set\n\n        \n      \n    \n        \n          Default Value : [10, 80]\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      interMuteDist\n      \n    \n      interMuteDist : number\n    \n\n      \n        \n          \n          minimum distance apart that\nmutations should be for different phage of the same scenario; equals -1 when unset\n\n        \n      \n    \n        \n          Default Value : -1\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      purpose\n      \n    \n      purpose : string\n    \n\n      \n        \n          \n          description of the goal of the scenario for users\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      relevance\n      \n    \n      relevance : String\n    \n\n      \n        \n          \n          description of why this scenario is important for learning\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      startingPoint\n      \n    \n      startingPoint : String\n    \n\n      \n        \n          \n          description of the phage\nstrains in the fridge when first created\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      referencePhage\n      \n    \n      referencePhage : Array\n    \n\n      \n        \n          \n          each item is a phage to be created for the scenario when fridge created\n\neach item includes details about what mutations/deletions, if any, to include in the phage\nas a reference phage, mutation type is told to user\n\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      otherPhage\n      \n    \n      otherPhage : Array\n    \n\n      \n        \n          \n          each item is a phage to be created for the scenario when fridge created\n\neach item includes details about what mutations/deletions, if any, to include in the phage\nas an other phage, mutation type is not told to user and discovering the mutation is often the puprose for the scenario\n\n\n        \n      \n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/user-model.html":{"url":"additional-documentation/models/user-model.html","title":"additional-page - User Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  User Model\n\n  \n    Description\n  \n  \n    Database schema for user\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\nuserId\n\n\n\nfirstName\n\n\n\nlastName\n\n\n\nemail\n\n\n\npassword\n\n\n\ncourse\n\n\n\naccessGranted\n\n\n\nrole\n\n\n\nlastLogin\n\n\n\nresetPasswordToken\n\n\n\nresetPasswordExpires\n\n\n\n\n\nMethods\n\n\n\n\n\n\nauthenticate\n\n\n\nchangePassword\n\n\n\n\n\nEnums\n\n\n\n\n\n\nrolesEnum\n\n\n\n\n\n  \n\nMethods  \n  \n    \n      \n      authenticate\n      \n    \n      authenticate(candidatePassword, callback) ⇒ function\n    \n\n      \n        \n          \n          Determines if the entered password is correct\n\n        \n      \n      \n        \n            \n              Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    candidatePasswordstringuser input password to compare to database\n\n  \n    callbackfunctionCallback function to pass result to\n\n  \n\n\n        \n      \n      \n        \n            Returns :  function    \n    Pass error message and if password is a match to the callback function\n\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      changePassword\n      \n    \n      changePassword(oldPassword, newPassword, callback) ⇒ function\n    \n\n      \n        \n          \n          Update a user password, assuming the oldPassword is correct\n\n        \n      \n      \n        \n            \n              Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    oldPasswordstringuser input for current password\n\n  \n    newPasswordstringthe new password user wants to change to\n\n  \n    callbackfunctionCallback function to pass result to\n\n  \n\n\n        \n      \n      \n        \n            Returns :  function    \n    Pass error message or null to callback function\n\n\n        \n      \n  \n\n\nProperties  \n  \n    \n      \n          INDEX\n      userId\n      \n    \n      userId : number\n    \n\n      \n        \n          \n          auto-incremented user ID\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      firstName\n      \n    \n      firstName : string\n    \n\n      \n        \n          \n          user's first name\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      lastName\n      \n    \n      lastName : string\n    \n\n      \n        \n          \n          user's last name\n\n        \n      \n  \n\n\n  \n  \n    \n      \n          REQUIRED\n      email\n      \n    \n      email : string\n    \n\n      \n        \n          \n          user's email address\n\n        \n      \n  \n\n\n  \n  \n    \n      \n          VALIDATE\n      password\n      \n    \n      password : string\n    \n\n      \n        \n          \n          user's password; actual password is not stored in DB\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      course\n      \n    \n      course : COURSE\n    \n\n      \n        \n          \n          course the user is part of\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      accessGranted\n      \n    \n      accessGranted : Object\n    \n\n      \n        \n          \n          for each scenario (as key), has access been granted\n\n        \n      \n      \n        \n          \n    Example : \n  {\"scen1\": false, \"scen2\": true, \"scen3\": true}\n \n  \n        \n      \n  \n\n\n  \n  \n    \n      \n      role\n      \n    \n      role : string\n    \n\n      \n        \n          \n          user's role which is used to determine website access; one of rolesEnum\n\n        \n      \n    \n        \n          Default Value : student\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      lastLogin\n      \n    \n      lastLogin : Date\n    \n\n      \n        \n          \n          date and time of the last time the user logged in\n\n        \n      \n    \n        \n          Default Value : time of account creation\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      resetPasswordToken\n      \n    \n      resetPasswordToken : string\n    \n\n      \n        \n          \n          token generated for user when they request a password reset; necessary to be able to set the new password\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      resetPasswordExpires\n      \n    \n      resetPasswordExpires : Date\n    \n\n      \n        \n          \n          date and time that the password-reset token expires; token is no longer valid after this time\n\n        \n      \n  \n\n\nEnumerables  \n  \n    \n      \n      rolesEnum\n      \n    \n      rolesEnum : enum\n    \n\n      \n        \n          \n          List of valid roles for users and error message\n\n        \n      \n      \n        \n            \n              \n  \n    \n        Param\n        Type\n        Default\n        Description\n    \n  \n  \n\n      valuesstring[\"admin\",\"instr\",\"student\"]acceptable values\n\n      \n      messagestringValue \"{VALUE}\" is not a valid roleerror message on unacceptable value\n\n        \n\n\n\n        \n      \n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
