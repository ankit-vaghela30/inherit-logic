var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.412,1,1.134]],["body/components/AdminComponent.html",[0,0.734,1,1.787,2,0.488,3,0.328,4,1.177,5,0.301,6,3.715,7,0.189,8,5.809,9,1.08,10,5.809,11,4.02,12,7.146,13,2.784,14,3.268,15,5.106,16,1.365,17,3.697,18,1.032,19,3.79,20,3.005,21,2.35,22,1.662,23,2.773,24,0.976,25,2.502,26,1.708,27,5.809,28,0.414,29,0.968,30,2.331,31,7.146,32,2.985,33,1.306,34,2.717,35,1.415,36,2.378,37,2.101,38,1.483,39,5.809,40,0.685,41,0.011,42,1.015,43,0.559,44,0.787,45,3.13,46,4.227,47,2.686,48,2.278,49,2.348,50,2.594,51,1.575,52,0.628,53,1.514,54,0.79,55,4.227,56,0.929,57,1.514,58,1.471,59,0.699,60,0.557,61,2.187,62,1.35,63,1.658,64,2.278,65,0.315,66,0.54,67,4.227,68,3.378,69,4.643,70,0.957,71,2.686,72,1.787,73,1.177,74,1.177,75,1.057,76,1.618,77,1.057,78,1.575,79,1.177,80,1.002,81,1.115,82,0.523,83,1.177,84,1.057,85,1.177,86,1.057,87,1.177,88,1.057,89,1.618,90,1.057,91,1.848,92,1.057,93,1.177,94,1.057,95,1.115,96,1.618,97,1.086,98,1.618,99,1.057,100,1.177,101,1.03,102,1.086,103,0.766,104,1.99,105,1.057,106,1.146,107,1.057,108,0.475,109,1.057,110,1.177,111,1.057,112,0.787,113,1.057,114,1.177,115,1.057,116,1.177,117,1.03,118,1.177,119,1.057,120,0.414,121,1.115,122,1.177,123,1.086,124,0.685,125,1.057,126,0.787,127,1.057,128,1.177,129,1.057,130,1.177,131,1.057,132,1.177,133,1.057,134,1.177,135,1.057,136,1.057,137,1.057,138,1.057,139,1.177,140,1.057,141,1.177,142,1.057,143,1.115,144,1.146,145,1.177,146,0.007,147,0.007]],["title/injectables/AdminGuard.html",[148,1.724,149,3.137]],["body/injectables/AdminGuard.html",[2,0.336,3,0.401,5,0.368,7,0.296,9,1.181,18,0.847,20,3.43,21,3.314,22,2.097,28,0.505,30,1.517,33,1.491,35,1.256,36,2.902,37,2.275,38,1.376,40,1.074,41,0.011,42,1.014,43,0.558,44,1.235,45,3.573,52,1.149,54,0.826,56,0.722,59,0.717,60,0.68,63,2.023,65,0.384,66,0.659,146,0.008,147,0.008,148,2.787,149,4.59,150,4.534,151,5.829,152,4.59,153,3.849,154,3.455,155,2.522,156,4.97,157,6.8,158,3.389,159,5.159,160,5.829,161,5.539,162,3.022,163,5.539,164,5.159,165,4.905,166,2.771,167,2.692,168,5.3,169,2.522,170,1.201,171,2.097,172,3.164,173,3.513,174,1.517,175,1.962,176,1.95,177,4.534,178,5.159,179,5.159,180,4.123,181,5.159,182,4.534]],["title/components/AdminHomeComponent.html",[0,0.412,75,1.134]],["body/components/AdminHomeComponent.html",[0,0.741,1,1.263,2,0.329,3,0.392,4,1.406,5,0.36,7,0.225,9,1.196,16,1.381,18,1.04,24,1.166,25,2.526,26,1.923,41,0.01,42,1,54,0.64,59,0.494,60,0.665,65,0.376,66,0.645,70,0.927,72,1.92,73,1.406,74,1.406,75,1.92,76,1.822,77,1.263,78,1.773,79,1.406,80,1.198,81,1.333,82,0.625,83,1.406,84,1.263,85,1.406,86,1.263,87,1.406,88,1.263,89,1.822,90,1.263,91,2.02,92,1.263,93,1.406,94,1.263,95,1.333,96,1.822,97,1.297,98,1.822,99,1.263,100,1.406,101,1.23,102,1.297,103,0.915,104,2.137,105,1.263,106,1.369,107,1.263,108,0.567,109,1.263,110,1.406,111,1.263,112,0.94,113,1.263,114,1.406,115,1.263,116,1.406,117,1.23,118,1.406,119,1.263,120,0.494,121,1.333,122,1.406,123,1.297,124,0.818,125,1.263,126,0.94,127,1.263,128,1.406,129,1.263,130,1.406,131,1.263,132,1.406,133,1.263,134,1.406,135,1.263,136,1.263,137,1.263,138,1.263,139,1.406,140,1.263,141,1.406,142,1.263,143,1.333,144,1.369,145,1.406,146,0.008,147,0.008,183,4.439,184,4.036,185,4.439,186,2.733,187,5.228,188,3.254,189,4.838,190,3.68,191,5.75,192,4.527,193,6.542]],["title/modules/AdminModule.html",[194,1.448,195,3.137]],["body/modules/AdminModule.html",[1,2.069,2,0.349,3,0.416,5,0.382,7,0.239,9,1.076,16,1.132,18,0.868,41,0.011,54,0.665,59,0.852,60,0.706,65,0.506,66,0.684,75,2.069,115,2.069,126,0.997,146,0.008,147,0.008,149,5.725,155,2.584,174,1.575,184,4.282,194,2.506,195,6.143,196,1.619,197,2.771,198,3.859,199,2.313,200,3.712,201,4.709,202,4.709,203,4.709,204,4.709,205,3.694,206,4.458,207,3.514,208,1.811,209,5.358,210,2.664,211,5.972,212,5.025,213,6.794,214,3.514,215,2.887,216,2.771,217,5.358,218,5.358,219,5.358,220,5.358,221,4.282,222,5.358,223,5.358,224,4.709,225,5.358]],["title/interfaces/AdminStudent.html",[170,0.821,226,2.442]],["body/interfaces/AdminStudent.html",[2,0.362,3,0.432,5,0.397,7,0.248,9,1.004,16,1.427,18,1.016,28,0.544,29,1.159,41,0.011,42,1.161,43,0.586,51,2.058,52,1.034,54,0.544,56,1.169,59,0.681,65,0.565,70,0.889,72,1.392,108,0.625,146,0.008,147,0.008,154,3.434,169,2.887,170,1.375,171,1.508,210,2.182,226,3.749,227,4.116,228,2.223,229,6.116,230,3.777,231,4.891,232,3.749,233,3.851,234,2.768,235,2.768,236,2.325,237,1.155,238,1.368,239,3.442,240,2.325,241,3.13,242,3.631,243,5.254,244,4.447,245,2.768,246,2.768,247,4.447,248,2.251,249,4.447,250,4.447,251,3.442,252,4.447,253,4.447,254,3.277,255,3.442,256,4.447,257,6.067,258,4.447,259,2.402,260,4.447]],["title/components/AppComponent.html",[0,0.412,77,1.134]],["body/components/AppComponent.html",[0,0.74,1,1.26,2,0.328,3,0.391,4,1.818,5,0.359,7,0.225,9,0.726,16,1.323,18,0.979,19,4.261,24,1.163,25,2.526,35,1.765,38,1.045,41,0.01,42,0.999,54,0.639,59,0.493,60,0.664,65,0.375,66,0.643,70,0.643,72,1.918,73,1.402,74,1.402,75,1.26,76,1.818,77,1.918,78,2.078,79,1.402,80,1.194,81,1.329,82,0.623,83,1.402,84,1.26,85,1.402,86,1.26,87,1.402,88,1.26,89,1.818,90,1.26,91,2.018,92,1.26,93,1.402,94,1.26,95,1.329,96,1.818,97,1.294,98,1.818,99,1.26,100,1.402,101,1.227,102,1.294,103,0.912,104,2.135,105,1.26,106,1.365,107,1.26,108,0.566,109,1.26,110,1.402,111,1.26,112,0.938,113,1.26,114,1.402,115,1.26,116,1.402,117,1.227,118,1.402,119,1.26,120,0.493,121,1.329,122,1.402,123,1.294,124,0.816,125,1.26,126,0.938,127,1.26,128,1.402,129,1.26,130,1.402,131,1.26,132,1.402,133,1.26,134,1.402,135,1.26,136,1.26,137,1.26,138,1.26,139,1.402,140,1.26,141,1.402,142,1.26,143,1.329,144,1.365,145,1.402,146,0.008,147,0.008,166,2.728,167,2.272,169,2.483,189,4.83,239,4.039,261,4.426,262,4.039,263,3.378,264,5.739,265,5.739,266,5.036]],["title/modules/AppModule.html",[194,1.448,267,3.352]],["body/modules/AppModule.html",[2,0.271,3,0.324,5,0.297,7,0.186,37,2.266,41,0.011,52,0.619,59,0.866,60,0.549,63,1.635,65,0.428,66,0.532,70,0.532,77,2.107,101,1.877,113,1.928,117,1.877,126,0.776,146,0.007,147,0.007,152,2.885,174,1.226,189,4.255,190,3.706,194,2.269,195,5.334,196,1.26,197,2.156,198,3.408,199,3.218,200,3.278,205,3.441,207,2.976,208,1.409,214,2.976,215,2.246,216,2.156,246,2.074,251,2.579,267,6.646,268,3.664,269,3.664,270,3.664,271,3.664,272,3.664,273,5.334,274,5.334,275,5.334,276,5.334,277,5.334,278,4.153,279,5.334,280,5.334,281,3.987,282,4.168,283,5.753,284,3.664,285,3.331,286,5.753,287,2.885,288,4.168,289,4.168,290,3.083,291,5.753,292,3.331,293,3.559,294,3.664,295,5.753,296,4.168,297,4.168,298,2.885,299,3.664,300,4.168,301,4.168,302,4.168,303,4.168,304,4.168,305,4.168,306,4.168,307,4.168,308,3.083,309,3.664,310,3.664,311,3.664,312,4.168,313,4.168,314,3.982,315,3.664,316,3.664,317,5.265,318,4.168,319,4.168,320,3.664,321,4.168]],["title/modules/AppRouteModule.html",[194,1.448,273,3.137]],["body/modules/AppRouteModule.html",[0,0.685,2,0.413,3,0.492,5,0.452,41,0.011,59,0.831,60,0.835,65,0.561,66,0.81,70,0.81,101,1.835,117,1.835,146,0.009,147,0.009,152,5.213,156,4.436,174,1.863,194,2.024,214,3.896,215,4.059,254,3.732,273,5.213,294,5.57,308,4.687,309,5.57,310,5.57,311,5.57,322,6.337,323,4.687]],["title/modules/AuthenticationModule.html",[194,1.448,274,3.137]],["body/modules/AuthenticationModule.html",[2,0.348,3,0.415,5,0.381,7,0.239,17,3.511,41,0.011,49,2.23,54,0.767,59,0.851,60,0.705,65,0.505,66,0.683,94,2.069,95,1.412,125,2.069,126,1.46,129,2.069,131,2.069,133,2.069,146,0.008,147,0.008,174,1.573,194,2.505,196,1.617,197,2.767,198,3.857,199,2.31,200,2.662,207,3.511,208,1.808,212,5.021,214,3.511,215,2.883,274,6.104,290,3.957,324,4.702,325,4.702,326,5.35,327,6.788,328,3.997,329,5.021,330,5.966,331,5.966,332,3.377,333,5.966,334,4.276,335,5.966,336,5.35,337,5.35,338,5.35,339,5.35,340,5.35,341,4.276,342,5.425,343,4.276,344,5.35]],["title/injectables/AuthenticationService.html",[37,1.333,148,1.724]],["body/injectables/AuthenticationService.html",[0,0.367,2,0.323,3,0.2,5,0.184,7,0.289,9,0.811,13,1.932,16,0.672,18,0.515,19,2.631,28,0.252,29,0.672,30,1.903,33,0.907,34,1.533,35,0.627,37,1.186,38,1.624,40,1.048,41,0.011,42,0.99,43,0.632,44,1.205,48,2.746,49,2.762,50,1.8,51,1.093,52,1.258,53,0.923,54,0.877,56,0.855,57,2.014,58,1.956,59,0.55,60,0.339,62,0.823,64,1.388,65,0.192,66,0.329,70,0.718,95,0.68,126,1.499,144,1.093,146,0.005,147,0.007,148,1.89,153,2.006,155,2.138,167,1.403,169,1.533,171,1.755,172,2.635,173,2.695,175,0.979,176,1.795,200,2.797,208,1.9,210,1.581,212,2.982,232,3.029,234,2.006,235,2.006,238,1.273,239,2.494,240,3.468,259,1.112,287,1.782,330,3.544,331,3.544,332,4.109,345,2.264,346,2.252,347,3.163,348,4.158,349,5.18,350,3.242,351,5.622,352,5.622,353,4.032,354,4.942,355,3.222,356,4.032,357,3.675,358,4.514,359,3.675,360,2.264,361,4.158,362,4.032,363,3.222,364,2.575,365,2.205,366,3.544,367,2.575,368,1.325,369,4.004,370,1.864,371,2.138,372,1.685,373,2.51,374,4.983,375,2.173,376,2.075,377,4.195,378,3.102,379,2.55,380,2.791,381,2.43,382,1.9,383,3.544,384,3.544,385,2.982,386,2.908,387,2.494,388,3.544,389,2.575,390,4.032,391,3.544,392,4.032,393,3.478,394,2.575,395,4.032,396,2.575,397,4.124,398,4.983,399,2.575,400,2.575,401,3.222,402,4.983,403,2.982,404,4.032,405,3.544,406,4.032,407,2.575,408,1.533,409,1.8,410,2.375,411,2.982,412,4.032,413,2.575,414,3.102,415,3.891,416,2.982,417,4.48,418,4.032,419,2.575,420,4.032,421,2.575,422,2.127,423,1.842,424,2.275,425,2.631,426,4.032,427,2.494,428,4.032,429,2.575,430,5.622,431,4.032,432,2.575,433,4.032,434,2.575,435,2.791,436,2.494,437,3.242,438,1.8,439,4.032,440,4.367,441,2.575,442,2.575,443,1.593,444,2.575,445,2.575,446,2.575,447,2.575,448,6.473,449,4.032,450,4.942,451,2.575,452,2.575,453,1.905]],["title/components/ConfirmDeleteDialogComponent.html",[0,0.412,80,1.075]],["body/components/ConfirmDeleteDialogComponent.html",[0,0.666,1,1.122,2,0.292,3,0.348,4,1.249,5,0.32,7,0.2,9,0.647,16,1.274,18,0.936,24,1.036,25,2.51,26,1.778,28,0.439,29,1.008,35,1.092,38,1.42,40,0.726,41,0.01,42,1.046,43,0.576,44,0.835,54,0.771,56,0.847,57,1.606,58,1.56,59,0.592,60,0.591,65,0.334,66,0.573,70,0.573,72,1.832,73,1.249,74,1.249,75,1.122,76,1.684,77,1.122,78,1.639,79,1.249,80,1.737,81,2.189,82,1.062,83,1.249,84,1.122,85,1.249,86,1.122,87,1.249,88,1.122,89,1.684,90,1.122,91,1.905,92,1.122,93,1.249,94,1.122,95,1.183,96,1.684,97,1.152,98,1.684,99,1.122,100,1.249,101,1.092,102,1.152,103,0.812,104,2.039,105,1.122,106,1.216,107,1.122,108,0.504,109,1.122,110,1.249,111,1.122,112,0.835,113,1.122,114,1.249,115,1.122,116,1.249,117,1.092,118,1.249,119,1.122,120,0.439,121,2.125,122,1.249,123,1.152,124,0.726,125,1.122,126,0.835,127,1.122,128,1.249,129,1.122,130,1.249,131,1.122,132,1.249,133,1.122,134,1.249,135,1.122,136,1.122,137,1.122,138,1.122,139,1.249,140,1.122,141,1.249,142,1.122,143,1.183,144,1.216,145,1.249,146,0.007,147,0.007,199,1.936,329,4.473,350,3.946,379,2.572,454,6.437,455,3.584,456,6.048,457,6.048,458,5.316,459,5.316,460,6.721,461,4.12,462,3.942,463,6.924,464,6.048,465,3.128,466,6.048,467,3.946,468,4.833,469,4.485,470,3.317,471,2.926,472,2.926,473,3.942,474,2.774,475,4.833]],["title/interfaces/Course.html",[16,0.755,170,0.821]],["body/interfaces/Course.html",[2,0.383,3,0.457,5,0.419,7,0.382,16,1.476,18,1.121,28,0.576,29,1.2,41,0.011,43,0.683,44,1.51,51,1.952,56,1.185,59,0.705,65,0.438,71,3.915,146,0.008,147,0.008,170,1.304,232,4.37,233,4.071,237,1.494,476,5.17,477,4.37,478,1.454,479,5.882]],["title/components/CourseCreateComponent.html",[0,0.412,84,1.134]],["body/components/CourseCreateComponent.html",[0,0.718,1,0.842,2,0.219,3,0.261,4,0.937,5,0.24,7,0.306,9,1.07,16,1.466,18,0.824,21,2.609,22,1.414,23,2.446,24,0.777,25,2.465,26,1.453,28,0.329,29,0.823,30,2.459,32,3,33,1.111,34,2.453,35,1.203,37,1.896,38,1.579,40,0.545,41,0.011,42,0.895,43,0.578,44,0.627,47,2.285,48,1.938,49,2.119,52,0.87,53,2.097,54,0.773,56,0.82,57,1.77,58,1.719,59,0.726,60,0.444,62,1.075,63,1.32,65,0.251,66,0.43,70,0.43,72,1.613,73,0.937,74,0.937,75,0.842,76,1.376,77,0.842,78,1.339,79,0.937,80,0.798,81,0.888,82,0.417,83,0.937,84,1.613,85,0.937,86,0.842,87,0.937,88,0.842,89,1.376,90,0.842,91,1.63,92,0.842,93,0.937,94,0.842,95,0.888,96,1.376,97,0.865,98,1.376,99,0.842,100,0.937,101,0.82,102,0.865,103,0.61,104,1.796,105,0.842,106,0.913,107,0.842,108,0.378,109,0.842,110,0.937,111,0.842,112,0.627,113,0.842,114,0.937,115,0.842,116,0.937,117,0.82,118,0.937,119,0.842,120,0.329,121,0.888,122,0.937,123,0.865,124,0.545,125,0.842,126,0.627,127,0.842,128,0.937,129,0.842,130,0.937,131,0.842,132,0.937,133,0.842,134,0.937,135,0.842,136,0.842,137,0.842,138,0.842,139,0.937,140,0.842,141,0.937,142,0.842,143,0.888,144,0.913,145,0.937,146,0.007,147,0.006,158,2.706,170,0.61,174,0.99,188,2.458,237,1.425,278,3.475,346,1.719,365,1.938,368,2.119,370,2.285,372,3,376,1.823,379,2.06,380,3.42,381,2.123,382,2.18,417,3.42,422,2.594,423,1.236,424,2.609,436,3.057,437,2.197,465,2.556,477,2.662,478,0.998,480,5.068,481,6.207,482,2.959,483,2.368,484,2.78,485,4.941,486,4.941,487,6.449,488,3.519,489,5.154,490,2.453,491,2.691,492,3.293,493,3.628,494,2.706,495,4.941,496,3.057,497,3.367,498,3.224,499,3.057,500,3.367,501,3.42,502,1.938,503,2.662,504,3.367,505,3.367,506,3.367,507,3.367,508,2.197,509,1.453,510,1.557,511,2.959,512,1.614,513,3.367,514,2.285,515,1.983,516,2.959,517,3.367,518,3.367,519,2.691,520,2.33,521,3.367,522,2.959,523,2.959,524,1.894,525,1.894,526,1.983,527,1.983]],["title/components/CourseEditComponent.html",[0,0.412,86,1.134]],["body/components/CourseEditComponent.html",[0,0.52,1,0.564,2,0.236,3,0.175,4,0.628,5,0.161,7,0.203,9,0.325,14,2.04,16,1.435,18,0.941,21,2.11,22,1.038,23,1.901,24,0.52,25,2.379,26,1.066,28,0.22,29,0.604,30,2.344,32,2.552,33,1.591,34,1.983,35,0.549,37,1.533,38,1.627,40,0.365,41,0.011,42,0.696,43,0.562,44,0.42,49,1.714,52,1.051,53,2.469,54,0.692,56,0.637,57,0.807,58,0.784,59,0.721,60,0.297,61,2.957,62,0.72,63,0.884,64,1.214,65,0.168,66,0.288,70,0.581,71,3.713,72,1.305,73,0.628,74,0.628,75,0.564,76,1.01,77,0.564,78,0.983,79,0.628,80,0.86,81,1.819,82,1.012,83,0.628,84,0.564,85,0.628,86,1.305,87,0.628,88,0.564,89,1.01,90,0.564,91,1.267,92,0.564,93,0.628,94,0.564,95,0.595,96,1.01,97,0.579,98,1.01,99,0.564,100,0.628,101,0.549,102,0.579,103,0.408,104,1.452,105,0.564,106,0.611,107,0.564,108,0.253,109,0.564,110,0.628,111,0.564,112,0.42,113,0.564,114,0.628,115,0.564,116,0.628,117,0.549,118,0.628,119,0.564,120,0.22,121,1.508,122,0.628,123,0.579,124,0.365,125,0.564,126,0.42,127,0.564,128,0.628,129,0.564,130,0.628,131,0.564,132,0.628,133,0.564,134,0.628,135,0.564,136,0.564,137,0.564,138,0.564,139,0.628,140,0.564,141,0.628,142,0.564,143,0.595,144,0.611,145,0.628,146,0.005,147,0.004,153,3.039,158,1.677,162,1.338,167,1.262,174,0.663,175,0.857,176,1.066,186,1.515,192,3.61,199,0.973,205,1.006,216,1.166,226,2.81,236,1.515,237,1.186,238,1.391,248,1.467,254,2.136,255,1.394,278,2.81,346,2.324,368,2.007,370,1.677,372,2.552,373,1.619,378,2.74,379,1.158,381,1.492,382,1.763,409,2.329,423,0.564,424,1.841,438,1.619,467,2.366,468,2.898,470,3.858,471,1.47,472,1.47,475,5.338,477,1.954,478,1.053,480,5.162,483,1.841,484,2.04,490,1.983,492,2.56,493,2.934,494,2.104,496,2.815,499,2.243,502,2.045,508,1.47,509,0.973,510,1.042,512,1.08,514,2.824,516,3.188,519,1.801,520,2.51,522,3.188,523,3.188,524,2.934,525,2.934,528,6.323,529,1.981,530,3.73,531,3.627,532,3.627,533,4.584,534,4.584,535,2.81,536,3.61,537,5.216,538,5.216,539,5.216,540,5.216,541,5.216,542,4.168,543,4.168,544,5.216,545,2.956,546,1.327,547,4,548,3.627,549,2.253,550,5.338,551,5.216,552,2.253,553,2.253,554,4.94,555,4.377,556,4.622,557,4.517,558,3.597,559,2.253,560,3.858,561,2.595,562,5.368,563,2.253,564,2.253,565,1.876,566,1.804,567,1.876,568,2.253,569,3.188,570,3.627,571,2.253,572,3.627,573,2.253,574,2.253,575,2.253,576,2.136,577,2.253,578,2.04,579,2.253,580,2.253,581,2.253,582,3.188,583,1.667,584,1.47,585,1.801,586,1.667,587,1.801,588,2.253,589,1.214,590,0.595,591,0.7,592,1.121,593,1.394,594,1.981,595,1.56,596,1.667,597,1.801,598,2.253,599,3.291,600,1.801,601,4,602,2.253,603,2.253,604,4.551,605,2.253,606,1.981,607,1.981,608,1.327,609,2.253,610,6.421,611,2.253,612,2.253,613,3.627,614,1.981,615,2.253,616,2.253,617,1.801,618,1.56,619,3.188,620,3.188,621,2.898,622,2.682,623,2.253,624,1.801,625,3.188,626,3.188,627,3.188,628,2.253,629,3.188,630,2.253,631,2.136,632,3.627,633,2.253,634,2.253,635,1.56,636,1.214,637,1.214,638,3.188,639,2.51,640,2.898]],["title/components/CourseIndivComponent.html",[0,0.412,88,1.134]],["body/components/CourseIndivComponent.html",[0,0.601,1,0.769,2,0.402,3,0.239,4,0.856,5,0.219,7,0.321,9,0.666,16,1.443,18,1.082,19,3.013,21,2.496,22,1.321,23,2.318,24,0.71,25,2.448,26,1.358,28,0.301,29,0.769,30,2.479,32,2.901,33,1.038,34,2.346,35,1.125,37,1.813,38,1.573,40,0.498,41,0.011,42,0.848,43,0.607,44,0.572,47,2.135,49,1.517,51,1.504,52,0.686,53,1.654,54,0.679,56,0.777,57,1.654,58,1.607,59,0.725,60,0.405,61,3.42,62,0.982,63,1.205,65,0.229,66,0.393,70,0.709,71,3.331,72,1.543,73,0.856,74,0.856,75,0.769,76,1.286,77,0.769,78,1.252,79,0.856,80,0.729,81,0.811,82,0.381,83,0.856,84,0.769,85,0.856,86,0.769,87,0.856,88,1.543,89,1.286,90,0.769,91,1.545,92,0.769,93,0.856,94,0.769,95,0.811,96,1.286,97,0.79,98,1.286,99,0.769,100,0.856,101,0.749,102,0.79,103,0.557,104,1.718,105,0.769,106,0.833,107,0.769,108,0.932,109,0.769,110,0.856,111,0.769,112,0.572,113,0.769,114,0.856,115,0.769,116,0.856,117,0.749,118,0.856,119,0.769,120,0.301,121,0.811,122,0.856,123,0.79,124,0.498,125,0.769,126,0.572,127,0.769,128,0.856,129,0.769,130,0.856,131,0.769,132,0.856,133,0.769,134,0.856,135,0.769,136,0.769,137,0.769,138,0.769,139,0.856,140,0.769,141,0.856,142,0.769,143,0.811,144,0.833,145,0.856,146,0.005,147,0.005,158,2.135,162,1.704,170,0.557,174,0.904,186,2.318,237,0.638,238,1.213,242,3.013,248,1.869,255,1.901,263,2.389,278,3.324,281,3.191,298,2.127,346,2.146,370,2.135,376,2.047,379,1.475,381,1.765,409,2.062,423,0.769,477,2.489,478,1.497,480,5.039,483,2.245,484,2.598,488,2.135,490,2.346,492,3.121,493,3.47,494,2.565,496,3.432,502,2.419,508,2.006,509,1.327,510,1.421,512,1.473,514,1.421,530,3.013,534,5.421,535,3.324,536,4.269,546,1.81,565,2.389,566,2.298,567,2.389,578,2.598,587,2.457,589,1.656,590,0.811,591,0.955,592,1.529,593,1.901,595,2.127,596,2.274,597,2.457,599,2.989,600,2.457,601,2.702,608,1.81,635,2.127,636,1.656,637,1.656,638,4.059,640,3.691,641,6.172,642,2.457,643,4.059,644,4.618,645,4.059,646,3.432,647,4.618,648,3.074,649,2.702,650,2.857,651,3.074,652,4.618,653,3.074,654,3.074,655,3.074,656,3.013,657,3.074,658,4.618,659,1.81,660,2.702,661,3.074,662,2.702,663,2.274,664,2.702,665,2.457,666,2.702,667,2.127,668,2.457,669,4.618,670,4.618,671,4.059,672,4.618]],["title/components/CourseListComponent.html",[0,0.412,90,1.134]],["body/components/CourseListComponent.html",[0,0.744,1,0.988,2,0.257,3,0.307,4,1.1,5,0.282,7,0.176,9,1.001,16,1.488,18,0.886,22,1.585,23,2.674,24,0.912,25,2.492,26,1.629,28,0.386,29,0.923,30,2.335,33,1.246,34,2.639,35,1.35,37,2.04,38,1.516,40,0.64,41,0.011,42,0.979,43,0.539,44,0.735,47,2.562,49,1.821,52,0.823,53,1.985,54,0.741,59,0.715,60,0.52,62,1.262,63,1.549,65,0.294,66,0.504,70,0.504,71,2.562,72,1.736,73,1.1,74,1.1,75,0.988,76,1.543,77,0.988,78,1.502,79,1.1,80,0.937,81,1.042,82,0.489,83,1.1,84,0.988,85,1.1,86,0.988,87,1.1,88,0.988,89,1.543,90,1.736,91,1.783,92,0.988,93,1.1,94,0.988,95,1.042,96,1.543,97,1.015,98,1.543,99,0.988,100,1.1,101,0.962,102,1.015,103,0.715,104,1.933,105,0.988,106,1.07,107,0.988,108,0.444,109,0.988,110,1.1,111,0.988,112,0.735,113,0.988,114,1.1,115,0.988,116,1.1,117,0.962,118,1.1,119,0.988,120,0.386,121,1.042,122,1.1,123,1.015,124,0.64,125,0.988,126,0.735,127,0.988,128,1.1,129,0.988,130,1.1,131,0.988,132,1.1,133,0.988,134,1.1,135,0.988,136,0.988,137,0.988,138,0.988,139,1.1,140,0.988,141,1.1,142,0.988,143,1.042,144,1.07,145,1.1,146,0.006,147,0.006,153,2.757,154,2.392,166,2.315,170,0.715,278,3.739,346,2.414,422,1.821,423,1.386,478,1.685,480,4.944,483,2.59,488,3.781,490,2.639,491,3.156,494,2.96,496,3.428,502,2.173,503,2.986,508,2.577,512,1.893,515,2.326,526,2.326,527,2.326,656,4.528,673,6.056,674,3.156,675,4.428,676,5.541,677,3.949,678,3.835,679,3.949,680,3.428,681,3.949,682,3.949,683,3.949,684,3.471,685,4.87]],["title/modules/CourseModule.html",[194,1.448,686,3.352]],["body/modules/CourseModule.html",[2,0.331,3,0.395,5,0.363,7,0.227,16,1.439,17,3.399,18,0.839,41,0.011,59,0.854,60,0.67,65,0.489,66,0.65,80,1.726,82,0.901,84,2.041,86,2.041,88,2.041,90,2.041,92,2.041,126,0.947,146,0.008,147,0.008,174,1.495,186,2.745,194,2.458,196,1.537,197,2.631,198,3.766,199,2.196,200,3.622,205,3.644,207,3.399,208,1.719,214,3.399,215,2.74,216,2.631,481,4.065,528,4.065,530,4.288,557,4.86,583,3.762,584,3.318,641,4.065,673,4.065,686,6.565,687,4.47,688,4.47,689,5.086,690,4.47,691,5.648,692,5.086,693,6.571,694,5.252,695,5.086,696,4.47,697,5.086,698,4.47,699,4.065,700,4.47,701,5.086,702,5.086,703,5.086,704,5.086]],["title/injectables/CourseResolver.html",[148,1.724,691,3.137]],["body/injectables/CourseResolver.html",[2,0.47,3,0.388,5,0.357,7,0.29,9,0.721,14,3.657,16,1.412,21,2.63,22,2.066,28,0.489,30,1.47,33,1.461,35,1.218,37,2.248,38,1.349,40,1.238,41,0.011,42,0.994,43,0.547,44,1.21,52,1.136,59,0.795,60,0.659,62,1.598,63,1.961,65,0.372,66,0.639,146,0.008,147,0.008,148,2.746,156,4.503,161,5.485,162,2.998,163,5.485,166,2.716,167,2.826,168,5.195,169,2.472,170,1.177,174,1.47,175,1.902,176,1.911,237,1.349,254,2.945,278,4.12,293,4.021,350,4.712,377,4.278,386,3.362,423,1.251,477,4.567,491,3.997,494,3.339,496,4.021,508,3.263,512,2.397,585,3.997,660,4.396,691,4.499,705,4.396,706,6.492,707,6.5,708,5.001,709,5.195,710,5.001,711,3.828,712,4.989,713,3.828,714,1.762,715,5.001]],["title/components/CourseScenarioComponent.html",[0,0.412,92,1.134]],["body/components/CourseScenarioComponent.html",[0,0.661,1,0.615,2,0.16,3,0.191,4,0.685,5,0.175,7,0.245,9,0.959,13,1.864,14,3.083,16,1.386,18,1.101,21,2.218,22,1.113,23,2.015,24,0.568,25,2.4,26,1.143,28,0.472,29,0.648,30,2.397,32,2.652,33,0.874,34,2.084,35,0.599,37,1.612,38,1.587,40,1.028,41,0.011,42,0.971,43,0.624,44,1.02,49,1.801,51,1.486,52,1.054,53,1.963,54,0.711,56,1.071,57,1.393,58,1.353,59,0.694,60,0.324,61,3.088,62,0.786,63,0.964,65,0.183,66,0.314,70,0.314,72,1.371,73,0.685,74,0.685,75,0.615,76,1.083,77,0.615,78,1.054,79,0.685,80,0.583,81,0.649,82,0.304,83,0.685,84,0.615,85,0.685,86,0.615,87,0.685,88,0.615,89,1.083,90,0.615,91,1.343,92,1.371,93,0.685,94,0.615,95,0.649,96,1.083,97,0.632,98,1.083,99,0.615,100,0.685,101,0.599,102,0.632,103,0.445,104,1.526,105,0.615,106,0.667,107,0.615,108,0.93,109,0.615,110,0.685,111,0.615,112,0.458,113,0.615,114,0.685,115,0.615,116,0.685,117,0.599,118,0.685,119,0.615,120,0.241,121,0.649,122,0.685,123,0.632,124,0.398,125,0.615,126,0.458,127,0.615,128,0.685,129,0.615,130,0.685,131,0.615,132,0.685,133,0.615,134,0.685,135,0.615,136,0.615,137,0.615,138,0.615,139,0.685,140,0.615,141,0.685,142,0.615,143,0.649,144,0.667,145,0.685,146,0.005,147,0.005,155,3.1,158,1.798,162,1.435,166,1.625,167,1.907,170,0.445,171,1.486,172,1.062,174,0.723,175,0.935,176,1.418,186,2.652,196,1.175,206,2.953,210,1.525,224,2.162,236,2.29,237,1.564,242,3.576,248,1.573,278,2.953,281,2.835,298,1.702,346,2.208,370,1.798,372,1.625,377,2.011,378,1.179,379,1.242,381,1.38,393,1.521,409,1.736,423,0.615,443,2.405,465,2.011,477,3.714,478,1.107,480,5.055,483,1.951,484,2.188,488,1.798,490,2.084,492,2.713,493,3.083,494,2.23,496,2.983,502,2.149,508,1.605,509,1.062,510,1.137,511,2.162,512,1.179,514,2.23,524,2.188,525,2.188,535,2.953,536,3.793,546,1.448,555,3.927,556,3.793,561,3.158,565,2.011,566,1.935,567,2.011,569,3.418,578,2.188,589,1.325,590,0.649,591,0.764,592,1.224,593,1.521,595,1.702,597,1.966,599,2.599,606,2.162,607,2.162,631,2.29,635,1.702,636,1.325,637,1.325,639,2.691,646,2.983,663,1.819,667,1.702,668,3.108,699,6.192,716,2.162,717,2.876,718,2.257,719,4.056,720,3.889,721,3.418,722,4.695,723,3.889,724,3.889,725,2.876,726,3.338,727,3.889,728,3.889,729,2.459,730,3.418,731,3.284,732,4.239,733,3.889,734,2.459,735,4.695,736,3.359,737,3.889,738,2.459,739,3.889,740,2.188,741,2.459,742,2.405,743,2.459,744,2.876,745,2.459,746,2.459,747,2.459,748,2.459,749,2.459,750,2.459,751,2.459,752,2.459,753,2.011,754,2.162,755,2.459,756,2.459,757,2.162,758,2.011,759,2.459,760,2.459,761,2.459,762,2.876,763,3.889,764,2.459,765,2.459,766,2.459,767,1.448,768,2.459,769,2.459,770,2.162,771,3.889,772,2.876,773,3.889]],["title/interfaces/ExperimentPhage.html",[170,0.821,774,2.442]],["body/interfaces/ExperimentPhage.html",[2,0.293,3,0.349,5,0.321,7,0.27,9,0.648,18,0.574,28,0.44,29,1.009,41,0.011,43,0.51,51,1.219,54,0.717,56,1.026,65,0.57,82,0.976,103,0.814,120,0.874,124,0.981,146,0.007,147,0.007,162,1.659,170,1.484,171,1.642,196,1.359,228,1.436,230,3.647,237,1.806,238,1.55,365,1.763,368,1.477,371,1.71,410,2.648,422,2.409,438,2.008,478,1.224,576,2.648,590,1.935,591,1.882,714,1.642,718,2.128,740,3.408,774,3.264,775,2.934,776,2.687,777,4.535,778,4.193,779,3.478,780,2.529,781,2.934,782,1.286,783,3.264,784,2.451,785,2.529,786,2.326,787,2.958,788,2.781,789,2.648,790,2.326,791,4.035,792,2.966,793,2.934,794,2.648,795,3.408,796,1.819,797,2.423,798,4.248,799,3.953,800,3.274,801,2.326,802,2.705,803,3.568,804,2.615,805,4.193,806,4.193,807,4.193,808,4.193,809,3.953,810,2.801,811,3.112,812,2.781,813,2.326,814,2.648,815,3.112,816,2.705]],["title/injectables/ExperimentService.html",[148,1.724,817,3.137]],["body/injectables/ExperimentService.html",[2,0.41,3,0.297,5,0.273,7,0.281,28,0.375,29,0.903,30,1.85,33,1.219,35,0.932,38,1.42,40,1.019,41,0.011,42,0.962,43,0.675,44,1.172,51,1.855,52,1.114,56,0.759,57,1.371,58,1.332,59,0.67,60,0.504,62,1.223,65,0.285,66,0.489,72,1.356,103,0.982,108,0.769,120,0.812,124,1.316,146,0.009,147,0.006,148,2.393,169,2.603,170,0.693,175,1.456,176,1.594,237,1.125,238,1.066,287,2.649,329,4.009,346,1.886,347,4.22,348,5.062,361,5.062,372,2.859,376,2,377,3.99,379,1.731,381,2.411,382,2.314,408,2.603,423,1.712,461,4.22,465,2.804,478,1.382,561,3.405,590,1.43,591,1.684,659,3.192,711,3.192,714,1.469,758,3.54,776,3.428,777,4.234,779,3.119,787,2.34,791,3.192,792,2.193,796,2.193,804,2.955,817,3.751,818,3.364,819,4.234,820,3.28,821,2,822,5.42,823,3.751,824,5.42,825,3.364,826,5.42,827,4.764,828,5.42,829,4.713,830,3.828,831,2.998,832,2.314,833,7.224,834,4.713,835,4.254,836,4.64,837,4.332,838,4.234,839,3.537,840,4.009,841,4.737,842,3.353,843,3.751,844,4.764,845,2.804,846,5.42,847,4.713,848,3.828,849,3.751,850,3.751,851,3.537,852,3.537,853,4.009,854,4.332,855,3.537,856,5.42,857,4.764,858,4.764,859,2.498,860,4.764,861,3.828,862,2.649,863,2.649,864,2.649,865,3.828]],["title/components/ForgetPasswordComponent.html",[0,0.412,94,1.134]],["body/components/ForgetPasswordComponent.html",[0,0.688,1,0.826,2,0.215,3,0.256,4,0.919,5,0.235,7,0.258,9,0.476,13,2.335,16,1.135,18,0.816,22,1.394,24,0.762,25,2.461,26,1.432,28,0.323,29,0.812,30,2.371,32,2.979,33,1.095,35,0.804,36,1.857,37,1.879,38,1.53,40,0.535,41,0.011,42,0.885,43,0.574,44,0.615,45,2.625,50,2.175,51,1.32,52,0.724,53,1.745,54,0.741,56,1.082,57,1.745,58,1.695,59,0.625,60,0.435,62,1.055,65,0.246,66,0.422,70,0.422,72,1.598,73,0.919,74,0.919,75,0.826,76,1.356,77,0.826,78,1.32,79,0.919,80,0.783,81,0.871,82,0.409,83,0.919,84,0.826,85,0.919,86,0.826,87,0.919,88,0.826,89,1.356,90,0.826,91,1.612,92,0.826,93,0.919,94,1.598,95,2.039,96,1.356,97,0.848,98,1.356,99,0.826,100,0.919,101,0.804,102,0.848,103,0.598,104,1.779,105,0.826,106,0.895,107,0.826,108,0.371,109,0.826,110,0.919,111,0.826,112,0.615,113,0.826,114,0.919,115,0.826,116,0.919,117,0.804,118,0.919,119,0.826,120,0.323,121,0.871,122,0.919,123,0.848,124,0.535,125,0.826,126,1.484,127,0.826,128,0.919,129,0.826,130,0.919,131,0.826,132,0.919,133,0.826,134,0.919,135,0.826,136,0.826,137,0.826,138,0.826,139,0.919,140,0.826,141,0.919,142,0.826,143,0.871,144,0.895,145,0.919,146,0.006,147,0.006,175,1.256,240,3.65,263,2.52,328,3.763,332,4.013,341,6.049,346,2.223,347,2.74,365,1.91,366,2.902,368,2.099,369,4.682,371,1.852,373,2.175,374,2.285,378,3.062,379,2.546,380,4.935,381,2.308,382,2.16,385,4.726,386,2.52,408,2.43,417,4.935,483,2.342,488,3.634,490,2.43,498,4.169,502,1.91,509,1.425,510,1.527,514,2.252,515,1.945,526,1.945,527,1.945,545,2.035,558,2.869,565,2.52,566,2.423,567,2.52,608,1.945,742,3.013,866,6.653,867,2.442,868,4.281,869,3.893,870,6.267,871,6.389,872,4.871,873,3.302,874,3.302,875,3.178,876,4.281,877,2.869,878,4.871,879,3.302,880,3.302,881,3.302,882,2.154,883,4.871,884,4.871,885,4.281,886,3.302,887,2.442,888,2.442,889,2.902]],["title/interfaces/Fridge.html",[170,0.821,718,1.408]],["body/interfaces/Fridge.html",[2,0.317,3,0.378,5,0.347,7,0.217,9,0.702,18,0.622,28,0.476,29,1.064,41,0.011,43,0.679,51,1.932,54,0.625,56,1.208,59,0.625,65,0.475,82,0.882,108,0.906,120,0.697,124,1.034,146,0.007,147,0.007,155,2.988,169,2.428,170,1.291,171,2.051,232,3.441,233,3.368,236,3.161,237,1.479,238,0.957,241,4.42,368,2.098,371,2.71,423,1.597,478,1.439,712,4.166,714,2.051,718,2.752,719,3.909,753,4.064,776,2.504,783,4.077,810,2.952,813,3.303,816,3.723,821,2.899,831,2.356,832,2.158,890,3.889,891,6.078,892,5.236,893,4.723,894,3.592,895,5.236,896,3.368,897,3.175,898,3.01]],["title/interfaces/FridgePhage.html",[170,0.821,783,2.442]],["body/interfaces/FridgePhage.html",[2,0.27,3,0.323,5,0.296,7,0.293,9,0.599,18,0.531,28,0.406,29,0.956,41,0.011,43,0.664,44,1.433,51,1.126,54,0.787,56,1.126,65,0.554,82,0.953,103,0.752,120,0.879,124,0.673,146,0.007,147,0.007,162,2.118,170,1.429,171,1.923,196,1.734,228,1.327,230,3.529,237,1.788,238,1.551,365,2.251,368,2.331,371,2.183,410,3.38,422,2.593,438,1.855,478,1.159,576,2.446,590,1.872,591,1.783,714,1.556,718,2.204,740,3.229,774,2.238,775,2.71,776,2.251,777,2.57,778,2.875,779,3.407,780,2.337,781,2.71,782,1.189,783,3.544,784,2.87,785,3.229,786,2.969,787,3.062,788,3.55,789,4.177,790,3.669,791,4.384,792,3.303,793,3.745,794,4.177,795,3.7,796,1.681,797,2.238,798,4.148,799,3.745,800,3.167,801,2.149,802,2.563,803,3.38,804,2.478,805,3.972,806,3.972,807,3.972,808,3.972,809,3.745,810,2.654,811,2.875,812,2.57,813,2.149,814,2.446,815,2.875,816,2.563]],["title/interfaces/GenotypePhage.html",[170,0.821,797,2.442]],["body/interfaces/GenotypePhage.html",[2,0.274,3,0.326,5,0.3,7,0.258,9,0.606,18,0.537,28,0.411,29,0.964,41,0.011,43,0.629,44,1.077,51,1.139,54,0.697,56,1.082,65,0.557,82,1.035,103,1.048,120,0.874,124,0.681,146,0.007,147,0.007,162,1.551,170,1.434,171,1.568,196,1.27,228,1.342,230,3.292,237,1.811,238,1.519,365,1.648,368,1.381,371,1.598,410,2.475,422,2.456,438,2.583,478,1.336,576,3.407,590,2.039,591,2.055,714,1.568,718,2.214,740,3.722,774,2.264,775,2.742,776,2.595,777,2.6,778,2.908,779,3.575,780,2.364,781,2.742,782,1.202,783,3.118,784,2.341,785,2.364,786,2.174,787,3.077,788,2.6,789,2.475,790,2.174,791,4.198,792,3.203,793,2.742,794,2.475,795,3.255,796,2.341,797,3.118,798,4.41,799,4.317,800,3.45,801,3.687,802,2.955,803,3.897,804,2.856,805,4.579,806,4.579,807,4.579,808,4.579,809,4.317,810,3.059,811,4.004,812,4.409,813,2.174,814,2.475,815,2.908,816,2.583]],["title/components/HelpComponent.html",[0,0.412,99,1.134]],["body/components/HelpComponent.html",[0,0.703,1,1.29,2,0.336,3,0.401,4,1.436,5,0.368,9,0.744,16,1.333,18,0.988,24,1.191,25,2.529,26,1.95,35,1.785,38,1.07,41,0.01,42,1.014,51,1.398,54,0.649,59,0.505,60,0.68,65,0.384,66,0.659,70,0.659,72,1.935,73,1.436,74,1.436,75,1.29,76,1.847,77,1.29,78,1.798,79,1.436,80,1.223,81,1.361,82,0.639,83,1.436,84,1.29,85,1.436,86,1.29,87,1.436,88,1.29,89,1.847,90,1.29,91,2.041,92,1.29,93,1.436,94,1.29,95,1.361,96,1.847,97,1.325,98,1.847,99,1.935,100,1.436,101,1.256,102,1.325,103,0.934,104,2.154,105,1.29,106,1.398,107,1.29,108,0.579,109,1.29,110,1.436,111,1.29,112,0.96,113,1.29,114,1.436,115,1.29,116,1.436,117,1.256,118,1.436,119,1.29,120,0.505,121,1.361,122,1.436,123,1.325,124,0.835,125,1.29,126,0.96,127,1.29,128,1.436,129,1.29,130,1.436,131,1.29,132,1.436,133,1.29,134,1.436,135,1.29,136,1.29,137,1.29,138,1.29,139,1.436,140,1.29,141,1.436,142,1.29,143,1.361,144,1.398,145,1.436,146,0.008,147,0.008,484,3.731,899,4.534,900,5.858,901,6.632,902,6.632,903,5.159,904,5.3,905,6.632,906,5.159]],["title/modules/HelpModule.html",[194,1.448,275,3.137]],["body/modules/HelpModule.html",[2,0.399,3,0.475,5,0.436,41,0.011,59,0.846,60,0.807,65,0.549,66,0.782,99,2.138,126,1.14,146,0.009,147,0.009,174,1.8,194,2.357,196,1.85,197,3.167,198,4.097,199,2.643,200,3.046,205,3.817,207,3.817,208,2.069,214,3.817,215,3.299,216,3.167,275,6.035,907,5.381,908,5.381,909,6.122,910,6.122,911,6.122,912,6.122,913,6.122,914,6.122]],["title/components/HomeComponent.html",[0,0.412,101,1.104]],["body/components/HomeComponent.html",[0,0.75,1,1.028,2,0.268,3,0.319,4,1.145,5,0.293,7,0.183,9,0.593,11,3.944,16,1.236,18,0.902,22,1.631,23,2.732,24,0.949,25,2.498,26,1.676,28,0.402,29,0.949,30,1.923,33,1.281,34,2.686,35,1.001,36,2.313,37,2.076,38,1.465,40,0.666,41,0.01,42,1,43,0.48,44,0.765,45,3.071,49,2.521,52,0.847,53,2.041,54,0.855,59,0.64,60,0.542,63,1.612,64,2.215,65,0.306,66,0.525,68,3.286,69,4.554,70,1.005,71,2.635,72,1.766,73,1.145,74,1.145,75,1.028,76,1.587,77,1.028,78,1.545,79,1.145,80,0.975,81,1.085,82,0.509,83,1.145,84,1.028,85,1.145,86,1.028,87,1.145,88,1.028,89,1.587,90,1.028,91,1.821,92,1.028,93,1.145,94,1.028,95,1.085,96,1.587,97,1.056,98,1.587,99,1.028,100,1.145,101,1.72,102,1.056,103,0.745,104,1.967,105,1.028,106,1.773,107,1.028,108,0.735,109,1.028,110,1.145,111,1.028,112,0.765,113,1.028,114,1.145,115,1.028,116,1.145,117,1.001,118,1.145,119,1.028,120,0.402,121,1.085,122,1.145,123,1.056,124,0.666,125,1.028,126,0.765,127,1.028,128,1.145,129,1.028,130,1.145,131,1.028,132,1.145,133,1.028,134,1.145,135,1.028,136,1.028,137,1.028,138,1.028,139,1.145,140,1.028,141,1.145,142,1.028,143,1.085,144,1.114,145,1.145,146,0.007,147,0.007,154,2.46,175,1.563,186,2.381,188,3.514,190,3.973,191,5.009,196,1.722,208,1.926,409,2.545,411,4.215,414,3.678,483,2.646,484,3.206,490,2.686,742,3.525,744,4.215,767,2.421,915,3.614,916,5.009,917,5.699,918,5.699,919,5.699,920,4.111,921,4.111,922,5.699,923,4.215,924,5.699,925,7.062,926,5.699,927,5.699,928,5.699,929,3.944,930,5.699,931,5.009,932,5.699,933,2.545,934,3.356]],["title/components/LandingRoomComponent.html",[0,0.412,105,1.134]],["body/components/LandingRoomComponent.html",[0,0.741,1,0.871,2,0.227,3,0.27,4,0.969,5,0.248,7,0.292,9,0.502,16,1.16,18,0.928,21,3.033,22,1.448,23,2.493,24,0.804,25,2.471,26,1.488,28,0.341,29,0.843,30,2.047,33,1.473,34,2.492,35,0.848,38,1.444,40,0.966,41,0.011,42,0.913,43,0.502,44,0.648,47,2.341,48,2.569,51,1.372,52,0.752,53,1.813,54,0.495,59,0.641,60,0.459,65,0.259,66,0.445,70,0.762,72,1.639,73,0.969,74,0.969,75,0.871,76,1.41,77,0.871,78,1.372,79,0.969,80,0.825,81,0.918,82,0.431,83,0.969,84,0.871,85,0.969,86,0.871,87,0.969,88,0.871,89,1.41,90,0.871,91,1.662,92,0.871,93,0.969,94,0.871,95,0.918,96,1.41,97,0.894,98,1.41,99,0.871,100,0.969,101,0.848,102,0.894,103,0.63,104,1.825,105,1.639,106,2.032,107,0.871,108,0.989,109,0.871,110,0.969,111,0.871,112,0.648,113,0.871,114,0.969,115,0.871,116,0.969,117,0.848,118,0.969,119,0.871,120,0.734,121,0.918,122,0.969,123,0.894,124,0.564,125,0.871,126,0.648,127,0.871,128,0.969,129,0.871,130,0.969,131,0.871,132,0.969,133,0.871,134,0.969,135,0.871,136,0.871,137,0.871,138,0.871,139,0.969,140,0.871,141,0.969,142,0.871,143,0.918,144,0.943,145,0.969,146,0.006,147,0.006,156,4.278,158,2.759,167,2.279,170,0.63,174,1.023,175,1.323,176,1.754,186,2.115,188,2.519,190,2.848,238,0.995,281,3.601,316,5.759,346,2.279,376,1.868,381,1.707,422,1.663,424,2.651,483,2.414,488,3.359,490,2.492,492,3.686,493,3.916,499,3.132,502,1.985,503,2.728,515,2.05,519,2.782,520,2.409,526,2.05,527,2.05,546,2.05,565,2.619,566,2.519,567,2.619,590,1.336,591,1.573,592,1.732,646,4.053,667,2.409,714,1.372,742,3.132,753,2.619,762,2.574,772,3.745,786,2.619,787,2.829,792,2.048,796,2.651,802,3.244,935,6.385,936,5.806,937,2.782,938,4.45,939,4.846,940,4.046,941,5.063,942,3.303,943,4.45,944,5.063,945,5.373,946,4.046,947,5.063,948,4.45,949,5.063,950,5.063,951,3.745,952,3.48,953,3.48,954,3.132,955,3.48,956,5.063,957,2.574,958,3.48,959,3.059,960,3.48,961,5.063,962,5.063,963,5.063]],["title/components/ListComponent.html",[0,0.412,107,1.134]],["body/components/ListComponent.html",[0,0.743,1,0.981,2,0.255,3,0.305,4,1.093,5,0.28,7,0.175,9,0.566,16,1.215,18,0.884,22,1.578,23,2.665,24,0.906,25,2.49,26,1.622,28,0.384,29,0.919,30,2.035,32,2.891,33,1.24,34,2.631,35,0.956,36,2.207,37,2.035,38,1.612,40,0.635,41,0.011,42,0.975,43,0.614,44,0.73,45,2.972,47,2.55,49,1.812,52,0.819,53,1.976,54,0.828,56,0.893,59,0.74,60,0.517,62,1.253,63,1.539,64,2.114,65,0.292,66,0.501,68,3.136,70,0.501,72,1.731,73,1.093,74,1.093,75,0.981,76,1.536,77,0.981,78,1.495,79,1.093,80,0.93,81,1.035,82,0.486,83,1.093,84,0.981,85,1.093,86,0.981,87,1.093,88,0.981,89,1.536,90,0.981,91,1.776,92,0.981,93,1.093,94,0.981,95,1.035,96,1.536,97,1.008,98,1.536,99,0.981,100,1.093,101,0.956,102,1.008,103,0.711,104,1.927,105,0.981,106,1.064,107,1.731,108,0.982,109,0.981,110,1.093,111,0.981,112,0.73,113,0.981,114,1.093,115,0.981,116,1.093,117,0.956,118,1.093,119,0.981,120,0.384,121,1.035,122,1.093,123,1.008,124,0.635,125,0.981,126,0.73,127,0.981,128,1.093,129,0.981,130,1.093,131,0.981,132,1.093,133,0.981,134,1.093,135,0.981,136,0.981,137,0.981,138,0.981,139,1.093,140,0.981,141,1.093,142,0.981,143,1.035,144,1.064,145,1.093,146,0.006,147,0.006,175,1.492,238,1.084,281,3.579,346,2.407,414,3.316,478,1.601,483,2.581,488,3.199,490,2.631,502,2.163,503,2.972,565,2.853,566,2.744,567,2.853,646,3.946,656,5.174,665,3.136,667,2.715,675,4.408,742,3.412,772,4.08,782,1.578,923,2.902,934,3.248,957,2.902,964,3.449,965,6.92,966,5.516,967,3.924,968,3.924,969,4.408,970,3.924,971,3.924,972,3.924,973,3.136,974,3.924,975,3.924,976,3.924,977,3.924,978,4.408]],["title/components/LocationComponent.html",[0,0.412,109,1.134]],["body/components/LocationComponent.html",[0,0.74,1,1.26,2,0.472,3,0.391,4,1.402,5,0.359,7,0.225,9,0.726,14,3.673,16,1.323,18,0.979,24,1.163,25,2.526,26,1.92,41,0.01,42,0.999,54,0.639,59,0.493,60,0.664,65,0.375,66,0.643,70,0.643,72,1.918,73,1.402,74,1.402,75,1.26,76,1.818,77,1.26,78,1.77,79,1.402,80,1.194,81,1.329,82,0.623,83,1.402,84,1.26,85,1.402,86,1.26,87,1.402,88,1.26,89,1.818,90,1.26,91,2.018,92,1.26,93,1.402,94,1.26,95,1.329,96,1.818,97,1.294,98,1.818,99,1.26,100,1.402,101,1.227,102,1.294,103,1.312,104,2.135,105,1.26,106,1.365,107,1.26,108,0.566,109,1.918,110,1.402,111,1.26,112,1.349,113,1.26,114,1.402,115,1.26,116,1.402,117,1.227,118,1.402,119,1.26,120,0.493,121,1.329,122,1.402,123,1.294,124,1.174,125,1.26,126,0.938,127,1.26,128,1.402,129,1.26,130,1.402,131,1.26,132,1.402,133,1.26,134,1.402,135,1.26,136,1.26,137,1.26,138,1.26,139,1.402,140,1.26,141,1.402,142,1.26,143,1.329,144,1.365,145,1.402,146,0.008,147,0.008,186,2.728,192,4.519,484,3.673,779,3.31,979,4.426,980,6.53,981,6.53,982,6.53,983,6.53]],["title/modules/LocationModule.html",[194,1.448,984,3.137]],["body/modules/LocationModule.html",[2,0.335,3,0.399,5,0.367,41,0.011,59,0.859,60,0.678,65,0.493,66,0.657,97,2.103,102,2.103,103,0.932,105,2.047,106,1.394,109,2.047,111,2.047,112,0.958,119,2.11,123,2.103,124,0.833,126,0.958,146,0.008,147,0.008,174,1.512,194,2.114,196,1.554,197,2.661,198,3.786,199,2.221,200,3.642,205,3.655,207,3.424,208,1.739,214,3.424,215,2.772,216,2.661,584,3.356,694,5.29,817,5.665,936,4.111,984,6.198,985,4.521,986,4.521,987,5.144,988,4.521,989,5.144,990,5.144,991,5.144,992,5.144,993,5.144,994,5.144,995,5.144,996,7.728,997,4.521,998,4.521,999,4.111,1000,5.144]],["title/injectables/LoggedInGuard.html",[148,1.724,279,3.137]],["body/injectables/LoggedInGuard.html",[2,0.293,3,0.35,5,0.321,7,0.271,20,3.796,21,3.317,22,1.29,28,0.441,30,1.784,33,1.364,35,1.478,36,2.536,37,2.158,38,1.423,40,1.111,41,0.011,42,1.049,43,0.578,44,1.277,45,3.27,48,2.379,49,2.86,52,1.172,54,0.863,56,0.631,59,0.671,60,0.594,65,0.336,66,0.576,70,1.102,146,0.007,147,0.007,148,2.609,151,5.334,155,2.308,156,4.322,157,6.45,158,3.172,160,5.334,161,5.673,162,3.097,163,5.673,165,5.835,166,2.535,167,2.852,171,2.139,172,2.962,173,3.288,174,1.325,176,1.784,177,3.962,180,3.602,196,1.834,248,2.455,279,4.2,354,3.962,373,2.71,376,2.239,408,2.308,414,2.908,436,3.754,467,3.959,499,3.754,882,2.941,1001,6.45,1002,3.962,1003,6.068,1004,7.66,1005,4.507,1006,4.507,1007,4.507,1008,6.068,1009,4.2,1010,5.334,1011,6.068,1012,4.507,1013,6.068,1014,4.507,1015,4.507,1016,4.507,1017,4.507,1018,4.507]],["title/components/ModelRoomComponent.html",[0,0.412,111,1.134]],["body/components/ModelRoomComponent.html",[0,0.603,1,0.612,2,0.159,3,0.19,4,0.681,5,0.174,7,0.214,9,0.353,16,0.992,18,0.809,21,2.211,22,1.108,23,2.008,24,0.565,25,2.399,26,1.138,28,0.583,29,0.645,30,2.497,32,2.646,33,0.871,34,1.827,35,0.596,37,1.607,38,1.624,40,0.778,41,0.011,42,0.911,43,0.634,44,0.895,45,2.589,47,1.131,48,1.518,52,1.022,53,1.957,54,0.71,56,1.016,57,0.876,58,0.851,59,0.649,60,0.322,61,3.08,62,0.781,63,0.959,65,0.182,66,0.847,70,0.312,72,1.367,73,0.681,74,0.681,75,0.612,76,1.078,77,0.612,78,1.05,79,0.681,80,0.58,81,0.645,82,0.737,83,0.681,84,0.612,85,0.681,86,0.612,87,0.681,88,0.612,89,1.078,90,0.612,91,1.338,92,0.612,93,0.681,94,0.612,95,0.645,96,1.078,97,0.628,98,1.078,99,0.612,100,0.681,101,0.596,102,0.628,103,0.443,104,1.522,105,0.612,106,0.663,107,0.612,108,0.669,109,0.612,110,0.681,111,1.367,112,1.281,113,0.612,114,0.681,115,0.612,116,0.681,117,0.596,118,0.681,119,0.612,120,0.535,121,0.645,122,0.681,123,0.628,124,0.396,125,0.612,126,0.455,127,0.612,128,0.681,129,0.612,130,0.681,131,0.612,132,0.681,133,0.612,134,0.681,135,0.612,136,0.612,137,0.612,138,0.612,139,0.681,140,0.612,141,0.681,142,0.612,143,0.645,144,0.663,145,0.681,146,0.005,147,0.007,158,1.79,162,1.429,165,1.809,167,0.851,171,1.717,172,2.571,173,2.619,174,0.719,175,0.93,176,1.607,196,1.17,208,0.827,236,2.283,237,1.784,238,1.304,248,1.567,259,2.97,262,2.395,281,2.827,346,2.203,368,1.272,370,1.79,372,1.618,376,1.429,379,1.535,381,1.563,408,0.93,409,1.729,423,0.612,438,2.962,483,1.944,484,2.178,490,2.078,492,2.703,493,3.074,502,2.143,509,1.056,510,1.131,514,2.753,524,2.178,525,2.178,535,2.944,546,1.441,555,2.395,556,3.782,561,2.719,578,2.178,589,1.318,591,1.203,592,1.926,593,2.395,599,1.318,621,4.367,622,2.864,636,1.318,637,1.318,646,2.973,656,1.596,714,1.481,718,1.85,742,2.395,744,2.864,782,1.375,792,0.99,796,2.211,800,1.729,804,1.672,816,3.56,821,2.855,832,1.847,836,1.441,875,2.526,937,1.955,948,3.403,957,1.809,959,2.15,999,6.316,1019,6.946,1020,3.872,1021,5.465,1022,5.465,1023,4.042,1024,3.566,1025,4.803,1026,3.872,1027,5.465,1028,3.872,1029,3.872,1030,3.872,1031,6.879,1032,2.446,1033,5.061,1034,6.422,1035,3.872,1036,3.872,1037,3.872,1038,3.403,1039,5.465,1040,5.061,1041,2.864,1042,3.094,1043,2.864,1044,3.872,1045,3.872,1046,2.446,1047,2.446,1048,2.446,1049,3.872,1050,3.872,1051,2.446,1052,3.403,1053,2.446,1054,3.872,1055,3.094,1056,2.526,1057,3.872,1058,2.446,1059,2.446,1060,2.446,1061,2.28,1062,2.446,1063,2.446,1064,2.446,1065,2.446,1066,1.809,1067,2.446,1068,2.446,1069,2.15,1070,2.446,1071,2.446,1072,2.446,1073,1.596,1074,3.872,1075,2.446,1076,2.446,1077,2.446,1078,2.446,1079,2.446,1080,4.806,1081,4.806,1082,2.446,1083,3.094,1084,2.15,1085,2.446,1086,2.446,1087,2.446,1088,2.15,1089,2.446,1090,2.446,1091,2.446,1092,2.446,1093,2.446,1094,3.872,1095,3.403,1096,6.333,1097,3.872,1098,3.872,1099,3.403,1100,3.872,1101,3.094,1102,3.872,1103,3.872]],["title/components/NavComponent.html",[0,0.412,113,1.134]],["body/components/NavComponent.html",[0,0.73,1,1.033,2,0.269,3,0.321,4,1.15,5,0.294,7,0.184,9,0.596,14,3.216,16,1.238,18,0.904,20,2.957,22,1.636,23,2.739,24,0.954,25,2.498,26,1.681,28,0.404,29,0.952,30,2.259,33,1.285,34,2.691,35,1.006,37,2.08,38,1.541,40,0.669,41,0.011,42,1.003,43,0.552,44,0.769,47,2.643,48,2.242,52,0.849,53,2.048,54,0.834,59,0.641,60,0.544,63,1.62,64,2.226,65,0.308,66,0.528,70,0.528,72,1.77,73,1.15,74,1.15,75,1.033,76,1.592,77,1.033,78,2.177,79,1.15,80,0.979,81,1.09,82,0.511,83,1.15,84,1.033,85,1.15,86,1.033,87,1.15,88,1.033,89,1.592,90,1.033,91,1.826,92,1.033,93,1.15,94,1.033,95,1.09,96,1.592,97,1.061,98,1.592,99,1.033,100,1.15,101,1.006,102,1.061,103,0.748,104,1.97,105,1.033,106,1.12,107,1.033,108,0.834,109,1.033,110,1.15,111,1.033,112,0.769,113,1.77,114,1.15,115,1.033,116,1.15,117,1.006,118,1.15,119,1.033,120,0.404,121,1.09,122,1.15,123,1.061,124,0.669,125,1.033,126,0.769,127,1.033,128,1.15,129,1.033,130,1.15,131,1.033,132,1.15,133,1.033,134,1.15,135,1.033,136,1.033,137,1.033,138,1.033,139,1.15,140,1.033,141,1.15,142,1.033,143,1.96,144,1.12,145,1.15,146,0.007,147,0.007,175,1.571,208,1.932,238,1.124,263,2.957,264,6.219,265,6.219,346,1.989,376,2.109,414,2.74,483,2.653,484,3.216,488,3.553,490,2.691,494,2.643,501,3.957,502,2.242,503,3.08,512,1.98,515,2.432,526,2.432,527,2.432,631,2.432,680,3.536,758,2.136,782,1.636,900,4.569,923,3.055,1104,3.63,1105,4.569,1106,5.717,1107,5.717,1108,5.717,1109,3.63,1110,5.717,1111,4.13,1112,4.13,1113,5.717,1114,5.025,1115,4.13]],["title/components/NotAuthComponent.html",[0,0.412,115,1.134]],["body/components/NotAuthComponent.html",[0,0.74,1,1.258,2,0.327,3,0.391,4,1.4,5,0.359,7,0.224,9,1.145,16,1.323,18,0.979,24,1.161,25,2.526,26,1.918,41,0.01,42,0.998,52,0.969,54,0.75,59,0.492,60,0.663,65,0.374,66,0.642,70,0.925,72,1.917,73,1.4,74,1.4,75,1.258,76,1.817,77,1.258,78,1.768,79,1.4,80,1.193,81,1.327,82,0.623,83,1.4,84,1.258,85,1.4,86,1.258,87,1.4,88,1.258,89,1.817,90,1.258,91,2.016,92,1.258,93,1.4,94,1.258,95,1.327,96,1.817,97,1.292,98,1.817,99,1.258,100,1.4,101,1.225,102,1.292,103,0.911,104,2.134,105,1.258,106,1.363,107,1.258,108,0.565,109,1.258,110,1.4,111,1.258,112,0.936,113,1.258,114,1.4,115,1.917,116,1.4,117,1.225,118,1.4,119,1.258,120,0.492,121,1.327,122,1.4,123,1.292,124,0.815,125,1.258,126,0.936,127,1.258,128,1.4,129,1.258,130,1.4,131,1.258,132,1.4,133,1.258,134,1.4,135,1.258,136,1.258,137,1.258,138,1.258,139,1.4,140,1.258,141,1.4,142,1.258,143,1.327,144,1.363,145,1.4,146,0.008,147,0.008,155,2.914,182,5.734,186,2.725,190,3.67,221,4.019,436,4.035,1116,4.42,1117,4.42,1118,5.734,1119,6.524,1120,4.825]],["title/components/PageNotFoundComponent.html",[0,0.412,117,1.104]],["body/components/PageNotFoundComponent.html",[0,0.736,1,1.234,2,0.321,3,0.383,4,1.998,5,0.352,7,0.22,9,0.711,16,1.315,18,0.972,24,1.139,25,2.523,26,1.894,35,1.747,38,1.023,41,0.01,42,0.985,54,0.63,59,0.483,60,0.65,65,0.367,66,0.63,70,1.08,72,1.903,73,1.374,74,1.374,75,1.234,76,1.794,77,1.234,78,1.746,79,1.374,80,1.17,81,1.302,82,0.611,83,1.374,84,1.234,85,1.374,86,1.234,87,1.374,88,1.234,89,1.794,90,1.234,91,1.998,92,1.234,93,1.374,94,1.234,95,1.302,96,1.794,97,1.267,98,1.794,99,1.234,100,1.374,101,1.201,102,1.267,103,0.893,104,2.118,105,1.234,106,1.337,107,1.234,108,0.554,109,1.234,110,1.374,111,1.234,112,0.918,113,1.234,114,1.374,115,1.234,116,1.374,117,1.852,118,1.374,119,1.234,120,0.483,121,1.302,122,1.374,123,1.267,124,0.799,125,1.234,126,0.918,127,1.234,128,1.374,129,1.234,130,1.374,131,1.234,132,1.374,133,1.234,134,1.374,135,1.234,136,1.234,137,1.234,138,1.234,139,1.374,140,1.234,141,1.374,142,1.234,143,1.302,144,1.337,145,1.374,146,0.008,147,0.008,167,2.241,169,2.45,188,3.205,190,3.624,308,4.765,371,2.45,386,3.332,499,3.985,730,5.662,1121,5.662,1122,4.336,1123,6.442,1124,6.442,1125,4.963,1126,6.442,1127,4.933]],["title/pipes/PeopleListNamesPipe.html",[1128,1.957,1129,3.137]],["body/pipes/PeopleListNamesPipe.html",[2,0.294,3,0.35,5,0.322,7,0.201,18,0.776,22,1.291,24,1.042,33,1.015,38,0.936,40,0.731,41,0.011,42,1.254,43,0.38,44,0.84,50,2.712,52,0.902,56,1.028,59,0.442,60,0.595,65,0.336,66,0.576,146,0.007,147,0.007,171,1.861,172,2.622,208,2.59,234,4.332,235,4.332,245,3.653,246,3.021,408,2.309,478,1.483,671,5.338,731,3.798,767,4.324,954,2.792,1073,2.945,1128,2.622,1129,4.203,1130,5.338,1131,3.967,1132,5.338,1133,7.207,1134,3.963,1135,3.963,1136,6.073,1137,6.073,1138,3.519,1139,4.854,1140,4.854,1141,7.207,1142,7.499,1143,8.531,1144,8.2,1145,5.15,1146,6.073,1147,5.338,1148,2.945,1149,6.073,1150,4.513,1151,6.073,1152,3.963,1153,2.945,1154,3.607,1155,6.937,1156,3.967,1157,6.937,1158,3.967,1159,3.967,1160,3.967]],["title/pipes/PersonNamePipe.html",[1128,1.957,1161,3.137]],["body/pipes/PersonNamePipe.html",[2,0.322,3,0.385,5,0.353,7,0.221,18,0.825,22,1.417,24,1.144,33,1.114,38,1.028,40,0.802,41,0.011,42,1.28,43,0.417,44,0.922,50,2.884,52,1.068,56,1.067,59,0.485,60,0.653,65,0.369,66,0.633,146,0.008,147,0.008,171,1.948,172,2.789,234,4.247,235,4.247,245,3.79,246,3.79,408,2.456,639,4.47,731,3.941,767,3.804,1128,2.789,1132,5.678,1133,7.253,1134,4.215,1135,4.215,1138,3.651,1139,5.162,1140,6.088,1141,7.605,1142,7.355,1145,5.287,1148,3.232,1152,4.215,1153,3.232,1154,5.745,1155,6.945,1156,4.353,1157,6.945,1158,4.353,1160,4.353,1161,4.47,1162,5.678,1163,4.353,1164,6.46,1165,6.46,1166,4.953]],["title/interfaces/Phage.html",[120,0.443,170,0.821]],["body/interfaces/Phage.html",[2,0.291,3,0.347,5,0.319,7,0.269,9,0.644,18,0.571,28,0.437,29,1.005,41,0.011,43,0.575,51,1.211,54,0.716,56,1.102,65,0.569,82,0.974,103,0.809,120,0.872,124,0.724,146,0.007,147,0.007,162,1.649,166,1.867,170,1.482,171,1.635,196,1.35,228,1.427,230,3.398,237,1.797,238,1.501,365,1.752,368,1.468,371,1.699,410,2.631,422,2.403,438,1.995,478,1.218,576,2.631,590,1.93,591,1.874,714,2.133,718,2.272,740,3.394,774,2.408,775,2.915,776,2.366,777,2.764,778,3.092,779,3.532,780,4.114,781,3.936,782,1.726,783,3.251,784,2.441,785,2.514,786,2.311,787,2.948,788,2.764,789,2.631,790,2.311,791,4.022,792,2.959,793,2.915,794,2.631,795,3.394,796,1.808,797,2.408,798,4.24,799,3.936,800,3.265,801,2.311,802,2.694,803,3.553,804,2.604,805,4.175,806,4.175,807,4.175,808,4.175,809,3.936,810,2.789,811,3.092,812,2.764,813,2.311,814,2.631,815,3.092,816,2.694]],["title/pipes/PhageDeletionsPipe.html",[1128,1.957,1167,3.137]],["body/pipes/PhageDeletionsPipe.html",[2,0.353,3,0.421,5,0.387,7,0.242,22,1.551,24,1.252,33,1.219,38,1.125,40,0.878,41,0.011,42,1.047,43,0.457,44,1.009,52,1.017,56,0.958,59,0.531,60,0.714,65,0.404,66,0.693,82,1.043,120,0.67,146,0.008,147,0.008,208,2.536,237,1.557,259,2.955,590,1.806,591,1.684,731,3.541,784,2.77,1061,4.032,1073,3.538,1128,2.955,1135,4.467,1138,3.596,1145,5.142,1148,3.538,1152,4.467,1153,3.538,1167,4.738,1168,4.738,1169,4.766,1170,5.063,1171,5.063,1172,5.471,1173,6.846,1174,6.926,1175,6.846,1176,7.294,1177,6.846,1178,7.88,1179,7.88,1180,7.88,1181,6.846,1182,5.422,1183,5.422,1184,7.502,1185,5.422,1186,5.422]],["title/components/PhageDialogComponent.html",[0,0.412,119,1.134]],["body/components/PhageDialogComponent.html",[0,0.654,1,1.074,2,0.279,3,0.333,4,1.195,5,0.306,7,0.191,9,0.619,16,1.255,18,0.919,19,3.83,24,0.991,25,2.504,26,1.726,28,0.42,29,0.978,35,1.045,38,1.388,40,0.695,41,0.01,42,1.023,43,0.634,44,0.799,54,0.574,59,0.704,60,0.566,65,0.32,66,0.548,70,0.548,72,1.799,73,1.195,74,1.195,75,1.074,76,1.635,77,1.074,78,1.591,79,1.195,80,1.018,81,1.133,82,0.932,83,1.195,84,1.074,85,1.195,86,1.074,87,1.195,88,1.074,89,1.635,90,1.074,91,1.863,92,1.074,93,1.195,94,1.074,95,1.133,96,1.635,97,1.103,98,1.635,99,1.074,100,1.195,101,1.045,102,1.103,103,0.777,104,2.003,105,1.074,106,1.164,107,1.074,108,0.482,109,1.074,110,1.195,111,1.074,112,0.799,113,1.074,114,1.195,115,1.074,116,1.195,117,1.045,118,1.195,119,1.799,120,0.853,121,1.987,122,1.195,123,1.103,124,0.695,125,1.074,126,0.799,127,1.074,128,1.195,129,1.074,130,1.195,131,1.074,132,1.195,133,1.074,134,1.195,135,1.074,136,1.074,137,1.074,138,1.074,139,1.195,140,1.074,141,1.195,142,1.074,143,1.133,144,1.164,145,1.195,146,0.007,147,0.007,186,3.005,199,1.853,205,1.917,216,2.22,238,1.154,259,2.534,350,3.83,368,1.929,438,2.621,455,3.431,459,5.16,460,6.62,461,4.046,462,3.773,463,6.835,470,3.175,471,2.801,472,2.801,473,3.773,474,2.655,475,4.692,530,3.83,590,1.898,624,4.692,659,3.457,783,3.605,790,3.72,792,2.91,821,2.654,875,3.83,1099,5.16,1187,6.322,1188,5.16,1189,5.871,1190,4.293,1191,3.431,1192,5.16,1193,5.871,1194,5.871,1195,5.871,1196,5.871,1197,5.871]],["title/pipes/PhageGuessesPipe.html",[1128,1.957,1198,3.137]],["body/pipes/PhageGuessesPipe.html",[2,0.313,3,0.373,5,0.343,7,0.214,20,3.277,22,1.376,24,1.11,33,1.081,38,0.998,40,0.779,41,0.011,42,0.969,43,0.405,44,0.895,50,2.829,52,1.052,56,0.887,59,0.62,60,0.633,65,0.358,66,0.614,82,1.029,108,0.712,120,0.62,146,0.007,147,0.007,171,1.92,172,3.469,173,4.032,208,2.811,237,0.998,238,1.245,245,2.392,259,2.076,314,5.212,317,5.063,365,1.885,409,2.829,423,1.203,558,2.831,590,1.869,731,3.277,784,2.563,802,2.147,816,3.588,821,2.337,1025,5.568,1066,4.685,1069,4.226,1073,3.137,1128,2.735,1135,4.133,1138,3.395,1145,4.914,1148,3.137,1152,4.133,1153,3.137,1159,4.226,1168,4.384,1170,4.685,1171,4.685,1198,4.384,1199,4.226,1200,6.335,1201,4.808,1202,5.568,1203,6.335,1204,6.335,1205,6.619,1206,4.685,1207,5.568,1208,7.085,1209,6.335,1210,4.808,1211,4.808,1212,4.808,1213,5.568,1214,4.808,1215,5.568,1216,4.808]],["title/pipes/PhageMutationsPipe.html",[1128,1.957,1217,3.137]],["body/pipes/PhageMutationsPipe.html",[2,0.337,3,0.402,5,0.369,7,0.231,22,1.48,24,1.195,33,1.163,38,1.073,40,0.838,41,0.011,42,1.016,43,0.436,44,0.963,52,0.987,56,0.93,59,0.506,60,0.682,65,0.385,66,0.661,120,0.65,146,0.008,147,0.008,208,2.708,237,1.523,259,2.233,314,4.598,317,5.31,590,2.269,731,3.437,740,3.738,784,3.134,787,3.713,798,4.55,799,4.335,814,3.913,1061,3.913,1073,3.376,1128,2.868,1135,4.335,1138,3.712,1145,5.349,1148,3.376,1152,4.335,1153,3.376,1168,4.598,1170,4.914,1171,4.914,1172,5.31,1215,5.84,1217,4.598,1218,4.547,1219,6.807,1220,6.807,1221,7.745,1222,6.807,1223,7.745,1224,6.644,1225,5.173,1226,5.173]],["title/pipes/PhageParentsPipe.html",[1128,1.957,1227,3.137]],["body/pipes/PhageParentsPipe.html",[2,0.281,3,0.336,5,0.308,7,0.193,20,3.052,22,1.237,24,0.998,33,0.972,38,0.897,40,0.7,41,0.011,42,0.902,43,0.364,44,0.805,52,0.997,56,0.826,59,0.577,60,0.57,65,0.322,66,0.552,82,0.73,120,0.822,121,1.557,146,0.007,147,0.007,166,3.014,186,2.465,208,2.634,237,1.567,238,1.16,243,2.992,259,2.899,409,2.634,590,2.105,591,2.478,593,4.462,714,2.201,731,3.052,767,2.546,780,4.685,784,3.153,792,3.518,794,5.121,821,3.102,845,3.052,1128,2.547,1135,3.849,1138,3.457,1145,5.085,1147,5.185,1148,2.821,1152,3.849,1153,2.821,1168,4.083,1170,4.363,1171,4.363,1172,4.715,1188,5.185,1191,3.455,1206,4.363,1227,4.083,1228,3.8,1229,6.715,1230,4.715,1231,5.899,1232,5.899,1233,5.899,1234,5.899,1235,7.214,1236,6.341,1237,5.336,1238,5.899,1239,5.185,1240,5.899,1241,5.899,1242,5.899,1243,5.899,1244,5.899,1245,4.323,1246,4.323,1247,4.323,1248,4.323,1249,4.323,1250,4.323,1251,4.323,1252,3.8,1253,4.323,1254,4.323,1255,6.715,1256,6.715,1257,4.323]],["title/interfaces/PlateInput.html",[170,0.821,829,2.957]],["body/interfaces/PlateInput.html",[2,0.31,3,0.37,5,0.34,7,0.212,28,0.69,29,1.049,41,0.011,43,0.594,51,1.912,56,0.987,59,0.466,65,0.581,82,0.59,103,1.14,108,0.535,120,0.846,124,1.215,146,0.007,147,0.007,169,2.853,170,1.452,171,1.291,230,3.509,237,1.722,238,1.238,323,4.657,368,1.565,382,1.61,387,2.946,422,2.465,423,1.575,424,1.927,478,1.515,650,2.946,659,2.805,713,2.805,774,4.525,776,3.325,779,2.056,782,1.801,792,1.927,796,2.547,797,2.567,800,2.811,801,2.464,810,2.202,819,2.946,820,2.283,829,4.108,832,2.128,834,3.108,835,3.708,836,2.805,838,2.946,847,3.108,849,3.297,850,3.297,851,3.108,852,3.108,855,3.108,859,3.108,862,3.297,863,3.297,864,3.297,896,3.297,933,2.127,1258,3.523,1259,5.996,1260,5.193,1261,5.193,1262,3.108,1263,3.297,1264,3.297,1265,3.108,1266,3.523,1267,5.032,1268,2.946,1269,3.108,1270,4.108,1271,4.814,1272,4.108,1273,3.807,1274,4.108]],["title/interfaces/PlateResults.html",[170,0.821,859,2.957]],["body/interfaces/PlateResults.html",[2,0.287,3,0.342,5,0.314,7,0.196,28,0.743,29,0.995,41,0.011,43,0.66,51,1.619,56,0.949,59,0.431,65,0.566,82,0.545,103,1.228,108,0.495,120,0.865,124,1.177,146,0.007,147,0.007,169,2.578,170,1.419,171,1.837,230,2.971,237,1.785,238,1.333,323,4.418,368,1.446,382,2.019,387,3.695,422,2.388,423,1.101,424,1.781,478,1.583,650,3.695,659,3.517,713,2.593,774,4.094,776,3.39,779,1.901,782,1.709,792,2.941,796,2.743,797,2.372,800,3.246,801,2.277,810,2.761,819,2.723,820,2.11,829,2.873,832,2.457,834,2.873,835,3.992,836,3.517,838,4.496,847,2.873,849,3.047,850,3.047,851,2.873,852,2.873,855,3.897,859,3.897,862,3.047,863,3.047,864,3.047,896,3.047,933,1.966,1258,3.256,1259,5.417,1260,3.047,1261,3.047,1262,2.873,1263,3.047,1264,3.047,1265,2.873,1266,3.256,1267,5.809,1268,3.695,1269,3.897,1270,4.743,1271,5.113,1272,5.112,1273,4.773,1274,5.112]],["title/interfaces/PlexerInput.html",[170,0.821,847,2.957]],["body/interfaces/PlexerInput.html",[2,0.307,3,0.367,5,0.336,7,0.211,28,0.687,29,1.043,41,0.011,43,0.591,51,1.903,56,0.983,59,0.462,65,0.579,82,0.584,103,1.133,108,0.53,120,0.853,124,1.321,146,0.007,147,0.007,169,2.843,170,1.448,171,1.279,230,3.493,237,1.718,238,1.23,323,4.628,368,2.056,382,1.595,387,2.919,422,2.306,423,1.181,424,1.91,478,1.615,650,2.919,659,2.779,713,2.779,774,4.517,776,3.287,779,2.038,782,1.79,792,1.91,796,2.532,797,2.543,800,2.794,801,2.441,810,2.182,819,2.919,820,2.262,829,3.08,832,2.115,834,3.08,835,3.685,836,2.779,838,2.919,847,4.083,849,4.331,850,4.331,851,3.08,852,3.08,855,3.08,859,3.08,862,5.174,863,5.174,864,3.266,896,3.266,933,2.107,1258,3.491,1259,5.975,1260,3.266,1261,3.266,1262,3.08,1263,3.266,1264,3.266,1265,3.08,1266,3.491,1267,5.001,1268,2.919,1269,3.08,1270,4.083,1271,4.803,1272,4.083,1273,3.772,1274,4.083]],["title/modules/ProfileModule.html",[194,1.448,276,3.137]],["body/modules/ProfileModule.html",[2,0.376,3,0.449,5,0.412,41,0.011,54,0.565,59,0.851,60,0.761,65,0.53,66,0.738,126,1.076,140,2.109,142,2.109,146,0.008,147,0.008,174,1.699,194,2.275,196,1.746,197,2.989,198,3.994,199,2.495,200,3.842,205,3.765,207,3.685,208,1.953,214,3.685,215,3.114,216,2.989,276,6.115,342,4.618,545,2.414,1275,5.079,1276,5.079,1277,5.779,1278,5.079,1279,5.215,1280,5.779,1281,5.779,1282,5.779,1283,4.618,1284,4.274,1285,5.079,1286,4.618,1287,5.779]],["title/injectables/ProfileService.html",[148,1.724,1279,2.804]],["body/injectables/ProfileService.html",[2,0.277,3,0.331,5,0.304,7,0.297,13,2.8,28,0.417,29,0.973,30,1.96,33,1.313,35,1.038,38,1.488,40,1.08,41,0.011,42,1.019,43,0.604,44,1.241,49,2.356,50,2.609,51,2.193,52,1.153,54,0.864,56,0.933,57,1.527,58,1.483,59,0.702,60,0.562,62,1.361,64,2.297,65,0.317,66,0.544,143,1.892,146,0.007,147,0.007,148,2.535,152,4.043,167,2.032,175,1.621,176,2.108,210,2.291,236,3.469,237,1.679,240,2.441,287,2.95,332,4.319,348,5.304,360,3.746,361,5.304,363,4.669,369,3.614,371,3.077,372,2.996,376,2.646,377,4.11,381,2.376,398,5.199,414,2.8,424,3.321,435,4.963,440,3.746,450,5.135,530,3.812,545,3.556,590,1.125,591,1.324,893,4.321,1279,3.614,1288,3.746,1289,5.842,1290,5.135,1291,3.812,1292,5.842,1293,4.669,1294,5.842,1295,5.842,1296,4.262,1297,5.842,1298,5.842,1299,5.731,1300,5.842,1301,4.262,1302,5.135,1303,5.731,1304,4.321,1305,5.135,1306,5.842,1307,5.842,1308,5.842]],["title/components/ResetPasswordComponent.html",[0,0.412,125,1.134]],["body/components/ResetPasswordComponent.html",[0,0.683,1,0.693,2,0.18,3,0.215,4,0.772,5,0.198,7,0.124,9,0.4,13,2.046,16,1.052,18,0.747,21,1.121,22,1.221,23,2.175,24,0.64,25,2.427,26,1.255,28,0.271,29,0.711,30,2.398,32,2.787,33,0.96,34,2.224,35,1.04,36,1.559,37,1.961,38,1.56,40,0.449,41,0.011,42,0.796,43,0.604,44,0.516,45,2.3,47,1.973,52,1.066,53,1.865,54,0.653,56,0.934,57,1.865,58,1.811,59,0.618,60,0.365,62,0.885,65,0.206,66,0.354,70,0.354,72,1.463,73,0.772,74,0.772,75,0.693,76,1.189,77,0.693,78,1.157,79,0.772,80,0.657,81,2.018,82,0.343,83,0.772,84,0.693,85,0.772,86,0.693,87,0.772,88,0.693,89,1.189,90,0.693,91,1.45,92,0.693,93,0.772,94,0.693,95,0.731,96,1.189,97,0.712,98,1.189,99,0.693,100,0.772,101,0.675,102,0.712,103,0.502,104,1.628,105,0.693,106,0.751,107,0.693,108,0.311,109,0.693,110,0.772,111,0.693,112,0.516,113,0.693,114,0.772,115,0.693,116,0.772,117,0.675,118,0.772,119,0.693,120,0.271,121,0.731,122,0.772,123,0.712,124,0.449,125,1.463,126,1.518,127,0.693,128,0.772,129,0.693,130,0.772,131,0.693,132,0.772,133,0.693,134,0.772,135,0.693,136,0.693,137,0.693,138,0.693,139,0.772,140,0.693,141,0.772,142,0.693,143,0.731,144,0.751,145,0.772,146,0.005,147,0.008,155,1.623,167,1.485,171,1.411,172,1.196,173,2.046,174,0.815,188,2.124,240,2.443,248,1.727,263,1.434,328,2.514,332,4.356,343,6.113,346,1.485,347,2.401,365,1.674,368,2.283,370,1.973,373,1.906,375,2.3,378,2.803,379,2.443,381,2.274,382,1.977,393,1.714,397,2.514,398,4.617,402,5.602,405,3.752,408,2.224,414,2.046,417,2.954,423,2.025,438,1.906,453,3.85,461,3.29,465,3.025,467,2.785,483,2.106,488,3.475,490,2.224,492,2.929,493,3.29,498,2.785,502,1.674,503,2.3,509,1.196,510,1.281,514,2.407,515,1.632,526,1.632,527,1.632,545,1.783,555,3.617,590,0.731,591,0.861,592,1.379,593,1.714,608,1.632,678,2.954,832,1.443,843,3.603,845,2.208,867,2.05,868,3.752,869,3.411,870,5.863,876,3.752,882,1.808,885,3.752,887,2.05,888,2.05,889,2.436,1041,2.05,1083,3.411,1309,6.723,1310,3.752,1311,5.848,1312,5.14,1313,5.848,1314,4.268,1315,2.771,1316,3.752,1317,3.752,1318,2.771,1319,2.771,1320,4.268,1321,4.674,1322,2.771,1323,5.848,1324,2.436,1325,3.752,1326,2.771,1327,4.268,1328,2.436,1329,4.268,1330,2.436,1331,2.436,1332,2.771,1333,2.771,1334,2.771,1335,2.771,1336,2.436,1337,2.771,1338,2.771,1339,3.752,1340,3.752,1341,3.752,1342,2.436,1343,3.411,1344,3.752]],["title/interfaces/Scenario.html",[108,0.509,170,0.821]],["body/interfaces/Scenario.html",[2,0.367,3,0.438,5,0.402,7,0.341,28,0.551,29,1.168,41,0.011,43,0.692,51,1.527,56,1.252,59,0.686,65,0.42,108,0.993,120,0.686,146,0.008,147,0.008,167,2.44,169,2.143,170,1.27,187,5.604,238,1.379,263,3.627,714,1.901,753,4.133,782,2.006,821,2.587,832,1.905,898,5.183,939,5.909,940,5.604,945,5.909,946,5.604,1345,4.952,1346,6.385,1347,5.604,1348,5.187,1349,7.012,1350,7.012,1351,6.163,1352,6.163]],["title/components/ScenarioComponent.html",[0,0.412,127,1.134]],["body/components/ScenarioComponent.html",[0,0.765,1,1.272,2,0.331,3,0.395,4,1.416,5,0.363,7,0.227,9,0.734,16,1.327,18,0.983,24,1.174,25,2.527,26,1.932,41,0.01,42,1.005,54,0.643,59,0.498,60,0.67,65,0.379,66,0.65,70,0.65,72,1.925,73,1.416,74,1.416,75,1.272,76,1.83,77,1.272,78,1.781,79,1.416,80,1.206,81,1.342,82,0.63,83,1.416,84,1.272,85,1.416,86,1.272,87,1.416,88,1.272,89,1.83,90,1.272,91,2.027,92,1.272,93,1.416,94,1.272,95,1.342,96,1.83,97,1.307,98,1.83,99,1.272,100,1.416,101,1.239,102,1.307,103,0.921,104,2.143,105,1.272,106,1.379,107,1.272,108,0.895,109,1.272,110,1.416,111,1.272,112,0.947,113,1.272,114,1.416,115,1.272,116,1.416,117,1.239,118,1.416,119,1.272,120,0.498,121,1.342,122,1.416,123,1.307,124,0.824,125,1.272,126,0.947,127,1.925,128,1.416,129,1.272,130,1.416,131,1.272,132,1.416,133,1.272,134,1.416,135,1.272,136,1.272,137,1.272,138,1.272,139,1.416,140,1.272,141,1.416,142,1.272,143,1.342,144,1.379,145,1.416,146,0.008,147,0.008,186,2.745,194,2.099,238,1.292,263,3.399,293,4.065,478,1.327,721,5.776,779,2.837,1353,4.47]],["title/modules/ScenarioModule.html",[194,1.448,277,3.137]],["body/modules/ScenarioModule.html",[0,0.64,2,0.369,3,0.44,5,0.404,7,0.253,11,4.872,17,3.641,41,0.011,59,0.841,60,0.747,65,0.524,66,0.724,107,2.099,108,0.899,126,1.055,127,2.099,146,0.008,147,0.008,174,1.667,194,2.681,196,1.713,197,2.933,198,3.96,199,2.448,200,2.821,205,3.747,207,3.641,208,1.916,214,3.641,215,3.055,216,2.933,238,1.384,263,2.933,277,6.04,700,4.983,894,3.96,984,4.872,1354,4.983,1355,4.983,1356,5.67,1357,5.67,1358,6.187,1359,5.626,1360,6.187,1361,5.67,1362,5.67,1363,5.67,1364,5.67]],["title/injectables/ScenarioResolver.html",[148,1.724,280,3.137]],["body/injectables/ScenarioResolver.html",[2,0.319,3,0.381,5,0.35,7,0.286,22,2.047,28,0.48,33,1.706,35,1.195,38,1.332,40,1.04,41,0.011,42,0.982,43,0.54,44,1.195,48,2.806,52,1.127,59,0.771,60,0.646,62,1.567,65,0.365,66,0.627,108,0.98,146,0.007,147,0.007,148,2.721,156,4.639,161,5.452,162,2.64,163,5.253,166,2.682,167,2.965,174,1.442,175,1.866,176,2.232,188,3.194,238,1.642,254,2.889,280,4.443,281,3.926,293,3.971,346,2.641,350,4.669,371,2.886,373,2.866,377,3.926,387,3.971,423,1.227,424,2.597,437,4.188,499,3.971,646,3.971,706,6.458,709,5.13,713,3.78,714,2.057,753,3.926,757,4.312,782,1.837,831,2.369,898,4.695,942,4.188,957,3.629,973,3.921,1347,5.13,1348,4.748,1365,4.312,1366,4.906,1367,4.906,1368,4.906,1369,5.642,1370,6.419,1371,4.906,1372,4.906,1373,4.906]],["title/modules/SharedModule.html",[194,1.448,205,2.024]],["body/modules/SharedModule.html",[0,0.581,2,0.317,3,0.378,5,0.347,7,0.217,41,0.011,57,1.743,59,0.856,60,0.641,65,0.563,66,0.622,80,2.047,81,1.284,82,0.602,126,0.906,146,0.007,147,0.007,169,2.428,194,2.663,196,1.47,197,2.517,198,3.686,199,2.757,200,2.421,205,3.923,207,3.303,208,1.645,214,3.303,262,3.95,290,3.599,292,3.889,293,3.01,333,6.264,334,3.889,335,6.264,372,2.668,438,2.851,471,3.175,472,3.175,474,3.95,478,0.983,584,3.175,659,3.76,951,3.599,1128,2.757,1129,5.973,1161,5.973,1227,5.973,1374,4.277,1375,4.277,1376,4.277,1377,4.866,1378,6.385,1379,6.385,1380,6.385,1381,6.385,1382,4.277,1383,5.612,1384,6.385,1385,6.385,1386,6.385,1387,4.277,1388,6.385,1389,4.277,1390,4.277,1391,4.866,1392,4.866,1393,4.866,1394,4.866,1395,4.277,1396,4.866,1397,4.866,1398,4.866,1399,4.866,1400,4.866]],["title/components/SigninComponent.html",[0,0.412,129,1.134]],["body/components/SigninComponent.html",[0,0.708,1,0.914,2,0.238,3,0.284,4,1.017,5,0.26,7,0.163,9,0.527,14,2.949,16,1.182,18,0.856,21,2.711,22,1.5,24,0.844,25,2.479,26,1.542,28,0.357,29,0.874,30,1.97,32,3.086,33,1.179,35,0.89,36,2.055,37,1.97,38,1.532,40,0.592,41,0.011,42,0.938,43,0.564,44,0.68,45,2.825,49,2.202,52,0.779,53,1.878,54,0.805,56,0.859,57,1.309,58,1.271,59,0.694,60,0.481,62,1.167,65,0.272,66,0.467,70,0.906,72,1.676,73,1.017,74,1.017,75,0.914,76,1.46,77,0.914,78,1.421,79,1.017,80,0.866,81,0.964,82,0.452,83,1.017,84,0.914,85,1.017,86,0.914,87,1.017,88,0.914,89,1.46,90,0.914,91,1.708,92,0.914,93,1.017,94,0.914,95,1.618,96,1.46,97,0.939,98,1.46,99,0.914,100,1.017,101,0.89,102,0.939,103,0.662,104,1.866,105,0.914,106,0.99,107,0.914,108,0.41,109,0.914,110,1.017,111,0.914,112,0.68,113,0.914,114,1.017,115,0.914,116,1.017,117,0.89,118,1.017,119,0.914,120,0.357,121,0.964,122,1.017,123,0.939,124,0.592,125,0.914,126,0.68,127,0.914,128,1.017,129,1.676,130,1.017,131,0.914,132,1.017,133,0.914,134,1.017,135,0.914,136,0.914,137,0.914,138,0.914,139,1.017,140,0.914,141,1.017,142,0.914,143,0.964,144,0.99,145,1.017,146,0.006,147,0.006,155,2.548,158,2.835,167,2.331,174,1.074,175,1.389,180,4.19,190,2.949,238,1.031,240,2.8,328,3.088,332,3.675,346,2.57,357,5.463,370,2.424,371,1.994,376,1.935,378,2.513,379,2.141,381,2.113,397,3.088,398,5.387,408,2.548,414,3.73,415,3.629,435,3.629,436,4.145,437,3.421,465,2.712,483,2.481,488,3.719,490,2.548,502,2.056,503,2.825,509,1.577,510,1.689,514,1.689,515,2.151,526,2.151,527,2.151,545,1.526,608,2.151,617,2.92,875,3.421,882,2.384,887,2.702,888,2.702,1009,4.911,1114,4.608,1401,3.211,1402,5.243,1403,5.243,1404,5.243,1405,3.653,1406,4.608,1407,3.653,1408,5.243,1409,3.878,1410,5.243,1411,3.653,1412,5.89,1413,3.653,1414,3.653,1415,3.211,1416,3.653]],["title/components/SignoutComponent.html",[0,0.412,131,1.134]],["body/components/SignoutComponent.html",[0,0.755,1,1.062,2,0.276,3,0.33,4,1.183,5,0.303,7,0.189,9,0.613,14,3.278,16,1.25,18,0.915,21,2.897,22,1.667,23,2.78,24,0.981,25,2.503,28,0.416,29,0.971,30,2.206,33,1.31,34,2.723,35,1.419,37,2.279,38,1.486,40,0.688,41,0.011,42,1.017,43,0.491,44,0.791,52,0.866,53,2.088,54,0.791,59,0.701,60,0.56,62,1.357,65,0.316,66,0.543,70,0.958,72,1.791,73,1.183,74,1.183,75,1.062,76,1.623,77,1.062,78,1.58,79,1.183,80,1.007,81,1.121,82,0.526,83,1.183,84,1.062,85,1.183,86,1.062,87,1.183,88,1.062,89,1.623,90,1.062,91,1.853,92,1.062,93,1.183,94,1.062,95,1.121,96,1.623,97,1.091,98,1.623,99,1.062,100,1.183,101,1.034,102,1.091,103,0.769,104,1.994,105,1.062,106,1.151,107,1.062,108,0.477,109,1.062,110,1.183,111,1.062,112,0.791,113,1.062,114,1.183,115,1.062,116,1.183,117,1.034,118,1.183,119,1.062,120,0.416,121,1.121,122,1.183,123,1.091,124,0.688,125,1.062,126,1.239,127,1.062,128,1.183,129,1.062,130,1.183,131,1.791,132,1.183,133,1.062,134,1.183,135,1.062,136,1.062,137,1.062,138,1.062,139,1.183,140,1.062,141,1.183,142,1.062,143,1.121,144,1.151,145,1.183,146,0.007,147,0.007,158,3.076,174,1.249,190,4.028,208,2.42,328,3.432,346,2.028,358,4.31,382,1.97,409,2.602,411,4.31,414,3.432,483,2.692,488,3.738,490,2.723,494,2.694,502,2.285,503,3.14,515,2.501,520,2.939,526,2.501,527,2.501,590,1.121,591,1.319,592,2.113,631,2.501,678,4.033,882,2.771,1009,4.033,1109,3.733,1417,3.733,1418,5.828,1419,5.828,1420,4.247,1421,4.247,1422,4.658,1423,4.247,1424,4.247,1425,4.247]],["title/components/SignupComponent.html",[0,0.412,133,1.134]],["body/components/SignupComponent.html",[0,0.686,1,0.705,2,0.183,3,0.219,4,0.784,5,0.201,7,0.193,9,0.406,13,2.072,14,2.431,16,1.463,18,0.753,21,2.386,22,1.237,23,2.197,24,0.65,25,2.43,26,1.271,28,0.276,29,0.72,30,2.345,32,2.805,33,0.972,34,2.243,35,0.686,36,1.585,37,1.734,38,1.566,40,0.7,41,0.011,42,1.155,43,0.589,44,0.805,45,2.329,48,1.695,49,1.42,52,1.038,53,1.884,54,0.794,56,1.036,57,1.884,58,1.83,59,0.657,60,0.371,61,3.291,62,0.9,65,0.21,66,0.36,70,0.672,72,1.475,73,0.784,74,0.784,75,0.705,76,1.204,77,0.705,78,1.599,79,0.784,80,0.668,81,1.388,82,0.349,83,0.784,84,0.705,85,0.784,86,0.705,87,0.784,88,0.705,89,1.204,90,0.705,91,1.464,92,0.705,93,0.784,94,0.705,95,0.743,96,1.204,97,0.724,98,1.204,99,0.705,100,0.784,101,0.686,102,0.724,103,0.51,104,1.642,105,0.705,106,0.764,107,0.705,108,0.316,109,0.705,110,0.784,111,0.705,112,0.524,113,0.705,114,0.784,115,0.705,116,0.784,117,0.686,118,0.784,119,0.705,120,0.276,121,0.743,122,0.784,123,0.724,124,0.456,125,0.705,126,0.524,127,0.705,128,0.784,129,0.705,130,0.784,131,0.705,132,0.784,133,1.475,134,0.784,135,0.705,136,0.705,137,0.705,138,0.705,139,0.784,140,0.705,141,0.784,142,0.705,143,0.743,144,0.764,145,0.784,146,0.005,147,0.008,158,2.431,162,1.595,171,1.172,174,0.828,175,1.071,176,0.828,190,2.431,192,4.838,234,2.15,235,2.15,238,1.32,240,2.805,245,2.15,246,2.15,248,1.749,263,2.236,278,3.178,299,2.476,332,3.478,346,2.052,359,5.584,365,2.313,368,1.938,369,3.648,370,1.998,372,1.806,376,2.176,378,2.072,379,1.381,381,2.064,397,2.545,408,1.644,414,3.735,415,4.082,423,1.315,424,1.749,477,2.329,478,1.525,483,2.128,490,2.243,496,3.253,502,2.313,509,1.216,510,1.302,514,2.727,520,1.95,524,1.585,525,1.585,535,3.178,565,2.236,566,2.15,567,2.236,578,2.431,589,1.518,599,2.329,608,1.659,631,1.659,636,1.518,637,1.518,650,2.674,656,4.381,684,3.799,685,3.799,714,1.599,767,1.659,782,1.237,832,1.461,845,2.236,875,3.848,882,3.431,887,2.083,888,2.083,934,4.589,1061,2.545,1105,4.714,1343,3.454,1344,3.799,1406,3.799,1415,2.476,1422,3.454,1426,2.476,1427,4.322,1428,5.898,1429,4.322,1430,4.322,1431,4.322,1432,2.817,1433,4.966,1434,6.501,1435,3.799,1436,2.817,1437,2.817,1438,2.817,1439,2.817,1440,3.799,1441,2.817,1442,4.322,1443,2.817,1444,2.817,1445,4.322,1446,2.817,1447,4.322,1448,2.817,1449,2.817,1450,2.817,1451,4.322,1452,2.817,1453,2.817,1454,2.817,1455,2.817,1456,2.817]],["title/interfaces/Student.html",[18,0.579,170,0.821]],["body/interfaces/Student.html",[2,0.356,3,0.425,5,0.39,7,0.244,9,0.789,16,1.255,18,1.01,28,0.535,29,1.147,41,0.011,42,1.152,43,0.634,44,1.548,51,2.042,52,1.023,54,0.674,56,1.164,59,0.674,65,0.561,70,0.699,72,1.369,108,0.773,146,0.008,147,0.008,154,2.362,169,2.865,170,1.365,171,2.042,210,2.146,226,2.948,227,4.047,228,1.748,229,4.809,230,3.748,231,4.809,232,4.059,233,3.787,234,2.722,235,2.722,236,2.286,237,1.135,238,1.481,239,4.259,240,3.303,241,4.448,242,5.159,243,5.214,244,4.373,245,2.722,246,2.722,247,4.373,248,2.214,249,4.373,250,4.373,251,3.385,252,4.373,253,4.373,254,3.222,255,3.385,256,4.373,257,6.021,258,4.373,259,2.362,260,4.373]],["title/interfaces/StudentFridge.html",[170,0.821,897,2.957]],["body/interfaces/StudentFridge.html",[2,0.321,3,0.383,5,0.352,7,0.22,9,0.929,18,0.823,28,0.483,29,1.073,41,0.011,43,0.694,44,1.507,51,1.945,54,0.483,56,1.171,59,0.63,65,0.48,82,0.888,108,0.939,120,0.702,124,0.799,146,0.008,147,0.008,155,2.892,169,1.876,170,1.299,171,2.062,232,4.098,233,3.414,236,2.061,237,1.023,238,1.266,241,4.439,368,1.621,371,3.078,423,1.234,478,1.449,712,3.219,714,1.746,718,2.762,719,3.784,753,3.332,776,1.934,783,3.471,810,2.281,813,3.934,816,3.734,821,2.912,831,1.82,832,1.667,890,3.942,891,5.837,892,3.414,893,3.648,894,2.775,895,5.706,896,3.414,897,4.203,898,3.051,1457,6.442]],["title/components/StudentFridgeComponent.html",[0,0.412,135,1.134]],["body/components/StudentFridgeComponent.html",[0,0.621,1,0.599,2,0.156,3,0.186,4,0.667,5,0.171,7,0.211,9,0.905,16,1.046,18,0.921,20,3.246,21,2.185,22,1.09,23,1.98,24,0.553,25,2.394,26,1.12,28,0.234,29,0.635,30,2.353,32,2.622,33,0.856,34,2.054,35,0.583,37,1.588,38,1.554,40,0.955,41,0.011,42,0.901,43,0.607,44,1.225,47,1.761,48,1.493,52,1.045,53,1.698,54,0.464,56,1.078,57,1.698,58,1.649,59,0.668,60,0.316,61,3.049,62,0.765,63,0.939,65,0.178,66,0.899,70,0.306,72,1.351,73,0.667,74,0.667,75,0.599,76,1.061,77,0.599,78,1.032,79,0.667,80,0.568,81,0.632,82,0.587,83,0.667,84,0.599,85,0.667,86,0.599,87,0.667,88,0.599,89,1.061,90,0.599,91,1.32,92,0.599,93,0.667,94,0.599,95,0.632,96,1.061,97,0.615,98,1.061,99,0.599,100,0.667,101,0.583,102,0.615,103,0.434,104,1.504,105,0.599,106,0.649,107,0.599,108,0.607,109,0.599,110,0.667,111,0.599,112,0.446,113,0.599,114,0.667,115,0.599,116,0.667,117,0.583,118,0.667,119,0.599,120,0.644,121,0.632,122,0.667,123,0.615,124,0.388,125,0.599,126,0.446,127,0.599,128,0.667,129,0.599,130,0.667,131,0.599,132,0.667,133,0.599,134,0.667,135,1.351,136,0.599,137,0.599,138,0.599,139,0.667,140,0.599,141,0.667,142,0.599,143,0.632,144,0.649,145,0.667,146,0.004,147,0.004,155,1.448,158,1.761,162,1.405,167,1.325,170,0.434,171,1.784,172,3.177,173,3.154,174,0.704,175,0.911,176,1.12,186,3.129,187,3.044,192,2.636,196,1.151,206,2.91,226,1.291,237,0.79,243,2.636,248,1.541,281,1.239,298,1.658,314,2.636,346,1.325,368,1.251,371,2.597,377,2.794,379,1.217,381,1.545,382,1.287,409,1.701,423,0.599,478,1.091,483,1.918,488,1.761,490,2.054,492,2.667,493,3.038,494,2.192,501,2.636,502,2.118,509,1.034,510,1.108,512,1.148,514,1.108,535,2.91,536,3.738,545,1.591,546,1.411,554,2.817,555,4.46,556,3.738,558,2.243,561,1.895,565,1.97,566,1.895,567,1.97,576,2.243,578,2.142,589,1.291,590,0.632,591,0.744,592,1.192,595,1.658,596,1.772,599,1.291,608,1.411,622,1.772,635,1.658,636,1.291,637,1.291,639,2.636,718,2.505,719,1.895,722,4.642,726,3.281,736,3.038,754,2.106,762,2.817,767,1.411,782,1.686,784,1.541,786,2.452,787,2.332,790,1.97,795,3.842,812,4.07,813,2.794,816,2.632,821,3.072,832,1.826,839,3.524,875,2.485,894,2.142,897,3.524,938,3.347,978,3.044,1024,2.485,1033,3.044,1040,6.486,1042,4.711,1061,2.243,1073,1.563,1095,6.337,1138,1.825,1213,2.106,1458,5.261,1459,5.623,1460,2.106,1461,3.809,1462,3.809,1463,5.401,1464,4.317,1465,5.401,1466,3.809,1467,3.809,1468,3.809,1469,3.809,1470,2.396,1471,3.809,1472,3.809,1473,3.809,1474,2.396,1475,2.396,1476,3.809,1477,3.809,1478,3.809,1479,2.396,1480,3.809,1481,2.396,1482,2.396,1483,4.74,1484,2.396,1485,2.396,1486,2.396,1487,2.396,1488,2.817,1489,1.772,1490,2.106,1491,2.396,1492,2.396,1493,2.396,1494,2.396,1495,2.396,1496,2.396,1497,3.809,1498,2.396,1499,3.809,1500,2.396,1501,2.396,1502,2.396,1503,2.396,1504,4.74,1505,2.396,1506,3.809,1507,2.396,1508,3.809,1509,2.396,1510,3.809,1511,3.809,1512,3.809,1513,3.809]],["title/components/StudentIndivComponent.html",[0,0.412,136,1.134]],["body/components/StudentIndivComponent.html",[0,0.596,1,0.45,2,0.296,3,0.14,4,0.501,5,0.128,7,0.245,9,0.84,13,1.445,16,1.269,18,1.072,20,2.622,21,1.842,22,1.302,23,1.626,24,0.416,25,2.317,26,0.887,28,0.176,29,0.502,30,2.353,32,2.291,33,0.678,34,1.731,35,0.438,37,1.338,38,1.595,40,0.989,41,0.011,42,1.03,43,0.592,44,1.021,47,1.394,48,2.15,49,1.802,51,1.234,52,1.229,53,1.964,54,0.738,56,1.162,57,1.08,58,1.049,59,0.711,60,0.237,61,2.622,62,0.575,63,0.706,64,0.97,65,0.134,66,0.497,70,0.744,71,1.394,72,1.139,73,0.501,74,0.501,75,0.45,76,0.84,77,0.45,78,0.817,79,0.501,80,0.715,81,1.537,82,0.951,83,0.501,84,0.45,85,0.501,86,0.45,87,0.501,88,0.45,89,0.84,90,0.45,91,1.084,92,0.45,93,0.501,94,0.45,95,0.475,96,0.84,97,0.462,98,0.84,99,0.45,100,0.501,101,0.438,102,0.462,103,0.326,104,1.268,105,0.45,106,0.488,107,0.45,108,0.904,109,0.45,110,0.501,111,0.45,112,0.335,113,0.45,114,0.501,115,0.45,116,0.501,117,0.438,118,0.501,119,0.45,120,0.176,121,1.027,122,0.501,123,0.462,124,0.292,125,0.45,126,0.335,127,0.45,128,0.501,129,0.45,130,0.501,131,0.45,132,0.501,133,0.45,134,0.501,135,0.45,136,1.139,137,0.45,138,0.45,139,0.501,140,0.45,141,0.501,142,0.45,143,0.475,144,0.488,145,0.501,146,0.004,147,0.004,154,3.436,155,2.802,158,1.394,162,1.113,166,2.118,167,1.584,171,1.579,172,3.181,173,3.143,174,0.529,175,0.685,176,1.338,186,2.739,199,0.777,205,0.804,206,2.453,210,1.182,216,0.931,226,2.731,240,1.26,242,1.968,248,1.22,254,1.06,262,1.113,263,1.56,281,2.355,298,1.246,346,1.908,370,1.394,376,1.113,377,1.56,378,0.863,379,0.963,381,1.302,386,1.56,393,1.113,409,1.346,423,0.973,443,2.816,467,1.175,468,1.439,470,3.367,471,1.175,472,1.175,478,1.108,483,1.574,488,1.799,490,1.731,492,2.189,493,2.561,494,1.799,502,1.785,509,0.777,510,0.832,512,0.863,514,2.105,524,2.189,525,2.189,533,4.001,535,2.453,536,3.15,545,1.26,546,1.06,547,3.42,550,2.41,555,4.614,556,4.538,558,2.292,560,2.23,561,3.262,562,3.42,565,1.56,566,1.5,567,1.56,578,1.696,583,1.331,584,1.175,585,1.439,586,1.331,589,0.97,590,0.475,591,0.559,592,0.896,593,1.113,594,2.65,595,1.246,596,1.331,599,2.731,600,1.439,608,1.06,619,1.582,620,1.582,621,1.439,622,2.23,624,2.41,625,1.582,626,1.582,627,1.582,629,1.582,631,2.292,635,1.246,636,0.97,637,0.97,639,2.087,642,1.439,643,2.65,645,2.65,646,2.407,649,2.65,663,3.367,665,1.439,666,1.582,667,1.246,668,1.439,714,0.817,718,0.937,719,3.561,722,4.056,725,2.23,726,2.693,731,2.837,732,3.42,735,2.878,736,1.696,742,1.865,753,2.622,758,2.355,767,2.292,770,1.582,772,2.23,782,0.863,784,1.842,812,3.928,832,0.608,839,1.968,894,1.696,934,1.776,973,1.439,1009,2.087,1033,1.439,1040,5.51,1042,3.11,1043,4.518,1052,2.65,1061,1.776,1138,0.863,1291,1.968,1321,4.383,1434,3.42,1458,5.363,1488,2.23,1489,1.331,1490,1.582,1514,6.193,1515,1.968,1516,3.015,1517,4.552,1518,4.552,1519,4.552,1520,3.015,1521,4.552,1522,3.015,1523,4.552,1524,3.015,1525,3.015,1526,1.8,1527,1.8,1528,3.015,1529,1.8,1530,2.65,1531,1.8,1532,3.015,1533,1.8,1534,2.23,1535,1.8,1536,4.552,1537,3.015,1538,1.8,1539,1.8,1540,1.8,1541,3.015,1542,1.8,1543,3.891,1544,1.8,1545,1.8,1546,2.65,1547,4.552,1548,3.015,1549,3.015,1550,3.015,1551,3.015,1552,1.8,1553,1.8,1554,3.015,1555,1.8,1556,2.65,1557,1.8,1558,1.8,1559,1.8,1560,1.8,1561,3.11,1562,1.8,1563,1.8,1564,1.8,1565,1.582,1566,1.8,1567,1.8,1568,3.891,1569,1.8,1570,1.8,1571,1.8,1572,1.8,1573,1.8,1574,4.552,1575,3.015,1576,1.8,1577,3.015,1578,1.8,1579,1.8,1580,1.8,1581,1.8,1582,1.8,1583,1.8,1584,1.8,1585,3.015,1586,2.65,1587,3.015,1588,3.015]],["title/components/StudentListComponent.html",[0,0.412,137,1.134]],["body/components/StudentListComponent.html",[0,0.707,1,0.909,2,0.237,3,0.282,4,1.012,5,0.259,7,0.162,9,0.964,16,1.266,18,1.114,22,1.495,23,2.555,24,0.839,25,2.478,26,1.536,28,0.356,29,0.87,30,2.391,32,3.08,33,1.175,34,2.542,35,1.272,37,1.966,38,1.53,40,0.589,41,0.011,42,0.935,43,0.563,44,0.677,47,2.415,49,2.197,52,0.776,53,1.871,54,0.786,56,0.856,57,1.302,58,1.265,59,0.721,60,0.479,61,3.663,62,1.161,63,1.425,65,0.271,66,0.464,70,0.464,72,1.672,73,1.012,74,1.012,75,0.909,76,1.455,77,0.909,78,1.416,79,1.012,80,0.862,81,0.959,82,0.45,83,1.012,84,0.909,85,1.012,86,0.909,87,1.012,88,0.909,89,1.455,90,0.909,91,1.703,92,0.909,93,1.012,94,0.909,95,0.959,96,1.455,97,0.934,98,1.455,99,0.909,100,1.012,101,0.885,102,0.934,103,0.658,104,1.862,105,0.909,106,0.985,107,0.909,108,0.408,109,0.909,110,1.012,111,0.909,112,0.677,113,0.909,114,1.012,115,0.909,116,1.012,117,0.885,118,1.012,119,0.909,120,0.356,121,0.959,122,1.012,123,0.934,124,0.589,125,0.909,126,0.677,127,0.909,128,1.012,129,0.909,130,1.012,131,0.909,132,1.012,133,0.909,134,1.012,135,0.909,136,0.909,137,1.672,138,0.909,139,1.012,140,0.909,141,1.012,142,0.909,143,0.959,144,0.985,145,1.012,146,0.006,147,0.006,153,3.326,154,2.255,162,1.928,171,1.416,186,2.182,196,1.579,206,3.602,226,3.602,248,2.114,255,2.248,377,3.458,379,1.669,381,1.75,382,1.766,409,2.333,423,0.909,478,1.623,483,2.474,490,2.542,494,2.827,501,3.615,502,2.622,509,1.569,510,1.68,512,1.742,514,1.68,524,2.045,525,2.045,535,3.602,578,2.939,586,2.688,589,1.959,590,0.959,591,1.129,592,1.808,599,1.959,636,1.959,637,1.959,640,4.175,662,3.195,663,2.688,664,3.195,674,2.905,675,4.175,714,1.416,726,3.615,1061,3.076,1433,3.864,1458,5.257,1489,2.688,1565,4.592,1586,4.592,1589,6.071,1590,4.592,1591,4.175,1592,3.195,1593,5.224,1594,3.635,1595,3.635,1596,3.635,1597,3.635,1598,3.635]],["title/modules/StudentModule.html",[194,1.448,1599,3.352]],["body/modules/StudentModule.html",[2,0.318,3,0.379,5,0.348,7,0.218,9,0.923,18,1.066,41,0.011,59,0.857,60,0.644,65,0.477,66,0.624,80,1.693,82,0.605,126,0.91,135,2.019,136,2.019,137,2.019,138,2.019,146,0.007,147,0.007,154,2.764,174,1.437,186,2.675,194,2.421,196,1.476,197,2.527,198,3.694,199,2.109,200,3.553,205,3.604,207,3.312,208,1.652,214,3.312,215,2.633,216,2.527,408,2.435,478,1.293,583,3.614,584,3.188,694,5.117,696,4.294,698,4.294,718,1.989,795,3.602,1167,5.587,1198,5.587,1217,5.587,1395,6.276,1459,4.735,1514,3.905,1589,3.905,1599,6.596,1600,4.294,1601,4.294,1602,4.886,1603,4.294,1604,5.587,1605,4.886,1606,6.402,1607,6.402,1608,4.886,1609,4.886,1610,4.886,1611,4.886,1612,4.886,1613,4.886,1614,4.886,1615,4.886,1616,4.886]],["title/interfaces/StudentPhage.html",[170,0.821,813,2.344]],["body/interfaces/StudentPhage.html",[2,0.277,3,0.33,5,0.303,7,0.26,9,0.841,18,0.745,28,0.416,29,0.972,41,0.011,43,0.603,44,1.086,51,1.581,54,0.701,56,1.003,65,0.559,82,1.038,103,0.77,120,0.869,124,0.689,146,0.007,147,0.007,162,1.569,170,1.438,171,1.942,196,1.285,228,1.863,230,3.564,237,1.813,238,1.524,365,1.667,368,1.397,371,1.617,410,2.504,422,2.354,438,1.899,478,1.345,576,2.504,590,2.046,591,2.068,714,1.581,718,2.068,740,3.745,774,2.291,775,2.774,776,2.287,777,2.63,778,2.943,779,3.584,780,2.392,781,2.774,782,1.217,783,3.587,784,2.36,785,2.392,786,2.199,787,3.093,788,2.63,789,2.504,790,2.199,791,3.921,792,2.899,793,2.774,794,2.504,795,3.745,796,1.72,797,2.291,798,4.421,799,4.344,800,3.462,801,2.199,802,2.973,803,3.921,804,2.874,805,4.607,806,4.607,807,4.607,808,4.607,809,4.344,810,3.078,811,2.943,812,2.63,813,3.017,814,4.219,815,4.037,816,3.462]],["title/components/StudentPhageComponent.html",[0,0.412,138,1.134]],["body/components/StudentPhageComponent.html",[0,0.72,1,0.975,2,0.254,3,0.303,4,1.085,5,0.278,7,0.174,9,0.562,16,1.212,18,1.011,24,0.9,25,2.489,26,1.614,28,0.381,33,1.234,35,1.548,38,1.319,41,0.011,42,0.84,43,0.535,52,1.08,54,0.738,56,1.085,59,0.537,60,0.514,65,0.29,66,0.498,70,0.498,72,1.726,73,1.085,74,1.085,75,0.975,76,1.529,77,0.975,78,1.488,79,1.085,80,0.924,81,1.029,82,0.787,83,1.085,84,0.975,85,1.085,86,0.975,87,1.085,88,0.975,89,1.529,90,0.975,91,1.77,92,0.975,93,1.085,94,0.975,95,1.029,96,1.529,97,1.001,98,1.529,99,0.975,100,1.085,101,0.949,102,1.001,103,0.706,104,1.921,105,0.975,106,1.057,107,0.975,108,0.714,109,0.975,110,1.085,111,0.975,112,0.726,113,0.975,114,1.085,115,0.975,116,1.085,117,0.949,118,1.085,119,0.975,120,0.855,121,1.029,122,1.085,123,1.001,124,0.631,125,0.975,126,0.726,127,0.975,128,1.085,129,0.975,130,1.085,131,0.975,132,1.085,133,0.975,134,1.085,135,0.975,136,0.975,137,0.975,138,1.726,139,1.085,140,0.975,141,1.085,142,0.975,143,1.029,144,1.057,145,1.085,146,0.006,147,0.006,166,2.294,186,2.294,259,3.258,368,2.267,422,1.804,461,3.882,576,3.233,590,1.449,717,4.061,718,1.706,731,3.569,735,4.061,785,3.576,786,2.84,787,2.37,790,2.84,795,3.089,813,3.288,816,2.452,821,2.026,839,3.583,1138,2.631,1174,4.826,1191,3.115,1192,4.826,1205,4.826,1219,4.826,1409,4.061,1458,4.775,1459,5.103,1515,3.583,1546,6.065,1617,3.426,1618,5.491,1619,5.491,1620,7.546,1621,5.491,1622,3.898,1623,5.491,1624,3.898,1625,3.898,1626,5.491,1627,3.898,1628,3.898,1629,3.898,1630,3.898,1631,3.898,1632,3.898,1633,3.898,1634,3.898,1635,3.898,1636,5.491,1637,5.491,1638,5.491,1639,5.491]],["title/injectables/StudentResolver.html",[148,1.724,1604,3.137]],["body/injectables/StudentResolver.html",[2,0.327,3,0.39,5,0.358,7,0.291,9,0.724,18,0.978,21,2.637,22,2.07,28,0.491,30,1.477,33,1.465,35,1.223,37,2.252,38,1.352,40,1.24,41,0.011,42,0.997,43,0.549,44,1.213,52,1.138,54,0.638,59,0.796,60,0.662,62,1.604,63,1.969,65,0.374,66,0.642,146,0.008,147,0.008,148,2.752,156,4.51,161,5.492,162,3.001,163,5.492,166,2.723,167,2.829,168,5.209,169,2.912,170,1.181,174,1.477,175,1.91,176,1.916,206,4.127,226,2.706,254,2.958,293,4.032,350,4.722,377,4.283,386,3.372,423,1.256,494,3.346,512,2.407,586,3.714,706,6.5,709,5.209,711,3.838,712,5.307,713,3.838,714,2.076,726,4.511,736,4.308,855,4.253,1489,3.714,1592,4.414,1604,4.511,1640,4.414,1641,5.022,1642,5.022,1643,6.518,1644,7.236,1645,5.022,1646,5.022]],["title/injectables/StudentService.html",[148,1.724,206,2.442]],["body/injectables/StudentService.html",[2,0.198,3,0.236,5,0.217,7,0.32,9,1.111,16,0.763,17,2.369,18,1.125,19,2.989,28,0.297,29,0.763,30,1.62,33,1.03,35,0.74,38,1.533,40,1.162,41,0.011,42,1.098,43,0.622,44,1.336,49,2.66,52,1.256,54,0.792,56,1.122,57,1.089,58,1.917,59,0.6,60,0.401,62,0.971,65,0.226,66,0.388,82,0.914,108,0.777,146,0.005,147,0.005,148,2.096,153,3.832,154,3.597,155,2.729,170,0.551,171,1.663,172,1.977,173,2.195,175,1.156,176,2.38,196,1.384,206,2.468,212,3.388,226,2.468,236,3.547,237,1.84,287,2.104,346,1.593,347,2.577,348,4.537,361,4.537,371,2.333,372,1.913,374,3.17,376,1.69,377,4.284,381,2.268,382,1.548,386,2.369,423,1.146,424,2.798,458,4.026,478,1.239,545,3.217,561,2.279,587,3.661,711,2.697,713,2.697,714,1.242,718,2.556,719,2.279,735,3.388,736,4.736,762,5.309,784,2.482,816,2.045,821,1.69,825,2.672,827,4.026,842,2.833,843,3.17,860,6.079,897,1.984,934,2.697,1299,5.904,1534,3.388,1591,3.661,1647,2.672,1648,4.58,1649,3.661,1650,3.661,1651,4.58,1652,4.58,1653,4.58,1654,4.58,1655,4.58,1656,3.04,1657,6.134,1658,7.927,1659,4.58,1660,3.04,1661,4.58,1662,3.04,1663,4.58,1664,6.58,1665,3.04,1666,3.661,1667,4.58,1668,3.04,1669,4.58,1670,4.58,1671,3.04,1672,4.58,1673,4.58,1674,3.04,1675,3.04,1676,3.04,1677,3.04,1678,3.04,1679,3.04,1680,3.04]],["title/components/UpdatePasswordComponent.html",[0,0.412,140,1.134]],["body/components/UpdatePasswordComponent.html",[0,0.68,1,0.68,2,0.377,3,0.211,4,0.757,5,0.194,7,0.121,9,0.392,16,1.043,18,0.74,21,2.342,24,0.628,25,2.423,26,1.237,28,0.266,29,0.701,30,2.407,32,2.765,33,0.946,34,2.201,35,1.024,37,1.702,38,1.552,40,0.44,41,0.011,42,0.787,43,0.6,44,0.506,47,1.945,48,2.455,49,2.175,50,1.878,51,1.14,52,1.131,53,1.843,54,0.806,56,0.966,57,1.507,58,1.463,59,0.675,60,0.358,61,3.238,62,0.869,63,1.066,64,1.465,65,0.202,66,0.347,70,0.657,72,1.448,73,0.757,74,0.757,75,0.68,76,1.171,77,0.68,78,1.14,79,0.757,80,0.645,81,2.009,82,0.337,83,0.757,84,0.68,85,0.757,86,0.68,87,0.757,88,0.68,89,1.171,90,0.68,91,1.432,92,0.68,93,0.757,94,0.68,95,0.718,96,1.171,97,0.699,98,1.171,99,0.68,100,0.757,101,0.662,102,0.699,103,0.492,104,1.612,105,0.68,106,0.737,107,0.68,108,0.305,109,0.68,110,0.757,111,0.68,112,0.506,113,0.68,114,0.757,115,0.68,116,0.757,117,0.662,118,0.757,119,0.68,120,0.266,121,0.718,122,0.757,123,0.699,124,0.44,125,0.68,126,0.506,127,0.68,128,0.757,129,0.68,130,0.757,131,0.68,132,0.757,133,0.68,134,0.757,135,0.68,136,0.68,137,0.68,138,0.68,139,0.757,140,1.448,141,0.757,142,0.68,143,1.357,144,0.737,145,0.757,146,0.005,147,0.008,158,1.945,162,1.552,174,0.799,240,2.765,251,2.602,332,4.406,347,3.257,365,2.017,368,1.382,369,2.602,370,1.945,372,1.757,373,1.878,378,2.016,379,2.278,381,2.178,382,1.422,391,3.697,397,2.477,398,4.581,408,1.599,415,2.911,423,2.018,453,3.805,465,2.995,490,2.201,494,2.378,498,4.319,502,1.649,509,1.174,510,1.257,512,1.303,514,2.378,524,1.53,525,1.53,535,3.119,545,3.18,546,1.601,565,2.176,566,2.093,567,2.176,589,1.465,590,1.11,591,1.307,592,1.353,599,2.266,631,2.477,636,1.465,637,1.465,678,2.911,722,3.805,758,1.407,784,1.702,810,1.257,842,2.602,867,2.011,869,3.362,923,2.011,934,2.477,1009,2.911,1041,2.011,1083,3.362,1279,3.581,1283,2.173,1286,6.084,1291,2.745,1293,4.627,1303,5.29,1304,3.805,1312,5.088,1324,2.39,1325,3.697,1328,2.39,1330,2.39,1331,3.697,1336,2.39,1339,2.39,1340,2.39,1341,3.697,1342,2.39,1409,4.282,1681,6.691,1682,6.62,1683,4.521,1684,4.206,1685,2.719,1686,4.206,1687,6.62,1688,4.206,1689,3.362,1690,2.719,1691,3.697,1692,4.206,1693,4.206,1694,2.719,1695,4.206,1696,2.719,1697,2.719,1698,3.697,1699,2.719,1700,4.206,1701,3.697,1702,4.206,1703,4.206,1704,4.206,1705,3.697,1706,2.719,1707,2.39,1708,2.39,1709,2.39,1710,2.719,1711,2.719,1712,2.719,1713,2.719,1714,3.362,1715,2.719,1716,4.206]],["title/interfaces/User.html",[54,0.443,170,0.821]],["body/interfaces/User.html",[2,0.333,3,0.398,5,0.365,7,0.228,9,0.952,11,4.569,18,0.843,28,0.646,29,1.1,41,0.011,42,1.25,43,0.672,49,2.4,50,3.445,54,0.864,56,1.21,65,0.492,66,0.654,146,0.008,147,0.008,153,3.284,154,3.53,166,2.14,170,1.398,230,2.548,232,2.76,234,3.973,235,3.973,236,2.14,237,1.726,238,1.657,239,4.083,240,3.223,245,3.634,246,3.634,248,2.671,259,2.85,382,2.231,465,3.415,561,3.284,590,1.742,591,2.051,714,2.255,800,3.445,851,4.307,1717,4.093,1718,5.802,1719,5.802,1720,5.802,1721,4.502]],["title/components/UserProfileComponent.html",[0,0.412,142,1.134]],["body/components/UserProfileComponent.html",[0,0.729,1,0.802,2,0.41,3,0.249,4,0.893,5,0.229,7,0.213,9,0.463,16,1.122,18,0.805,24,0.741,25,2.456,26,1.402,28,0.314,29,0.794,30,2.404,32,2.948,33,1.072,34,2.396,35,1.534,37,1.98,38,1.557,40,0.52,41,0.011,42,1.173,43,0.567,44,0.597,47,2.204,48,2.64,49,1.567,50,2.129,51,1.708,52,0.845,53,2.038,54,0.822,56,0.797,57,1.149,58,1.116,59,0.69,60,0.423,61,3.483,62,1.025,63,1.258,64,1.729,65,0.239,66,0.727,70,0.41,72,1.576,73,0.893,74,0.893,75,0.802,76,1.328,77,0.802,78,1.292,79,0.893,80,0.761,81,0.846,82,0.397,83,0.893,84,0.802,85,0.893,86,0.802,87,0.893,88,0.802,89,1.328,90,0.802,91,1.585,92,0.802,93,0.893,94,0.802,95,0.846,96,1.328,97,0.824,98,1.328,99,0.802,100,0.893,101,0.781,102,0.824,103,0.581,104,1.754,105,0.802,106,0.87,107,0.802,108,0.36,109,0.802,110,0.893,111,0.802,112,0.597,113,0.802,114,0.893,115,0.802,116,0.893,117,0.781,118,0.893,119,0.802,120,0.314,121,0.846,122,0.893,123,0.824,124,0.52,125,0.802,126,0.597,127,0.802,128,0.893,129,0.802,130,0.893,131,0.802,132,0.893,133,0.802,134,0.893,135,0.802,136,0.802,137,0.802,138,0.802,139,0.893,140,0.802,141,0.893,142,1.576,143,2.024,144,0.87,145,0.893,146,0.006,147,0.006,155,1.813,162,1.759,176,1.402,189,3.527,234,3.134,235,3.134,236,2.632,237,1.181,238,0.937,240,3.136,245,2.372,246,2.372,263,2.466,332,3.51,346,2.611,368,1.567,369,2.949,370,2.204,376,2.325,379,2.012,381,1.926,383,4.191,397,2.808,408,1.813,423,0.802,424,2.549,438,2.129,488,2.204,490,2.396,494,2.913,501,3.3,502,1.87,509,1.385,510,1.483,512,1.537,514,2.204,524,1.805,525,1.805,530,4.111,535,3.395,545,3.261,558,2.808,560,3.527,565,2.466,566,2.372,567,2.466,589,1.729,590,0.846,591,0.997,599,2.569,614,2.82,631,1.889,636,1.729,637,1.729,678,3.3,714,1.292,782,1.803,845,2.466,969,3.811,1088,2.82,1279,4.165,1283,2.564,1284,5.672,1422,3.811,1683,5.002,1698,4.191,1707,2.82,1708,2.82,1709,2.82,1722,6.741,1723,2.82,1724,4.191,1725,4.768,1726,6.3,1727,6.3,1728,3.208,1729,4.768,1730,3.208,1731,3.208,1732,3.208,1733,3.208,1734,4.768,1735,4.768,1736,3.208,1737,3.208,1738,3.208,1739,5.691,1740,3.208,1741,3.208,1742,3.208,1743,3.208,1744,3.208,1745,3.208,1746,3.208]],["title/interfaces/_User.html",[170,0.821,232,2.442]],["body/interfaces/_User.html",[2,0.346,3,0.413,5,0.379,7,0.237,9,0.767,11,5.415,18,0.679,28,0.727,29,1.127,41,0.011,42,1.263,43,0.626,49,1.747,50,3.02,54,0.865,56,1.2,65,0.504,66,0.864,146,0.008,147,0.008,153,2.646,154,2.919,166,2.825,170,1.463,230,3.364,232,3.644,234,4.019,235,4.019,236,3.269,237,1.676,238,1.698,239,3.29,240,2.222,245,3.699,246,3.699,248,2.152,259,2.296,382,1.798,465,4.047,561,2.646,590,1.403,591,1.652,714,2.121,800,3.02,851,3.47,1717,4.25,1718,4.675,1719,4.675,1720,4.675,1721,5.944]],["title/changelog.html",[680,2.371,802,1.711,1747,3.368]],["body/changelog.html",[0,0.556,2,0.398,9,0.657,16,0.759,18,0.582,41,0.007,44,0.849,54,0.791,70,0.781,82,0.854,108,0.512,112,0.849,120,0.804,121,1.203,124,1.117,126,1.138,143,1.203,146,0.009,147,0.007,155,2.325,156,3.601,165,3.372,167,1.586,170,0.826,208,1.541,237,1.269,239,2.82,240,1.904,262,2.82,332,3.433,365,1.787,368,2.009,370,2.108,371,1.733,372,1.904,373,2.73,375,2.456,380,3.155,381,2.2,382,2.332,387,2.82,393,2.82,401,3.643,402,3.155,403,3.372,410,2.685,414,2.185,416,5.687,422,1.498,423,1.14,425,2.974,435,3.155,436,2.82,438,2.73,461,2.564,465,2.358,467,2.974,474,2.82,478,0.921,499,2.82,545,3.514,555,4.268,557,6.32,566,2.268,618,4.232,650,2.82,680,2.82,714,1.236,718,2.29,719,2.268,776,2.705,787,1.968,792,2.983,809,2.974,810,2.108,821,2.256,831,2.256,832,1.541,835,2.685,836,2.685,841,4.232,857,4.007,877,2.685,904,3.643,929,3.155,933,3.292,954,2.82,1034,3.643,1101,3.643,1105,3.643,1125,2.974,1128,1.968,1134,2.974,1140,3.643,1206,3.372,1252,4.007,1262,2.974,1268,2.82,1269,2.974,1271,2.685,1302,4.007,1305,4.007,1321,3.643,1369,4.007,1409,3.372,1530,4.007,1666,3.643,1701,4.007,1747,4.007,1748,4.559,1749,4.559,1750,2.73,1751,2.82,1752,7.916,1753,4.559,1754,1.682,1755,4.559,1756,7.107,1757,4.559,1758,3.643,1759,6.899,1760,4.559,1761,6.114,1762,4.559,1763,4.559,1764,6.114,1765,4.559,1766,4.559,1767,4.007,1768,4.559,1769,4.559,1770,4.559,1771,4.559,1772,4.559,1773,4.559,1774,4.559,1775,6.114,1776,4.559,1777,4.559,1778,6.899,1779,4.559,1780,4.559,1781,6.114,1782,4.559,1783,4.522,1784,6.114,1785,4.559,1786,4.559,1787,6.114,1788,5.374,1789,5.374,1790,4.007,1791,3.155,1792,4.502,1793,4.559,1794,4.559,1795,4.007,1796,6.064,1797,4.559,1798,4.559,1799,4.559,1800,6.899,1801,4.559,1802,4.559,1803,4.559,1804,4.007,1805,4.559,1806,4.559,1807,4.559,1808,4.559,1809,4.559,1810,4.559,1811,4.559,1812,4.007]],["title/coverage.html",[1813,5.353]],["body/coverage.html",[0,0.807,1,0.904,5,0.258,6,3.176,16,0.602,18,0.462,37,1.062,41,0.011,43,0.304,54,0.353,75,0.904,77,0.904,80,0.857,82,0.447,84,0.904,86,0.904,88,0.904,90,0.904,92,0.904,94,0.904,97,0.928,99,0.904,101,0.88,102,0.928,105,0.904,107,0.904,108,0.406,109,0.904,111,0.904,113,0.904,115,0.904,117,0.88,119,0.904,120,0.353,123,0.928,125,0.904,127,0.904,129,0.904,131,0.904,133,0.904,135,0.904,136,0.904,137,0.904,138,0.904,140,0.904,142,0.904,146,0.006,147,0.006,148,3.089,149,2.5,150,3.176,170,1.531,183,3.176,184,2.887,185,3.176,206,1.947,221,2.887,226,1.947,227,4.508,232,1.947,255,2.235,259,1.56,261,3.176,278,1.947,279,2.5,280,2.5,281,1.869,308,2.672,341,2.887,343,2.887,345,3.176,409,2.977,423,0.904,454,3.176,455,4.157,476,3.176,478,0.73,480,4.61,481,2.887,482,3.176,509,1.56,528,2.887,529,3.176,641,2.887,642,4.157,673,2.887,674,4.157,691,2.5,699,2.887,705,3.176,716,3.176,718,1.122,774,1.947,775,4.61,783,1.947,797,1.947,813,1.869,817,2.5,818,3.176,829,2.357,844,4.572,847,2.357,859,2.357,866,3.176,867,4.508,890,4.157,897,2.357,899,3.176,915,3.176,935,3.176,936,2.887,937,5.328,942,2.357,964,3.176,979,3.176,997,3.176,998,3.176,999,2.887,1001,3.176,1002,3.176,1019,3.176,1066,2.672,1101,7.05,1104,3.176,1116,3.176,1117,3.176,1121,3.176,1122,3.176,1128,3.177,1129,2.5,1130,3.176,1131,3.176,1161,2.5,1162,3.176,1163,3.176,1167,2.5,1168,4.614,1169,3.176,1176,5.86,1187,3.176,1198,2.5,1199,3.176,1217,2.5,1218,3.176,1220,4.572,1227,2.5,1228,3.176,1258,4.508,1279,2.235,1284,2.672,1286,2.887,1288,3.176,1309,3.176,1345,3.176,1353,3.176,1365,3.176,1401,3.176,1417,3.176,1426,3.176,1458,4.614,1459,3.847,1460,3.176,1514,2.887,1561,2.887,1589,2.887,1604,2.5,1617,3.176,1640,3.176,1647,3.176,1681,3.176,1717,4.157,1722,3.176,1723,3.176,1754,1.333,1767,3.176,1813,3.176,1814,3.613,1815,8.347,1816,6.095,1817,6.095,1818,6.667,1819,6.667,1820,5.201,1821,5.201,1822,6.095,1823,3.613,1824,3.613,1825,3.613,1826,5.201,1827,5.201,1828,3.613,1829,3.613,1830,6.095,1831,3.613,1832,3.613,1833,5.201,1834,5.201,1835,3.613,1836,3.613,1837,5.201,1838,3.176,1839,3.613,1840,3.613,1841,3.613,1842,5.86,1843,6.095,1844,3.613,1845,4.572,1846,5.201,1847,5.201,1848,5.201,1849,5.201,1850,7.358,1851,5.201,1852,3.613,1853,3.613,1854,5.201,1855,3.613,1856,3.613,1857,3.613,1858,3.613,1859,3.613,1860,3.613,1861,5.201,1862,3.613,1863,3.613,1864,3.613,1865,3.613,1866,3.613,1867,3.613,1868,3.613,1869,3.176,1870,3.613,1871,3.613,1872,3.613,1873,3.176,1874,3.176,1875,3.613]],["title/dependencies.html",[196,1.639,1876,3.832]],["body/dependencies.html",[24,1.156,33,1.126,41,0.011,60,0.66,62,1.6,146,0.008,147,0.008,174,1.472,196,1.513,199,2.809,284,6.352,285,5.2,290,3.704,292,4.002,293,3.098,334,4.002,363,4.002,372,2.718,374,3.466,382,1.693,471,3.268,472,3.268,560,3.704,951,3.704,1358,4.402,1382,4.402,1383,6.352,1387,4.402,1389,5.719,1390,4.402,1812,4.402,1877,5.008,1878,8.614,1879,6.506,1880,5.008,1881,5.008,1882,5.008,1883,7.929,1884,5.008,1885,5.008,1886,5.008,1887,5.008,1888,5.008,1889,6.506,1890,5.008,1891,5.008,1892,5.008,1893,5.008,1894,6.506,1895,5.008,1896,5.008,1897,6.506,1898,5.008,1899,5.008,1900,5.008,1901,5.008,1902,5.008,1903,5.008,1904,5.008,1905,6.506,1906,5.008,1907,5.008,1908,5.008,1909,5.008,1910,5.008,1911,5.008,1912,6.969,1913,5.008,1914,6.506,1915,5.008,1916,5.008,1917,5.008,1918,5.008,1919,5.008,1920,5.008,1921,5.008,1922,5.008,1923,5.008,1924,5.008,1925,5.008,1926,5.008,1927,5.008,1928,5.008,1929,5.008,1930,5.008,1931,6.506,1932,5.008,1933,4.402,1934,5.008,1935,5.008,1936,5.008,1937,5.008,1938,5.008,1939,5.008,1940,5.008,1941,5.008,1942,5.008,1943,5.008,1944,6.724,1945,5.008,1946,5.008,1947,5.008,1948,5.008,1949,5.008,1950,5.008,1951,5.008,1952,4.002,1953,5.008,1954,5.008,1955,5.008,1956,5.008,1957,5.008,1958,5.008,1959,5.008,1960,5.008,1961,5.008,1962,5.008,1963,5.008,1964,5.008,1965,5.008]],["title/index.html",[28,0.375,680,2.371,802,1.711]],["body/index.html",[41,0.01,78,1.887,146,0.009,147,0.009,416,5.149,802,3.108,951,5.149,1966,5.564,1967,6.961]],["title/license.html",[680,2.371,802,1.711,1968,3.368]],["body/license.html",[5,0.46,41,0.009,146,0.009,147,0.009,238,1.268,262,3.99,437,4.209,894,3.629,978,5.155,1691,5.67,1756,5.67,1788,5.67,1795,7.117,1912,5.67,1968,7.735,1969,6.451,1970,6.451,1971,6.451,1972,6.451,1973,6.451,1974,7.612,1975,6.451,1976,6.451,1977,6.451,1978,5.67,1979,6.451,1980,6.451,1981,6.451,1982,6.451,1983,6.451,1984,6.451,1985,7.612,1986,6.451,1987,6.451,1988,6.451,1989,6.451,1990,6.451,1991,6.451,1992,6.451,1993,6.451]],["title/modules.html",[194,1.946]],["body/modules.html",[41,0.009,146,0.009,147,0.009,194,2.035,195,4.409,205,2.845,267,4.712,273,4.409,274,4.409,275,4.409,276,4.409,277,4.409,285,7.095,656,4.157,686,4.712,984,4.409,1599,4.712,1804,7.802,1994,8.877,1995,8.913,1996,6.371]],["title/overview.html",[1997,5.353]],["body/overview.html",[0,0.336,1,1.543,37,1.813,41,0.011,65,0.275,75,1.543,77,1.909,80,1.81,84,1.543,86,1.543,88,1.543,90,1.543,92,1.543,94,1.543,97,1.585,99,1.543,101,1.502,102,1.585,105,1.543,107,1.543,109,1.543,111,1.543,113,1.543,115,1.543,117,1.502,119,1.543,123,1.585,125,1.543,126,0.687,127,1.543,129,1.543,131,1.543,133,1.543,135,1.543,136,1.543,137,1.543,138,1.543,140,1.543,142,1.543,146,0.006,147,0.006,148,1.403,149,4.268,170,0.668,194,1.687,195,5.835,196,1.115,197,1.909,198,1.909,199,1.593,200,1.836,201,3.244,202,3.244,203,3.244,204,3.244,205,3.878,206,3.323,207,2.732,208,1.248,267,6.581,268,3.244,269,3.244,270,3.244,271,3.244,272,3.244,273,4.268,274,5.754,275,5.281,276,5.647,277,5.499,278,3.323,279,4.268,280,4.268,281,3.19,324,3.244,325,3.244,686,6.272,687,3.244,688,3.244,690,3.244,691,4.268,817,4.268,907,3.244,908,3.244,984,5.972,985,3.244,986,3.244,988,3.244,1128,1.593,1129,5.281,1161,5.281,1167,4.268,1198,4.268,1217,4.268,1227,5.281,1239,4.642,1275,3.244,1276,3.244,1278,3.244,1279,3.815,1343,2.949,1354,3.244,1355,3.244,1374,3.244,1375,3.244,1376,3.244,1599,6.382,1600,3.244,1601,3.244,1603,3.244,1604,4.268,1758,2.949,1997,3.244,1998,3.691]],["title/todo.html",[617,3.063,680,2.371,802,1.711]],["body/todo.html",[13,3.189,16,1.108,41,0.009,54,0.651,70,0.85,71,3.076,82,0.959,103,1.205,120,0.758,146,0.009,147,0.009,328,3.918,342,5.317,379,2.125,381,1.904,385,4.921,416,4.921,438,2.971,618,4.604,718,2.067,796,2.692,900,5.317,1084,5.848,1284,4.921,1285,5.848,1796,5.848,1999,6.813,2000,6.653,2001,5.848,2002,6.653,2003,6.653]],["title/miscellaneous/variables.html",[409,2.422,2004,3.368]],["body/miscellaneous/variables.html",[9,0.66,13,2.938,17,2.367,18,0.883,28,0.448,29,0.762,32,2.561,40,0.993,41,0.011,42,1.057,43,0.516,52,1.202,54,0.676,56,0.968,57,2.899,58,2.993,69,3.657,71,2.116,72,1.145,82,0.566,103,1.11,120,0.448,124,0.993,146,0.007,147,0.008,153,2.277,154,1.975,210,2.404,227,3.384,237,1.679,238,1.359,243,4.784,244,3.657,245,2.277,246,2.277,247,3.657,248,1.851,249,3.657,250,3.657,251,2.831,252,3.657,253,3.657,255,4.276,256,3.657,257,5.525,258,3.657,259,2.646,260,3.657,315,4.022,365,1.794,372,2.561,373,2.043,379,1.462,381,2.267,409,2.043,465,2.367,478,0.924,509,2.984,561,2.277,590,1.207,591,1.421,650,2.831,718,2.147,776,2.404,779,1.975,781,2.986,782,1.309,786,2.367,796,2.988,802,2.043,816,2.043,832,2.072,841,4.242,898,4.568,1010,4.022,1023,5.461,1034,3.657,1055,3.657,1056,2.986,1066,5.113,1202,4.022,1206,4.534,1222,4.022,1236,4.022,1266,4.534,1291,4,1534,3.384,1561,5.525,1758,3.657,1838,4.022,1869,4.022,1873,4.022,1874,5.388,2001,4.022,2004,6.076,2005,4.576,2006,4.576,2007,4.576,2008,4.576,2009,4.576,2010,4.576,2011,6.13,2012,6.13,2013,6.13,2014,6.13,2015,4.576,2016,4.576,2017,4.576,2018,4.576,2019,4.576,2020,4.576,2021,4.576,2022,2.695,2023,4.576,2024,4.576,2025,4.022,2026,4.576,2027,6.13,2028,4.576,2029,4.576,2030,6.13,2031,4.576,2032,4.576,2033,4.022,2034,4.576,2035,3.657,2036,3.657,2037,4.576,2038,4.576]],["title/additional-documentation/controllers.html",[70,0.49,228,1.224,1750,1.711]],["body/additional-documentation/controllers.html",[9,0.906,16,1.047,41,0.009,54,0.615,108,0.706,146,0.009,147,0.009,349,5.542,355,5.021,357,4.647,358,4.647,359,4.647,372,2.624,478,1.269,489,5.021,542,5.021,543,5.021,718,1.952,725,4.647,823,4.348,933,2.805,1649,5.021,1650,5.021,1750,3.88,1754,2.318,2039,5.522,2040,5.522,2041,5.522,2042,5.522,2043,5.522,2044,5.522,2045,5.522,2046,5.522,2047,5.522,2048,5.522,2049,5.522,2050,5.522,2051,5.522,2052,5.522,2053,5.522,2054,5.522,2055,5.522,2056,5.522,2057,5.522,2058,5.522,2059,5.522,2060,5.522,2061,5.522,2062,5.522,2063,5.522,2064,5.522,2065,5.522,2066,5.522,2067,4.348,2068,5.522,2069,5.522,2070,5.522,2071,4.348,2072,5.522]],["title/additional-documentation/controllers/admin-controller.html",[9,0.479,70,0.424,228,1.06,1750,1.482]],["body/additional-documentation/controllers/admin-controller.html",[7,0.382,9,1.196,16,0.902,17,1.976,18,0.873,28,0.374,40,1.343,41,0.01,43,0.698,48,2.465,49,1.255,50,1.706,51,1.853,52,1.17,54,0.861,71,3.564,82,0.67,146,0.006,147,0.006,153,3.127,154,2.714,176,2.439,188,1.9,210,3.022,236,3.132,349,4.003,365,2.122,373,3.347,375,4.506,379,2.515,381,2.393,382,2.311,427,4.23,443,3.348,478,1.381,545,1.596,714,2.171,736,3.536,758,3.877,782,2.535,784,1.545,831,1.409,877,5.064,1043,5.339,1120,5.057,1138,1.831,1590,3.357,1750,2.807,1754,1.409,2022,4.027,2039,4.757,2040,4.757,2041,4.757,2042,4.757,2043,4.757,2071,5.543,2073,3.82,2074,3.82,2075,4.891,2076,4.891,2077,5.544,2078,4.891,2079,4.891,2080,4.462,2081,4.462,2082,3.053,2083,3.82,2084,3.357,2085,6.286,2086,3.82,2087,6.286,2088,5.412,2089,3.82,2090,3.82,2091,2.643,2092,3.82,2093,3.357,2094,3.82,2095,3.82,2096,3.82,2097,5.45,2098,5.45,2099,5.412,2100,4.003,2101,4.325,2102,5.412,2103,3.82,2104,1.649]],["title/additional-documentation/controllers/course-controller.html",[16,0.553,70,0.424,228,1.06,1750,1.482]],["body/additional-documentation/controllers/course-controller.html",[7,0.387,9,0.799,13,2.342,16,1.467,17,1.298,18,0.952,28,0.245,29,0.814,40,1.339,41,0.01,43,0.696,48,2.173,49,0.824,51,1.502,52,1.156,54,0.809,71,3.446,82,0.793,108,0.549,146,0.005,147,0.005,153,1.248,154,2.393,155,1.502,167,0.873,176,2.431,188,2.431,196,0.758,210,2.51,234,2.431,235,2.431,236,3.166,237,1.517,238,0.777,240,1.048,241,1.411,242,2.578,248,1.598,371,2.108,373,3.513,375,4.476,376,1.458,378,1.203,379,2.713,381,2.475,382,2.471,386,1.298,408,1.502,414,1.203,422,1.298,423,0.988,424,2.889,425,1.637,427,4.521,437,1.637,477,4.016,478,1.442,489,3.157,542,3.905,543,3.157,545,2.518,554,3.614,558,2.326,618,1.736,711,1.478,714,2.109,719,1.248,736,1.411,758,3.856,782,2.54,831,0.926,832,1.652,877,5.085,894,1.411,934,1.478,942,2.578,1024,1.637,1120,2.922,1125,3.188,1154,2.005,1268,1.552,1359,2.005,1488,1.856,1591,2.005,1650,3.157,1750,2.182,1751,1.552,1754,0.926,1999,2.205,2022,4.389,2044,3.472,2045,4.294,2046,3.472,2047,3.472,2048,3.472,2049,3.472,2050,3.472,2051,3.472,2052,6.551,2067,1.736,2071,5.245,2075,4.863,2076,4.863,2077,5.513,2078,4.945,2079,5.015,2080,4.769,2081,4.659,2091,3.381,2093,2.205,2097,4.636,2098,5.059,2100,1.856,2104,1.083,2105,2.509,2106,2.509,2107,2.922,2108,7.141,2109,2.509,2110,3.157,2111,3.95,2112,2.509,2113,3.905,2114,2.509,2115,6.028,2116,2.509,2117,2.509,2118,2.005,2119,3.95,2120,2.509,2121,2.509,2122,2.205,2123,2.509,2124,4.886,2125,3.95,2126,2.509,2127,2.509,2128,2.205,2129,2.509,2130,3.95,2131,2.509,2132,2.509,2133,2.509,2134,2.509,2135,2.509,2136,2.509,2137,2.509,2138,2.509,2139,3.95,2140,2.509,2141,2.509,2142,2.509,2143,2.509,2144,2.509,2145,1.856,2146,2.005,2147,2.509,2148,2.509,2149,2.509,2150,2.205,2151,2.509,2152,2.509,2153,2.509,2154,2.005,2155,2.734,2156,2.005,2157,2.509]],["title/additional-documentation/controllers/fridge-controller.html",[70,0.424,228,1.06,718,1.031,1750,1.482]],["body/additional-documentation/controllers/fridge-controller.html",[2,0.304,7,0.379,17,1.209,20,1.209,28,0.229,29,0.622,33,0.525,40,1.338,41,0.01,43,0.699,48,2.654,50,1.667,51,1.012,52,1.174,54,0.791,82,0.807,103,0.423,108,0.908,112,0.435,120,0.8,124,0.378,146,0.004,147,0.004,155,0.889,162,0.862,166,0.976,169,1.773,176,2.428,188,3.636,210,3.07,236,3.108,241,1.315,365,0.916,368,1.532,371,2.025,373,3.322,375,4.47,376,1.72,378,2.235,379,2.598,381,2.436,382,2.098,386,2.412,408,1.773,422,2.141,423,1.693,424,1.511,425,3.475,427,3.84,438,2.6,443,2.31,545,2.432,550,1.867,554,1.728,557,2.762,561,1.163,618,3.227,711,2.199,714,2.191,717,1.728,718,2.652,719,1.163,731,1.209,736,2.1,753,3.78,758,3.78,780,2.1,782,2.52,788,1.445,789,1.376,790,2.412,792,1.887,794,1.376,796,1.887,816,2.6,821,2.889,831,0.862,832,0.79,837,2.984,842,2.31,877,5.015,891,1.728,892,1.617,895,3.227,904,1.867,934,1.376,942,1.525,954,1.445,969,1.867,1024,4.669,1120,4.819,1299,3.726,1488,2.762,1534,1.728,1649,2.984,1750,2.082,1751,3.294,1754,0.862,1783,1.728,2022,3.837,2036,1.867,2053,3.282,2054,3.282,2055,3.282,2056,3.282,2057,3.282,2058,3.282,2059,3.282,2060,5.117,2061,5.456,2062,3.282,2063,3.282,2064,4.681,2067,4.952,2071,5.229,2075,4.854,2076,4.768,2077,5.405,2078,4.553,2079,4.854,2080,4.05,2081,3.799,2082,1.867,2091,3.227,2097,5.555,2098,5.716,2100,2.762,2101,2.984,2104,1.009,2107,4.306,2110,4.653,2122,2.054,2128,2.054,2145,3.449,2146,3.726,2154,2.984,2155,3.686,2156,1.867,2158,2.337,2159,2.337,2160,2.337,2161,6.133,2162,2.337,2163,4.663,2164,2.337,2165,4.098,2166,2.337,2167,2.337,2168,2.337,2169,2.337,2170,3.282,2171,2.337,2172,2.337,2173,2.054,2174,3.282,2175,2.337,2176,2.337,2177,2.337,2178,2.337,2179,3.282,2180,5.325,2181,5.325,2182,3.282,2183,4.098,2184,2.337,2185,2.337,2186,2.337,2187,2.337,2188,2.337,2189,2.337,2190,2.337,2191,3.734,2192,4.663,2193,5.325,2194,2.337,2195,2.337,2196,2.337,2197,2.337,2198,2.054,2199,2.337,2200,2.337,2201,2.337,2202,2.337,2203,2.337,2204,2.337,2205,2.337]],["title/additional-documentation/controllers/genetics-controller.html",[70,0.424,228,1.06,933,1.482,1750,1.482]],["body/additional-documentation/controllers/genetics-controller.html",[7,0.356,28,0.5,29,1.099,40,1.249,41,0.01,43,0.649,44,0.952,52,0.98,103,1.195,120,0.714,124,1.249,146,0.009,147,0.008,169,2.508,176,2.267,211,5.797,346,1.779,373,3.444,375,4.155,379,2.656,381,2.435,382,1.729,408,2.508,422,2.167,425,3.337,427,4.08,478,1.033,590,1.35,711,3.884,714,1.979,758,3.412,776,3.024,777,4.77,779,2.847,782,2.456,784,2.069,792,2.069,796,2.668,804,2.208,819,3.164,823,4.565,831,2.945,832,2.468,835,3.884,838,4.08,843,3.54,853,3.783,854,4.088,862,3.54,864,4.565,877,4.813,933,2.945,1125,3.337,1260,3.54,1261,3.54,1265,4.303,1271,3.012,1272,4.303,1274,4.303,1750,3.26,1751,4.08,1754,1.887,2022,3.884,2065,5.797,2075,4.303,2076,4.303,2078,4.303,2079,4.303,2080,4.303,2081,4.303,2091,4.565,2104,2.208,2113,4.088,2145,3.783,2206,5.115,2207,5.115,2208,5.115,2209,6.595,2210,5.115,2211,5.115,2212,5.115,2213,5.797,2214,5.115,2215,5.115,2216,5.115,2217,5.115]],["title/additional-documentation/controllers/scenario-controller.html",[70,0.424,108,0.373,228,1.06,1750,1.482]],["body/additional-documentation/controllers/scenario-controller.html",[7,0.359,17,2.711,28,0.513,29,1.116,40,1.26,41,0.01,43,0.655,52,1.156,108,0.98,146,0.008,147,0.008,167,1.823,176,2.288,188,2.607,210,2.896,371,1.993,373,2.34,375,4.334,378,2.512,379,2.359,381,2.301,382,1.772,386,2.711,408,1.993,424,2.121,427,3.242,478,1.572,714,1.816,744,4.955,753,3.82,758,3.82,782,2.496,831,1.934,832,1.772,858,4.607,877,4.924,898,4.144,939,4.955,945,4.955,1024,4.371,1346,5.354,1359,4.189,1433,3.876,1750,3.297,1754,1.934,2022,3.087,2066,5.889,2067,5.111,2075,4.818,2076,4.818,2078,4.371,2079,4.371,2080,3.42,2081,3.42,2097,5.693,2098,5.566,2104,2.263,2107,3.876,2155,4.637,2156,4.189,2161,4.607,2183,4.607,2218,5.241,2219,5.241,2220,4.607,2221,4.607,2222,5.241,2223,5.241,2224,5.241,2225,5.241,2226,5.241,2227,5.241,2228,5.241,2229,4.607,2230,5.241,2231,5.241]],["title/additional-documentation/controllers/user-controller.html",[54,0.325,70,0.424,228,1.06,1750,1.482]],["body/additional-documentation/controllers/user-controller.html",[2,0.26,7,0.371,13,2.361,17,1.314,18,0.51,28,0.249,29,0.665,40,1.327,41,0.01,42,0.389,43,0.69,48,1.932,49,2.29,51,1.335,52,1.145,54,0.853,56,0.356,81,1.053,108,0.285,126,1.129,146,0.005,147,0.006,152,1.759,154,1.097,155,2.448,167,0.884,172,1.722,173,1.218,176,2.41,188,3.349,196,0.768,208,0.859,210,2.933,234,2.451,235,2.451,236,2.534,238,0.784,240,3.326,241,1.429,328,1.496,329,1.879,332,4.121,346,0.884,349,2.951,355,3.189,357,2.951,358,2.951,359,2.951,365,0.996,371,0.966,373,3.774,374,4.659,375,4.464,376,0.938,378,3.226,379,2.731,380,2.761,381,2.469,382,2.275,384,2.233,385,1.879,386,2.548,388,2.233,397,1.496,401,3.937,402,4.659,403,2.951,408,2.122,414,1.912,415,2.761,417,2.761,422,0.835,423,1.232,425,3.214,427,3.981,436,1.572,443,1.572,453,1.879,474,1.572,477,1.369,498,1.658,545,3.124,561,1.264,711,3.572,712,2.603,714,2.027,718,0.789,719,2.777,725,2.951,736,2.244,753,1.314,758,3.795,782,2.534,800,1.135,831,0.938,842,2.468,845,1.314,877,5.071,894,2.244,1024,1.658,1043,1.879,1125,2.603,1230,2.031,1290,2.233,1291,1.658,1293,3.189,1303,3.189,1304,1.879,1412,2.233,1666,2.031,1750,2.2,1751,1.572,1754,0.938,1944,2.233,2022,4.32,2035,2.031,2036,2.031,2067,1.759,2068,3.507,2069,3.507,2070,3.507,2071,4.659,2072,5.657,2075,4.96,2076,4.787,2077,4.128,2078,4.787,2079,4.88,2080,4.2,2081,3.641,2082,3.937,2084,2.233,2091,4.659,2097,5.401,2098,5.459,2100,1.879,2101,2.031,2104,1.097,2107,3.643,2110,2.031,2113,4.46,2145,3.643,2146,3.189,2150,2.233,2154,2.031,2155,3.409,2165,4.33,2170,2.233,2174,2.233,2182,2.233,2198,2.233,2213,2.233,2229,2.233,2232,2.541,2233,3.99,2234,2.541,2235,2.541,2236,3.99,2237,4.926,2238,2.541,2239,2.541,2240,6.437,2241,3.99,2242,2.541,2243,2.541,2244,2.541,2245,3.99,2246,3.99,2247,2.541,2248,2.541,2249,2.541,2250,2.541,2251,2.541,2252,2.541,2253,2.541,2254,2.541,2255,2.541,2256,2.541,2257,2.541,2258,2.541,2259,2.541,2260,2.541,2261,2.541,2262,2.541,2263,2.541,2264,2.541,2265,2.541,2266,2.541,2267,2.541,2268,2.541,2269,2.541,2270,2.541,2271,2.541,2272,2.541,2273,2.541,2274,2.541,2275,3.99,2276,2.541,2277,2.541,2278,3.99,2279,2.541,2280,2.541]],["title/additional-documentation/genetics.html",[70,0.49,228,1.224,933,1.711]],["body/additional-documentation/genetics.html",[41,0.009,108,0.735,120,0.822,124,1.06,146,0.009,147,0.009,372,2.734,776,3.01,820,3.904,823,4.529,929,4.529,933,2.922,1754,2.415,1792,4.27,2281,5.752,2282,5.752,2283,5.752,2284,5.752,2285,5.752,2286,5.752,2287,6.544,2288,6.544,2289,6.544,2290,6.544,2291,6.544,2292,5.752,2293,5.752,2294,5.752,2295,5.752,2296,5.752,2297,5.752,2298,5.752,2299,6.544,2300,6.544,2301,6.544,2302,5.752,2303,5.752]],["title/additional-documentation/genetics/phage-scenario.html",[70,0.424,108,0.373,120,0.325,228,1.06]],["body/additional-documentation/genetics/phage-scenario.html",[2,0.502,7,0.371,28,0.346,29,1.099,40,1.324,41,0.01,43,0.681,48,1.385,51,0.957,52,1.201,56,0.842,82,1.021,108,0.956,120,0.843,146,0.006,147,0.006,169,1.946,171,1.788,176,2.377,208,1.73,210,1.385,237,1.748,238,1.297,245,1.757,248,1.429,251,2.185,347,4.422,365,2.587,370,1.633,376,1.888,381,1.01,397,3.543,422,2.399,423,1.826,435,2.444,478,1.033,503,1.903,590,0.932,713,2.08,779,2.597,780,4.339,782,2.473,785,2.878,786,3.622,787,3.446,788,2.185,789,4.542,790,3.412,798,4.058,801,1.827,803,4.124,804,2.848,814,3.885,820,1.693,821,2.946,831,2.779,836,3.013,837,5.272,840,2.612,842,2.185,892,2.444,893,3.784,933,1.577,943,4.497,1056,4.569,1125,3.338,1134,2.304,1139,2.822,1269,4.304,1348,2.612,1515,3.338,1689,2.822,1754,1.303,1791,2.444,1792,2.304,1933,3.104,1952,2.822,1966,2.822,2025,3.104,2104,1.525,2281,4.497,2282,4.497,2283,4.497,2284,4.497,2285,4.497,2286,4.497,2304,5.117,2305,5.117,2306,5.117,2307,5.117,2308,5.117,2309,3.532,2310,3.532,2311,2.822,2312,4.497,2313,5.117,2314,2.822,2315,3.104,2316,4.497,2317,3.532,2318,5.288,2319,3.104,2320,4.809,2321,4.497,2322,2.822,2323,2.822,2324,3.104,2325,5.117,2326,3.104,2327,3.532,2328,3.532,2329,3.532,2330,3.104,2331,3.532,2332,3.532,2333,3.532,2334,3.532,2335,3.532,2336,3.104,2337,3.532,2338,3.532,2339,3.532,2340,3.104,2341,3.532,2342,3.532,2343,3.532,2344,6.462,2345,3.532,2346,7.301,2347,6.597,2348,6.597,2349,3.104,2350,3.532,2351,5.117,2352,3.532,2353,6.017,2354,3.532,2355,5.798,2356,3.532,2357,3.532,2358,3.532,2359,3.532,2360,3.532,2361,3.532,2362,3.532,2363,3.532,2364,3.104,2365,3.532,2366,3.532,2367,3.532,2368,3.532,2369,3.532,2370,3.532,2371,3.532,2372,3.532,2373,3.532,2374,3.104,2375,3.532,2376,3.532,2377,3.532,2378,3.532,2379,3.532,2380,3.532,2381,3.104,2382,3.532,2383,3.532,2384,3.532,2385,3.532,2386,3.532,2387,3.532]],["title/additional-documentation/genetics/phage-logic.html",[70,0.424,120,0.325,228,1.06,929,2.298]],["body/additional-documentation/genetics/phage-logic.html",[7,0.351,20,3.13,28,0.592,40,1.186,41,0.01,43,0.663,52,1.088,56,1.026,82,0.749,120,0.801,146,0.009,147,0.009,166,2.528,176,2.154,196,1.828,210,2.372,237,1.255,238,1.189,376,2.232,478,1.222,782,2.096,784,2.448,787,2.612,798,4.413,801,3.13,803,4.64,821,2.232,831,2.232,832,2.045,929,4.187,933,2.702,1056,3.948,1270,4.78,1754,2.232,1791,4.187,2104,2.612,2292,6.439,2293,6.439,2320,5.855,2321,6.926,2388,5.318,2389,6.05,2390,6.05,2391,7.326,2392,6.05,2393,7.326,2394,6.05,2395,6.05,2396,6.05,2397,6.05,2398,6.05,2399,4.475,2400,6.05,2401,6.05,2402,6.05,2403,6.05,2404,6.05]],["title/additional-documentation/genetics/phage-experiment.html",[70,0.424,120,0.325,228,1.06,820,1.591]],["body/additional-documentation/genetics/phage-experiment.html",[7,0.36,28,0.519,40,1.266,41,0.01,43,0.658,52,1.161,82,1.061,120,0.82,146,0.008,147,0.008,171,1.83,172,2.289,173,2.541,176,2.298,210,2.079,237,1.541,314,3.67,347,2.983,365,2.912,422,2.439,423,1.688,443,3.28,478,1.071,590,1.399,591,2.097,717,4.992,740,4.397,787,2.289,801,4.043,802,2.368,804,3.619,819,3.28,820,3.235,821,2.491,831,2.491,843,3.67,853,3.922,933,2.368,954,3.28,1038,6.526,1271,3.123,1714,4.238,1754,1.957,1791,5.139,1792,5.384,1978,7.094,2104,2.289,2294,6.526,2295,5.933,2296,5.933,2374,4.661,2405,5.303,2406,5.303,2407,5.303,2408,5.303,2409,6.75,2410,6.526,2411,5.303,2412,5.303,2413,5.303,2414,5.303,2415,4.661,2416,5.303,2417,6.75,2418,5.303,2419,5.303,2420,5.303,2421,5.303,2422,5.303,2423,5.303,2424,5.303,2425,6.75,2426,5.303,2427,6.75,2428,5.303,2429,5.303,2430,7.425,2431,5.303,2432,5.303,2433,5.303]],["title/additional-documentation/genetics/plate-experiment.html",[70,0.424,228,1.06,776,1.302,820,1.591]],["body/additional-documentation/genetics/plate-experiment.html",[7,0.335,13,2.048,28,0.736,40,1.258,41,0.01,43,0.633,51,1.158,52,1.153,56,0.819,103,1.3,108,0.657,120,0.813,124,0.692,146,0.007,147,0.007,171,1.586,176,2.11,210,2.294,237,1.836,238,1.478,251,2.643,387,2.643,393,2.643,422,2.551,423,1.069,461,3.754,478,1.678,659,4.227,714,1.158,776,3.376,782,2.316,791,4.227,792,2.904,796,3.042,800,1.908,804,3.099,821,2.463,823,4.05,831,2.463,832,1.978,834,3.818,835,3.93,838,3.62,839,3.818,840,4.328,841,5.204,852,2.788,933,1.908,1041,3.16,1134,2.788,1237,3.16,1260,4.619,1261,4.968,1262,2.788,1263,2.957,1264,2.957,1265,2.788,1268,3.62,1270,2.788,1271,5.044,1272,3.818,1274,3.818,1317,3.755,1464,3.414,1515,3.818,1705,5.143,1714,3.414,1724,3.755,1754,1.576,1783,3.16,1789,5.866,1790,3.755,1791,2.957,1792,4.355,2104,1.844,2297,5.866,2298,5.866,2330,3.755,2344,3.414,2349,3.755,2364,3.755,2388,5.143,2399,3.16,2410,6.609,2415,3.755,2434,3.755,2435,5.851,2436,5.851,2437,5.851,2438,4.272,2439,3.755,2440,4.272,2441,4.272,2442,4.272,2443,3.755,2444,4.272,2445,4.272,2446,4.272,2447,5.143,2448,4.272,2449,4.272,2450,4.272,2451,4.272,2452,4.272,2453,4.272,2454,4.272,2455,4.272,2456,4.272,2457,5.851,2458,5.851,2459,4.272,2460,4.272,2461,4.272,2462,4.272,2463,4.272,2464,5.851,2465,4.272,2466,4.272,2467,4.272,2468,4.272,2469,4.272,2470,4.272,2471,4.272,2472,4.272,2473,4.272,2474,3.755,2475,4.272,2476,4.272,2477,4.272,2478,4.272,2479,4.272,2480,4.272,2481,4.272,2482,4.272,2483,4.272,2484,4.272,2485,4.272,2486,4.272]],["title/additional-documentation/genetics/plexer-experiment.html",[70,0.424,124,0.538,228,1.06,820,1.591]],["body/additional-documentation/genetics/plexer-experiment.html",[7,0.333,28,0.665,40,1.209,41,0.01,43,0.661,52,1.01,108,0.764,120,0.768,124,1.391,146,0.01,147,0.008,171,1.843,176,1.999,210,2.104,237,1.782,238,1.468,422,2.453,461,3.826,731,2.776,776,3.431,782,2.318,796,2.752,804,2.317,821,1.98,831,1.98,832,2.299,834,3.501,835,4.623,836,4.005,838,4.207,839,4.437,840,5.03,841,5.433,849,3.714,850,3.714,852,4.437,853,3.969,854,4.288,855,4.437,863,3.714,933,2.396,954,3.319,1134,3.501,1262,4.437,1263,4.707,1264,4.707,1265,3.501,1268,4.207,1270,3.501,1271,4.005,1272,4.437,1274,4.437,1464,4.288,1515,3.501,1754,1.98,1783,3.969,2033,4.716,2104,2.317,2302,5.977,2303,5.977,2344,5.435,2355,5.977,2399,3.969,2434,4.716,2439,4.716,2443,4.716,2447,4.716,2487,5.366,2488,5.366,2489,5.366,2490,5.366,2491,5.366,2492,5.366,2493,5.366,2494,5.366,2495,5.366,2496,5.366,2497,5.366]],["title/additional-documentation/models.html",[70,0.49,112,0.713,228,1.224]],["body/additional-documentation/models.html",[41,0.009,112,1.306,146,0.009,147,0.009,372,2.931,1754,2.589]],["title/additional-documentation/models/course-model.html",[16,0.553,70,0.424,112,0.618,228,1.06]],["body/additional-documentation/models/course-model.html",[7,0.383,16,1.429,28,0.644,41,0.01,56,1.078,71,3.892,112,1.434,146,0.009,147,0.009,320,5.784,477,4.4,478,1.329,714,1.784,804,2.841,831,2.428,845,3.404,1118,5.784,1754,2.428,2104,2.841,2498,4.554,2499,5.784,2500,6.58]],["title/additional-documentation/models/fridge-model.html",[70,0.424,112,0.618,228,1.06,718,1.031]],["body/additional-documentation/models/fridge-model.html",[7,0.251,28,0.55,41,0.01,50,2.512,54,0.746,56,0.981,58,2.437,71,2.601,82,0.867,108,0.941,112,1.304,120,0.746,146,0.008,147,0.008,155,2.139,169,2.139,171,1.899,172,3.616,173,4.252,237,1.454,238,1.106,241,4.292,376,2.076,422,1.848,424,2.276,478,1.136,590,1.484,591,1.748,592,2.799,718,2.602,719,2.799,779,2.429,782,2.004,800,2.512,804,3.024,810,2.601,816,3.74,819,3.48,820,2.696,821,3.09,831,2.815,845,2.91,892,5.28,895,5.28,1023,4.161,1138,2.696,1754,2.076,1952,4.496,2104,2.429,2179,6.157,2311,4.496,2314,4.496,2322,4.496,2323,4.496,2336,4.944,2340,4.944,2381,4.944,2498,3.893,2501,5.625,2502,5.625,2503,5.625,2504,5.625,2505,5.625]],["title/additional-documentation/models/phage-model.html",[70,0.424,112,0.618,120,0.325,228,1.06]],["body/additional-documentation/models/phage-model.html",[7,0.284,28,0.695,41,0.01,43,0.408,54,0.767,56,0.891,58,1.684,71,2.238,82,1.053,103,1.287,108,0.798,112,1.184,120,0.856,146,0.007,147,0.007,153,2.408,166,2.658,170,0.877,171,1.312,237,1.627,238,1.484,248,2.574,259,3.069,368,2.335,422,2.577,424,1.958,478,1.285,578,3.579,582,4.254,590,1.679,591,1.977,712,3.158,718,1.977,740,3.999,776,1.898,779,2.089,780,3.999,784,2.876,785,2.723,786,2.504,787,3.386,789,4.186,790,3.906,792,3.173,794,4.186,795,2.723,796,2.574,798,4.226,800,2.841,802,2.841,804,3.069,814,4.186,820,3.049,821,2.623,831,1.786,832,2.151,845,2.504,891,3.58,894,2.723,895,4.919,954,3.936,1055,5.085,1056,4.638,1061,3.747,1138,3.859,1207,5.592,1230,3.868,1237,3.58,1352,4.254,1440,4.254,1556,4.254,1751,2.994,1754,1.786,1842,5.592,1845,5.592,2022,3.747,2104,2.089,2118,5.085,2173,4.254,2399,3.58,2498,3.35,2506,7.108,2507,4.84,2508,4.84,2509,4.84,2510,4.84,2511,4.84,2512,4.84,2513,4.84,2514,4.84,2515,4.84,2516,4.84,2517,4.84,2518,8.051,2519,4.84,2520,4.84,2521,4.84,2522,4.84,2523,6.363,2524,4.254,2525,4.84]],["title/additional-documentation/models/scenario-model.html",[70,0.424,108,0.373,112,0.618,228,1.06]],["body/additional-documentation/models/scenario-model.html",[7,0.339,15,4.312,28,0.48,41,0.01,43,0.54,54,0.7,56,1.153,59,0.48,70,0.627,108,0.976,112,1.195,120,0.834,146,0.007,147,0.007,167,1.707,237,1.733,238,1.262,246,3.194,259,2.118,262,3.035,376,2.801,408,1.866,411,3.629,422,2.775,423,1.227,424,2.597,474,3.035,558,2.889,590,1.694,718,2.223,753,3.701,785,2.76,787,3.489,791,2.889,798,3.459,803,2.889,804,3.089,810,2.968,820,3.077,821,1.81,831,1.81,832,2.663,842,3.035,845,2.538,898,4.695,931,4.312,939,5.292,940,3.921,942,3.201,945,5.292,946,3.921,1056,4.188,1237,3.629,1269,3.201,1346,5.718,1347,3.921,1348,3.629,1351,4.312,1360,4.312,1433,3.629,1435,6.671,1515,3.201,1689,3.921,1754,1.81,1792,3.201,1966,3.921,2104,2.118,2118,5.13,2220,4.312,2221,4.312,2311,5.718,2312,5.642,2314,5.718,2315,6.289,2316,4.312,2318,6.289,2319,4.312,2320,3.921,2322,5.718,2323,6.066,2324,6.289,2326,6.289,2498,3.395,2499,4.312,2524,4.312,2526,7.155,2527,7.155,2528,4.906,2529,4.906,2530,4.906,2531,4.906,2532,4.906,2533,6.419,2534,6.419,2535,4.906,2536,6.419,2537,6.419,2538,4.906]],["title/additional-documentation/models/user-model.html",[54,0.325,70,0.424,112,0.618,228,1.06]],["body/additional-documentation/models/user-model.html",[7,0.32,16,1.314,20,3.329,28,0.482,40,1.042,41,0.01,42,0.984,43,0.542,48,1.932,49,1.618,50,3.522,52,0.956,54,0.827,56,1.133,108,0.553,112,1.198,126,1.198,146,0.009,147,0.008,154,3.405,155,2.448,172,2.779,173,2.361,176,1.892,210,3.278,234,3.567,235,3.567,236,2.995,237,1.022,238,0.968,240,3.176,241,4.033,245,3.202,246,2.451,328,3.79,332,4.344,347,3.621,369,3.047,375,2.654,379,2.29,381,2.051,393,3.047,402,4.962,403,3.643,408,1.873,410,2.901,423,1.61,461,3.621,474,4.702,478,0.995,498,3.214,503,2.654,545,2.058,714,1.335,719,2.451,782,1.409,784,1.993,793,3.214,831,2.375,832,1.665,845,3.329,916,4.33,1023,3.643,1138,2.361,1291,3.214,1304,3.643,1310,4.33,1316,4.33,1751,3.047,1754,1.818,2035,5.144,2104,2.127,2155,5.261,2474,4.33,2498,3.409,2539,6.436,2540,7.169,2541,7.169,2542,7.169,2543,7.602,2544,4.926,2545,7.602,2546,4.926,2547,6.436,2548,4.926,2549,4.926,2550,4.926,2551,4.926,2552,4.926,2553,4.926,2554,4.926,2555,4.926,2556,4.926,2557,4.926,2558,4.926,2559,7.602,2560,4.926]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["0",{"_index":259,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Student.html":{},"components/StudentPhageComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["0.0.1",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["0.0.3",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["0.1.8",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["0.19.39",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["0.8.18",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":590,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["1.0.0",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["1.12.9",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["1.14.1",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1815,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":844,"title":{},"body":{"injectables/ExperimentService.html":{},"coverage.html":{}}}],["1/3",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1206,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10/11",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1101,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["106",{"_index":2515,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["11",{"_index":1239,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"overview.html":{}}}],["11/15",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":2521,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["13/14",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["140",{"_index":1178,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["145",{"_index":1177,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["15/18",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["15/19",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":2519,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["1500",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1758,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["163",{"_index":1221,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["178",{"_index":2513,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["190",{"_index":1179,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["2",{"_index":591,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["2.0",{"_index":1974,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["2.3.6",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1819,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1794,"title":{},"body":{"changelog.html":{}}}],["20/21",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["2018",{"_index":1756,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["208",{"_index":1223,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["213",{"_index":2516,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["23",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["25/26",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["260",{"_index":1180,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["27/27",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["275",{"_index":2522,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["280",{"_index":2523,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["2d",{"_index":853,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["3",{"_index":592,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/models/fridge-model.html":{}}}],["3.1.0",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1817,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1222,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":1998,"title":{},"body":{"overview.html":{}}}],["350",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37/41",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["39;bth",{"_index":1549,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["39;btn",{"_index":1547,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["3a",{"_index":1476,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["3b",{"_index":1477,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["4",{"_index":593,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{}}}],["4.0.0",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["4.17.10",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1207,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"additional-documentation/models/phage-model.html":{}}}],["400",{"_index":425,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["401",{"_index":2241,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["403",{"_index":2100,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["404",{"_index":2113,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["422",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["43",{"_index":2511,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["5",{"_index":1236,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1176,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"coverage.html":{}}}],["50,145",{"_index":1175,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["500",{"_index":427,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["6",{"_index":1343,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["6/6",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1816,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1818,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":2095,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["7/10",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1824,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1820,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1241,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["80",{"_index":1845,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{}}}],["83",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1220,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"coverage.html":{}}}],["9",{"_index":1242,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["9/9",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1842,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{}}}],["92",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["_admin",{"_index":533,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_after_",{"_index":1014,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["_authenticationservic",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["_authservic",{"_index":494,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_baseurl",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["_calldelet",{"_index":1518,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["_calldeletecours",{"_index":539,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_calldeletecoursestud",{"_index":540,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_checkpassword",{"_index":1312,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_checkphagedelet",{"_index":2308,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphagedeletion(keymut",{"_index":2380,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift",{"_index":2305,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift(keymut",{"_index":2367,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_computenumoffspr",{"_index":2436,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computenumoffspring(n1",{"_index":2459,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparamet",{"_index":2435,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparameters(f1",{"_index":2451,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_copydelet",{"_index":2296,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_copydeletion(spo",{"_index":2428,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_courseservic",{"_index":496,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{}}}],["_error_",{"_index":884,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["_experimentinput",{"_index":1259,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_generatedelet",{"_index":2307,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generatedeletion(useddeletespot",{"_index":2375,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift",{"_index":2304,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift(shifttyp",{"_index":2359,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_genotyp",{"_index":1267,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_getnewspot",{"_index":2306,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_getnewspot(lastmad",{"_index":2370,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_http",{"_index":827,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["_modalservic",{"_index":547,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_profileservic",{"_index":1683,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_reordercours",{"_index":1429,"title":{},"body":{"components/SignupComponent.html":{}}}],["_reordercourses(cours",{"_index":1431,"title":{},"body":{"components/SignupComponent.html":{}}}],["_rout",{"_index":492,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_router",{"_index":158,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_scenarioservic",{"_index":646,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["_shuffleplaquelist",{"_index":2437,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_shuffleplaquelist(inlist",{"_index":2480,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_studentservic",{"_index":726,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["_success_",{"_index":883,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["_user",{"_index":232,"title":{"interfaces/_User.html":{}},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["_validrecombdel",{"_index":2295,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_validrecombdel(checkpo",{"_index":2424,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_width",{"_index":1021,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["a.firstname.tolowercase().localecompare(b.firstname.tolowercas",{"_index":260,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.lastname.tolowercase().localecompare(b.lastname.tolowercas",{"_index":258,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.strainnum",{"_index":1501,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["a/t",{"_index":2333,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["abil",{"_index":1796,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["abov",{"_index":193,"title":{},"body":{"components/AdminHomeComponent.html":{}}}],["absolut",{"_index":2507,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["acces",{"_index":1720,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["access",{"_index":155,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"injectables/LoggedInGuard.html":{},"components/NotAuthComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["accessgr",{"_index":241,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["account",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"todo.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["acess",{"_index":1011,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["acid",{"_index":2338,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["activ",{"_index":165,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"changelog.html":{}}}],["activatedrout",{"_index":493,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["activatedroutesnapshot",{"_index":161,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["activemod",{"_index":460,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["actual",{"_index":2474,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["actual_compon",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ad",{"_index":557,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["add",{"_index":554,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["adding/remov",{"_index":588,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor",{"_index":541,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor(this._admin.id",{"_index":612,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addit",{"_index":228,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{}}}],["addphagetofridg",{"_index":2057,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["addphagetofridge(req",{"_index":2186,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["address",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["adjust",{"_index":1232,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["admin",{"_index":9,"title":{"additional-documentation/controllers/admin-controller.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["admin'},{'nam",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["admin.compon",{"_index":219,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.guard.servic",{"_index":223,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.rout",{"_index":218,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.template.html",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.modul",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/course/course.servic",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"components/SignupComponent.html":{}}}],["admin/instr",{"_index":2172,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["admincompon",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":149,"title":{"injectables/AdminGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"coverage.html":{},"overview.html":{}}}],["adminhomecompon",{"_index":75,"title":{"components/AdminHomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminid",{"_index":1658,"title":{},"body":{"injectables/StudentService.html":{}}}],["administr",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["adminmodul",{"_index":195,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminrout",{"_index":217,"title":{},"body":{"modules/AdminModule.html":{}}}],["adminstud",{"_index":226,"title":{"interfaces/AdminStudent.html":{}},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["adminus",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{}}}],["agre",{"_index":1982,"title":{},"body":{"license.html":{}}}],["aim",{"_index":1724,"title":{},"body":{"components/UserProfileComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["aka",{"_index":2149,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["al",{"_index":927,"title":{},"body":{"components/HomeComponent.html":{}}}],["aliv",{"_index":1703,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["allow",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["alltransl",{"_index":2395,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["alphabet",{"_index":244,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["alreadi",{"_index":893,"title":{},"body":{"interfaces/Fridge.html":{},"injectables/ProfileService.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["alway",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":1290,"title":{},"body":{"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["andtoken",{"_index":400,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["angular",{"_index":951,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["angular/compil",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":334,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":174,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"modules/HelpModule.html":{},"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":458,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"injectables/StudentService.html":{}}}],["anyon",{"_index":1643,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["anyth",{"_index":327,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["apach",{"_index":1972,"title":{},"body":{"license.html":{}}}],["apart",{"_index":2534,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["api/admin",{"_index":1673,"title":{},"body":{"injectables/StudentService.html":{}}}],["api/admin/1/students/67mak",{"_index":2094,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/cours",{"_index":2111,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum",{"_index":2124,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/:scenarioid",{"_index":2148,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructor",{"_index":2138,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructors/:studentid",{"_index":2142,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/stud",{"_index":2130,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/stud",{"_index":2074,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid",{"_index":2085,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid/:scenarioid",{"_index":2170,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["api/auth",{"_index":428,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["api/auth/forget",{"_index":2244,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/reset",{"_index":2250,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signin",{"_index":2255,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signout",{"_index":2261,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signup",{"_index":2258,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/cours",{"_index":2117,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/cricket",{"_index":858,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:scenarioid",{"_index":2224,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:userid/:scenarioid",{"_index":2167,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/:phageid",{"_index":2191,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/delet",{"_index":2178,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/fridg",{"_index":2187,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/new",{"_index":2159,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/pl",{"_index":2208,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/cricket/plex",{"_index":2215,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/us",{"_index":1307,"title":{},"body":{"injectables/ProfileService.html":{}}}],["api/users/:userid",{"_index":2233,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/users/:userid/upd",{"_index":2239,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["app",{"_index":239,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{}}}],["app'},{'nam",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["app.compon",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["app.rout",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":77,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1765,"title":{},"body":{"changelog.html":{}}}],["appi",{"_index":1473,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["applic",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/ModelRoomComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"license.html":{},"additional-documentation/models/scenario-model.html":{}}}],["application/json",{"_index":449,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["appmodul",{"_index":267,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":1480,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["approut",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouteModule.html":{}}}],["approutemodul",{"_index":273,"title":{"modules/AppRouteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":1719,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["aren't",{"_index":2418,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["aris",{"_index":652,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["array",{"_index":804,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["ask",{"_index":2399,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["aspect",{"_index":917,"title":{},"body":{"components/HomeComponent.html":{}}}],["assign",{"_index":1672,"title":{},"body":{"injectables/StudentService.html":{}}}],["assum",{"_index":1310,"title":{},"body":{"components/ResetPasswordComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["async",{"_index":1358,"title":{},"body":{"modules/ScenarioModule.html":{},"dependencies.html":{}}}],["attempt",{"_index":397,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["auth",{"_index":182,"title":{},"body":{"injectables/AdminGuard.html":{},"components/NotAuthComponent.html":{}}}],["auth'},{'nam",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["auth.compon",{"_index":222,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth.component.t",{"_index":1117,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth.template.html",{"_index":1119,"title":{},"body":{"components/NotAuthComponent.html":{}}}],["auth/not",{"_index":221,"title":{},"body":{"modules/AdminModule.html":{},"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth/upd",{"_index":1798,"title":{},"body":{"changelog.html":{}}}],["authent",{"_index":328,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"todo.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["authenticate(candidatepassword",{"_index":2544,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["authentication.rout",{"_index":337,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.servic",{"_index":882,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["authentication/authentication.modul",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/authentication.servic",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["authentication/log",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationmodul",{"_index":274,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":336,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationservic",{"_index":37,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservice]{@link",{"_index":1423,"title":{},"body":{"components/SignoutComponent.html":{}}}],["authetn",{"_index":1114,"title":{},"body":{"components/NavComponent.html":{},"components/SigninComponent.html":{}}}],["author",{"_index":1120,"title":{},"body":{"components/NotAuthComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["auto",{"_index":2552,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["avail",{"_index":656,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"modules.html":{}}}],["away",{"_index":2384,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["b",{"_index":1263,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["b.strainnum",{"_index":1502,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["back",{"_index":499,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/PageNotFoundComponent.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{}}}],["backend",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/genetics.html":{},"additional-documentation/models.html":{}}}],["backend/databas",{"_index":1049,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["bact",{"_index":1761,"title":{},"body":{"changelog.html":{}}}],["bacteria",{"_index":1262,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["bad",{"_index":2145,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bade",{"_index":2189,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bar",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["base",{"_index":166,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{}}}],["basepair",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basi",{"_index":1986,"title":{},"body":{"license.html":{}}}],["basic",{"_index":1118,"title":{},"body":{"components/NotAuthComponent.html":{},"additional-documentation/models/course-model.html":{}}}],["bc",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["bcrypt",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["be",{"_index":576,"title":{},"body":{"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{}}}],["becom",{"_index":1145,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["befor",{"_index":250,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["beforehand",{"_index":1085,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["begin",{"_index":1352,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["behaviorsubject",{"_index":430,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(nul",{"_index":431,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["belong",{"_index":712,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["below",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["beta.2",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["beta.3",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["beta.6",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["bg",{"_index":1044,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["block",{"_index":1034,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectcours",{"_index":2127,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectdetail",{"_index":2121,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectinfo",{"_index":2209,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["bodyobjectinform",{"_index":2188,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bodyobjectnew",{"_index":2092,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["bodyobjectrequest",{"_index":2240,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectupd",{"_index":2182,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["boolean",{"_index":171,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["bootstrap",{"_index":199,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":472,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["both",{"_index":1317,"title":{},"body":{"components/ResetPasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["box",{"_index":1188,"title":{},"body":{"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{}}}],["bp",{"_index":2518,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["breadcrumb",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"injectables/CourseResolver.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"injectables/StudentResolver.html":{},"dependencies.html":{}}}],["breadcrumbsconfig.postprocess",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["brigitt",{"_index":1970,"title":{},"body":{"license.html":{}}}],["brows",{"_index":1995,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["brute",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["bth",{"_index":1577,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["btn",{"_index":1040,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["bug",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":1999,"title":{},"body":{"todo.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["button",{"_index":555,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["button/rol",{"_index":1543,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["c",{"_index":1083,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["c'",{"_index":2531,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["c.coursenum",{"_index":1447,"title":{},"body":{"components/SignupComponent.html":{}}}],["call",{"_index":561,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["callback",{"_index":2545,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["callbackfunctioncallback",{"_index":2547,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["canaccessadmin",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["canactiv",{"_index":1004,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivate(rout",{"_index":1006,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivatechild",{"_index":157,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["canactivatechild(rout",{"_index":160,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["cancel",{"_index":475,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{}}}],["candidatepasswordstringus",{"_index":2546,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["capac",{"_index":835,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbercapac",{"_index":2497,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbermax",{"_index":2445,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["capacitynumbermaximum",{"_index":2491,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["card",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{}}}],["case",{"_index":252,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["caus",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["cell",{"_index":854,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["certain",{"_index":944,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["chanc",{"_index":2312,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["chang",{"_index":1291,"title":{},"body":{"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["changelog",{"_index":1747,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changepassword",{"_index":2539,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["changepassword(oldpassword",{"_index":2548,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["charact",{"_index":1344,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["checkdelet",{"_index":1519,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["checkphagedelet",{"_index":2291,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkphageframeshift",{"_index":2288,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkposnumberposit",{"_index":2426,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["child",{"_index":1003,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["child/sub",{"_index":1013,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["chromosom",{"_index":1038,"title":{},"body":{"components/ModelRoomComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["chrosomom",{"_index":2432,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["chunk",{"_index":2430,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["class",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["class=\"btn",{"_index":1094,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["class=\"row",{"_index":1099,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{}}}],["clean",{"_index":2165,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["cleaner",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["clear",{"_index":1084,"title":{},"body":{"components/ModelRoomComponent.html":{},"todo.html":{}}}],["cli",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":556,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["click)=\"savedata",{"_index":1098,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["clickbutton",{"_index":1520,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["clickbutton(src",{"_index":1528,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["client",{"_index":1369,"title":{},"body":{"injectables/ScenarioResolver.html":{},"changelog.html":{}}}],["clone",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":2374,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["cluster_adminmodul",{"_index":201,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declar",{"_index":202,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_import",{"_index":203,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_provid",{"_index":204,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":324,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":325,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_coursemodul",{"_index":687,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_declar",{"_index":688,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_import",{"_index":689,"title":{},"body":{"modules/CourseModule.html":{}}}],["cluster_coursemodule_provid",{"_index":690,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_helpmodul",{"_index":907,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_declar",{"_index":908,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_import",{"_index":909,"title":{},"body":{"modules/HelpModule.html":{}}}],["cluster_locationmodul",{"_index":985,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":986,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":987,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":988,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_profilemodul",{"_index":1275,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declar",{"_index":1276,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_import",{"_index":1277,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_provid",{"_index":1278,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_scenariomodul",{"_index":1354,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_declar",{"_index":1355,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_import",{"_index":1356,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["cluster_sharedmodul",{"_index":1374,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1375,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1376,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_studentmodul",{"_index":1600,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_declar",{"_index":1601,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_import",{"_index":1602,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_provid",{"_index":1603,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["code",{"_index":744,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ModelRoomComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["codon",{"_index":2320,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["col",{"_index":1096,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["coli",{"_index":852,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["collegu",{"_index":930,"title":{},"body":{"components/HomeComponent.html":{}}}],["colphag",{"_index":863,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["colphage(list",{"_index":2217,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["colphagearraylist",{"_index":2489,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["column",{"_index":850,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["come",{"_index":904,"title":{},"body":{"components/HelpComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["comment",{"_index":790,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["commonmodul",{"_index":335,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["commun",{"_index":1289,"title":{},"body":{"injectables/ProfileService.html":{}}}],["compar",{"_index":1316,"title":{},"body":{"components/ResetPasswordComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["comparison",{"_index":257,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":1349,"title":{},"body":{"interfaces/Scenario.html":{}}}],["complianc",{"_index":1976,"title":{},"body":{"license.html":{}}}],["compoen",{"_index":1702,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppRouteModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["compress",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["comput",{"_index":2388,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["computenumoffspr",{"_index":2300,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["computerecombparamet",{"_index":2299,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["concat(x",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["condit",{"_index":1691,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"license.html":{}}}],["config",{"_index":2346,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["configur",{"_index":2373,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["confirm",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["confirmdeletedialogcompon",{"_index":80,"title":{"components/ConfirmDeleteDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmpassword",{"_index":453,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["connect",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["consist",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["consitut",{"_index":2339,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["consol",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["console.log(json.stringify(error",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":254,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppRouteModule.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(_authenticationservic",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(_authservic",{"_index":1109,"title":{},"body":{"components/NavComponent.html":{},"components/SignoutComponent.html":{}}}],["constructor(_courseservic",{"_index":491,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{}}}],["constructor(_http",{"_index":825,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["constructor(_profileservic",{"_index":1728,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["constructor(_rout",{"_index":546,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["constructor(_scenarioservic",{"_index":1366,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["constructor(_studentservic",{"_index":1592,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["constructor(activemod",{"_index":462,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["constructor(breadcrumbsconfig",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(http",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["constructor(priv",{"_index":175,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["constructor(publ",{"_index":473,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["contain",{"_index":1379,"title":{},"body":{"modules/SharedModule.html":{}}}],["content",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseIndivComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/StudentService.html":{}}}],["content'},{'nam",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["control",{"_index":1750,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}},"body":{"changelog.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["controller.html#deletestudentfridg",{"_index":2265,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["contructor",{"_index":950,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["cooki",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["copi",{"_index":1978,"title":{},"body":{"license.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["copyright",{"_index":1969,"title":{},"body":{"license.html":{}}}],["core",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["correctli",{"_index":1323,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["correspond",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["count",{"_index":856,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["courenum",{"_index":570,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["cours",{"_index":16,"title":{"interfaces/Course.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["course.coursenum",{"_index":685,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["course.interfac",{"_index":231,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["course.resolv",{"_index":703,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.rout",{"_index":702,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.servic",{"_index":508,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{}}}],["course.touppercas",{"_index":756,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["coursebynum",{"_index":2052,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["coursebynum(req",{"_index":2152,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecoursecours",{"_index":2108,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecreatecompon",{"_index":84,"title":{"components/CourseCreateComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursedetail",{"_index":487,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["courseeditcompon",{"_index":86,"title":{"components/CourseEditComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseindivcompon",{"_index":88,"title":{"components/CourseIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseinfo",{"_index":534,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.coursenum",{"_index":638,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.descript",{"_index":669,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courseinfo.instructor",{"_index":670,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courselistcompon",{"_index":90,"title":{"components/CourseListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursemodul",{"_index":686,"title":{"modules/CourseModule.html":{}},"body":{"modules/CourseModule.html":{},"modules.html":{},"overview.html":{}}}],["coursenum",{"_index":477,"title":{},"body":{"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{}}}],["courseresolv",{"_index":691,"title":{"injectables/CourseResolver.html":{}},"body":{"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"coverage.html":{},"overview.html":{}}}],["courserout",{"_index":701,"title":{},"body":{"modules/CourseModule.html":{}}}],["courses.filter((c",{"_index":1448,"title":{},"body":{"components/SignupComponent.html":{}}}],["courses.filter((c)=>{return",{"_index":1446,"title":{},"body":{"components/SignupComponent.html":{}}}],["coursescenariocompon",{"_index":92,"title":{"components/CourseScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseservic",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverag",{"_index":1813,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpassword",{"_index":1428,"title":{},"body":{"components/SignupComponent.html":{}}}],["crate",{"_index":2353,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["creat",{"_index":422,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["create'},{'nam",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["create.compon",{"_index":695,"title":{},"body":{"modules/CourseModule.html":{}}}],["create.component.t",{"_index":482,"title":{},"body":{"components/CourseCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:24",{"_index":506,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:25",{"_index":507,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:30",{"_index":505,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:34",{"_index":495,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:47",{"_index":504,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:58",{"_index":497,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:75",{"_index":500,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.style.css",{"_index":485,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.template.html",{"_index":486,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create/cours",{"_index":481,"title":{},"body":{"components/CourseCreateComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["createcours",{"_index":489,"title":{},"body":{"components/CourseCreateComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(req",{"_index":2120,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(this.admin.id",{"_index":517,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["createpl",{"_index":823,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(phage1",{"_index":2438,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(pl",{"_index":828,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["createplate(req",{"_index":2207,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["createplatephag",{"_index":2297,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplexerpl",{"_index":2302,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["createplexerplate(rowphag",{"_index":2487,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["creating/sav",{"_index":2259,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["creation",{"_index":1422,"title":{},"body":{"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{}}}],["credenti",{"_index":398,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["crick",{"_index":925,"title":{},"body":{"components/HomeComponent.html":{}}}],["cricket",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["cross",{"_index":791,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["crosses/manipul",{"_index":2206,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["crossov",{"_index":2409,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["css",{"_index":1033,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["cummul",{"_index":2404,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["current",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["curus",{"_index":2276,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["curuseruserlog",{"_index":2077,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["dark",{"_index":1045,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["dat",{"_index":1093,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["data",{"_index":836,"title":{},"body":{"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["databas",{"_index":845,"title":{},"body":{"injectables/ExperimentService.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["date",{"_index":2559,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["db",{"_index":1751,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["deal",{"_index":212,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/StudentService.html":{}}}],["debug",{"_index":1812,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["decim",{"_index":2313,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["declar",{"_index":198,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlabdilut",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultplexerdilut",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defin",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["defofdiff",{"_index":2527,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["degofdiff",{"_index":2226,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degofdifficulti",{"_index":2222,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degre",{"_index":2220,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["del",{"_index":1075,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["deleet",{"_index":815,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["delet",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["delete(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1677,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletecours",{"_index":542,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestud",{"_index":543,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestudents(req",{"_index":2131,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["deletedis",{"_index":1521,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["deletephag",{"_index":2059,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletephage(req",{"_index":2194,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletes",{"_index":2502,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletespot",{"_index":2503,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletestud",{"_index":1648,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudent(adminid",{"_index":1655,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudentfridg",{"_index":2056,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge(req",{"_index":2184,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge]{@link",{"_index":2264,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["deleteus",{"_index":2040,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["deleteuser(req",{"_index":2089,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["deletion.length",{"_index":1184,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i",{"_index":1185,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i+1",{"_index":1186,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletionguesslength",{"_index":1202,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"miscellaneous/variables.html":{}}}],["deletionlist",{"_index":1173,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletions.pip",{"_index":1615,"title":{},"body":{"modules/StudentModule.html":{}}}],["deletions.pipe.t",{"_index":1169,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"coverage.html":{}}}],["deletions.pipe.ts:16",{"_index":1182,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["dellist",{"_index":2425,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["dellistarraylist",{"_index":2427,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["depend",{"_index":196,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["describ",{"_index":2524,"title":{},"body":{"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["descript",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["desctruct",{"_index":1406,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["destori",{"_index":501,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["destroy",{"_index":742,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["destruct",{"_index":678,"title":{},"body":{"components/CourseListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["detail",{"_index":424,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["determin",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/user-model.html":{}}}],["dialog",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["dialog'},{'nam",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialog.compon",{"_index":584,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["dialog.component.t",{"_index":455,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:18",{"_index":464,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1189,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":469,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1190,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.template.html",{"_index":459,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["didn't",{"_index":1325,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["differ",{"_index":1689,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["difficulti",{"_index":2221,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dilut",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dimens",{"_index":2422,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["direct",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["directli",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":1321,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["discov",{"_index":931,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dismiss",{"_index":629,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["display",{"_index":465,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["distanc",{"_index":2533,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["distribut",{"_index":1985,"title":{},"body":{"license.html":{}}}],["dnd",{"_index":1383,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["dndmodul",{"_index":1381,"title":{},"body":{"modules/SharedModule.html":{}}}],["dndmodule.forroot",{"_index":1397,"title":{},"body":{"modules/SharedModule.html":{}}}],["document",{"_index":1754,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["doesn't",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"components/ForgetPasswordComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["don't",{"_index":2253,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["donald",{"_index":1143,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["dopheno",{"_index":2292,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["dopheno(mutantlist",{"_index":2390,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["doubl",{"_index":2457,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["drag",{"_index":811,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["drop",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["duck",{"_index":1144,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["dure",{"_index":2118,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dynam",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":851,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["each",{"_index":832,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["easier",{"_index":578,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["edit",{"_index":530,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/UserProfileComponent.html":{}}}],["edit'},{'nam",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["edit.compon",{"_index":697,"title":{},"body":{"modules/CourseModule.html":{}}}],["edit.component.t",{"_index":529,"title":{},"body":{"components/CourseEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:105",{"_index":573,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:122",{"_index":553,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:145",{"_index":559,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:161",{"_index":549,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:178",{"_index":563,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:195",{"_index":552,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:209",{"_index":564,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:33",{"_index":575,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:37",{"_index":580,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:41",{"_index":581,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:45",{"_index":574,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:46",{"_index":579,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:50",{"_index":577,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:54",{"_index":548,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:71",{"_index":568,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:97",{"_index":571,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.style.css",{"_index":531,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.template.html",{"_index":532,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit/cours",{"_index":528,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["editcours",{"_index":2048,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(req",{"_index":2126,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(this._admin.id",{"_index":609,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["editprofil",{"_index":1292,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editprofile(userid",{"_index":1295,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editus",{"_index":2068,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["edituser(req",{"_index":2235,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["ej",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":806,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["elm.userid",{"_index":616,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["email",{"_index":240,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["email/name/rol",{"_index":1516,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["empti",{"_index":713,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["encompass",{"_index":1618,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["end",{"_index":954,"title":{},"body":{"components/LandingRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["enough",{"_index":2383,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["enrol",{"_index":658,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["ensur",{"_index":251,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"interfaces/Student.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["enter",{"_index":498,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["entir",{"_index":2000,"title":{},"body":{"todo.html":{}}}],["entityif",{"_index":2248,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["entranc",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{}}}],["entrycompon",{"_index":694,"title":{},"body":{"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/StudentModule.html":{}}}],["enum",{"_index":2560,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["epo",{"_index":2429,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["eposnumberend",{"_index":2433,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["equal",{"_index":2535,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["err",{"_index":524,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["err2",{"_index":606,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["error",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["error.error.messag",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.error.text",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.messag",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.t",{"_index":1874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errordatabas",{"_index":2151,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["errorerror",{"_index":2164,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["errorif",{"_index":2245,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["errormessag",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["erroron",{"_index":2081,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["errror",{"_index":426,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["eslint",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["et",{"_index":926,"title":{},"body":{"components/HomeComponent.html":{}}}],["even",{"_index":1440,"title":{},"body":{"components/SignupComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["everyth",{"_index":1693,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["exampl",{"_index":1138,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["except",{"_index":1975,"title":{},"body":{"license.html":{}}}],["exeri",{"_index":2434,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["exisit",{"_index":1298,"title":{},"body":{"injectables/ProfileService.html":{}}}],["exist",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["exit",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["expect",{"_index":1705,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["experi",{"_index":820,"title":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["experiment.servic",{"_index":992,"title":{},"body":{"modules/LocationModule.html":{}}}],["experimentphag",{"_index":774,"title":{"interfaces/ExperimentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["experimentservic",{"_index":817,"title":{"injectables/ExperimentService.html":{}},"body":{"injectables/ExperimentService.html":{},"modules/LocationModule.html":{},"coverage.html":{},"overview.html":{}}}],["expir",{"_index":403,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["export",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"overview.html":{}}}],["express",{"_index":1912,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extend",{"_index":230,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["f1numberfract",{"_index":2453,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2",{"_index":2452,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2numberfract",{"_index":2454,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["facebook",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":173,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["far",{"_index":2382,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["featur",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{}}}],["fetch",{"_index":969,"title":{},"body":{"components/ListComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["field",{"_index":1687,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"license.html":{}}}],["filecod",{"_index":2526,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["fill",{"_index":1688,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["find",{"_index":711,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["findfridgebyscenown",{"_index":2061,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["findfridgebyscenowner(req",{"_index":2199,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["finish",{"_index":2133,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["first",{"_index":246,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["firstnam",{"_index":234,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["fix",{"_index":1752,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["fname",{"_index":1155,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["follow",{"_index":2229,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["for(let",{"_index":1073,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["forbiddencurr",{"_index":2109,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["forbiddenif",{"_index":2101,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["forc",{"_index":1790,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["forget",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["forgetpassword",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forgetpassword(bodi",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordcompon",{"_index":94,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotten",{"_index":331,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["form",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["format",{"_index":731,"title":{},"body":{"components/CourseScenarioComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["formataccess",{"_index":723,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(isgr",{"_index":728,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(student.statu",{"_index":773,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formatphagetyp",{"_index":1620,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["formsmodul",{"_index":333,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":1125,"title":{},"body":{"components/PageNotFoundComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["found')if",{"_index":2198,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["found'},{'nam",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["found.compon",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouteModule.html":{}}}],["found.component.t",{"_index":1122,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1127,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.template.html",{"_index":1126,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/pag",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["foundif",{"_index":2246,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundphag",{"_index":2211,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["foundther",{"_index":2119,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["foundun",{"_index":2236,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundus",{"_index":2114,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["frame",{"_index":2321,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["framelist",{"_index":2403,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frameshift",{"_index":798,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["frameshift(",{"_index":2368,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["frameshift/phenotyp",{"_index":2389,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["framesstoplist",{"_index":2505,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["framestoplist",{"_index":2341,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["framshift",{"_index":2401,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frequenc",{"_index":2469,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["fridg",{"_index":718,"title":{"interfaces/Fridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["fridge')if",{"_index":2201,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridge'},{'nam",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["fridge.accessgr",{"_index":1513,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.compon",{"_index":1610,"title":{},"body":{"modules/StudentModule.html":{}}}],["fridge.component.t",{"_index":1460,"title":{},"body":{"components/StudentFridgeComponent.html":{},"coverage.html":{}}}],["fridge.component.ts:118",{"_index":1470,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:133",{"_index":1479,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:154",{"_index":1474,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:30",{"_index":1481,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:34",{"_index":1482,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:38",{"_index":1484,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:42",{"_index":1485,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:51",{"_index":1487,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:55",{"_index":1486,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:59",{"_index":1468,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:76",{"_index":1475,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.own",{"_index":1510,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.label",{"_index":1512,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.scencod",{"_index":1511,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.strain",{"_index":1494,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.template.html",{"_index":1462,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge/fridge.compon",{"_index":993,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/phag",{"_index":994,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/stud",{"_index":1459,"title":{},"body":{"components/StudentFridgeComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["fridgecompon",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fridgefridgefridg",{"_index":2205,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgefridgelog",{"_index":2180,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgephag",{"_index":783,"title":{"interfaces/FridgePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["frist",{"_index":1132,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["front",{"_index":1783,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["full",{"_index":838,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["function",{"_index":210,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["function(a,b",{"_index":256,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["function(error",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["futur",{"_index":947,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["g",{"_index":2530,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["g/c",{"_index":2331,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["g/c'",{"_index":2317,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gcprob",{"_index":2315,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["gcprobnumbergc",{"_index":2329,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gene",{"_index":1056,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["genear",{"_index":1022,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["genelength",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gener",{"_index":831,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["generatedelet",{"_index":2290,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generateframeshift",{"_index":2287,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generatepl",{"_index":2298,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["generateplexerpl",{"_index":2303,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["generateplexerplate(lawntypestr",{"_index":2493,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["generatescenario",{"_index":2281,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["generatescenario(scenario",{"_index":2309,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["genet",{"_index":933,"title":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolist",{"_index":2447,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolistarraylist",{"_index":2495,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotyp",{"_index":1271,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotypephag",{"_index":797,"title":{"interfaces/GenotypePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["geonotyp",{"_index":2476,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["get",{"_index":680,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"components/CourseListComponent.html":{},"components/NavComponent.html":{},"changelog.html":{}}}],["get(`${this._baseurl}/${adminid}/stud",{"_index":1674,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1675,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1679,"title":{},"body":{"injectables/StudentService.html":{}}}],["getblockclass",{"_index":1026,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getblockclass(strain",{"_index":1030,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getbuttonclass",{"_index":1466,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('al",{"_index":1471,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('grad",{"_index":1472,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass(src",{"_index":1469,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getcours",{"_index":2047,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getcourse(req",{"_index":2123,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getfram",{"_index":2293,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["getframes(whosay",{"_index":2396,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["getfridg",{"_index":1649,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridge(adminid",{"_index":1659,"title":{},"body":{"injectables/StudentService.html":{}}}],["getfridge(req",{"_index":2166,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo",{"_index":2064,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo(fridg",{"_index":2204,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getnewspot",{"_index":2289,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["getpossibleinstructor",{"_index":2049,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getpossibleinstructors(req",{"_index":2137,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenario",{"_index":956,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenario(scenid",{"_index":960,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenariostatu",{"_index":2051,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getscenariostatus(req",{"_index":2147,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenstatu",{"_index":1522,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scenario.scencod",{"_index":1588,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scencod",{"_index":1532,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstud",{"_index":1650,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getstudent(adminid",{"_index":1661,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentcours",{"_index":1523,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstudentfridg",{"_index":2054,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudentfridge(req",{"_index":2169,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudents(req",{"_index":2129,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getus",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuser(req",{"_index":2084,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo",{"_index":2072,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo(us",{"_index":2277,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["give",{"_index":1320,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["given",{"_index":943,"title":{},"body":{"components/LandingRoomComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["global",{"_index":1201,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["global]{@link",{"_index":1212,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["go",{"_index":188,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseCreateComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["goal",{"_index":940,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["goe",{"_index":1123,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["googl",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["gotofridg",{"_index":724,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["gotofridge(studentid",{"_index":733,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["govern",{"_index":1992,"title":{},"body":{"license.html":{}}}],["grace",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["grade",{"_index":795,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["grant",{"_index":719,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["grantaccess",{"_index":725,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(req",{"_index":2263,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(scencod",{"_index":1537,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["grantaccess(studentindex",{"_index":737,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["grantscenaccess",{"_index":1651,"title":{},"body":{"injectables/StudentService.html":{}}}],["grantscenaccess(adminid",{"_index":1663,"title":{},"body":{"injectables/StudentService.html":{}}}],["graph",{"_index":1996,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":1556,"title":{},"body":{"components/StudentIndivComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["group",{"_index":1194,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["gt",{"_index":1546,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{}}}],["guard",{"_index":151,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["guess",{"_index":816,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["guesses.pip",{"_index":1613,"title":{},"body":{"modules/StudentModule.html":{}}}],["guesses.pipe.t",{"_index":1199,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"coverage.html":{}}}],["guesses.pipe.ts:22",{"_index":1210,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[i",{"_index":1214,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[strain.strainnum",{"_index":1498,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["guesslist",{"_index":1204,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesss",{"_index":1200,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["handl",{"_index":1134,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["handleplex",{"_index":2065,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["handleplexer(req",{"_index":2214,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["happen",{"_index":1327,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["hasauthor",{"_index":2042,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["hasauthorization(req",{"_index":2096,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["hasfridg",{"_index":1463,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["hasfridgeauthor",{"_index":2062,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasfridgeauthorization(req",{"_index":2202,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["hashlocationstrategi",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["hasphageauthor",{"_index":2063,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasphageauthorization(req",{"_index":2203,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["have",{"_index":211,"title":{},"body":{"modules/AdminModule.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["header",{"_index":448,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["helmet",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":900,"title":{},"body":{"components/HelpComponent.html":{},"components/NavComponent.html":{},"todo.html":{}}}],["help'},{'nam",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["help.compon",{"_index":913,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.rout",{"_index":912,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.style.css",{"_index":901,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.template.html",{"_index":902,"title":{},"body":{"components/HelpComponent.html":{}}}],["help/help.modul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["helpcompon",{"_index":99,"title":{"components/HelpComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helper",{"_index":550,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["helpinform",{"_index":906,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpmodul",{"_index":275,"title":{"modules/HelpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelpModule.html":{},"modules.html":{},"overview.html":{}}}],["helprout",{"_index":911,"title":{},"body":{"modules/HelpModule.html":{}}}],["hidden",{"_index":1768,"title":{},"body":{"changelog.html":{}}}],["hofmeist",{"_index":1971,"title":{},"body":{"license.html":{}}}],["home",{"_index":190,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["home'},{'nam",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.compon",{"_index":220,"title":{},"body":{"modules/AdminModule.html":{}}}],["home.component.t",{"_index":185,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["home.style.css",{"_index":918,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.template.html",{"_index":191,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home/admin",{"_index":184,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["home/home.compon",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouteModule.html":{}}}],["homecompon",{"_index":101,"title":{"components/HomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hopefulli",{"_index":1769,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":980,"title":{},"body":{"components/LocationComponent.html":{}}}],["hour",{"_index":1802,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":1536,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["html5",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["http",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1979,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["httpclientmodul",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":440,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["https://github.com/iconic/open",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["human",{"_index":1347,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/models/scenario-model.html":{}}}],["i.",{"_index":329,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"injectables/ExperimentService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["icon",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["iconic.git",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":714,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["id'",{"_index":2448,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["id')if",{"_index":2157,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["id1",{"_index":1235,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id2",{"_index":1238,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id3",{"_index":1240,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id=\"model",{"_index":1102,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["id=\"viewpar",{"_index":1193,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["ident",{"_index":2464,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identicalbooleanar",{"_index":2471,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identif",{"_index":2500,"title":{},"body":{"additional-documentation/models/course-model.html":{}}}],["identifi",{"_index":942,"title":{},"body":{"components/LandingRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["iderr",{"_index":1708,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["idstringcours",{"_index":2153,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["idstringmongodb",{"_index":2196,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["idstringscenario",{"_index":2230,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["idstringuser'",{"_index":2270,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["if(c",{"_index":1342,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(error",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(error.error",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isloggedin",{"_index":1016,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["if(n",{"_index":1716,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(numpar",{"_index":1246,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(out",{"_index":1159,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageGuessesPipe.html":{}}}],["if(p",{"_index":1341,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(parents.length",{"_index":1247,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(r",{"_index":766,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["if(result",{"_index":627,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["if(revers",{"_index":1160,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["if(rol",{"_index":179,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["if(sorted.length",{"_index":1255,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(strain.phagetyp",{"_index":1508,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this._admin",{"_index":1580,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.coursedetails.coursenum",{"_index":513,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["if(this.credentials.token",{"_index":1334,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.errormessag",{"_index":1337,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.getus",{"_index":445,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["if(this.hasfridg",{"_index":1495,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this.keys.length",{"_index":1079,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["if(this.passwordmessag",{"_index":1711,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(this.phag",{"_index":1630,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.phage.phagetyp",{"_index":1633,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.selectedadd",{"_index":611,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["if(this.ssubscript",{"_index":976,"title":{},"body":{"components/ListComponent.html":{}}}],["if(this.student.rol",{"_index":1582,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.student.userid",{"_index":1581,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.subscript",{"_index":526,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["if(this.user.cours",{"_index":1453,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.user.password",{"_index":1454,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.viewstrain",{"_index":1505,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(x",{"_index":1213,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["if(x.length",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["ignor",{"_index":323,"title":{},"body":{"modules/AppRouteModule.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["implement",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["impli",{"_index":1990,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["in.guard.servic",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["in.guard.service.t",{"_index":1002,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["in.guard.service.ts:28",{"_index":1007,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:49",{"_index":1012,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:9",{"_index":1005,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in/out",{"_index":330,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["inact",{"_index":1082,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["includ",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["incorrect",{"_index":1305,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["increment",{"_index":2553,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["indic",{"_index":800,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["indiv",{"_index":643,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv'},{'nam",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["indiv.compon",{"_index":696,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["indiv.component.t",{"_index":642,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{}}}],["indiv.component.ts:113",{"_index":1533,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:131",{"_index":1535,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:147",{"_index":1538,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:167",{"_index":1555,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:194",{"_index":1542,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:210",{"_index":1529,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:226",{"_index":1531,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:245",{"_index":1527,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:263",{"_index":1526,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:278",{"_index":1539,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:30",{"_index":657,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:34",{"_index":651,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:36",{"_index":1564,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:38",{"_index":655,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:40",{"_index":1563,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:42",{"_index":653,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:43",{"_index":654,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:45",{"_index":1558,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:48",{"_index":647,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:49",{"_index":1560,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:53",{"_index":1557,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:57",{"_index":1562,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:61",{"_index":1559,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:66",{"_index":649,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:84",{"_index":1540,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:93",{"_index":648,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.style.css",{"_index":644,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.template.html",{"_index":645,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv/cours",{"_index":641,"title":{},"body":{"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["indiv/stud",{"_index":1514,"title":{},"body":{"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["individu",{"_index":659,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/SharedModule.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["inform",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["init",{"_index":569,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["initi",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["inject",{"_index":148,"title":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["inlist.length+1",{"_index":2423,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraymut",{"_index":2420,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraystrain",{"_index":2484,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["input",{"_index":461,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["input/par",{"_index":2486,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["insensit",{"_index":253,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["insert",{"_index":2362,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["instr",{"_index":153,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["instr'",{"_index":2083,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["instrctor",{"_index":2140,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrcutor",{"_index":2139,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrs.sort(sortstud",{"_index":605,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["instructor",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Course.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["instuctor",{"_index":2143,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["integ",{"_index":2529,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["interest",{"_index":1488,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["interfac",{"_index":170,"title":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/models/phage-model.html":{}}}],["interfaces/course.interfac",{"_index":585,"title":{},"body":{"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/phage.interfac",{"_index":1191,"title":{},"body":{"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["interfaces/scenario.interfac",{"_index":973,"title":{},"body":{"components/ListComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/student.interfac",{"_index":586,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["interfaces/user.interfac",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["intermutedist",{"_index":2323,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["intern",{"_index":2080,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["intial",{"_index":922,"title":{},"body":{"components/HomeComponent.html":{}}}],["intramutedist",{"_index":2322,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["invalid",{"_index":401,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["isadmin",{"_index":2043,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["isadmin(req",{"_index":2103,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["isdestroy",{"_index":535,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["isdis",{"_index":1311,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isgrant",{"_index":732,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["isinstructor",{"_index":2044,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["isinstructor(req",{"_index":2105,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["isloggedin",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{}}}],["isn't",{"_index":842,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["issu",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1435,"title":{},"body":{"components/SignupComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["itself",{"_index":2135,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["jqueri",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["jsdoc2md",{"_index":2104,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["json",{"_index":2078,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["json.parse(dat",{"_index":1091,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.parse(this.fridge.guess",{"_index":1496,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["json.stringify(credenti",{"_index":447,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(this.guess",{"_index":1086,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.stringify(us",{"_index":451,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["k",{"_index":1264,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["karma",{"_index":1967,"title":{},"body":{"index.html":{}}}],["keep",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdatePasswordComponent.html":{}}}],["key",{"_index":1023,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["keymutesarraydelet",{"_index":2385,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["keymutesarraymut",{"_index":2369,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["kind",{"_index":1989,"title":{},"body":{"license.html":{}}}],["know",{"_index":2173,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["known",{"_index":788,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["lab",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["label",{"_index":898,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["labroomcompon",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["land",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["landingroomcompon",{"_index":105,"title":{"components/LandingRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["languag",{"_index":1991,"title":{},"body":{"license.html":{}}}],["larg",{"_index":840,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["largeplaqu",{"_index":1274,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["last",{"_index":245,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["lastlogin",{"_index":2540,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["lastmadenumberth",{"_index":2371,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["lastnam",{"_index":235,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["later",{"_index":2327,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["law",{"_index":1981,"title":{},"body":{"license.html":{}}}],["lawn",{"_index":833,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["lawntyp",{"_index":1265,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestring",{"_index":2443,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestrstring",{"_index":2494,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["lead",{"_index":1308,"title":{},"body":{"injectables/ProfileService.html":{}}}],["leak",{"_index":567,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["learn",{"_index":946,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["left",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":197,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["length",{"_index":1055,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{}}}],["licens",{"_index":1968,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1788,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["link",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/CourseIndivComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["list",{"_index":478,"title":{},"body":{"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["list'},{'nam",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["list(req",{"_index":2218,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["list.compon",{"_index":698,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["list.component.t",{"_index":674,"title":{},"body":{"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{}}}],["list.component.ts:22",{"_index":681,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:23",{"_index":1597,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:26",{"_index":676,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:27",{"_index":1596,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:31",{"_index":1593,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:36",{"_index":679,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:46",{"_index":1595,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:47",{"_index":677,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:60",{"_index":1594,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.template.html",{"_index":675,"title":{},"body":{"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/StudentListComponent.html":{}}}],["list/cours",{"_index":673,"title":{},"body":{"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["list/list.compon",{"_index":1363,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["list/stud",{"_index":1589,"title":{},"body":{"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["listcompon",{"_index":107,"title":{"components/ListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listcours",{"_index":2045,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum",{"_index":2046,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum(req",{"_index":2116,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["liststud",{"_index":1652,"title":{},"body":{"injectables/StudentService.html":{}}}],["liststudents(adminid",{"_index":1667,"title":{},"body":{"injectables/StudentService.html":{}}}],["listus",{"_index":2039,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["listusers(req",{"_index":2073,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["liter",{"_index":1457,"title":{},"body":{"interfaces/StudentFridge.html":{}}}],["lname",{"_index":1157,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["load",{"_index":1359,"title":{},"body":{"modules/ScenarioModule.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["local",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["locat",{"_index":779,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LocationComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["location'},{'nam",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["location.compon",{"_index":995,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.rout",{"_index":991,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.style.css",{"_index":982,"title":{},"body":{"components/LocationComponent.html":{}}}],["location.template.html",{"_index":983,"title":{},"body":{"components/LocationComponent.html":{}}}],["locationcompon",{"_index":109,"title":{"components/LocationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locationmodul",{"_index":984,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules/ScenarioModule.html":{},"modules.html":{},"overview.html":{}}}],["locationrout",{"_index":990,"title":{},"body":{"modules/LocationModule.html":{}}}],["locationstrategi",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["lodash",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["loggedinguard",{"_index":279,"title":{"injectables/LoggedInGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggedInGuard.html":{},"coverage.html":{},"overview.html":{}}}],["logic",{"_index":929,"title":{"additional-documentation/genetics/phage-logic.html":{}},"body":{"components/HomeComponent.html":{},"changelog.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["login",{"_index":1412,"title":{},"body":{"components/SigninComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["long",{"_index":405,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{}}}],["longer",{"_index":793,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/models/user-model.html":{}}}],["look",{"_index":1534,"title":{},"body":{"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["lot",{"_index":2171,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["lowercas",{"_index":249,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2372,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mail",{"_index":1718,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["main",{"_index":189,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/UserProfileComponent.html":{}}}],["mainli",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"modules/ScenarioModule.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["maintain",{"_index":1734,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["make",{"_index":248,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["makedeletionphag",{"_index":2286,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makedeletionphage(phag",{"_index":2356,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphag",{"_index":2285,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphage(phag",{"_index":2354,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makegen",{"_index":2282,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makegene(gcprob",{"_index":2328,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makephag",{"_index":2283,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makephage(phagedetail",{"_index":2343,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphag",{"_index":2284,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphage(phag",{"_index":2350,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mani",{"_index":2415,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["manner",{"_index":2279,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["match",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["math.abs(x",{"_index":1226,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["math.ceil(scenarioglobals.genelength/this.steps",{"_index":1072,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["maximum",{"_index":1266,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"miscellaneous/variables.html":{}}}],["mb",{"_index":1195,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["mcbreadcrumbsconfig",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["mcbreadcrumbsmodul",{"_index":1385,"title":{},"body":{"modules/SharedModule.html":{}}}],["mcbreadcrumbsmodule.forroot",{"_index":1399,"title":{},"body":{"modules/SharedModule.html":{}}}],["md",{"_index":1097,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["memcach",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["memori",{"_index":566,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["messag",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["met",{"_index":1692,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["mickey",{"_index":1141,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["middl",{"_index":2520,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["middlewar",{"_index":2098,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["minim",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":2319,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstop",{"_index":2318,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstopsnumberminimum",{"_index":2334,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["minu",{"_index":2512,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["minumum",{"_index":2532,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["miscellan",{"_index":2004,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1147,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["mlength",{"_index":1183,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["modal",{"_index":624,"title":{},"body":{"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["model",{"_index":112,"title":{"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["modelref",{"_index":619,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.componentinstance.messag",{"_index":625,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.result.then((result",{"_index":626,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelroomcompon",{"_index":111,"title":{"components/ModelRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modul",{"_index":194,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":168,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/StudentResolver.html":{}}}],["mongo",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":781,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{}}}],["mongoos",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":805,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["morgan",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["mous",{"_index":1142,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["multipl",{"_index":1061,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["mut",{"_index":2325,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutagen",{"_index":2294,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["mutagenize(inlist",{"_index":2416,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["mutant",{"_index":1791,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["mutantlist",{"_index":2397,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymut",{"_index":2392,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymutat",{"_index":2400,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutants/recombin",{"_index":2482,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutat",{"_index":787,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutation(",{"_index":2366,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutationfreq",{"_index":2311,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutationlist",{"_index":814,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["mutations.pip",{"_index":1614,"title":{},"body":{"modules/StudentModule.html":{}}}],["mutations.pipe.t",{"_index":1218,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"coverage.html":{}}}],["mutations.pipe.ts:18",{"_index":1225,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["mutations/delet",{"_index":2536,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["mutatnt",{"_index":1273,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["mutfreq",{"_index":2462,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutfreqnumbermut",{"_index":2468,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n",{"_index":1714,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["n1.strainnum",{"_index":1250,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n1numbernumb",{"_index":2465,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2",{"_index":2460,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2)=>{return",{"_index":1249,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2.strainnum",{"_index":1251,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2numbernumb",{"_index":2466,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["na",{"_index":1434,"title":{},"body":{"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{}}}],["na.concat(oth",{"_index":1449,"title":{},"body":{"components/SignupComponent.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["name.pip",{"_index":1392,"title":{},"body":{"modules/SharedModule.html":{}}}],["name.pipe.t",{"_index":1163,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["name.pipe.ts:20",{"_index":1166,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["names.pip",{"_index":1394,"title":{},"body":{"modules/SharedModule.html":{}}}],["names.pipe.t",{"_index":1131,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["names.pipe.ts:20",{"_index":1150,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["nav",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["nav'},{'nam",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["nav.style.css",{"_index":1107,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.template.html",{"_index":1108,"title":{},"body":{"components/NavComponent.html":{}}}],["nav/nav.compon",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["navcompon",{"_index":113,"title":{"components/NavComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LocationComponent.html":{},"components/NavComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["nblock",{"_index":1071,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["necessari",{"_index":503,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["necessarili",{"_index":2086,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["need",{"_index":169,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"modules/SharedModule.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["neg",{"_index":799,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{}}}],["new",{"_index":423,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["newli",{"_index":837,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["newpassword",{"_index":1304,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["newpasswordstringth",{"_index":2551,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["newrol",{"_index":1517,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["next",{"_index":2097,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next('fail",{"_index":2156,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["next('invalid",{"_index":2271,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next('phag",{"_index":2197,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["next('us",{"_index":2273,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()abl",{"_index":2274,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()go",{"_index":2102,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["next()if",{"_index":2110,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next()on",{"_index":2256,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next(error)if",{"_index":2154,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next(error)on",{"_index":2231,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["nextfunctionnext",{"_index":2107,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["nextfunctionth",{"_index":2099,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["nextobjectnext",{"_index":2269,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["nfridgeshelf",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nfridgespot",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":471,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":1382,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":463,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["ngbmodal",{"_index":470,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["ngbmodul",{"_index":1384,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngbmodule.forroot",{"_index":1398,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngmodul",{"_index":214,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["ngondestroy",{"_index":490,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngx",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nme",{"_index":1297,"title":{},"body":{"injectables/ProfileService.html":{}}}],["nnumbertot",{"_index":2456,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nodemail",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":435,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["none",{"_index":1208,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["normal",{"_index":1139,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["notauthcompon",{"_index":115,"title":{"components/NotAuthComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["note",{"_index":1230,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["noth",{"_index":562,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["nr",{"_index":2461,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nrnumberratio",{"_index":2467,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nshift",{"_index":2360,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nshiftsnumbernumb",{"_index":2363,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleic",{"_index":2337,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleotid",{"_index":2335,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["null",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["nullsecond",{"_index":2442,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["num",{"_index":1252,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"changelog.html":{}}}],["number",{"_index":237,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["number.parseint(k",{"_index":1078,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["numbers/typ",{"_index":2472,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numdesir",{"_index":2417,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numdesirednumbernumb",{"_index":2421,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numer",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numgeno",{"_index":2475,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinput",{"_index":2481,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinputnumbernumb",{"_index":2485,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nummber",{"_index":1039,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["nummut",{"_index":2477,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numoffspr",{"_index":2473,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numpar",{"_index":794,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["numphag",{"_index":777,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["numphage:1000000",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numrecomb",{"_index":2478,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nums[0",{"_index":1256,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["nums[1",{"_index":1257,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["numtodo",{"_index":2408,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numtodonumberhow",{"_index":2414,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxov",{"_index":2407,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxovernumbernumb",{"_index":2413,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["nxm",{"_index":2216,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["o",{"_index":1690,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["oauth",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":782,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["object.keys(dels).map((k",{"_index":1077,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["observ",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["obtain",{"_index":1977,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2342,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["odd",{"_index":2517,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["offspr",{"_index":2410,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["okclean",{"_index":2088,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["okif",{"_index":2082,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okinform",{"_index":2128,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["oklist",{"_index":2115,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oknewli",{"_index":2122,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["okon",{"_index":2237,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okreturn",{"_index":2183,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["oksend",{"_index":2262,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["oksuccessfulli",{"_index":2213,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okth",{"_index":2125,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oktrim",{"_index":2234,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okupd",{"_index":2093,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["okuser'",{"_index":2168,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["old",{"_index":1303,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["oldpassword",{"_index":2549,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["oldpasswordstringus",{"_index":2550,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["on",{"_index":784,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["onc",{"_index":1302,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["oncancel",{"_index":544,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["ondestroy",{"_index":483,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["oninit",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["open",{"_index":560,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["opposit",{"_index":2514,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["option",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["order",{"_index":1433,"title":{},"body":{"components/SignupComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["origin",{"_index":2449,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["otherphag",{"_index":2326,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["otherwis",{"_index":443,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["ouput",{"_index":1146,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["out",{"_index":208,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SignoutComponent.html":{},"modules/StudentModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["outlin",{"_index":1042,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["outline&#39",{"_index":1551,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["output",{"_index":1140,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"changelog.html":{}}}],["over",{"_index":1268,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["overflow",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["overload",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["overrid",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["overview",{"_index":1997,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["own",{"_index":2501,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["owner",{"_index":895,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["owner/scenario",{"_index":2175,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["p",{"_index":1041,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["packag",{"_index":1876,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":70,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/models/scenario-model.html":{}}}],["page'",{"_index":439,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pagenotfoundcompon",{"_index":117,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pair",{"_index":808,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["param",{"_index":176,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["parameet",{"_index":707,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["paramet",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["paramobserv",{"_index":536,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["params['coursenum",{"_index":597,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["params['scenid",{"_index":754,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["params['studentid",{"_index":1490,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["parent",{"_index":792,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["parent(",{"_index":2525,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["parents.length",{"_index":1229,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.pip",{"_index":1396,"title":{},"body":{"modules/SharedModule.html":{}}}],["parents.pipe.t",{"_index":1228,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["parents.pipe.ts:26",{"_index":1245,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.sort((n1",{"_index":1248,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parentslist",{"_index":1233,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parser",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2554,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["particular",{"_index":2132,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["pass",{"_index":2155,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["passport",{"_index":1944,"title":{},"body":{"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["passsword",{"_index":1445,"title":{},"body":{"components/SignupComponent.html":{}}}],["password",{"_index":332,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["password'},{'nam",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["password,confirmpassword",{"_index":399,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["password.compon",{"_index":342,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{},"todo.html":{}}}],["password.component.t",{"_index":867,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:106",{"_index":1685,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:111",{"_index":1318,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:129",{"_index":1694,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1326,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1330,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:27",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1324,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:35",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":1328,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:40",{"_index":1699,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:41",{"_index":1314,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1684,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:45",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:58",{"_index":1319,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:63",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:64",{"_index":1696,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:73",{"_index":1322,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:81",{"_index":1697,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:94",{"_index":1315,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.template.html",{"_index":869,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password/forget",{"_index":341,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":343,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password/upd",{"_index":1286,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["passwordmessag",{"_index":1682,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["path",{"_index":152,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["peoplelist",{"_index":1136,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnam",{"_index":671,"title":{},"body":{"components/CourseIndivComponent.html":{},"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnames:isrevers",{"_index":1137,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnamespip",{"_index":1129,"title":{"pipes/PeopleListNamesPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["per",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["percent",{"_index":2316,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["perform",{"_index":819,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{}}}],["performplex",{"_index":824,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["performplexer(data",{"_index":846,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["permiss",{"_index":1993,"title":{},"body":{"license.html":{}}}],["person",{"_index":1154,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["person.firstnam",{"_index":1156,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["person.lastnam",{"_index":1158,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["personlist",{"_index":1151,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["personnam",{"_index":639,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"pipes/PersonNamePipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["personname:isrevers",{"_index":1164,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["personname:tru",{"_index":640,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["personnamepip",{"_index":1161,"title":{"pipes/PersonNamePipe.html":{}},"body":{"pipes/PersonNamePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phage",{"_index":120,"title":{"interfaces/Phage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["phage'",{"_index":1461,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["phage'},{'nam",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["phage(1|2",{"_index":2212,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["phage+1",{"_index":1103,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["phage.com",{"_index":1636,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.compon",{"_index":1611,"title":{},"body":{"modules/StudentModule.html":{}}}],["phage.component.t",{"_index":1617,"title":{},"body":{"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["phage.component.ts:19",{"_index":1621,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.component.ts:35",{"_index":1622,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.delet",{"_index":1638,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.guess",{"_index":1639,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.interfac",{"_index":896,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{}}}],["phage.mutationlist",{"_index":1637,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.par",{"_index":1196,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phage.strainnum",{"_index":1192,"title":{},"body":{"components/PhageDialogComponent.html":{},"components/StudentPhageComponent.html":{}}}],["phage.strainnum+1).tostr",{"_index":1254,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phage.template.html",{"_index":1619,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage1",{"_index":1260,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage1objectfirst",{"_index":2440,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2",{"_index":1261,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2object",{"_index":2441,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phagebyid",{"_index":2060,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["phagebyid(req",{"_index":2195,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagedelet",{"_index":1174,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagedeletionspip",{"_index":1167,"title":{"pipes/PhageDeletionsPipe.html":{}},"body":{"pipes/PhageDeletionsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagedetailsobjectphag",{"_index":2345,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagedialogcompon",{"_index":119,"title":{"components/PhageDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phagegeno1objectgenotyp",{"_index":2411,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2",{"_index":2406,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2objectgenotyp",{"_index":2412,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phageguess",{"_index":1205,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phageguessespip",{"_index":1198,"title":{"pipes/PhageGuessesPipe.html":{}},"body":{"pipes/PhageGuessesPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageid",{"_index":2193,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagemut",{"_index":1219,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagemutationspip",{"_index":1217,"title":{"pipes/PhageMutationsPipe.html":{}},"body":{"pipes/PhageMutationsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageobjectconfigur",{"_index":2357,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phageobjectphag",{"_index":2351,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagepar",{"_index":1243,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phageparents:numpar",{"_index":1234,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phageparents:phage.numpar",{"_index":1197,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phageparentspip",{"_index":1227,"title":{"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PhageParentsPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagetyp",{"_index":789,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["phagetypestringrefer",{"_index":2348,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phenotyp",{"_index":1270,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["pipe",{"_index":1128,"title":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/SharedModule.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({nam",{"_index":1153,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["pipes/modules/compon",{"_index":1380,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/peopl",{"_index":1393,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/person",{"_index":1391,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/phag",{"_index":1395,"title":{},"body":{"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["pipetransform",{"_index":1152,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["plaqu",{"_index":841,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plate",{"_index":776,"title":{"additional-documentation/genetics/plate-experiment.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["platecapac",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plateinput",{"_index":829,"title":{"interfaces/PlateInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plateresult",{"_index":859,"title":{"interfaces/PlateResults.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["play",{"_index":2387,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["plexer",{"_index":124,"title":{"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plexercapac",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plexerinput",{"_index":847,"title":{"interfaces/PlexerInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plexerroomcompon",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plu",{"_index":2510,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["plus/minu",{"_index":2509,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["pnumberrecombin",{"_index":2455,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["po",{"_index":1031,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["point",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"components/LandingRoomComponent.html":{}}}],["popper.j",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["posguess",{"_index":1080,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["posit",{"_index":740,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["positive/neg",{"_index":2508,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["possibl",{"_index":558,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["possibleinstr",{"_index":537,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["post",{"_index":2091,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1676,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1680,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/pl",{"_index":861,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["post(`${this._baseurl}/plex",{"_index":865,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["potenti",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["present",{"_index":1171,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["preset",{"_index":2376,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["press",{"_index":572,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["prevent",{"_index":565,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["previou",{"_index":2200,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["primari",{"_index":1095,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["privat",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["probabl",{"_index":2330,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["problem",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UserProfileComponent.html":{}}}],["proce",{"_index":2106,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["produc",{"_index":1623,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["profil",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["profile.compon",{"_index":1285,"title":{},"body":{"modules/ProfileModule.html":{},"todo.html":{}}}],["profile.component.t",{"_index":1723,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:24",{"_index":1736,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1737,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1733,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1729,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1731,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:77",{"_index":1732,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":1730,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.rout",{"_index":1282,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.servic",{"_index":1283,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.template.html",{"_index":1725,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/profile.modul",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["profile/upd",{"_index":2002,"title":{},"body":{"todo.html":{}}}],["profile/us",{"_index":1284,"title":{},"body":{"modules/ProfileModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"todo.html":{}}}],["profilemodul",{"_index":276,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerout",{"_index":1281,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profileservic",{"_index":1279,"title":{"injectables/ProfileService.html":{}},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["prominantli",{"_index":1700,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["properti",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["protect",{"_index":722,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["provid",{"_index":200,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["pswd",{"_index":868,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pswd'},{'name",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["public",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"injectables/CourseResolver.html":{},"components/PhageDialogComponent.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["public/.../read",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../scenario.globals.t",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.interface.t",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.roles.t",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/app/admin/admin",{"_index":183,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.t",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.ts:23",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:24",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:33",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.guard.service.t",{"_index":150,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["public/app/admin/admin.guard.service.ts:10",{"_index":159,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.guard.service.ts:23",{"_index":164,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.module.t",{"_index":209,"title":{},"body":{"modules/AdminModule.html":{}}}],["public/app/admin/course/cours",{"_index":480,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["public/app/admin/course/course.module.t",{"_index":692,"title":{},"body":{"modules/CourseModule.html":{}}}],["public/app/admin/course/course.resolver.t",{"_index":705,"title":{},"body":{"injectables/CourseResolver.html":{},"coverage.html":{}}}],["public/app/admin/course/course.resolver.ts:13",{"_index":708,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.resolver.ts:28",{"_index":710,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.service.t",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["public/app/admin/not",{"_index":1116,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/stud",{"_index":1458,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/student.module.t",{"_index":1605,"title":{},"body":{"modules/StudentModule.html":{}}}],["public/app/admin/student/student.resolver.t",{"_index":1640,"title":{},"body":{"injectables/StudentResolver.html":{},"coverage.html":{}}}],["public/app/admin/student/student.resolver.ts:13",{"_index":1641,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.resolver.ts:28",{"_index":1642,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.roles.t",{"_index":1838,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/admin/student/student.service.t",{"_index":1647,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["public/app/admin/student/student.service.ts:105",{"_index":1665,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:14",{"_index":1654,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:29",{"_index":1668,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:43",{"_index":1662,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:59",{"_index":1671,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:74",{"_index":1656,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:90",{"_index":1660,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/app.component.t",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["public/app/app.component.ts:11",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["public/app/app.module.t",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["public/app/app.routes.t",{"_index":322,"title":{},"body":{"modules/AppRouteModule.html":{}}}],["public/app/authentication/authentication.module.t",{"_index":326,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["public/app/authentication/authentication.service.t",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["public/app/authentication/authentication.service.ts:110",{"_index":419,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:128",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:14",{"_index":432,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:142",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:15",{"_index":434,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:17",{"_index":429,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:23",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:34",{"_index":407,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:45",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:55",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:65",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:82",{"_index":413,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:98",{"_index":421,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/forget",{"_index":866,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/log",{"_index":1001,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["public/app/authentication/reset",{"_index":1309,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.t",{"_index":1401,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.ts:20",{"_index":1413,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:24",{"_index":1411,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:28",{"_index":1404,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:42",{"_index":1407,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:59",{"_index":1405,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signout/signout.component.t",{"_index":1417,"title":{},"body":{"components/SignoutComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signout/signout.component.ts:18",{"_index":1419,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signout/signout.component.ts:31",{"_index":1421,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signout/signout.component.ts:42",{"_index":1420,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signup/signup.component.t",{"_index":1426,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signup/signup.component.ts:114",{"_index":1436,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:26",{"_index":1443,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:31",{"_index":1439,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:40",{"_index":1444,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:44",{"_index":1441,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:48",{"_index":1430,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:63",{"_index":1432,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:74",{"_index":1437,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:92",{"_index":1438,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/help/help.component.t",{"_index":899,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["public/app/help/help.component.ts:9",{"_index":903,"title":{},"body":{"components/HelpComponent.html":{}}}],["public/app/help/help.module.t",{"_index":910,"title":{},"body":{"modules/HelpModule.html":{}}}],["public/app/home/home.component.t",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["public/app/home/home.component.ts:23",{"_index":919,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:30",{"_index":921,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:37",{"_index":920,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/interfaces/course.interface.t",{"_index":476,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["public/app/interfaces/experiment.interface.t",{"_index":1258,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["public/app/interfaces/fridge.interface.t",{"_index":890,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"coverage.html":{}}}],["public/app/interfaces/phage.interface.t",{"_index":775,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["public/app/interfaces/scenario.interface.t",{"_index":1345,"title":{},"body":{"interfaces/Scenario.html":{},"coverage.html":{}}}],["public/app/interfaces/student.interface.t",{"_index":227,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/interfaces/user.interface.t",{"_index":1717,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.t",{"_index":1104,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.ts:20",{"_index":1115,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:24",{"_index":1110,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:32",{"_index":1112,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:42",{"_index":1111,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/pag",{"_index":1121,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["public/app/pipes/peopl",{"_index":1130,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["public/app/pipes/person",{"_index":1162,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["public/app/pipes/phag",{"_index":1168,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["public/app/profile/profile.module.t",{"_index":1280,"title":{},"body":{"modules/ProfileModule.html":{}}}],["public/app/profile/profile.service.t",{"_index":1288,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["public/app/profile/profile.service.ts:16",{"_index":1294,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:33",{"_index":1296,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:49",{"_index":1301,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/upd",{"_index":1681,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["public/app/profile/us",{"_index":1722,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["public/app/scenario/fridge/fridge.component.t",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/fridge/phag",{"_index":1187,"title":{},"body":{"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.t",{"_index":964,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.ts:20",{"_index":972,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:24",{"_index":971,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:25",{"_index":970,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:26",{"_index":966,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:36",{"_index":968,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:48",{"_index":967,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/location/experiment.service.t",{"_index":818,"title":{},"body":{"injectables/ExperimentService.html":{},"coverage.html":{}}}],["public/app/scenario/location/experiment.service.ts:14",{"_index":826,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:31",{"_index":830,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:52",{"_index":848,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/lab",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/location/land",{"_index":935,"title":{},"body":{"components/LandingRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.component.t",{"_index":979,"title":{},"body":{"components/LocationComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.module.t",{"_index":989,"title":{},"body":{"modules/LocationModule.html":{}}}],["public/app/scenario/location/model",{"_index":1019,"title":{},"body":{"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/plex",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/scenario.component.t",{"_index":1353,"title":{},"body":{"components/ScenarioComponent.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.globals.t",{"_index":1869,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/scenario/scenario.module.t",{"_index":1357,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["public/app/scenario/scenario.resolver.t",{"_index":1365,"title":{},"body":{"injectables/ScenarioResolver.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.resolver.ts:14",{"_index":1367,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.resolver.ts:28",{"_index":1368,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.service.t",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["public/app/shared/confirm",{"_index":454,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"coverage.html":{}}}],["public/app/shared/read",{"_index":1873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/shared/shared.module.t",{"_index":1377,"title":{},"body":{"modules/SharedModule.html":{}}}],["pupros",{"_index":2538,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["purpos",{"_index":939,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["push",{"_index":1530,"title":{},"body":{"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["quot;reference&quot",{"_index":1624,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;student&quot",{"_index":1544,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["quot;submission&quot",{"_index":1628,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;unkown&quot",{"_index":1625,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;user&quot",{"_index":1627,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["random",{"_index":1952,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["rang",{"_index":1203,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["rare",{"_index":1721,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["rate",{"_index":1787,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":758,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/NavComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["react",{"_index":1389,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["read",{"_index":2066,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["read(req",{"_index":2223,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["readabl",{"_index":1348,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["readablestringshould",{"_index":2365,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["readerrormessag",{"_index":509,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["readerrormessage(err",{"_index":525,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["readerrormessage(err2",{"_index":607,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["readerrormessage(error",{"_index":608,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["readerrormessage(iderr",{"_index":1709,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["realstop",{"_index":2340,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["reason",{"_index":1350,"title":{},"body":{"interfaces/Scenario.html":{}}}],["recfreq",{"_index":2463,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recfreqnumberfrequ",{"_index":2470,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recomb",{"_index":2479,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recombin",{"_index":1792,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombinationfreq",{"_index":2314,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombine(phagegeno1",{"_index":2405,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["redirect",{"_index":1009,"title":{},"body":{"injectables/LoggedInGuard.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["redirecturl",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refer",{"_index":785,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["referencephag",{"_index":2324,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reflect",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["regul",{"_index":1606,"title":{},"body":{"modules/StudentModule.html":{}}}],["regular",{"_index":213,"title":{},"body":{"modules/AdminModule.html":{}}}],["rel",{"_index":2528,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["relat",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/ScenarioModule.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["relativeto",{"_index":522,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["relev",{"_index":945,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reliv",{"_index":928,"title":{},"body":{"components/HomeComponent.html":{}}}],["rememb",{"_index":582,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["remov",{"_index":618,"title":{},"body":{"components/CourseEditComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["render",{"_index":2176,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["repres",{"_index":855,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/StudentResolver.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["represent",{"_index":2450,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["req",{"_index":2232,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["req.curus",{"_index":2275,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["reqobjectexpress",{"_index":2075,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["request",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["requesterror",{"_index":2162,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["requestif",{"_index":2252,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["requestnumb",{"_index":2210,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["requeston",{"_index":2146,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requir",{"_index":437,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"license.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["requireslogin",{"_index":2070,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requireslogin(req",{"_index":2266,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["res.accessgranted[scenid",{"_index":769,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["res.email",{"_index":1707,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["res.firstnam",{"_index":1740,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.id",{"_index":1738,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.lastnam",{"_index":1741,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["reset",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["resetpassword",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(credenti",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword(req",{"_index":2249,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(this.credenti",{"_index":1338,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcompon",{"_index":125,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpasswordemail",{"_index":2069,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordemail(req",{"_index":2243,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordexpir",{"_index":2542,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resetpasswordtoken",{"_index":2541,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resobjectexpress",{"_index":2076,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resolv",{"_index":706,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["resolve(rout",{"_index":709,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["respons",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["rest",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["result.coursenum",{"_index":521,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["result.messag",{"_index":889,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ret",{"_index":1329,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["retreiv",{"_index":2228,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["return",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["returns{observ",{"_index":1678,"title":{},"body":{"injectables/StudentService.html":{}}}],["revers",{"_index":1133,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["revok",{"_index":1666,"title":{},"body":{"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["role",{"_index":154,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["role.label",{"_index":1587,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass",{"_index":1524,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;admin&#39",{"_index":1552,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;student&#39",{"_index":1545,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass('admin",{"_index":1578,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(src",{"_index":1541,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledis",{"_index":1525,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledisabled(src",{"_index":1554,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolesenum",{"_index":2543,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["rolesenum]{@link",{"_index":2558,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["room",{"_index":796,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["room'},{'nam",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["room.compon",{"_index":996,"title":{},"body":{"modules/LocationModule.html":{}}}],["room.component.t",{"_index":937,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:107",{"_index":1046,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:123",{"_index":1032,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:140",{"_index":1051,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:150",{"_index":1048,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:23",{"_index":955,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:26",{"_index":1060,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:27",{"_index":949,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:30",{"_index":1062,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:34",{"_index":1059,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:38",{"_index":1064,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:42",{"_index":1063,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:46",{"_index":1065,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:47",{"_index":953,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:50",{"_index":1058,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:54",{"_index":1053,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:59",{"_index":1029,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:63",{"_index":952,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:82",{"_index":1047,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.style.css",{"_index":1020,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.template.html",{"_index":948,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["room/lab",{"_index":997,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["room/land",{"_index":936,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["room/model",{"_index":999,"title":{},"body":{"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room/plex",{"_index":998,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["root",{"_index":1370,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["rout",{"_index":156,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppRouteModule.html":{},"injectables/CourseResolver.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"changelog.html":{}}}],["route.params['coursenum",{"_index":715,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["route.params['scenid",{"_index":1373,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["route.params['studentid",{"_index":1645,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["router",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{}}}],["routermodul",{"_index":215,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/StudentModule.html":{}}}],["routermodule.forchild(adminrout",{"_index":225,"title":{},"body":{"modules/AdminModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":344,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["routermodule.forchild(courserout",{"_index":704,"title":{},"body":{"modules/CourseModule.html":{}}}],["routermodule.forchild(helprout",{"_index":914,"title":{},"body":{"modules/HelpModule.html":{}}}],["routermodule.forchild(locationrout",{"_index":1000,"title":{},"body":{"modules/LocationModule.html":{}}}],["routermodule.forchild(profilerout",{"_index":1287,"title":{},"body":{"modules/ProfileModule.html":{}}}],["routermodule.forchild(scenariorout",{"_index":1364,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["routermodule.forchild(studentrout",{"_index":1616,"title":{},"body":{"modules/StudentModule.html":{}}}],["routermodule.forroot(approut",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRouteModule.html":{}}}],["routerstatesanpshot",{"_index":1371,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["routerstatesnapshot",{"_index":163,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["row",{"_index":849,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["rowphag",{"_index":862,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["rowphagearraylist",{"_index":2488,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["run",{"_index":1966,"title":{},"body":{"index.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["rxj",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1570,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["s.cours",{"_index":1571,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["s.course.coursenum",{"_index":1572,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["same",{"_index":810,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["save",{"_index":438,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedata",{"_index":1027,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["savedelet",{"_index":2055,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(req",{"_index":2177,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(this.guess",{"_index":1087,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["sceanrio",{"_index":2219,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scen",{"_index":668,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scen'},{'nam",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scen.label",{"_index":672,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["scen1",{"_index":2555,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen2",{"_index":2556,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen3",{"_index":2557,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scenario",{"_index":108,"title":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["scenario'},{'nam",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scenario.compon",{"_index":700,"title":{},"body":{"modules/CourseModule.html":{},"modules/ScenarioModule.html":{}}}],["scenario.component.t",{"_index":716,"title":{},"body":{"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario.component.ts:110",{"_index":729,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:122",{"_index":738,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:144",{"_index":734,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:151",{"_index":741,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:32",{"_index":750,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:36",{"_index":746,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:40",{"_index":749,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:44",{"_index":747,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:48",{"_index":748,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:52",{"_index":745,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:56",{"_index":727,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:75",{"_index":743,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.glob",{"_index":1067,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["scenario.label",{"_index":772,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenario.purpos",{"_index":961,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.relev",{"_index":962,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.rout",{"_index":1362,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenario.scencod",{"_index":771,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.servic",{"_index":957,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["scenario.startingpoint",{"_index":963,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.style.css",{"_index":720,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.template.html",{"_index":721,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ScenarioComponent.html":{}}}],["scenario/cours",{"_index":699,"title":{},"body":{"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario/experi",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scenario/scenario.glob",{"_index":1211,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenario/scenario.modul",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.resolv",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.servic",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenariobycod",{"_index":2067,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariobycode(req",{"_index":2227,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scenariocompon",{"_index":127,"title":{"components/ScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scenariodata",{"_index":864,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["scenariodetail",{"_index":892,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["scenarioexternal:scneariocurr",{"_index":2185,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["scenarioglob",{"_index":1066,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenarioglobals.deletionguesslength",{"_index":1069,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["scenarioglobals.genelength",{"_index":1216,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenarioid",{"_index":1024,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariomodul",{"_index":277,"title":{"modules/ScenarioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScenarioModule.html":{},"modules.html":{},"overview.html":{}}}],["scenarioobjectparamet",{"_index":2310,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scenarioorigin",{"_index":2506,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["scenarioresolv",{"_index":280,"title":{"injectables/ScenarioResolver.html":{}},"body":{"modules/AppModule.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"overview.html":{}}}],["scenariorout",{"_index":1361,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenarios/fridg",{"_index":1402,"title":{},"body":{"components/SigninComponent.html":{}}}],["scenarioscenariocurr",{"_index":2161,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["scenarioscenarioscenario",{"_index":2150,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenarioservic",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scencod",{"_index":753,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["scendata",{"_index":2344,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectcomput",{"_index":2352,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectconfigur",{"_index":2358,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectcurr",{"_index":2355,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectscenario",{"_index":2349,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["scenid",{"_index":762,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{}}}],["schema",{"_index":2498,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["second",{"_index":2251,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["secondari",{"_index":1043,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["secondary&#39",{"_index":1550,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["section",{"_index":1037,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["see",{"_index":978,"title":{},"body":{"components/ListComponent.html":{},"components/StudentFridgeComponent.html":{},"license.html":{}}}],["select",{"_index":192,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseEditComponent.html":{},"components/LocationComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["selectedadd",{"_index":538,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["selector",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["semest",{"_index":2134,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["send",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["sendforget",{"_index":871,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendreset",{"_index":1313,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sensit",{"_index":457,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["sent",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/ForgetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["separ",{"_index":809,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{}}}],["sequenc",{"_index":1933,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["server",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["server/databas",{"_index":1299,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["server/database/authent",{"_index":418,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["servic",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["services/stream",{"_index":1695,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["session",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":408,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"modules/StudentModule.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["setinstructor",{"_index":2050,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["setinstructor(req",{"_index":2141,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["setphag",{"_index":1467,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setphage(src",{"_index":1478,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setrol",{"_index":2041,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["setrole(req",{"_index":2090,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["setstudentrol",{"_index":1653,"title":{},"body":{"injectables/StudentService.html":{}}}],["setstudentrole(adminid",{"_index":1670,"title":{},"body":{"injectables/StudentService.html":{}}}],["setus",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setuser(us",{"_index":406,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sever",{"_index":650,"title":{},"body":{"components/CourseIndivComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/SignupComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["share",{"_index":1378,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/confirm",{"_index":583,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["shared/read",{"_index":510,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/shared.modul",{"_index":216,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["sharedmodul",{"_index":205,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":2001,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["shelv",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":801,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["shifttypenumbershould",{"_index":2361,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["short",{"_index":1351,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["show",{"_index":938,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["shuffl",{"_index":1789,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["shuffleplaquelist",{"_index":2301,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["sign",{"_index":414,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SigninComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin'},{'nam",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signin(credenti",{"_index":412,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signin(req",{"_index":2254,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signin(this.credenti",{"_index":1414,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.template.html",{"_index":1403,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin/signin.compon",{"_index":338,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signincompon",{"_index":129,"title":{"components/SigninComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signout",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignoutComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signout'},{'nam",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signout(req",{"_index":2260,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signout/signout.compon",{"_index":340,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signoutcompon",{"_index":131,"title":{"components/SignoutComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signup",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signup'},{'nam",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signup(req",{"_index":2257,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signup(this.us",{"_index":1456,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup(us",{"_index":420,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signup.template.html",{"_index":1427,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":339,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signupcompon",{"_index":133,"title":{"components/SignupComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpl",{"_index":730,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["singl",{"_index":1515,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["site",{"_index":1106,"title":{},"body":{"components/NavComponent.html":{}}}],["size",{"_index":621,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["skyhook",{"_index":1387,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["skyhookdndmodul",{"_index":1386,"title":{},"body":{"modules/SharedModule.html":{}}}],["skyhookdndmodule.forroot",{"_index":1400,"title":{},"body":{"modules/SharedModule.html":{}}}],["sm",{"_index":622,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["small",{"_index":839,"title":{},"body":{"injectables/ExperimentService.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["small&#39",{"_index":1548,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["small/larg",{"_index":857,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{}}}],["smaller",{"_index":1785,"title":{},"body":{"changelog.html":{}}}],["smallplaqu",{"_index":1272,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["snapshot",{"_index":1372,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["softwar",{"_index":1984,"title":{},"body":{"license.html":{}}}],["someth",{"_index":456,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["soon",{"_index":905,"title":{},"body":{"components/HelpComponent.html":{}}}],["sort",{"_index":243,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"miscellaneous/variables.html":{}}}],["sorted.map((phage)=>{return",{"_index":1253,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["sortstud",{"_index":255,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/Student.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRouteModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["special",{"_index":834,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialobjectoth",{"_index":2490,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialsobjectoth",{"_index":2444,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["specif",{"_index":894,"title":{},"body":{"interfaces/Fridge.html":{},"modules/ScenarioModule.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"license.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["specifc",{"_index":2225,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["specifi",{"_index":843,"title":{},"body":{"injectables/ExperimentService.html":{},"components/ResetPasswordComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["spinner",{"_index":1764,"title":{},"body":{"changelog.html":{}}}],["sposnumberstart",{"_index":2431,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["spot",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["spots/length",{"_index":2377,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["src",{"_index":812,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{}}}],["ssl",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["ssubscript",{"_index":965,"title":{},"body":{"components/ListComponent.html":{}}}],["start",{"_index":802,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentPhage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["start/stop",{"_index":807,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["startingpoint",{"_index":1346,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stat",{"_index":761,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["state",{"_index":162,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["state.url",{"_index":177,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["statement",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":242,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["statusdescript",{"_index":2079,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["step",{"_index":1057,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["stepsiz",{"_index":1025,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["stock",{"_index":2160,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridg",{"_index":2053,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridge(req",{"_index":2158,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stop",{"_index":803,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stoplist",{"_index":2391,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["stoplistarrayloc",{"_index":2393,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["store",{"_index":410,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/models/user-model.html":{}}}],["strain",{"_index":821,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Scenario.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["strain'",{"_index":1172,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["strain.guess",{"_index":1499,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strain.submit",{"_index":1509,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strainlist",{"_index":1464,"title":{},"body":{"components/StudentFridgeComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainlistarraylist",{"_index":2496,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainnum",{"_index":780,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["strainnumnumberstrain",{"_index":2347,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["strainphagephag",{"_index":2192,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stream",{"_index":1113,"title":{},"body":{"components/NavComponent.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["stringifi",{"_index":2179,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["student",{"_index":18,"title":{"interfaces/Student.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["student'",{"_index":735,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{}}}],["student.course.coursenum",{"_index":1586,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.email",{"_index":1585,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["student.interfac",{"_index":479,"title":{},"body":{"interfaces/Course.html":{}}}],["student.resolv",{"_index":1612,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.rol",{"_index":1565,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.rout",{"_index":1609,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.servic",{"_index":1489,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["student/course/scenario.resolv",{"_index":2003,"title":{},"body":{"todo.html":{}}}],["student/student.servic",{"_index":224,"title":{},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{}}}],["student/us",{"_index":1657,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentfridg",{"_index":897,"title":{"interfaces/StudentFridge.html":{}},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["studentfridgecompon",{"_index":135,"title":{"components/StudentFridgeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentid",{"_index":736,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentindex",{"_index":739,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["studentindivcompon",{"_index":136,"title":{"components/StudentIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentlistcompon",{"_index":137,"title":{"components/StudentListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentmodul",{"_index":1599,"title":{"modules/StudentModule.html":{}},"body":{"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["studentnum",{"_index":1644,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["studentphag",{"_index":813,"title":{"interfaces/StudentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["studentphagecompon",{"_index":138,"title":{"components/StudentPhageComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentresolv",{"_index":1604,"title":{"injectables/StudentResolver.html":{}},"body":{"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"coverage.html":{},"overview.html":{}}}],["studentrolesarray",{"_index":1561,"title":{},"body":{"components/StudentIndivComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentrout",{"_index":1608,"title":{},"body":{"modules/StudentModule.html":{}}}],["students.sort(sortstud",{"_index":664,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["students/us",{"_index":1669,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservic",{"_index":206,"title":{"injectables/StudentService.html":{}},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["studentuserstud",{"_index":2174,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentuserth",{"_index":2087,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["studentuserus",{"_index":2144,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["styleurl",{"_index":484,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{}}}],["subject",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["submiss",{"_index":1409,"title":{},"body":{"components/SigninComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{}}}],["submit",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["subscrib",{"_index":519,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{}}}],["subscribe((cours",{"_index":683,"title":{},"body":{"components/CourseListComponent.html":{}}}],["subscribe((dat",{"_index":1090,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["subscribe((fridg",{"_index":1492,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["subscribe((info",{"_index":600,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((instr",{"_index":603,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["subscribe((r",{"_index":631,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe((result",{"_index":888,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe((scen",{"_index":666,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((scenario",{"_index":975,"title":{},"body":{"components/ListComponent.html":{}}}],["subscribe((stat",{"_index":760,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscribe((stud",{"_index":662,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["subscribe((upd",{"_index":614,"title":{},"body":{"components/CourseEditComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe(param",{"_index":752,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscript",{"_index":488,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["successfulli",{"_index":417,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["successlist",{"_index":2136,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["successmessag",{"_index":870,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":587,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/StudentService.html":{}}}],["sumit",{"_index":1626,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["support",{"_index":1804,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sure",{"_index":467,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["svg",{"_index":1994,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["synchron",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["system",{"_index":1590,"title":{},"body":{"components/StudentListComponent.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["systemj",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":1631,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["tab",{"_index":981,"title":{},"body":{"components/LocationComponent.html":{}}}],["tabl",{"_index":1767,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1010,"title":{},"body":{"injectables/LoggedInGuard.html":{},"miscellaneous/variables.html":{}}}],["taken",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["takeuntil(this.isdestroy",{"_index":599,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["task",{"_index":693,"title":{},"body":{"modules/CourseModule.html":{}}}],["teach",{"_index":1591,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["teacher",{"_index":2112,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["tell",{"_index":551,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":416,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["text",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/models/course-model.html":{}}}],["textual",{"_index":1170,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["there'",{"_index":1698,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["thing",{"_index":1607,"title":{},"body":{"modules/StudentModule.html":{}}}],["think",{"_index":1036,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._admin",{"_index":594,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._admin.id",{"_index":1575,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._admin.rol",{"_index":1576,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._authenticationservic",{"_index":887,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authenticationservice.canaccessadmin",{"_index":178,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._authenticationservice.getus",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{}}}],["this._authenticationservice.isloggedin",{"_index":1015,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._authenticationservice.redirecturl",{"_index":180,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/SigninComponent.html":{}}}],["this._authenticationservice.setuser(result",{"_index":1415,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authservice.getus",{"_index":512,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this._authservice.setuser(nul",{"_index":1425,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._authservice.setuser(upd",{"_index":1746,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._authservice.signout",{"_index":1424,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._calldelet",{"_index":1583,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._calldeletecours",{"_index":628,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._calldeletecoursestud",{"_index":633,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._checkpassword",{"_index":1336,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this._courseservic",{"_index":516,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._courseservice.deletecourse(this._admin.id",{"_index":630,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.deletestudents(this._admin.id",{"_index":634,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourse(admin.id",{"_index":660,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{}}}],["this._courseservice.getcourse(this._admin.id",{"_index":598,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourselist",{"_index":1450,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._courseservice.getpossibleinstructors(this._admin.id",{"_index":602,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getscenariostatus(this.admin.id",{"_index":759,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._courseservice.getstudents(admin.id",{"_index":661,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["this._courseservice.listcourses(admin.id",{"_index":682,"title":{},"body":{"components/CourseListComponent.html":{}}}],["this._http",{"_index":860,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["this._modalservice.open(confirmdeletedialogcompon",{"_index":620,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._profileservice.editprofile(this.userid",{"_index":1742,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._profileservice.updatepassword(this.user.id",{"_index":1712,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._reordercourses(r",{"_index":1452,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._rout",{"_index":523,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._route.param",{"_index":751,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._route.params.subscribe(param",{"_index":596,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._route.parent.snapshot.parammap.get('scenid",{"_index":958,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["this._route.snapshot.parammap.get('token",{"_index":1333,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._router.navig",{"_index":520,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["this._router.navigate(['/admin/cours",{"_index":632,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._router.navigate(['/admin/not",{"_index":181,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._router.navigate(['/admin/stud",{"_index":770,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._router.navigate(['/profil",{"_index":1713,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._router.navigate(['authentication/signin",{"_index":1017,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._router.navigate([redirect",{"_index":1416,"title":{},"body":{"components/SigninComponent.html":{}}}],["this._scenarioservic",{"_index":959,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["this._scenarioservice.getscenario(scencod",{"_index":757,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["this._scenarioservice.listscenario",{"_index":665,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._scenarioservice.setscenario(nul",{"_index":1092,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._studentservice.deletestudent(this._admin.id",{"_index":1584,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.getfridge(admin.id",{"_index":1491,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this._studentservice.getstudent(admin.id",{"_index":1646,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["this._studentservice.getstudent(this._admin.id",{"_index":1566,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this._admin.id",{"_index":1573,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this.admin.id",{"_index":765,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._studentservice.liststudents(admin.id",{"_index":1598,"title":{},"body":{"components/StudentListComponent.html":{}}}],["this._studentservice.setstudentrole(this._admin.id",{"_index":1579,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._user.asobserv",{"_index":433,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.getvalu",{"_index":442,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.next(us",{"_index":441,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.admin",{"_index":511,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["this.adminus",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.canactivate(rout",{"_index":1018,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this.cours",{"_index":684,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["this.coursedetail",{"_index":518,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["this.courseinfo",{"_index":601,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["this.courseinfo.coursenum",{"_index":610,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.coursenum",{"_index":755,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.cpassword",{"_index":1455,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.credenti",{"_index":1331,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.confirmpassword",{"_index":1340,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.newpassword",{"_index":1715,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.credentials.password",{"_index":1339,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.token",{"_index":1332,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.credentials['usernam",{"_index":1706,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.email",{"_index":886,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errormessag",{"_index":514,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fridg",{"_index":1483,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strain",{"_index":1497,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.filter((strain",{"_index":1507,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.sort((a,b)=>{return",{"_index":1500,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.genear",{"_index":1070,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.getus",{"_index":444,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuser().rol",{"_index":446,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.guess",{"_index":1074,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.guesses[strain][po",{"_index":1081,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.hasfridg",{"_index":1493,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.http.get(this._baseurl",{"_index":452,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(this._baseurl",{"_index":450,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["this.isdestroy",{"_index":589,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.next(tru",{"_index":636,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.unsubscrib",{"_index":637,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdis",{"_index":1335,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.key",{"_index":1076,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.newrol",{"_index":1567,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.paramobserv",{"_index":595,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.paramobserver.unsubscrib",{"_index":635,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.passwordmessag",{"_index":1710,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.phage.phagetyp",{"_index":1632,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.phagetype.touppercas",{"_index":1635,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.submit",{"_index":1634,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.possibleinstr",{"_index":604,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.possibleinstr.filter((elm",{"_index":615,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.scenario",{"_index":667,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.scenario.scencod",{"_index":763,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.scenarioid",{"_index":1089,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.selectedadd",{"_index":613,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.setphage('al",{"_index":1503,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.ssubscript",{"_index":974,"title":{},"body":{"components/ListComponent.html":{}}}],["this.ssubscription.unsubscrib",{"_index":977,"title":{},"body":{"components/ListComponent.html":{}}}],["this.steps",{"_index":1068,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.strainlist",{"_index":1506,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.stud",{"_index":663,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["this.student.accessgranted[scencod",{"_index":1569,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.rol",{"_index":1568,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.userid",{"_index":1574,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.students[studentindex].statu",{"_index":768,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.students[studentindex].userid",{"_index":764,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.subscript",{"_index":515,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.subscription.unsubscrib",{"_index":527,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.successmessag",{"_index":885,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.us",{"_index":923,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.userid",{"_index":1088,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.userinfo",{"_index":1739,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.viewstrain",{"_index":1504,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["through",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":2379,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["ti",{"_index":247,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":474,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["tmp",{"_index":1451,"title":{},"body":{"components/SignupComponent.html":{}}}],["todo",{"_index":617,"title":{"todo.html":{}},"body":{"components/CourseEditComponent.html":{},"components/SigninComponent.html":{}}}],["togeth",{"_index":2419,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["toggl",{"_index":1052,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["toggleblock",{"_index":1028,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["toggleblock(strain",{"_index":1050,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["token",{"_index":402,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["told",{"_index":2537,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["took",{"_index":404,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["top",{"_index":1105,"title":{},"body":{"components/NavComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{}}}],["total",{"_index":2364,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["touch",{"_index":1390,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["touchbackend",{"_index":1388,"title":{},"body":{"modules/SharedModule.html":{}}}],["toward",{"_index":2483,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["track",{"_index":1701,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"changelog.html":{}}}],["transfer",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["transform",{"_index":1148,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["transform(delet",{"_index":1181,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["transform(guess",{"_index":1209,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["transform(mut",{"_index":1224,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["transform(par",{"_index":1244,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["transform(person",{"_index":1165,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["transform(personlist",{"_index":1149,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["transport",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["tri",{"_index":436,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NotAuthComponent.html":{},"components/SigninComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["trim",{"_index":2278,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["tripl",{"_index":2458,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["true",{"_index":172,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["true/fals",{"_index":1553,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["tslib",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["tube/pl",{"_index":778,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["two",{"_index":1237,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["ui",{"_index":1231,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["unabl",{"_index":2163,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["unauthorizederror",{"_index":2242,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unauthorizedif",{"_index":2267,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["undefin",{"_index":767,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageParentsPipe.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["under",{"_index":1795,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["uneven",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniqu",{"_index":2499,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["unit",{"_index":1753,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":786,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["unkown",{"_index":1629,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["unless",{"_index":1980,"title":{},"body":{"license.html":{}}}],["unprocess",{"_index":2247,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unreleas",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":411,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/SignoutComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["unsubscrib",{"_index":502,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["unsuccess",{"_index":1410,"title":{},"body":{"components/SigninComponent.html":{}}}],["until",{"_index":1735,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["up",{"_index":934,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updat",{"_index":545,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["updated.email",{"_index":1745,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.firstnam",{"_index":1743,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.lastnam",{"_index":1744,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatedst",{"_index":1664,"title":{},"body":{"injectables/StudentService.html":{}}}],["updatepassword",{"_index":1293,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(req",{"_index":2238,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(userid",{"_index":1300,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatepasswordcompon",{"_index":140,"title":{"components/UpdatePasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updatephag",{"_index":2058,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updatephage(req",{"_index":2190,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["updateprofil",{"_index":1727,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["upon",{"_index":1408,"title":{},"body":{"components/SigninComponent.html":{}}}],["url",{"_index":167,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["us",{"_index":238,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["usag",{"_index":1135,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["useddeletespot",{"_index":2381,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["useddeletespotsarraydelet",{"_index":2386,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["useddeletespotsarraylist",{"_index":2378,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["usedshiftspot",{"_index":2504,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["user",{"_index":54,"title":{"interfaces/User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user'",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user')if",{"_index":2272,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["user.interfac",{"_index":233,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{}}}],["user.password",{"_index":1442,"title":{},"body":{"components/SignupComponent.html":{}}}],["user/scenario",{"_index":891,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["user/stud",{"_index":229,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["userbyid",{"_index":2071,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["userbyid(req",{"_index":2268,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["userid",{"_index":236,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["userinfo",{"_index":1726,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["usernam",{"_index":415,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["userprofilecompon",{"_index":142,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users'",{"_index":2181,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["useruserus",{"_index":2280,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["usual",{"_index":941,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["v1.0.10",{"_index":1749,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":1797,"title":{},"body":{"changelog.html":{}}}],["v1.0.6",{"_index":1793,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["valu",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["var",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["vari",{"_index":2394,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["variabl",{"_index":409,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":1686,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["version",{"_index":1973,"title":{},"body":{"license.html":{}}}],["via",{"_index":1360,"title":{},"body":{"modules/ScenarioModule.html":{},"additional-documentation/models/scenario-model.html":{}}}],["view",{"_index":186,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/LocationComponent.html":{},"components/NotAuthComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{}}}],["view/templ",{"_index":1418,"title":{},"body":{"components/SignoutComponent.html":{}}}],["viewstrain",{"_index":1465,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["virtual",{"_index":822,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["visibl",{"_index":187,"title":{},"body":{"components/AdminHomeComponent.html":{},"interfaces/Scenario.html":{},"components/StudentFridgeComponent.html":{}}}],["visit",{"_index":1008,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["visual",{"_index":1124,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["vs",{"_index":2332,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["w",{"_index":1100,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["wait",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["want",{"_index":468,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["warranti",{"_index":1988,"title":{},"body":{"license.html":{}}}],["way",{"_index":1782,"title":{},"body":{"changelog.html":{}}}],["webpag",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["websit",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["welcom",{"_index":924,"title":{},"body":{"components/HomeComponent.html":{}}}],["went",{"_index":1773,"title":{},"body":{"changelog.html":{}}}],["weren't",{"_index":1772,"title":{},"body":{"changelog.html":{}}}],["wheater",{"_index":1035,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["whocal",{"_index":2439,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringloc",{"_index":2492,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringlocation/room",{"_index":2446,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["whole",{"_index":2402,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["whosaysstringwho",{"_index":2398,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["width",{"_index":1054,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["window",{"_index":466,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["windowclass",{"_index":623,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["within",{"_index":717,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["without",{"_index":1987,"title":{},"body":{"license.html":{}}}],["word",{"_index":932,"title":{},"body":{"components/HomeComponent.html":{}}}],["work",{"_index":1704,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["write",{"_index":1983,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1306,"title":{},"body":{"injectables/ProfileService.html":{}}}],["wt",{"_index":1269,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["wtgene",{"_index":2336,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["x",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["x[0].text",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["y",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["z",{"_index":1215,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["zone.j",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":207,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Entrance component for admin features\nMainly, it is a card that allows navigation between course-related\ninfo and student-related info\nContent of the card is determined by router\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin\n            \n\n\n\n\n            \n                templateUrl\n                ./admin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adminUser\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the currently logged in user's information\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            adminUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adminUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Entrance component for admin features\n * Mainly, it is a card that allows navigation between course-related\n * info and student-related info\n * Content of the card is determined by router\n */\n@Component({\n  selector: 'admin',\n  templateUrl: './admin.template.html'\n})\n\nexport class AdminComponent implements OnInit {\n  /**\n   * Logged in user\n   */\n  private adminUser: User;\n  private errorMessage: string = '';\n\n  constructor(\n    private _authenticationService: AuthenticationService\n  ){}\n\n  /**\n   * When initializing the component, get the currently logged in user's information\n   */\n  ngOnInit(){\n    this.adminUser = this._authenticationService.getUser();\n  }\n\n}\n\n    \n\n    \n        \n\n  Administrator Page\n  Instructor Page\n  \n    \n      \n        \n          \n             \n            Courses\n            \n            \n            \n              \n            Students\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Administrator Page  Instructor Page                                                       Courses                                                              Students                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/admin.guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Guard the admin paths so only users with admin or instr\nrole can access the route\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.guard.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.guard.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            Determine if user can activate the route based on their role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is admin or instr\nfalse if user is only a student\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n/**\n * Guard the admin paths so only users with `admin` or `instr`\n * role can access the route\n */\n@Injectable()\nexport class AdminGuard implements CanActivateChild {\n\n  constructor(private _authenticationService: AuthenticationService, private _router: Router) {}\n\n  /**\n   * Determine if user can activate the route based on their role\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {boolean} - `true` if user is `admin` or `instr`\n   * - `false` if user is only a `student`\n   */\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    let role: boolean = this._authenticationService.canAccessAdmin();\n    if(role)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['/admin/not-auth']);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminHomeComponent.html":{"url":"components/AdminHomeComponent.html","title":"component - AdminHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin-home/admin-home.component.ts\n\n\n    \n        Description\n    \n    \n        A view component that is visible when going to the main admin page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin-home\n            \n\n\n\n\n            \n                templateUrl\n                ./admin-home.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A view component that is visible when going to the main admin page\n */\n@Component({\n  selector: 'admin-home',\n  templateUrl: './admin-home.template.html'\n})\n\nexport class AdminHomeComponent{}\n\n    \n\n    \n        \n  Select Courses or Students above.\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Select Courses or Students above.'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/admin.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for admin functions having to deal with students and courses that should not be accessed by a regular user\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminComponent\n                            \n                            \n                                AdminHomeComponent\n                            \n                            \n                                NotAuthComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AdminGuard\n                            \n                            \n                                     StudentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AdminRoutes } from './admin.routes';\nimport { AdminComponent } from './admin.component';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { NotAuthComponent } from './not-auth/not-auth.component';\n\nimport { AdminGuard } from './admin.guard.service';\n\nimport { StudentService } from './student/student.service';\n\n/**\n * Module for admin functions having to deal with students and courses that should not be accessed by a regular user\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(AdminRoutes)\n  ],\n  declarations: [\n    AdminComponent,\n    AdminHomeComponent,\n    NotAuthComponent\n  ],\n  providers: [\n    AdminGuard,\n    StudentService\n  ]\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminStudent.html":{"url":"interfaces/AdminStudent.html","title":"interface - AdminStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AdminStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information needed for admin pages about a user/student\n\n            \n\n            \n                Extends\n            \n            \n                    Student\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:     Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component;\nLinks the nav bar to the content needed based on the url\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-app\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/app.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The main application component;\n * Links the nav bar to the content needed based on the url\n */\n@Component({\n    selector: 'cricket-app',\n    template: ''\n})\nexport class AppComponent {\n    constructor() { }\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAppRouteModule\n\nAppRouteModule\n\nAppModule -->\n\nAppRouteModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The main bootstrapped module\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                NavComponent\n                            \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthenticationService\n                            \n                            \n                                     CourseService\n                            \n                            \n                                     LoggedInGuard\n                            \n                            \n                                     ScenarioResolver\n                            \n                            \n                                     ScenarioService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AdminModule\n                            \n                            \n                                    AppRouteModule\n                            \n                            \n                                    AuthenticationModule\n                            \n                            \n                                    HelpModule\n                            \n                            \n                                    ProfileModule\n                            \n                            \n                                    ScenarioModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { McBreadcrumbsConfig } from 'ngx-breadcrumbs';\n\n//import { AppRoutes } from './app.routes';\nimport { AppRouteModule } from './app.routes';\n\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { LoggedInGuard } from './authentication/logged-in.guard.service';\nimport { ScenarioService } from './scenario/scenario.service';\nimport { CourseService } from './admin/course/course.service';\nimport { ScenarioResolver } from './scenario/scenario.resolver';\n\nimport { SharedModule } from './shared/shared.module';\nimport { AdminModule } from './admin/admin.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { HelpModule } from './help/help.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { ScenarioModule } from './scenario/scenario.module';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { HomeComponent } from './home/home.component';\n\n/**\n * The main bootstrapped module\n */\n@NgModule({\n    imports: [\n        BrowserModule,\n      SharedModule,\n        HttpClientModule,\n      HelpModule,\n      AdminModule,\n      ProfileModule,\n        AuthenticationModule,\n      ScenarioModule,\n      AppRouteModule\n      //RouterModule.forRoot(AppRoutes)\n    ],\n    declarations: [\n        AppComponent,\n        NavComponent,\n      HomeComponent,\n      PageNotFoundComponent\n    ],\n    providers: [\n      AuthenticationService,\n      LoggedInGuard,\n      ScenarioService,\n      CourseService,\n      ScenarioResolver\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\nconstructor(breadcrumbsConfig: McBreadcrumbsConfig) {\n\n    breadcrumbsConfig.postProcess = (x) => {\n\n      // Ensure that the first breadcrumb always points to home\n\n      let y = x;\n\n      if(x.length && x[0].text !== 'Home') {\n        y = [\n          {\n            text: 'Home',\n            path: ''\n          }\n        ].concat(x);\n      }\n\n      return y;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRouteModule.html":{"url":"modules/AppRouteModule.html","title":"module - AppRouteModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRouteModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/app.routes.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { HomeComponent } from './home/home.component';\n\n\n const AppRoutes: Routes =\n      [{\n        path: '',\n        component: HomeComponent\n      },\n       {\n        path: '**',\n        component: PageNotFoundComponent\n      }];\n/**\n * @ignore\n */\n@NgModule({\n  imports: [RouterModule.forRoot(AppRoutes)],\n  exports: [RouterModule]\n})\n\nexport class AppRouteModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/authentication/authentication.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module which deals with anything related to authenticating users,\ni.e. logging in/out users and resetting forgotten passwords\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ForgetPasswordComponent\n                            \n                            \n                                ResetPasswordComponent\n                            \n                            \n                                SigninComponent\n                            \n                            \n                                SignoutComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticationRoutes } from './authentication.routes';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SignoutComponent } from './signout/signout.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n/**\n * Module which deals with anything related to authenticating users,\n * i.e. logging in/out users and resetting forgotten passwords\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(AuthenticationRoutes)\n    ],\n    declarations: [\n        SigninComponent,\n        SignupComponent,\n      SignoutComponent,\n      ForgetPasswordComponent,\n      ResetPasswordComponent\n    ]\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that deals with validating and logging in/out users and\nresetting forgotten passwords\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                            \n                                    Private\n                                _user\n                            \n                            \n                                getUser$\n                            \n                            \n                                    Public\n                                redirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAccessAdmin\n                            \n                            \n                                forgetPassword\n                            \n                            \n                                getUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setUser\n                            \n                            \n                                signin\n                            \n                            \n                                signout\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/authentication.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAccessAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAccessAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Checks if the current user can access the admin pages\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is instr or admin\nfalse if user is only a student\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nforgetPassword(body: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:128\n                            \n                        \n\n\n                \n                    \n                            Submit email address of potential user to allow that user\nto reset their password if the user exists\nThe backend then sends a password reset email to the\nemail address\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrequest body that includes email of user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nSuccess message if password reset email sent\nerror message Error with server email service if problem with email transporter\nerror message No account with that email. if email address doesn't correspond to an existing user\nerror 422 for other server errors\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Get the current user information not as an observable\nso it is synchronous and keeps the app components' ngOnInit\nfunctions cleaner\n\n\n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    the current user or null if no user logged in\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Checks if a user is logged in\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:142\n                            \n                        \n\n\n                \n                    \n                            Attempts to reset a user's password using the credentials\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninfo needed to reset password: password,confirmPassword, andtoken`\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nIf successful, sends success message Passwords has been reset.\nerror message Invalid token if token doesn't match a user\nerror message Token has expired for valid tokens but user took too long to attempt to reset\nerror message for all other errors\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Sets the services user variable which is stored after user logs in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ncurrent user who logged in\nor null to unset the user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Attempts to sign a user in using the provided credentials\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nusername (as email) and password to be tested for logging in\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe successfully logged in user\nor error message for server/database/authentication error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signout\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            Signs out the user\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    returns true if successfully signed out\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:98\n                            \n                        \n\n\n                \n                    \n                            Attempts to create a new user using the provided user details\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuser details including firstName, lastName, username (email), course, and password\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe new logged-in user when successfully create new user\nor error 400 if errror logging in\nor error 500 if error creating user\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/auth/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._user.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:23\n                            \n                        \n\n                \n                    \n                        When a non-logged in user tries to access a page which requires logging in,\nsave that page's url and direct user there after they log in\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable ,  BehaviorSubject } from 'rxjs';\n\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Service that deals with validating and logging in/out users and\n * resetting forgotten passwords\n */\n@Injectable()\nexport class AuthenticationService {\n    private _user: BehaviorSubject = new BehaviorSubject(null);\n    getUser$ = this._user.asObservable();\n\n    private _baseUrl = '/api/auth/'\n\n  /**\n   * When a non-logged in user tries to access a page which requires logging in,\n   * save that page's url and direct user there after they log in\n   */\n    public redirectUrl: string = '/';\n\n    constructor(private http: HttpClient) {\n    }\n\n  /**\n   * Sets the services `user` variable which is stored after user logs in\n   *\n   * @param {User} user - current user who logged in\n   * - or `null` to unset the user\n   */\n  setUser(user: User){\n    this._user.next(user);\n  }\n\n  /**\n   * Get the current user information not as an observable\n   * so it is synchronous and keeps the app components' `ngOnInit`\n   * functions cleaner\n   *\n   * @returns {User} the current user or `null` if no user logged in\n   */\n  getUser(): User{\n    return this._user.getValue();\n  }\n\n  /**\n   * Checks if a user is logged in\n   *\n   * @requires {boolean} - `true` if a user is logged in\n   * - `false` otherwise\n   */\n  isLoggedIn(): boolean{\n    return (!!this.getUser());\n  }\n\n  /**\n   * Checks if the current user can access the admin pages\n   *\n   * @returns {boolean} - `true` if user is instr or admin\n   * - `false` if user is only a student\n   */\n  canAccessAdmin(): boolean{\n    if(this.getUser()){\n      return this.getUser().role > 0\n    }\n    else{\n      return false;\n    }\n  }\n\n  /**\n   * Attempts to sign a user in using the provided credentials\n   *\n   * @param {any} credentials - `username` (as email) and `password` to be tested for logging in\n   *\n   * @returns {Observable} - the successfully logged in user\n   * - or error message for server/database/authentication error\n   */\n  signin(credentials: any): Observable {\n      let body = JSON.stringify(credentials);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signin', body, { headers: headers });\n  }\n\n  /**\n   * Attempts to create a new user using the provided user details\n   *\n   * @param {any} user - user details including `firstName`, `lastName`, `username` (email), `course`, and `password`\n   *\n   * @returns {Observable} - The new logged-in user when successfully create new user\n   * - or error 400 if errror logging in\n   * - or error 500 if error creating user\n   */\n  signup(user: any): Observable {\n      let body = JSON.stringify(user);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signup', body, { headers: headers });\n  }\n\n  /**\n   * Signs out the user\n   *\n   * @returns {Observable} returns `true` if successfully signed out\n   */\n  signout(): Observable{\n    return this.http.get(this._baseUrl + 'signout');\n  }\n\n  /**\n   * Submit email address of potential user to allow that user\n   * to reset their password if the user exists\n   *\n   * The backend then sends a password reset email to the\n   * email address\n   *\n   * @param {any} body - request body that includes `email` of user\n   *\n   * @returns {Observable} - Success message if password reset email sent\n   * - error message `Error with server email service` if problem with email transporter\n   * - error message `No account with that email.` if email address doesn't correspond to an existing user\n   * - error 422 for other server errors\n   */\n  forgetPassword(body: any): Observable{\n    return this.http.post(this._baseUrl + 'forget-password', body);\n  }\n\n  /**\n   * Attempts to reset a user's password using the credentials\n   *\n   * @param {any} credentials - info needed to reset password: `password, `confirmPassword`, and `token`\n   *\n   * @returns {Observable} - If successful, sends success message `Passwords has been reset`.\n   * - error message `Invalid token` if token doesn't match a user\n   * - error message `Token has expired` for valid tokens but user took too long to attempt to reset\n   * - error message for all other errors\n   */\n  resetPassword(credentials: any): Observable{\n    return this.http.post(this._baseUrl + 'reset-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDeleteDialogComponent.html":{"url":"components/ConfirmDeleteDialogComponent.html","title":"component - ConfirmDeleteDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDeleteDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/shared/confirm-delete-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This is a confirmation dialog when user wants to delete\nsomething sensitive, i.e. another user\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-delete-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-delete-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/shared/confirm-delete-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                        Message to be displayed in the dialog window\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Are you sure you want to delete?'\n                        \n                    \n                \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * This is a confirmation dialog when user wants to delete\n * something sensitive, i.e. another user\n */\n@Component({\n  selector: 'confirm-delete-dialog',\n  templateUrl: './confirm-delete-dialog.template.html'\n})\n\nexport class ConfirmDeleteDialogComponent{\n\n  /**\n   * Message to be displayed in the dialog window\n   */\n  @Input() message: string = 'Are you sure you want to delete?'\n\n  constructor(public activeModal: NgbActiveModal){\n\n  }\n}\n\n    \n\n    \n        \n  \n      &times;\n    \n\n\n\n  \n    {{ message }}\n  \n\n\n\n  \n    Cancel\n  \n  \n    Confirm\n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        ×          {{ message }}        Cancel        Confirm  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDeleteDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/course.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information about a course\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courseNum\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        instructors\n                                \n                                \n                                            Optional\n                                        students\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseNum\n                                    \n                                \n                                \n                                    \n                                        courseNum:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the course\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructors\n                                    \n                                \n                                \n                                    \n                                        instructors:     _User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Instructors of the course, if any\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                    \n                                \n                                \n                                    \n                                        students:     Student[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Student[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of students in the course, if any\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Student } from './student.interface';\nimport { _User } from './user.interface';\n\n/**\n * Information about a course\n */\nexport interface Course {\n  /**\n   * Course number\n   */\n  courseNum: string;\n  /**\n   * Description of the course\n   */\n  description: string;\n  /**\n   * List of students in the course, if any\n   */\n  students?: Student[];\n  /**\n   * Instructors of the course, if any\n   */\n  instructors?: _User[]\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseCreateComponent.html":{"url":"components/CourseCreateComponent.html","title":"component - CourseCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-create/course-create.component.ts\n\n\n    \n        Description\n    \n    \n        Component to create a new course\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-create\n            \n\n            \n                styleUrls\n                course-create.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-create.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseDetails\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _router: Router, _route: ActivatedRoute, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-create/course-create.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Check that a course number has been entered then\nsubmit course details to backend\nIf course successfully created, go back to list of courses\nIf error, display error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            On component destory, unsubscribe from services if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the currently logged\nin user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:34\n                            \n                        \n\n                \n                    \n                        Logged in admin user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseDetails:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:30\n                            \n                        \n\n                \n                    \n                        \nCourse details to be sent to the backend server\nIncludes courseNum and description\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:24\n                            \n                        \n\n                \n                    \n                        Potential error message from the backend server when trying to\ncreate the course\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { User } from '../../../interfaces';\nimport { readErrorMessage } from '../../../shared/read-error'\n\n/**\n * Component to create a new course\n */\n@Component({\n  selector: 'course-create',\n  templateUrl: './course-create.template.html',\n  styleUrls: ['./course-create.style.css']\n})\n\nexport class CourseCreateComponent implements OnInit, OnDestroy {\n  /**\n   * Potential error message from the backend server when trying to\n   * create the course\n   */\n  private errorMessage: string = '';\n  private subscription: Subscription;\n  /**\n   * - Course details to be sent to the backend server\n   * - Includes `courseNum` and `description`\n   */\n  private courseDetails: any = {};\n  /**\n   * Logged in admin user\n   */\n  private admin: User;\n\n  constructor(\n    private _courseService: CourseService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n     private _authService: AuthenticationService\n  ){}\n\n  /**\n   * When initializing the component, get the currently logged\n   * in user\n   */\n  ngOnInit(){\n    this.admin = this._authService.getUser();\n  }\n\n  /**\n   * Check that a course number has been entered then\n   * submit course details to backend\n   *\n   * If course successfully created, go back to list of courses\n   * If error, display error message\n   */\n  createCourse(){\n    if(this.courseDetails.courseNum===''){\n      this.errorMessage = 'Course number is required'\n    } else {\n      this.subscription = this._courseService\n      .createCourse(this.admin.id, this.courseDetails)\n    .subscribe( (result)=>{\n      this._router.navigate(['../', result.courseNum], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n    }\n  }\n\n  /**\n   * On component destory, unsubscribe from services if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Create Course\n  \n  \n    Course Number\n  \n  \n\n  \n    Course Description\n  \n  \n\n  \n    Submit\n  \n  \n    {{errorMessage}}\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create Course        Course Number          Course Description          Submit        {{errorMessage}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseEditComponent.html":{"url":"components/CourseEditComponent.html","title":"component - CourseEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-edit/course-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-edit\n            \n\n            \n                styleUrls\n                course-edit.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-edit.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                possibleInstr\n                            \n                            \n                                selectedAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _callDeleteCourse\n                            \n                            \n                                _callDeleteCourseStudents\n                            \n                            \n                                addInstructor\n                            \n                            \n                                deleteCourse\n                            \n                            \n                                deleteCourseStudents\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-edit/course-edit.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Helper method which uses service to tell server to delete the course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Helper method with tells service to delete all of the\nstudents in this course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addInstructor\n                            \n                            \n                        \n                    \n                \n                \n                    \naddInstructor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            \nWhen add instructor button is clicked, send the selected\ninstructor (by userId) to the backend to be added as an instructor\nIf successful, update list of possible instructors\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            \nWhen clicking delete course button, open a dialog\nto confirm deletion\nIf confirmed, call helper method\nIf cancel, do nothing\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:178\n                            \n                        \n\n\n                \n                    \n                            \nWhen delete students button is click,\nopen a dialog to confirm deletion\nIf confirm, call helper method\nIf cancel, do nothing\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:209\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from services to prevent a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            On init\n\nget the logged in user\nUse the url param to get course number\nGet course details (using coureNum)\nGet possible instructors (using courseNum)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            When the cancel button is pressed, navigate back to course view page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            When submit button is clicked, submit the updates to be\nsaved in the backend\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:45\n                            \n                        \n\n                \n                    \n                        The logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:33\n                            \n                        \n\n                \n                    \n                        Course being edited\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:54\n                            \n                        \n\n                \n                    \n                        Potential error messages from the backend server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:50\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            possibleInstr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        possibleInstr:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:37\n                            \n                        \n\n                \n                    \n                        List of possible instructors who could be added\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAdd:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:41\n                            \n                        \n\n                \n                    \n                        Variable used to remember instr selected when adding\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subject } from 'rxjs';\n\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { User } from '../../../interfaces/user.interface';\nimport { Student, AdminStudent, sortStudents } from '../../../interfaces/student.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n@Component({\n  selector: 'course-edit',\n  templateUrl: './course-edit.template.html',\n  styleUrls: ['./course-edit.style.css']\n})\n\n/**\n * Component for editting course details such as\n * adding/removing instructors, updating course description\n */\nexport class CourseEditComponent implements OnInit, OnDestroy{\n\n  /**\n   * Course being edited\n   */\n  courseInfo: Course;\n  /**\n   * List of possible instructors who could be added\n   */\n  private possibleInstr: AdminStudent[];\n  /**\n   * Variable used to remember instr selected when adding\n   */\n  selectedAdd: number;\n  /**\n   * The logged in user\n   */\n  private _admin: User;\n  private paramObserver: any;\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential error messages from the backend server\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _courseService: CourseService,\n    private _authService: AuthenticationService,\n    private _modalService: NgbModal){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * On init\n   * 1. get the logged in user\n   * 2. Use the url param to get course number\n   * 3. Get course details (using coureNum)\n   * 4. Get possible instructors (using courseNum)\n   */\n  ngOnInit(){\n    this._admin = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n\n            this._courseService.getCourse(this._admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n                this.courseInfo = info;\n                this._courseService.getPossibleInstructors(this._admin.id, course)\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((instrs)=>{\n                    this.possibleInstr = instrs.sort(sortStudents);\n                }, (err2)=>{\n                  this.errorMessage = readErrorMessage(err2);\n                  this.possibleInstr = [];\n                });\n              },(error) => {\n                this.errorMessage = readErrorMessage(error);\n              });\n        });\n  }\n\n  /**\n   * When the cancel button is pressed, navigate back to course view page\n   */\n  onCancel(){\n    this._router.navigate(['../'], {relativeTo: this._route});\n  }\n\n  /**\n   * When submit button is clicked, submit the updates to be\n   * saved in the backend\n   */\n  update(){\n    this._courseService\n      .editCourse(this._admin.id, this.courseInfo.courseNum, this.courseInfo)\n    .takeUntil(this.isDestroyed$)\n    .subscribe( (result)=>{\n      // success\n      this._router.navigate(['../'], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * - When add instructor button is clicked, send the selected\n   * instructor (by userId) to the backend to be added as an instructor\n   * - If successful, update list of possible instructors\n   */\n  addInstructor(){\n    if(this.selectedAdd){\n    this._courseService\n      .addInstructor(this._admin.id, this.courseInfo.courseNum, this.selectedAdd)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.courseInfo = updated;\n      this.possibleInstr = this.possibleInstr.filter((elm)=>{\n        return elm.userId != this.selectedAdd\n      });\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n    }\n  }\n  // TODO: remove instructor\n\n  /**\n   * - When clicking delete course button, open a dialog\n   * to confirm deletion\n   * - If confirmed, call helper method\n   * - If cancel, do nothing\n   */\n  deleteCourse(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm', windowClass: 'delete-modal'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourse()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method which uses service to tell server to delete the course\n   */\n  _callDeleteCourse(){\n    this._courseService.deleteCourse(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * - When delete students button is click,\n   * open a dialog to confirm deletion\n   * - If confirm, call helper method\n   * - If cancel, do nothing\n   */\n  deleteCourseStudents(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete all students in course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourseStudents()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method with tells service to delete all of the\n   * students in this course\n   */\n  _callDeleteCourseStudents(){\n    this._courseService.deleteStudents(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses/', this.courseInfo.courseNum]);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * Unsubscribe from services to prevent a memory leak\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    {{ courseInfo.courseNum }}\n\n    \n      \n        Instructors\n      \n      \n        {{ instr | personName }}\n      \n    \n\n    \n      \n        Add Instructor\n      \n      \n        \n        Instructor to add\n        {{instr | personName:true }}\n      \n        \n          Add\n        \n      \n    \n    \n      Description\n    \n    \n    \n      \n        Submit\n        Cancel\n      \n    \n    \n      Delete course\n      Delete students in course\n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}        {{ courseInfo.courseNum }}                  Instructors                    {{ instr | personName }}                            Add Instructor                            Instructor to add        {{instr | personName:true }}                        Add                            Description                          Submit        Cancel                    Delete course      Delete students in course        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseIndivComponent.html":{"url":"components/CourseIndivComponent.html","title":"component - CourseIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-indiv/course-indiv.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-indiv\n            \n\n            \n                styleUrls\n                course-indiv.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from subscriptions to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Initialize all content on the page using several services\n\nGet the logged in user\nGet the course information (description, instructors)\nGet the list of students in the course\nGet the list of scenarios\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:34\n                            \n                        \n\n                \n                    \n                        Course info including courseNum, description, instructors\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:48\n                            \n                        \n\n                \n                    \n                        Potential error message that could arise\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:42\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:38\n                            \n                        \n\n                \n                    \n                        list of available scenarios (used for linking)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:30\n                            \n                        \n\n                \n                    \n                        List of students enrolled in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { Course, Student, sortStudents, Scenario, User } from '../../../interfaces';\n\n@Component({\n  selector: 'course-indiv',\n  templateUrl: './course-indiv.template.html',\n  styleUrls: ['./course-indiv.style.css']\n})\n\n\n/**\n * Component to view an individual course\n * Includes information such as course number, description, instructors, and students\n */\nexport class CourseIndivComponent implements OnInit, OnDestroy{\n\n  /**\n   * List of students enrolled in the course\n   */\n  private students: Student[] = [];\n  /**\n   * Course info including `courseNum`, `description`, `instructors`\n   */\n  courseInfo: Course;\n  /**\n   * list of available scenarios (used for linking)\n   */\n  private scenarios: Scenario[];\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  private paramObserver: any;\n\n  /**\n   * Potential error message that could arise\n   */\n  private errorMessage: string = '';\n\n  constructor(\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _courseService: CourseService,\n    private _authService: AuthenticationService,\n    private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize all content on the page using several services\n   * 1. Get the logged in user\n   * 2. Get the course information (description, instructors)\n   * 3. Get the list of students in the course\n   * 4. Get the list of scenarios\n   */\n  ngOnInit(){\n    let admin: User = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n            this._courseService.getCourse(admin.id, course)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n              this.courseInfo = info;\n              this._courseService.getStudents(admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((students)=>{\n                this.students = students.sort(sortStudents);\n                this._scenarioService.listScenarios()\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((scens)=>{\n                    this.scenarios = scens;\n                });\n              });\n            },(error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Unsubscribe from subscriptions to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          {{ courseInfo.courseNum }}\n        \n      \n      Edit\n    \n\n    \n      \n          Description\n        \n        {{ courseInfo.description }}\n     \n    \n      \n          Instructors\n        \n        {{ courseInfo.instructors | peopleListNames }}\n     \n  \n  \n  \n      View Scenario Status \n    \n      \n        By Student\n        \n          {{ student | personName:true }}\n        \n        \n      \n      \n      \n        By Scenario\n        \n          {{ scen.label }}\n        \n      \n      \n    \n    \n     \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                {{ courseInfo.courseNum }}                    Edit                        Description                {{ courseInfo.description }}                         Instructors                {{ courseInfo.instructors | peopleListNames }}                 View Scenario Status                   By Student                  {{ student | personName:true }}                                          By Scenario                  {{ scen.label }}                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseListComponent.html":{"url":"components/CourseListComponent.html","title":"component - CourseListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-list/course-list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists available courses based on logged-in user role\n\nIf admin, lists all available courses\nIf instr, list courses which instructor of\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-list\n            \n\n\n\n\n            \n                templateUrl\n                ./course-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-list/course-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from services if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initialize component by getting list of courses\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:22\n                            \n                        \n\n                \n                    \n                        List of courses\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:26\n                            \n                        \n\n                \n                    \n                        Subscription to course service\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\n\nimport { Course, User } from '../../../interfaces';\n\n/**\n * Component which lists available courses based on logged-in user role\n * - If admin, lists all available courses\n * - If instr, list courses which instructor of\n */\n@Component({\n    selector: 'course-list',\n    templateUrl: './course-list.template.html'\n})\nexport class CourseListComponent implements OnInit, OnDestroy{\n  /**\n   * List of courses\n   */\n    private courses: Course[];\n  /**\n   * Subscription to course service\n   */\n  private subscription: Subscription;\n\n    constructor(\n      private _courseService: CourseService,\n      private _authService: AuthenticationService\n    ) {}\n\n    /**\n     * Initialize component by getting list of courses\n     */\n    ngOnInit() {\n      let admin: User = this._authService.getUser();\n      this.subscription = this._courseService.listCourses(admin.id)\n        .subscribe((courses) => {\n        this.courses = courses\n      });\n    }\n\n  /**\n   * On component destruction, unsubscribe from services if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \nCourses\n\n  Create new course\n  \n      {{course.courseNum}}\n   \n \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Courses  Create new course        {{course.courseNum}}    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CourseModule.html":{"url":"modules/CourseModule.html","title":"module - CourseModule","body":"\n                   \n\n\n\n\n  Modules\n  CourseModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_imports\n\n\n\ncluster_CourseModule_providers\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/course/course.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for course-related tasks like adding, editing, \ndeleting, and viewing a course and the students in a course\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseCreateComponent\n                            \n                            \n                                CourseEditComponent\n                            \n                            \n                                CourseIndivComponent\n                            \n                            \n                                CourseListComponent\n                            \n                            \n                                CourseScenarioComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CourseResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CourseCreateComponent } from './course-create/course-create.component';\nimport { CourseIndivComponent } from './course-indiv/course-indiv.component';\nimport { CourseEditComponent } from './course-edit/course-edit.component';\nimport { CourseListComponent } from './course-list/course-list.component';\nimport { CourseScenarioComponent } from './course-scenario/course-scenario.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { CourseRoutes } from './course.routes';\nimport { CourseResolver } from './course.resolver';\n\n/**\n * Module for course-related tasks like adding, editing, \n * deleting, and viewing a course and the students in a course\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(CourseRoutes)\n  ],\n  declarations: [\n    CourseCreateComponent,\n    CourseIndivComponent,\n    CourseEditComponent,\n    CourseListComponent,\n    CourseScenarioComponent\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    CourseResolver\n  ]\n})\nexport class CourseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseResolver.html":{"url":"injectables/CourseResolver.html","title":"injectable - CourseResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/course/course.resolver.ts\n        \n\n            \n                Description\n            \n            \n                For the navigation breadcrumb, resolves a URL courseNum parameeter\nto the course number\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Based on the URL courseNum parameter, find the course\nit belongs to\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The course info for the courseNum\nor an empty observable if the id doesn't belong to any course\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CourseService } from './course.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { Course } from '../../interfaces/course.interface';\n\n/**\n * For the navigation breadcrumb, resolves a URL courseNum parameeter\n * to the course number\n */\n@Injectable()\nexport class CourseResolver implements Resolve {\n\n  constructor(private _courseService: CourseService,\n              private _authService: AuthenticationService\n              ) { }\n  /**\n   * Based on the URL `courseNum` parameter, find the course\n   * it belongs to\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {Observable} The course info for the courseNum\n   * or an empty observable if the id doesn't belong to any course\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n    const courseNum = route.params['courseNum'];\n\n    if (courseNum) {\n      return this._courseService.getCourse(admin.id, courseNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseScenarioComponent.html":{"url":"components/CourseScenarioComponent.html","title":"component - CourseScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-scenario/course-scenario.component.ts\n\n\n    \n        Description\n    \n    \n        This component displays the scenario status of all students\nwithin the course and allows for navigation to student fridges\nand grant access for a student\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-scen\n            \n\n            \n                styleUrls\n                course-scenario.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-scenario.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseNum\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Protected\n                                scenario\n                            \n                            \n                                    Protected\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatAccess\n                            \n                            \n                                goToFridge\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _courseService: CourseService, _studentService: StudentService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatAccess(isGranted: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Simple formatting function which returns formatted string\ndepending on if student has access granted or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isGranted\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nhas access been granted\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \nformatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToFridge(studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            On \"View Fridge\" button, navigates to that student's fridge\nfor this scenario\nCalled on (click) of \"View Fridge\" button of a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe student's userID\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(studentIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Calls service to grant the student access to the scenario\nCalled on (click) of \"Grant access\" button for a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npositional index of student in the list of students; \nThis is NOT the student's userId\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from services to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Initalize the component\n\nGet the logged in user\nBased on the URL, get the course number and scenario code\nGet the scenario information\nGet the scenario status of students in the course\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:52\n                            \n                        \n\n                \n                    \n                        The logged in admin user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseNum:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:36\n                            \n                        \n\n                \n                    \n                        The course number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:56\n                            \n                        \n\n                \n                    \n                        Potential backend error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:44\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:48\n                            \n                        \n\n                \n                    \n                        Subscription to observe url courseNum parameter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:40\n                            \n                        \n\n                \n                    \n                        Information about the scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:32\n                            \n                        \n\n                \n                    \n                        List of students in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../../student/student.service';\n\nimport { Course, Student, Scenario, User } from '../../../interfaces/';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * This component displays the scenario status of all students\n * within the course and allows for navigation to student fridges\n * and grant access for a student\n */\n@Component({\n  selector: 'course-scen',\n  templateUrl: './course-scenario.template.html',\n  styleUrls: ['./course-scenario.style.css']\n})\n\nexport class CourseScenarioComponent implements OnInit, OnDestroy {\n\n  /**\n   * List of students in the course\n   */\n  protected students: Student[] = [];\n  /**\n   * The course number\n   */\n  private courseNum: string;\n  /**\n   * Information about the scenario\n   */\n  protected scenario: Scenario;\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Subscription to observe url `courseNum` parameter\n   */\n  private paramObserver: any;\n  /**\n  * The logged in admin user\n  */\n  private admin: User;\n  /**\n   * Potential backend error messages\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _authService: AuthenticationService,\n    private _courseService: CourseService,\n    private _studentService: StudentService,\n    private _scenarioService: ScenarioService\n              ){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initalize the component\n   * 1. Get the logged in user\n   * 2. Based on the URL, get the course number and scenario code\n   * 3. Get the scenario information\n   * 4. Get the scenario status of students in the course\n   */\n  ngOnInit() {\n    this.admin = this._authService.getUser();\n    this.paramObserver = this._route.params\n      .subscribe(params => {\n          let course = params['courseNum'];\n          let scenCode = params['scenId'];\n      this.courseNum = course.toUpperCase();\n      this._scenarioService.getScenario(scenCode)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n          // success\n          this.scenario = res;\n        this._courseService.getScenarioStatus(this.admin.id, course, scenCode)\n          .takeUntil(this.isDestroyed$)\n          .subscribe((stats)=>{\n\n            this.students = stats;\n        }, (err2)=>{\n          this.errorMessage = readErrorMessage(err2);\n        });\n\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n        });\n  }\n\n  /**\n   * Simple formatting function which returns formatted string\n   * depending on if student has access granted or not\n   *\n   * @param {boolean} isGranted - has access been granted\n   *\n   * @returns {string} - formatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n   */\n  formatAccess(isGranted: boolean): string{\n    return (isGranted ? 'Access granted' : 'Access not granted');\n  }\n\n  /**\n   * Calls service to grant the student access to the scenario\n   *\n   * Called on `(click)` of \"Grant access\" button for a student\n   * \n   * @param {number} studentIndex - positional index of student in the list of students; \n   * This is **NOT** the student's userId\n   */\n  grantAccess(studentIndex: number){\n    let scenId = this.scenario.scenCode;\n    let studentId = this.students[studentIndex].userId;\n    this._studentService.grantScenAccess(this.admin.id, studentId, scenId, true)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        if(res !== undefined && res !== null){\n          this.students[studentIndex].status = res.accessGranted[scenId];\n        }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * On \"View Fridge\" button, navigates to that student's fridge\n   * for this scenario\n   *\n   * Called on `(click)` of \"View Fridge\" button of a student\n   *\n   * @param {number} studentId - the student's userID\n   */\n  goToFridge(studentId: number){\n    this._router.navigate(['/admin/students/', studentId, this.scenario.scenCode]);\n  }\n\n  /**\n   * When destroying component, unsubscribe from services to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      {{ courseNum }} \n    \n\n    \n      {{scenario.scenCode}}\n      {{ scenario.label }}\n    \n\n    \n      \n        \n        {{student | personName}}: {{ formatAccess(student.status) }}\n        \n        \n          Grant access\n          View fridge\n        \n         \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}              {{ courseNum }}               {{scenario.scenCode}}      {{ scenario.label }}                              {{student | personName}}: {{ formatAccess(student.status) }}                          Grant access          View fridge                             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExperimentPhage.html":{"url":"interfaces/ExperimentPhage.html","title":"interface - ExperimentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExperimentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage interface used for plating and plexer\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        numPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numPhage\n                                    \n                                \n                                \n                                    \n                                        numPhage:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of this phage in the tube/plate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExperimentService.html":{"url":"injectables/ExperimentService.html","title":"injectable - ExperimentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ExperimentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/location/experiment.service.ts\n        \n\n            \n                Description\n            \n            \n                This service performs the plate and plexer experiments used\nwhen crossing or mutating phage strains, i.e. performing a\nvirtual experiment\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPlate\n                            \n                            \n                                performPlexer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/experiment.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPlate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatePlate(plate: PlateInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            With valid input for the plate, calls the backend to generate\na new plate that is displayed in the lab room\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        plate\n                                                        \n                                                                    PlateInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninformation needed to generate the new plate\nIncludes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nnewly generate plate with info about parents and (is plate full or list of small and large plaques)\nor error \"numPhage not set\" if number of phage isn't set\nor error \"Error finding the specified phage 1/2\" if phage not in database\nor error message for other server error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            performPlexer\n                            \n                            \n                        \n                    \n                \n                \n                    \nperformPlexer(data: PlexerInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            With valid input, call the backend to generate valid results for the plexer\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    PlexerInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninformation needed to generate the\nplexer results\nInputs a list of phage IDs for the rows and columns, E. coli\nlawn type, location, specials, individual plexer plate capacity\nand scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe results of the plexer as a 2D array\nwere each cell in the array represents a plate and has\nis plate full or counts of small/large plaques\nor error if server error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/cricket'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PlateInput, PlateResults, PlexerInput } from '../../interfaces';\n\n/**\n * This service performs the plate and plexer experiments used\n * when crossing or mutating phage strains, i.e. performing a\n * virtual experiment\n */\n@Injectable()\nexport class ExperimentService {\n\n  private _baseURL = '/api/cricket';\n\n  constructor(private _http: HttpClient) { }\n\n  /**\n   * With valid input for the plate, calls the backend to generate\n   * a new plate that is displayed in the lab room\n   *\n   * @param {PlateInput} plate - information needed to generate the new plate\n   * - Includes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n   *\n   * @returns {Observable}\n   * - newly generate plate with info about parents and (is plate full or list of small and large plaques)\n   * - or error \"numPhage not set\" if number of phage isn't set\n   * - or error \"Error finding the specified phage 1/2\" if phage not in database\n   * - or error message for other server error\n   */\n  createPlate(plate: PlateInput): Observable{\n    var res = this._http\n    .post(`${this._baseURL}/plate`, plate)\n    return res;\n  }\n\n  /**\n   * With valid input, call the backend to generate valid results for the plexer\n   *\n   * @param {PlexerInput} data - information needed to generate the\n   * plexer results\n   * - Inputs a list of phage IDs for the rows and columns, E. coli\n   * lawn type, location, specials, individual plexer plate capacity\n   * and scenario data\n   *\n   * @returns {Observable}\n   * - the results of the plexer as a 2D array\n   * were each cell in the array represents a plate and has\n   * is plate full or counts of small/large plaques\n   * - or error if server error\n   */\n  performPlexer(data: PlexerInput): Observable{\n    // data will have rowPhage, colPhage, lawn type, location, specials, capacity, scenarioData\n    var res = this._http\n    .post(`${this._baseURL}/plexer`, data);\n    return res;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/forget-password/forget-password.component.ts\n\n\n    \n        Description\n    \n    \n        If user forgets their password, they can enter\nthere email address. If there is an account with the email address,\nan email is sent with a link that allows user to reset their password\nThis component is for entering email address and\ninforming if email address was valid and reset * password email was successfully sent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                forget-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./forget-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                email\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                sendForget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/forget-password/forget-password.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from authentication service to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendForget\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendForget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            After submitting form, reset success and error messages, send email to the server, and wait for response\n\nIf password reset email successfully set, success message is updated\nIf there was an error (server error, email doesn't below to any user), error message is set with description of the error\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:31\n                            \n                        \n\n                \n                    \n                        User's email to check if an account exists\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:23\n                            \n                        \n\n                \n                    \n                        Possible error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:35\n                            \n                        \n\n                \n                    \n                        Authentication service subscription\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:27\n                            \n                        \n\n                \n                    \n                        Message when reset password email was successfully sent\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * If user forgets their password, they can enter\n * there email address. If there is an account with the email address,\n * an email is sent with a link that allows user to reset their password\n *\n * This component is for entering email address and\n * informing if email address was valid and reset * password email was successfully sent\n */\n@Component({\n    selector: 'forget-pswd',\n    templateUrl: './forget-password.template.html'\n})\nexport class ForgetPasswordComponent implements OnDestroy{\n  /**\n   * Possible error messages\n   */\n  private errorMessage: string = '';\n  /**\n   * Message when reset password email was successfully sent\n   */\n  private successMessage: string = '';\n  /**\n   * User's email to check if an account exists\n   */\n  private email: string;\n  /**\n   * Authentication service subscription\n   */\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService) { }\n\n  /**\n   * After submitting form, reset _success_ and _error_ messages, send email to the server, and wait for response\n   *\n   * - If password reset email successfully set, _success_ message is updated\n   * - If there was an error (server error, email doesn't below to any user), _error_ message is set with description of the error\n   */\n    sendForget() {\n      this.successMessage = '';\n      this.errorMessage = '';\n      let body = {email: this.email};\n        this.subscription = this._authenticationService\n          .forgetPassword(body)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  /**\n   * When destroying component, unsubscribe from authentication service to prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Forget Password?\n    \n    Email\n    \n      \n    Submit\n  {{ successMessage }}\n  {{ errorMessage }}\n      \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forget Password?        Email              Submit  {{ successMessage }}  {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fridge.html":{"url":"interfaces/Fridge.html","title":"interface - Fridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Fridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                A user/scenario fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessGranted\n                                \n                                \n                                        guesses\n                                \n                                \n                                        scenarioDetails\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        strains\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Has access already been granted for this user/scenario;\nFridges for each scenario are the same when access not granted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Deletion guesses\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioDetails\n                                    \n                                \n                                \n                                    \n                                        scenarioDetails:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information for this specific user/scenario needed when\nsubmitting the plexer or generating a new plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario id this fridge belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     FridgePhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FridgePhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id for owner of this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FridgePhage.html":{"url":"interfaces/FridgePhage.html","title":"interface - FridgePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FridgePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage stored in the fridge\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                            Optional\n                                        numParents\n                                \n                                \n                                            Optional\n                                        parents\n                                \n                                \n                                        phageType\n                                \n                                \n                                            Optional\n                                        submitted\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description for this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numParents\n                                    \n                                \n                                \n                                    \n                                        numParents:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If user phage, number of parents in the cross to create this phage;\nused to check if one of the parents no longer exists\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If a user phage, the phage used in the cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phageType\n                                    \n                                \n                                \n                                    \n                                        phageType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage type; one of \"reference\", \"unknown\", and \"user\" depending\non who created it and if mutation state is known\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                    \n                                \n                                \n                                    \n                                        submitted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For user phage, should this phage be graded\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenotypePhage.html":{"url":"interfaces/GenotypePhage.html","title":"interface - GenotypePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GenotypePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage on the lab room plate that will be saved to\nthe fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                        parents\n                                \n                                \n                                        shifts\n                                \n                                \n                                            Optional\n                                        src\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop locations of deletion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage used in cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shifts\n                                    \n                                \n                                \n                                    \n                                        shifts:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                    \n                                \n                                \n                                    \n                                        src:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Where the phage is being dragged from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/help/help.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                help\n            \n\n            \n                styleUrls\n                help.style.css\n            \n\n\n\n            \n                templateUrl\n                ./help.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/help/help.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'help',\n  templateUrl: './help.template.html',\n  styleUrls: ['./help.style.css']\n})\n\nexport class HelpComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n\n  Help\nInformation coming soon\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  HelpInformation coming soon'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelpModule.html":{"url":"modules/HelpModule.html","title":"module - HelpModule","body":"\n                   \n\n\n\n\n  Modules\n  HelpModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_HelpModule_imports\n\n\n\n\nHelpComponent\n\nHelpComponent\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/help/help.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HelpComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HelpRoutes } from './help.routes';\nimport { HelpComponent } from './help.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    //RouterModule.forChild(HelpRoutes)\n  ],\n  declarations: [\n    HelpComponent\n  ]\n})\nexport class HelpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        The home landing page when going to the website\nMainly a view component, but some aspects are dependent\non if a user is logged in and the user role\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                styleUrls\n                home.style.css\n            \n\n\n\n            \n                templateUrl\n                ./home.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/home/home.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            When destroying the component, unset the user variable\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            When intializing component, get the logged in user, if any\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/home/home.component.ts:23\n                            \n                        \n\n                \n                    \n                        The logged in user, if any\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\n\nimport { User } from '../interfaces/user.interface';\n\n/**\n * The home landing page when going to the website\n *\n * Mainly a view component, but some aspects are dependent\n * on if a user is logged in and the user role\n */\n@Component({\n  selector: 'home',\n  templateUrl: './home.template.html',\n  styleUrls: ['./home.style.css']\n})\n\nexport class HomeComponent implements OnInit, OnDestroy{\n  /**\n   * The logged in user, if any\n   */\n  private user: User;\n\n  constructor(private _authenticationService: AuthenticationService){}\n\n  /**\n   * When intializing component, get the logged in user, if any\n   */\n  ngOnInit(){\n    this.user = this._authenticationService.getUser();\n  }\n\n  /**\n   * When destroying the component, unset the user variable\n   */\n  ngOnDestroy(){\n    this.user = undefined;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Welcome to Crick et al.\n\n    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.\n    \n    \n      \n        Instructor Page\n        Administrator Page\n      \n      \n        Sign out\n      \n    \n    \n    \n      \n        Sign in\n        \n      \n        Sign up\n      \n    \n    \n\n  \n    \n  \n\n\n  Go to Scenarios\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome to Crick et al.    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.                      Instructor Page        Administrator Page                    Sign out                                Sign in                      Sign up                        Go to Scenarios'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingRoomComponent.html":{"url":"components/LandingRoomComponent.html","title":"component - LandingRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/landing-room/landing-room.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows the scenario details including\n\npurpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\nrelevance - why the scenario is relevant for learning and future scenarios\nstarting point - description of the phage students start the scenario with\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                landing-room\n            \n\n\n\n\n            \n                templateUrl\n                ./landing-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scenario\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                            Component contructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular router\n\n                                                        \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The current URL route to get scenario id\n\n                                                        \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get scenario information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            When destroying the component, unsubscribe if necessary to\nprevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\nGet the details for scenarios\nIf error, go back to home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:23\n                            \n                        \n\n                \n                    \n                        The current scenario we are viewing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                        Subscription to the getScenario method of scenario service\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ScenarioService } from '../../scenario.service';\nimport { Scenario } from '../../../interfaces';\n\n/**\n * This component shows the scenario details including\n * 1. purpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\n * 2. relevance - why the scenario is relevant for learning and future scenarios\n * 3. starting point - description of the phage students start the scenario with\n */\n@Component({\n  selector: 'landing-room',\n  templateUrl: './landing-room.template.html'\n})\n\nexport class LandingRoomComponent implements OnInit, OnDestroy {\n\n  /**\n   * The current scenario we are viewing\n   */\n  scenario: Scenario;\n  /**\n   * Subscription to the getScenario method of scenario service\n   */\n  private subscription: any;\n\n  /**\n   * Component contructor\n   * @param {Router} _router Angular router\n   * @param {ActivatedRoute} _route The current URL route to get scenario id\n   * @param {ScenarioService} _scenarioService Service to get scenario information\n   */\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _scenarioService: ScenarioService){\n\n  }\n\n  /**\n   * Initialize the component\n   * 1. Get scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\n   * 2. Get the details for scenarios\n   * If error, go back to home page\n   */\n  ngOnInit(){\n    let scenId = this._route.parent.snapshot.paramMap.get('scenId');\n    this.subscription = this._scenarioService\n      .getScenario(scenId)\n      .subscribe(\n      scenario => {\n        this.scenario = scenario;\n      },\n      error => this._router.navigate(['/'])\n    );\n  }\n\n  /**\n   * When destroying the component, unsubscribe if necessary to\n   * prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{scenario.label}} \n  Purpose\n  {{scenario.purpose}}\n\n  Relevance\n  {{scenario.relevance}}\n\n  Starting Point\n  {{scenario.startingPoint}}\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{scenario.label}}   Purpose  {{scenario.purpose}}  Relevance  {{scenario.relevance}}  Starting Point  {{scenario.startingPoint}}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists all available scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario-list\n            \n\n\n\n\n            \n                templateUrl\n                ./list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                scenarios\n                            \n                            \n                                    Private\n                                sSubscription\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from service if necessary\nto prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initialize the component by using the service to fetch the\nlist of scenarios\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:24\n                            \n                        \n\n                \n                    \n                        list of available scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object of logged in user, if available\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { ScenarioService } from '../scenario.service';\n\nimport { User } from '../../interfaces/user.interface';\nimport { Scenario } from '../../interfaces/scenario.interface';\n\n/**\n * Component which lists all available scenarios\n */\n@Component({\n    selector: 'scenario-list',\n    templateUrl: './list.template.html'\n})\nexport class ListComponent implements OnInit, OnDestroy{\n  /**\n   * User object of logged in user, if available\n   */\n    user: User;\n  /**\n  * list of available scenarios\n  */\n    scenarios: Scenario[];\n    errorMessage: string;\n  private sSubscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService, private _scenarioService: ScenarioService) {\n\n    }\n\n  /**\n   * Initialize the component by using the service to fetch the\n   * list of scenarios\n   */\n    ngOnInit() {\n      this.user = this._authenticationService.getUser();\n      this.sSubscription = this._scenarioService.listScenarios()\n        .subscribe((scenarios) => {\n        this.scenarios = scenarios\n      });\n    }\n\n  /**\n   * When destroying component, unsubscribe from service if necessary\n   * to prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.sSubscription)\n    this.sSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  Available Scenarios\n  \n    \n      {{scenario.label}}\n    \n    \n  \n  \n    \n      Sign in or Sign up to see scenarios.\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Available Scenarios            {{scenario.label}}                      Sign in or Sign up to see scenarios.  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationComponent.html":{"url":"components/LocationComponent.html","title":"component - LocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/location.component.ts\n\n\n    \n        Description\n    \n    \n        This is a view component which hosts the location\ntab selection navigator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                location\n            \n\n            \n                styleUrls\n                location.style.css\n            \n\n\n\n            \n                templateUrl\n                ./location.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * This is a view component which hosts the location\n * tab selection navigator\n */\n@Component({\n  selector: 'location',\n  templateUrl: './location.template.html',\n  styleUrls: ['./location.style.css']\n})\n\nexport class LocationComponent {\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n        \n          \n             \n            Info\n            \n            \n            \n              \n            Lab\n          \n            \n            \n              \n            Plexer\n          \n            \n            \n              \n            Model\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                               Info                                                              Lab                                                            Plexer                                                            Model                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FridgeComponent\n                            \n                            \n                                LabRoomComponent\n                            \n                            \n                                LandingRoomComponent\n                            \n                            \n                                LocationComponent\n                            \n                            \n                                ModelRoomComponent\n                            \n                            \n                                PhageDialogComponent\n                            \n                            \n                                PlexerRoomComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                PhageDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ExperimentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { LocationRoutes } from './location.routes';\n\nimport { ExperimentService } from './experiment.service';\n\nimport { FridgeComponent } from '../fridge/fridge.component';\nimport { PhageDialogComponent } from '../fridge/phage-dialog.component';\n\nimport { LocationComponent } from './location.component';\nimport { LandingRoomComponent } from './landing-room/landing-room.component';\nimport { LabRoomComponent } from './lab-room/lab-room.component';\nimport { PlexerRoomComponent } from './plexer-room/plexer-room.component';\nimport { ModelRoomComponent } from './model-room/model-room.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(LocationRoutes)\n  ],\n  declarations: [\n    FridgeComponent,\n    PhageDialogComponent,\n    LocationComponent,\n    LabRoomComponent,\n    PlexerRoomComponent,\n    ModelRoomComponent,\n    LandingRoomComponent\n  ],\n   entryComponents: [\n    PhageDialogComponent\n  ],\n  providers: [\n    ExperimentService\n  ]\n})\nexport class LocationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggedInGuard.html":{"url":"injectables/LoggedInGuard.html","title":"injectable - LoggedInGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoggedInGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/logged-in.guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Router guard that makes sure only logged in users can access the page and all child pages\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/logged-in.guard.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Determines if user can activate (visit) a page\nbased on if a user is logged in\nIf not logged in, sets the redirect url to take user back to this page after logging in and\nsends the user to the sign in page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ncurrent URL\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state including the url trying to acess\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is logged in\nfalse if user is not logged in\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Determines if user can activate all child/sub pages depending if user is logged in\nOnly logged in users can activate the pages\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Router guard that makes sure only logged in users can access the page and all child pages\n */\n@Injectable()\nexport class LoggedInGuard implements CanActivate, CanActivateChild {\n\n  constructor(\n    private _authenticationService: AuthenticationService,\n    private _router: Router) {}\n\n  /**\n   * Determines if user can activate (visit) a page\n   * based on if a user is logged in\n   *\n   * If not logged in, sets the redirect url to take user back to this page _after_ logging in and\n   * sends the user to the sign in page\n   *\n   * @param {ActivatedRouteSnapshot} route - current URL\n   * @param {RouterStatesnapshot} state - router state including the url trying to acess\n   *\n   * @returns {boolean} - `true` if user is logged in\n   * - `false` if user is not logged in\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n     state: RouterStateSnapshot\n  ): boolean {\n    let url: string = state.url;\n\n    let isLoggedIn: boolean = this._authenticationService.isLoggedIn();\n    if(isLoggedIn)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['authentication/signin']);\n      return false;\n    }\n  }\n\n  /**\n   * Determines if user can activate all child/sub pages depending if user is logged in\n   *\n   * Only logged in users can activate the pages\n   */\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelRoomComponent.html":{"url":"components/ModelRoomComponent.html","title":"component - ModelRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/model-room/model-room.component.ts\n\n\n    \n        Description\n    \n    \n        This room is used for students to submit their deletion guesses\nfor phage\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                model-room\n            \n\n            \n                styleUrls\n                model-room.style.css\n            \n\n\n\n            \n                templateUrl\n                ./model-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                geneAr\n                            \n                            \n                                    Private\n                                guesses\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                keys\n                            \n                            \n                                    Private\n                                scenarioId\n                            \n                            \n                                    Private\n                                stepSize\n                            \n                            \n                                    Private\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockClass\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveData\n                            \n                            \n                                toggleBlock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/model-room/model-room.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBlockClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBlockClass(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Get the CSS classes for a strain guess block\nBlock indicates wheater user thinks that section of the chromosome\nis deleted in the strain\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'guess-block btn p-0': boolean; 'btn-outline-secondary': boolean; 'bg-dark': any; }\n\n                            \n                                \n                                    applicable CSS classes in the form\n{'class': boolean, ...}\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet user id\nGet the scenario id from parent URL\nGet user guesses from scenario service (set by fridge)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveData\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Saves the guesses to the backend/database using the service\nCalled on (click) of Save Button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlock\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleBlock(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Toggle block guess from true to false OR false to true\nCalled on (click) of the block\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _width:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:54\n                            \n                        \n\n                \n                    \n                        CSS width of each block dependent on length of gene and step size\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:50\n                            \n                        \n\n                \n                    \n                        Potential backend error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geneAr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geneAr:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            guesses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guesses:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:26\n                            \n                        \n\n                \n                    \n                        Current user guesses as object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:59\n                            \n                        \n\n                \n                    \n                        Boolean state variable used to make unsubscribing from\nmultiple services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keys:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of strain numbers included\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarioId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarioId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:42\n                            \n                        \n\n                \n                    \n                        Scenario code\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stepSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:38\n                            \n                        \n\n                \n                    \n                        Size of each block\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:46\n                            \n                        \n\n                \n                    \n                        User id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\n\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../scenario.service';\nimport { ScenarioGlobals } from '../../scenario.globals';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * This room is used for students to submit their deletion guesses\n * for phage\n */\n@Component({\n    selector: 'model-room',\n    templateUrl: './model-room.template.html',\n  styleUrls: ['./model-room.style.css']\n})\n\nexport class ModelRoomComponent implements OnInit, OnDestroy {\n\n  /**\n   * Current user guesses as object\n   */\n  private guesses: any;\n  /**\n   * Array of strain numbers included\n   */\n  private keys: number[];\n  /**\n   *\n   */\n  private geneAr: number[];\n  /**\n   * Size of each block\n   */\n  private stepSize: number;\n  /**\n   * Scenario code\n   */\n  private scenarioId: string;\n  /**\n   * User id\n   */\n  private userId: number;\n  /**\n   * Potential backend error messages\n   */\n  private errorMessage: string = '';\n  /**\n   * CSS width of each block dependent on length of gene and step size\n   */\n  private _width: string;\n  /**\n   * Boolean state variable used to make unsubscribing from\n   * multiple services easier\n   */\n  private isDestroyed$: Subject;\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _authenticationService: AuthenticationService,\n              private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n\n    this.stepSize = ScenarioGlobals.deletionGuessLength;\n    this.geneAr = [];\n    let nBlocks: number = Math.ceil(ScenarioGlobals.geneLength/this.stepSize);\n    for(let i = 0; i  {\n      this.guesses = dels;\n\n      this.keys = Object.keys(dels).map((k)=> {return Number.parseInt(k);});\n      if(this.keys.length === 0){\n        this.errorMessage = 'No phage available for modelling'\n      } else {\n        this.errorMessage = '';\n      }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * Destroy the component by unsubscribing\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  /**\n   * Get the CSS classes for a strain guess block\n   * Block indicates wheater user thinks that section of the chromosome\n   * is deleted in the strain\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   *\n   * @returns {Object} applicable CSS classes in the form\n   * `{'class': boolean, ...}`\n   */\n  getBlockClass(strain: number, pos: number){\n    let posGuess = this.guesses[strain][pos];\n    return {\n      'guess-block btn p-0': true,\n      'btn-outline-secondary': !posGuess, // inactive\n      'bg-dark': posGuess // active\n    }\n  }\n\n  /**\n   * Toggle block guess from true to false OR false to true\n   *\n   * Called on `(click)` of the block\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   */\n  toggleBlock(strain: number, pos: number){\n    let c = this.guesses[strain][pos];\n    this.guesses[strain][pos] = !c;\n  }\n\n  /**\n   * Saves the guesses to the backend/database using the service\n   *\n   * Called on `(click)` of Save Button\n   */\n  saveData(){\n    // clear error message beforehand\n    this.errorMessage = '';\n    // use service and save data (as a string)\n    let out = JSON.stringify(this.guesses)\n    this._scenarioService\n      .saveDeletions(this.guesses, this.userId, this.scenarioId)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((dat)=>{\n      this.guesses = JSON.parse(dat);\n      this._scenarioService.setScenario(null, dat);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{errorMessage}}\n   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">\n      Save\n  \n \n 0\" class=\"row w-100\" id=\"modeller\">\n  \n    \n      {{phage+1}}\n    \n  \n  \n    \n      \n         \n      \n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{errorMessage}}   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">      Save    0\" class=\"row w-100\" id=\"modeller\">            {{phage+1}}                                         '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/nav/nav.component.ts\n\n\n    \n        Description\n    \n    \n        Navigation bar at the top of the site\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-nav\n            \n\n            \n                styleUrls\n                nav.style.css\n            \n\n\n\n            \n                templateUrl\n                ./nav.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing, if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Initiate the component by getting the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription stream for the authetnication service\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object used to determine if profile link should be\nincluded in the nav bar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Navigation bar at the top of the site\n */\n@Component({\n    selector: 'cricket-nav',\n    templateUrl: './nav.template.html',\n    styleUrls: ['./nav.style.css']\n})\nexport class NavComponent implements OnInit, OnDestroy {\n\n  /**\n   * User object used to determine if profile link should be\n   * included in the nav bar\n   */\n  private user: User;\n  /**\n   * Subscription stream for the authetnication service\n   */\n  private subscription: any;\n\n  constructor(private _authService: AuthenticationService) {\n    }\n\n  /**\n   * Initiate the component by getting the current user\n   */\n  ngOnInit(){\n    this.subscription = this._authService.getUser$\n    .subscribe((res)=>{\n      this.user = res\n    });\n  }\n\n  /**\n   * Destory the component by unsubscribing, if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n    \n  \n-->\n\n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n      \n        Help\n      \n      \n        Profile\n        \n          Sign out\n        \n      \n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Cricket                              Scenarios            -->          Cricket                              Scenarios                    Help                    Profile                  Sign out                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotAuthComponent.html":{"url":"components/NotAuthComponent.html","title":"component - NotAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/not-auth/not-auth.component.ts\n\n\n    \n        Description\n    \n    \n        A basic view component when user tries to access an admin\npage but does not have admin access\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-auth\n            \n\n\n\n\n            \n                templateUrl\n                ./not-auth.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A basic view component when user tries to access an admin\n * page but does not have admin access\n */\n@Component({\n  selector: 'not-auth',\n  templateUrl: './not-auth.template.html'\n})\n\nexport class NotAuthComponent{\n\n}\n\n    \n\n    \n        \n  \n    NOT AUTHORIZED\n    Return\n      Home\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NOT AUTHORIZED    Return      Home      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        When URL goes to a page that doesn't exist;\nThis is simple, visual component needed to get the template\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/page-not-found/page-not-found.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * When URL goes to a page that doesn't exist;\n * This is simple, visual component needed to get the template\n */\n@Component({\n  selector: 'page-not-found',\n  templateUrl: './page-not-found.template.html',\n})\n\nexport class PageNotFoundComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n  Page Not Found\n\n  Go Back Home\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Page Not Found  Go Back Home'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PeopleListNamesPipe.html":{"url":"pipes/PeopleListNamesPipe.html","title":"pipe - PeopleListNamesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PeopleListNamesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/people-list-names.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format a list of user's or students frist and last name as \"firstName lastName\"\n\nWhen reverse is true, format as \"lastName, firstName\"\nAble to handle when only first or last name is set\n\nUsage: {{ peopleList | peopleListNames:isReverse }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            Normal output :  \n[{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mickey Mouse, Donald Duck\"\n                        \n                        \n                            Reverse ouput :  \n[{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mouse, Mickey; Duck, Donald\"\n                        \n                        \n                            Missing names :  \n[{firstName: undefined, lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: undefined}] becomes \"Mouse, Donald\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        peopleListNames\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(personList: any[], reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/people-list-names.pipe.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personList\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format a list of user's or students frist and last name as \"firstName lastName\"\n * - When reverse is true, format as \"lastName, firstName\"\n * - Able to handle when only first or last name is set\n *\n * **Usage:** `{{ peopleList | peopleListNames:isReverse }}`\n *\n * @example Normal output :  \n * [{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mickey Mouse, Donald Duck\"\n * @example Reverse ouput :  \n * [{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mouse, Mickey; Duck, Donald\"\n * @example Missing names :  \n * [{firstName: undefined, lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: undefined}] becomes \"Mouse, Donald\"\n */\n@Pipe({name: 'peopleListNames'})\nexport class PeopleListNamesPipe implements PipeTransform {\n\n  transform(personList: any[], reverse: boolean): string {\n    let out = '';\n    for(let person of personList){\n      let fName: string = person.firstName || '';\n      let lName: string = person.lastName || '';\n      if(out !== '' && (fName !== '' || lName !== '')){\n        out += (reverse ? '; ' : ', ');\n      }\n    if(reverse){\n      out += lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n      } else {\n    out += fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n      }\n    }// end for\n    return out\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PersonNamePipe.html":{"url":"pipes/PersonNamePipe.html","title":"pipe - PersonNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PersonNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/person-name.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format a user's or students frist and last name as \"firstName lastName\"\n\nWhen reverse is true, format as \"lastName, firstName\"\nAble to handle when only first or last name is set\n\nUsage: {{ person | personName:isReverse }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            Normal output :  \n{firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mickey Mouse\"\n                        \n                        \n                            Reverse output :  \n{firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mouse, Mickey\"\n                        \n                        \n                            First name only :  \n{firstName: \"Mickey\", lastName: undefined} becomes \"Mickey\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        personName\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(person: any, reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/person-name.pipe.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format a user's or students frist and last name as \"firstName lastName\"\n * - When reverse is true, format as \"lastName, firstName\"\n * - Able to handle when only first or last name is set\n *\n * **Usage:** `{{ person | personName:isReverse }}`\n *\n * @example Normal output :  \n * {firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mickey Mouse\"\n * @example Reverse output :  \n * {firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mouse, Mickey\"\n * @example First name only :  \n * {firstName: \"Mickey\", lastName: undefined} becomes \"Mickey\"\n*/\n@Pipe({name: 'personName'})\nexport class PersonNamePipe implements PipeTransform {\n\n  transform(person: any, reverse: boolean): string {\n    let fName: string = person.firstName || '';\n    let lName: string = person.lastName || '';\n  if(reverse){\n    return lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n  } else {\n    return fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n  }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Phage.html":{"url":"interfaces/Phage.html","title":"interface - Phage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Phage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Base phage interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        strainNum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MongoDB object ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strainNum\n                                    \n                                \n                                \n                                    \n                                        strainNum:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Location in fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageDeletionsPipe.html":{"url":"pipes/PhageDeletionsPipe.html","title":"pipe - PhageDeletionsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageDeletionsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-deletions.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's deletions (if any)\nUsage: {{ deletionlist | phageDeletions }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One deletion:  \n[50,145] becomes \"50 - 145\"\n                        \n                        \n                            Multiple deletions:  \n[50, 140, 190, 260] becomes \"50 - 140, 190 - 260\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageDeletions\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(deletion: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-deletions.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deletion\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format the textual presentation of a phage strain's deletions (if any)\n *\n * **Usage:** `{{ deletionlist | phageDeletions }}`\n *\n * @example One deletion:  \n * [50,145] becomes \"50 - 145\"\n * @example Multiple deletions:  \n * [50, 140, 190, 260] becomes \"50 - 140, 190 - 260\"\n */\n@Pipe({name: 'phageDeletions'})\nexport class PhageDeletionsPipe implements PipeTransform {\n\n  transform(deletion: number[]): string {\n    let out = '';\n    let mLength = (deletion.length % 2 === 0 ? deletion.length : deletion.length -1);\n\n    for(let i = 0; i  1 ? ', ' : '');\n      out += deletion[i] + ' - ' + deletion[i+1];\n    }\n\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhageDialogComponent.html":{"url":"components/PhageDialogComponent.html","title":"component - PhageDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhageDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/fridge/phage-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Modal dialog box for individual phage strains\nUsed to edit phage comment, view phage parents, or delete phage\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                phage-dialog-content\n            \n\n\n\n\n            \n                templateUrl\n                ./phage-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/fridge/phage-dialog.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                        The phage we are viewing\n\n                            \n                            Type:    FridgePhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\nimport { FridgePhage } from '../../interfaces/phage.interface';\n\n/**\n * Modal dialog box for individual phage strains\n * Used to edit phage comment, view phage parents, or delete phage\n */\n@Component({\n  selector: 'phage-dialog-content',\n  templateUrl: './phage-dialog.template.html'\n})\nexport class PhageDialogComponent {\n  /**\n   * The phage we are viewing\n   */\n  @Input() phage: FridgePhage;\n\n  constructor(public activeModal: NgbActiveModal) {\n  }\n\n}\n\n    \n\n    \n        \n  Strain {{phage.strainNum + 1}}\n  \n        &times;\n      \n\n\n  \n    \n      Type\n      \n        \n      \n    \n    \n    \n      Comment\n      \n        \n      \n    \n    \n    \n      Submitted\n      \n        \n      \n    \n    \n\n     0\" id=\"viewParents\" class=\"row form-group mb-1\">\n      Parents\n      \n        {{phage.parents | phageParents:phage.numParents}}\n      \n    \n    \n  \n\n\n\n  Delete\n  Cancel\n  Save\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Strain {{phage.strainNum + 1}}          ×                  Type                                      Comment                                      Submitted                                 0\" id=\"viewParents\" class=\"row form-group mb-1\">      Parents              {{phage.parents | phageParents:phage.numParents}}                  Delete  Cancel  Save'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhageDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageGuessesPipe.html":{"url":"pipes/PhageGuessesPipe.html","title":"pipe - PhageGuessesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageGuessesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-guesses.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of the deletion guessses for\na user's phage strain; uses a scenario global variable deletionGuessLength to determine\nthe ranges\nUsage: {{ guessList | phageGuesses }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One deletion guess:  \n[false, true, true, true, false, ...] becomes \"10-40\"\n                        \n                        \n                            No deletion guesses:  \n[false, ..., false] becomes \"None\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageGuesses\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(guesses: boolean[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-guesses.pipe.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        guesses\n                                                        \n                                                                    boolean[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ScenarioGlobals } from '../scenario/scenario.globals';\n\n/**\n * Format the textual presentation of the deletion guessses for\n * a user's phage strain; uses a [scenario global]{@link\n * ScenarioGlobals} variable `deletionGuessLength` to determine\n * the ranges\n *\n * **Usage:** `{{ guessList | phageGuesses }}`\n *\n * @example One deletion guess:  \n * [false, true, true, true, false, ...] becomes \"10-40\"\n * @example No deletion guesses:  \n * [false, ..., false] becomes \"None\"\n */\n\n@Pipe({name: 'phageGuesses'})\nexport class PhageGuessesPipe implements PipeTransform {\n\n  transform(guesses: boolean[]): string {\n    let stepSize = ScenarioGlobals.deletionGuessLength;\n    let out = '';\n    let x=-1;\n    for(let i in guesses){\n      let y: number = +i;\n      // start new deletion\n      if(x = 0 && guesses[y] === false){\n        let z = (stepSize * y);\n        out += (out === '' ? '' : ', ');\n        out += x + ' - ' + z;\n        x = -1;\n      }\n    }\n    // check for the last possible deletion\n    if(x != -1){\n      out += (out === '' ? '' : ', ');\n      out += x + ' - ' + ScenarioGlobals.geneLength;\n    }\n    if(out === ''){\n      return 'None';\n    } else {\n    return out;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageMutationsPipe.html":{"url":"pipes/PhageMutationsPipe.html","title":"pipe - PhageMutationsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageMutationsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-mutations.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's frameshift mutations (if any)\nUsage: {{ mutationList | phageMutations }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One negative frameshift mutation:  \n[-87] becomes \"-1 at 87\"\n                        \n                        \n                            One positive frameshift mutation:  \n[163] becomes \"+1 at 163\"\n                        \n                        \n                            Multiple frameshift mutations:  \n[32, -208] becomes \"+1 at 32, -1 at 208\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageMutations\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(mutations: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-mutations.pipe.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mutations\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format the textual presentation of a phage strain's frameshift mutations (if any)\n *\n * **Usage:** `{{ mutationList | phageMutations }}`\n *\n * @example One negative frameshift mutation:  \n * [-87] becomes \"-1 at 87\"\n * @example One positive frameshift mutation:  \n * [163] becomes \"+1 at 163\"\n * @example Multiple frameshift mutations:  \n * [32, -208] becomes \"+1 at 32, -1 at 208\"\n */\n@Pipe({name: 'phageMutations'})\nexport class PhageMutationsPipe implements PipeTransform {\n\n  transform(mutations: number[]): string {\n    let out = '';\n    for(let x of mutations){\n      out += (out === '' ? '' : ', ');\n      let y = (x > 0 ? '+1' : '-1');\n      let z = Math.abs(x);\n      out += y + ' at ' + z;\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageParentsPipe.html":{"url":"pipes/PhageParentsPipe.html","title":"pipe - PhageParentsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageParentsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-parents.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's parents\n(if any) when viewing the dialog box for a phage\nThe numParents variable is used to determine if one of the\nparents had been deleted from the database when parents.length != numParents\nNote: the phage strainNum are 0-based but UI is 1-based so\nthe strain number is adjusted\nUsage: {{parentsList | phageParents:numParents}}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One parent :  \n{parents: [{id: 'id1', strainNum: '4'}], numParents: 1} becomes \"Strain 5\"\n                        \n                        \n                            Two parents:  \n{parents: [{id: 'id1', strainNum: 4}, {id: 'id2', strainNum: 10}], numParents: 2} becomes \"Strains 5 and 11\"\n                        \n                        \n                            Two parents but missing one:  \n{parents: [{id: 'id3', strainNum: 8}], numParents: 2} becomes \"Strains 9 and ?\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageParents\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(parents: Phage[], numParents: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-parents.pipe.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parents\n                                                        \n                                                                    Phage[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        numParents\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Phage } from '../interfaces/phage.interface';\n\n/**\n * Format the textual presentation of a phage strain's parents\n * (if any) when viewing the dialog box for a phage\n *\n * The `numParents` variable is used to determine if one of the\n * parents had been deleted from the database when `parents.length != numParents`\n *\n * Note: the phage `strainNum` are 0-based but UI is 1-based so\n * the strain number is adjusted\n *\n * **Usage:** `{{parentsList | phageParents:numParents}}`\n *\n * @example One parent :  \n * {parents: [{id: 'id1', strainNum: '4'}], numParents: 1} becomes \"Strain 5\"\n * @example Two parents:  \n * {parents: [{id: 'id1', strainNum: 4}, {id: 'id2', strainNum: 10}], numParents: 2} becomes \"Strains 5 and 11\"\n * @example Two parents but missing one:  \n * {parents: [{id: 'id3', strainNum: 8}], numParents: 2} becomes \"Strains 9 and ?\"\n */\n@Pipe({name: 'phageParents'})\nexport class PhageParentsPipe implements PipeTransform {\n\n  transform(parents: Phage[], numParents: number): string {\n    let out = '';\n    if(numParents === undefined){\n      numParents = parents.length\n    }\n    if(parents.length === 0){\n      return out;\n    }\n    let sorted: Phage[] = parents.sort((n1, n2)=>{return n1.strainNum - n2.strainNum});\n    let nums = sorted.map((phage)=>{return (phage.strainNum+1).toString()});\n\n    if(sorted.length === 1 && numParents === 1){\n      out = 'Strain ' + nums[0];\n    } else if(sorted.length === 1 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ?';\n    } else if(sorted.length === 2 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ' + nums[1];\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateInput.html":{"url":"interfaces/PlateInput.html","title":"interface - PlateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to create a new plate\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        phage1\n                                \n                                \n                                        phage2\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phage1\n                                    \n                                \n                                \n                                    \n                                        phage1:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phage2\n                                    \n                                \n                                \n                                    \n                                        phage2:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateResults.html":{"url":"interfaces/PlateResults.html","title":"interface - PlateResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Data from server representing the lab room plate\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        full\n                                \n                                \n                                        genotypes\n                                \n                                \n                                        largePlaque\n                                \n                                \n                                        parents\n                                \n                                \n                                        smallPlaque\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        full\n                                    \n                                \n                                \n                                    \n                                        full:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is the plate over capacity?\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genotypes\n                                    \n                                \n                                \n                                    \n                                        genotypes:     _genotype[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _genotype[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of genotypes of the phage of the plate; several individual\nphage from \"smallPlaque\" and \"largePlaque\" can correspond to the\nsame genotype\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        largePlaque\n                                    \n                                \n                                \n                                    \n                                        largePlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    mutatnt phenotype phage on the plate; each number indicates\nthe index of the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage used to create this plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smallPlaque\n                                    \n                                \n                                \n                                    \n                                        smallPlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    WT-phenotype phage on the plate; each number indicates the index\nof the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlexerInput.html":{"url":"interfaces/PlexerInput.html","title":"interface - PlexerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlexerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to submit the plexer\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colPhage\n                                \n                                \n                                        rowPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colPhage\n                                    \n                                \n                                \n                                    \n                                        colPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the columns of the plexer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowPhage\n                                    \n                                \n                                \n                                    \n                                        rowPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the rows of the plexer\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  ProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/profile/profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                UpdatePasswordComponent\n                            \n                            \n                                UserProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProfileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ProfileRoutes } from './profile.routes';\nimport { ProfileService } from './profile.service';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ProfileRoutes)\n  ],\n  declarations: [\n    UserProfileComponent,\n    UpdatePasswordComponent\n  ],\n  providers: [\n    ProfileService\n  ]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Functions which communicate to backend to allow\nusers to update their profile and/or change the password\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editProfile\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \neditProfile(userId: number, details: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Edit details about the user profile including\n\nNme\nEmail address\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of the logged in user\n\n                                                        \n                                                \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                user details to update with\nexisiting information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe updated user information\nor error \"User does not exist\" if non-existant user\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword(userId: number, credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Update the user's password once already signed in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of logged in user\n\n                                                        \n                                                \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npassword information\nincludes: \"password\" (old password) and \"newPassword\"  (password to update to)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about the user just updated\nor error \"User does not exist\" if non-existant user\nor error \"Incorrect password\" if wrong old password\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/users/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                        Leading backend url path\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Functions which communicate to backend to allow\n * users to update their profile and/or change the password\n */\n@Injectable()\nexport class ProfileService {\n\n  /**\n   * Leading backend url path\n   */\n  private _baseUrl: string = '/api/users/';\n\n  constructor(private http: HttpClient){}\n\n  /**\n   * Edit details about the user profile including\n   * 1. Nme\n   * 2. Email address\n   *\n   * @param {number} userId userID of the logged in user\n   * @param {any} details user details to update with\n   * exisiting information\n   *\n   * @returns {Observable} - The updated user information\n   * - or error \"User does not exist\" if non-existant user\n   * - or other server/database error\n   */\n  editProfile(userId: number, details: any): Observable{\n    return this.http.post(this._baseUrl + userId, details);\n  }\n\n  /**\n   * Update the user's password once already signed in\n   *\n   * @param {number} userId userID of logged in user\n   * @param {any} credentials - password information\n   * - includes: \"password\" (old password) and \"newPassword\"  (password to update to)\n   *\n   * @returns {Observable} - information about the user just updated\n   * - or error \"User does not exist\" if non-existant user\n   * - or error \"Incorrect password\" if wrong old password\n   * - or other server/database error\n   */\n  updatePassword(userId: number, credentials: any): Observable{\n    return this.http.post(this._baseUrl + userId + '/update-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/reset-password/reset-password.component.ts\n\n\n    \n        Description\n    \n    \n        After user requests to reset password and they have a token,\nthis component allows them to set the password to a new password\n(assuming token is valid)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                reset-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDisabled\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/reset-password/reset-password.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n_checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Compares the input passwords to make sure they are both specified and that they match each other\n\n\n                            \n                                Returns :     \"Enter new password\" | \"Confirm new password\" | \"Confirm password does not match\" | \"\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from authentication service if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the token from the URL\nIf there is no token, give error message and disable submit button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendReset\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendReset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Attempts to reset the new password\n\nCheck the input passwords for errors\nIf no errors, send credentials to server\nPassword correctly reset, displays the success message\nIf error reseting the password, displays error message\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        Email and new passwords to be able to update the database\n\npassword - the new password to set\nconfirmPassword - confirm password typed correctly\ntoken - password reset token to confirm user had access to the email and didn't wait too long\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                        Potential error message from server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:41\n                            \n                        \n\n                \n                    \n                        Is the submit button disabled; this would happen when\nthere is no token\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:36\n                            \n                        \n\n                \n                    \n                        Subscription to AuthenticationService when retting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        Message when new password successfully saved\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * After user requests to reset password and they have a token,\n * this component allows them to set the password to a new password\n * (assuming token is valid)\n */\n@Component({\n    selector: 'reset-pswd',\n    templateUrl: './reset-password.template.html'\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  /**\n   * Potential error message from server\n   */\n    private errorMessage: string = '';\n  /**\n   * Message when new password successfully saved\n   */\n  private successMessage: string = '';\n  /**\n   * Email and new passwords to be able to update the database\n   * - `password` - the new password to set\n   * - `confirmPassword` - confirm password typed correctly\n   * - `token` - password reset token to confirm user had access to the email and didn't wait too long\n   */\n    private credentials: any;\n  /**\n   * Subscription to {@link AuthenticationService} when retting\n   */\n  private subscription: Subscription;\n  /**\n   * Is the submit button disabled; this would happen when\n   * there is no token\n   */\n  private isDisabled: boolean = false;\n\n    constructor(\n      private _authenticationService: AuthenticationService,\n      private _route: ActivatedRoute\n    ) {\n      this.credentials = {\n        password: '',\n        confirmPassword: '',\n        token: null\n      }\n    }\n  /**\n   * When initializing the component, get the token from the URL\n   *\n   * If there is no token, give error message and disable submit button\n   */\n  ngOnInit(){\n    this.credentials.token = this._route.snapshot.paramMap.get('token');\n    if(this.credentials.token === ''){\n      this.errorMessage = 'No token specified';\n      this.isDisabled = true;\n    }\n  }\n\n  /**\n   * Attempts to reset the new password\n   * 1. Check the input passwords for errors\n   * 2. If no errors, send credentials to server\n   * 3. Password correctly reset, displays the success message\n   * 4. If error reseting the password, displays error message\n   */\n    sendReset() {\n      this.successMessage = '';\n       this.errorMessage = this._checkPasswords();\n      if(this.errorMessage === ''){ // able to submit\n        this.subscription = this._authenticationService\n          .resetPassword(this.credentials)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.credentials.password = '';\n          this.credentials.confirmPassword = '';\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n      }\n    }\n\n  /**\n   * Compares the input passwords to make sure they are both specified and that they match each other\n   */\n  _checkPasswords(){\n    let p = this.credentials.password;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * On component destruction, unsubscribe from authentication service if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Reset Password\n    \n      New Password\n      \n        \n        \n        Must have at least 6 characters\n        \n      \n    \n    \n    \n      Confirm\n      \n        \n\n      \n    \n    \n    Submit\n\n    \n      {{ successMessage }} Go sign in.\n    \n    \n      {{ errorMessage }}\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Reset Password          New Password                              Must have at least 6 characters                                Confirm                                Submit          {{ successMessage }} Go sign in.              {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenario.html":{"url":"interfaces/Scenario.html","title":"interface - Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/scenario.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed about each scenario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        purpose\n                                \n                                \n                                        relevance\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        startingPoint\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human-readable visible label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purpose\n                                    \n                                \n                                \n                                    \n                                        purpose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Goal for completing the scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relevance\n                                    \n                                \n                                \n                                    \n                                        relevance:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The reason this scenario is important for learning\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Short string ID for the scenario; used in the URL and for linking\nscenario to other objects\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startingPoint\n                                    \n                                \n                                \n                                    \n                                        startingPoint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of phage strains to begin the scenario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Scenario{\n  /**\n   * Human-readable visible label\n   */\n  label: string;\n  /**\n   * Short string ID for the scenario; used in the URL and for linking\n   * scenario to other objects\n   */\n  scenCode: string;\n  /**\n   * Goal for completing the scenario\n   */\n  purpose: string;\n  /**\n   * Description of phage strains to begin the scenario\n   */\n  startingPoint: string;\n  /**\n   * The reason this scenario is important for learning\n   */\n  relevance: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScenarioComponent.html":{"url":"components/ScenarioComponent.html","title":"component - ScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/scenario.component.ts\n\n\n    \n        Description\n    \n    \n        View component used to link the breadcrumb with the location\nmodule components or scenario list\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario\n            \n\n\n\n\n            \n                templateUrl\n                ./scenario.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * View component used to link the breadcrumb with the location\n * module components or scenario list\n */\n@Component({\n  selector: 'scenario',\n  templateUrl: './scenario.template.html'\n})\n\nexport class ScenarioComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScenarioModule.html":{"url":"modules/ScenarioModule.html","title":"module - ScenarioModule","body":"\n                   \n\n\n\n\n  Modules\n  ScenarioModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_ScenarioModule_imports\n\n\n\n\nListComponent\n\nListComponent\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/scenario.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for scenario-related components and modules\nMainly used to be able to async load the specific scenarios via the LocationModule\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ListComponent\n                            \n                            \n                                ScenarioComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ScenarioRoutes } from './scenario.routes';\nimport { ScenarioComponent } from './scenario.component';\nimport { ListComponent } from './list/list.component';\n\n/**\n * Module for scenario-related components and modules\n *\n * Mainly used to be able to async load the specific scenarios via the {@link LocationModule}\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ScenarioRoutes)\n  ],\n  declarations: [\n    ScenarioComponent,\n    ListComponent\n  ]\n})\nexport class ScenarioModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScenarioResolver.html":{"url":"injectables/ScenarioResolver.html","title":"injectable - ScenarioResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ScenarioResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/scenario.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Resolves a route URL to get the scenario id (from the url)\nthen uses that to get the scenario label using scenario service\nThis is used to generate human-readable breadcrumb labels\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/scenario.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/scenario.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method required by implementation\nBased on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                current root URL\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe scenario object corresponding to do the url param ID if it exists\nor empty scenario if it does not exist\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ScenarioService } from './scenario.service';\nimport { Scenario } from '../interfaces/scenario.interface';\n\n/**\n * Resolves a route URL to get the scenario id (from the url)\n * then uses that to get the scenario label using scenario service\n *\n * This is used to generate human-readable breadcrumb labels\n */\n@Injectable()\nexport class ScenarioResolver implements Resolve {\n\n  constructor(private _scenarioService: ScenarioService) { }\n\n  /**\n   * Method required by implementation\n   * Based on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n   *\n   * @param {ActivatedRouteSnapshot} route current root URL\n   * @param {RouterStateSanpshot} current route snapshot\n   *\n   * @returns {Scenario} - The scenario object corresponding to do the url param ID if it exists\n   - or empty scenario if it does not exist\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\n    const scenCode = route.params['scenId'];\n\n    if (scenCode) {\n      return this._scenarioService.getScenario(scenCode);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Shared Module contains modules, pipes, and components\nthat are needed across the application\nSaves time by importing this module rather than the\npipes/modules/components individually\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                            \n                                PeopleListNamesPipe\n                            \n                            \n                                PersonNamePipe\n                            \n                            \n                                PhageParentsPipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfirmDeleteDialogComponent\n                            \n                            \n                                    PeopleListNamesPipe\n                            \n                            \n                                    PersonNamePipe\n                            \n                            \n                                    PhageParentsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DndModule } from 'ng2-dnd';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { McBreadcrumbsModule } from 'ngx-breadcrumbs';\nimport { SkyhookDndModule } from 'angular-skyhook';\nimport { default as TouchBackend } from 'react-dnd-touch-backend';\n\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog.component';\n\nimport { PersonNamePipe } from '../pipes/person-name.pipe';\nimport { PeopleListNamesPipe } from '../pipes/people-list-names.pipe';\nimport { PhageParentsPipe } from '../pipes/phage-parents.pipe';\n\n/**\n * The Shared Module contains modules, pipes, and components\n * that are needed across the application\n *\n * Saves time by importing this module rather than the\n * pipes/modules/components individually\n */\n@NgModule({\n    imports: [\n      CommonModule,\n      FormsModule,\n      DndModule.forRoot(),\n      NgbModule.forRoot(),\n      McBreadcrumbsModule.forRoot(),\n      SkyhookDndModule.forRoot({ backend: TouchBackend })\n    ],\n  declarations: [\n    PersonNamePipe,\n    PeopleListNamesPipe,\n    PhageParentsPipe,\n    ConfirmDeleteDialogComponent\n  ],\n    exports: [\n      CommonModule,\n      FormsModule,\n      DndModule,\n      NgbModule,\n      McBreadcrumbsModule,\n      PersonNamePipe,\n      PeopleListNamesPipe,\n      PhageParentsPipe,\n      SkyhookDndModule,\n      ConfirmDeleteDialogComponent\n    ],\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signin/signin.component.ts\n\n\n    \n        Description\n    \n    \n        Component for existing users to sign in and be able\nto access their scenarios/fridges\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signin\n            \n\n\n\n\n            \n                templateUrl\n                ./signin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signin/signin.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            On component desctruction, unsubscribe from the authentication service if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Upon form submission, attempts to sign in the user with credentials (using the service)\nWhen successful, navigate to\n\nthe redirect URL if set (when non-logged in user tries to access a page that required logging in)\nthe home page if redirect URL is not set\n\nWhen unsuccessful, display error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:24\n                            \n                        \n\n                \n                    \n                        Login credentials for user including username (email) and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:20\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:28\n                            \n                        \n\n                \n                    \n                        Authetnication service subscription from when trying to login the user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Component for existing users to sign in and be able\n * to access their scenarios/fridges\n */\n@Component({\n    selector: 'signin',\n    templateUrl: './signin.template.html'\n})\nexport class SigninComponent implements OnDestroy {\n  /**\n   * Potential error message\n   */\n  errorMessage: string;\n  /**\n   * Login credentials for user including `username` (email) and `password`\n   */\n    credentials: any = {};\n  /**\n   * Authetnication service subscription from when trying to login the user\n   */\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService,\n        private _router: Router) { }\n\n  /**\n   * Upon form submission, attempts to sign in the user with `credentials` (using the service)\n   *\n   * When successful, navigate to\n   * - the redirect URL if set (when non-logged in user tries to access a page that required logging in)\n   * - the home page if redirect URL is not set\n   *\n   * When unsuccessful, display error message\n   */\n    signin() {\n        this.subscription = this._authenticationService\n          .signin(this.credentials)\n          .subscribe((result) => {\n          // TODO: update\n          this._authenticationService.setUser(result);\n          let redirect = this._authenticationService.redirectUrl ? this._authenticationService.redirectUrl : '/';\n          this._router.navigate([redirect]);\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  /**\n   * On component desctruction, unsubscribe from the authentication service if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign in\n    \n      Email\n      \n        \n      \n    \n    \n    \n      Password\n      \n        \n      \n     \n    {{errorMessage}}\n    \n      \n        Sign in \n      \n      \n        Forget password?\n      \n     \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign in          Email                                      Password                             {{errorMessage}}                  Sign in                     Forget password?             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignoutComponent.html":{"url":"components/SignoutComponent.html","title":"component - SignoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signout/signout.component.ts\n\n\n    \n        Description\n    \n    \n        Component that a user signs out. Has no view/template--resets\nvariables and navigate to home page\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signout\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signout/signout.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from authentication service if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            On component creation\n\nSign out user on server\nUnset AuthenticationService user\nRedirect to home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication.service';\n\n/**\n * Component that a user signs out. Has no view/template--resets\n * variables and navigate to home page\n */\n@Component({\n  selector: 'signout',\n  template: ''\n})\n\nexport class SignoutComponent implements OnInit, OnDestroy{\n\n  private subscription: Subscription;\n\n  constructor(\n    private _authService: AuthenticationService,\n    private _router: Router\n  ){}\n\n  /**\n   * On component creation\n   * 1. Sign out user on server\n   * 2. Unset [AuthenticationService]{@link AuthenticationService} user\n   * 3. Redirect to home page\n   */\n  ngOnInit(){\n    this.subscription = this._authService.signout()\n      .subscribe((res)=>{\n        this._authService.setUser(null);\n        this._router.navigate(['/']);\n    })\n  }\n\n  /**\n   * On component destruction, unsubscribe from authentication service if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        This component allows new users to sign up to use Cricket.\nUses email as username and includes several error\nchecks\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signup\n            \n\n\n\n\n            \n                templateUrl\n                ./signup.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                cPassword\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _reorderCourses\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _courseService: CourseService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signup/signup.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _reorderCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _reorderCourses(courses: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Order the courses so the \"NA\" course is at the top\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of currently available courses; each item in list has courseNum and id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    the list ordered so the \"NA\" course is at the top\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            On component desctruction, unsubscribe from services to prevent a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            On component creation, get the list of available courses and order them\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            \nAttempts to sign the user up when they submit the form\nIncludes error checks for selecting a course and passwords match\nWhen sign-up is successful, sets the [logged in user]\n{@link authentication.service} and navigates to the home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:31\n                            \n                        \n\n                \n                    \n                        List of courses available to sign up for;\nAll users must select a course, even if the course is \"NA\"\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:44\n                            \n                        \n\n                \n                    \n                        Confirmation password; must match user.password to submit the signup form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:26\n                            \n                        \n\n                \n                    \n                        Potential backend error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:48\n                            \n                        \n\n                \n                    \n                        Boolean state object to make unsubscribing from multiple services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:40\n                            \n                        \n\n                \n                    \n                        User details used for signup\n\nfirstName\nlastName\nusername (email address)\ncourse (database course ID not course name)\npasssword\n\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\n\n\n\nimport { AuthenticationService } from '../authentication.service';\nimport { CourseService } from '../../admin/course/course.service';\nimport { readErrorMessage } from '../../shared/read-error'\n\n/**\n * This component allows new users to sign up to use Cricket.\n * Uses email as username and includes several error\n * checks\n */\n@Component({\n    selector: 'signup',\n    templateUrl: './signup.template.html'\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  /**\n   * Potential backend error message\n   */\n  errorMessage: string = '';\n  /**\n   * List of courses available to sign up for;\n   * All users must select a course, even if the course is \"NA\"\n   */\n  private courses: string[] = [];\n  /**\n   * User details used for signup\n   * - `firstName`\n   * - `lastName`\n   * - `username` (email address)\n   * - `course` (database course ID not course name)\n   * - `passsword`\n   */\n  user: any = {};\n  /**\n   * Confirmation password; must match `user.password` to submit the signup form\n   */\n  private cPassword: string;\n  /**\n   * Boolean state object to make unsubscribing from multiple services easier\n   */\n  private isDestroyed$: Subject;\n\n  constructor(private _authenticationService: AuthenticationService,\n        private _courseService: CourseService,\n        private _router: Router) {\n      this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Order the courses so the \"NA\" course is at the top\n   *\n   * @param {any[]} courses list of currently available courses; each item in list has `courseNum` and `id`\n   *\n   * @returns {any[]} the list ordered so the \"NA\" course is at the top\n   */\n  private _reorderCourses(courses: any[]): any[]{\n    let na = courses.filter((c)=>{return c.courseNum === 'NA'});\n    let other = courses.filter((c)=>{\n      return c.courseNum !== 'NA'\n    });\n    return na.concat(other);\n  }\n\n  /**\n   * On component creation, get the list of available courses and order them\n   */\n  ngOnInit(){\n    this._courseService.getCourseList()\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        let tmp = this._reorderCourses(res);\n        this.courses = tmp;\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n      this.courses = [];\n    });\n  }\n\n  /**\n   * - Attempts to sign the user up when they submit the form\n   * - Includes error checks for selecting a course and passwords match\n   * - When sign-up is successful, sets the [logged in user]\n   * {@link authentication.service} and navigates to the home page\n   */\n  signup() {\n      if(this.user.course === undefined){\n        this.errorMessage = 'Select a course'\n      } else if(this.user.password !== this.cPassword){\n        this.errorMessage = 'Passwords must match'\n      } else {\n          this._authenticationService\n          .signup(this.user)\n      .takeUntil(this.isDestroyed$)\n          .subscribe((result) => {\n          this._authenticationService.setUser(result);\n          this._router.navigate(['/'])\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n      }\n    }\n\n  /**\n   * On component desctruction, unsubscribe from services to prevent a memory leak\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign up \n\n    \n      \n        First name\n        \n      \n\n      \n        Last name\n        \n      \n    \n    \n\n    \n      Email address\n      \n    \n    \n\n    \n      Course\n      \n        Select course\n        {{ course.courseNum }}\n      \n    \n    \n\n    \n      \n        Password\n        \n        \n        Must have at least 6 characters\n        \n      \n      \n          \n        \n      \n     \n    {{errorMessage}}\n    Sign up\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign up                   First name                            Last name                                Email address                        Course              Select course        {{ course.courseNum }}                                Password                        Must have at least 6 characters                                                     {{errorMessage}}    Sign up  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Student.html":{"url":"interfaces/Student.html","title":"interface - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed as a user using the app in scenarios\n\n            \n\n            \n                Extends\n            \n            \n                    _User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentFridge.html":{"url":"interfaces/StudentFridge.html","title":"interface - StudentFridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentFridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                Fridge information used by admin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        owner\n                                \n                                \n                                        scenario\n                                \n                                \n                                            Optional\n                                        strains\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, has access been granted for this user/scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, the deletion guesses by the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:     _User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Owner of the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenario\n                                    \n                                \n                                \n                                    \n                                        scenario:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario this fridge is for\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     StudentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StudentPhage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If fridge exists, the list of phage that are in this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentFridgeComponent.html":{"url":"components/StudentFridgeComponent.html","title":"component - StudentFridgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentFridgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-fridge.component.ts\n\n\n    \n        Description\n    \n    \n        Component to view the phage strains for a specific student\nand scenario\nAdmin is able to see each phage's mutations, deletions, comments, and possibly mutation guesses\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-fridge\n            \n\n\n\n\n            \n                templateUrl\n                ./student-fridge.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Protected\n                                fridge\n                            \n                            \n                                    Protected\n                                hasFridge\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                strainList\n                            \n                            \n                                    Private\n                                viewStrains\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonClass\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setPhage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Determine the CSS class for the view strains button depending on selected option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton determining classes for\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            View strains is \"all\"\ngetButtonClass('all') -> {'btn btn-small': true, 'btn-primary': true, 'btn-primary-outline': false}\ngetButtonClass('graded') -> {'btn btn-small': true, 'btn-primary': false, 'btn-primary-outline': true}\n\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    classes which appy to this button in the form {\"class\": boolean, ...}\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            When destorying the component, unsubscribe from services and\nobservables to prevent memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nGet studentId, scenarioId, and admin\nGet the fridge\nIf the fridge exists\n3a. add the \"guesses\" to each strain\n3b. sort the strains by strain number\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPhage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPhage(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            update the list of visible phage appropriately\nCalled on (click) of \"View Strain\" button\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton which was clicked;\nShould be one of [\"all\", \"graded\"]\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:59\n                            \n                        \n\n                \n                    \n                        Error message from the server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fridge:     StudentFridge\n\n                    \n                \n                    \n                        \n                            Type :     StudentFridge\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:30\n                            \n                        \n\n                \n                    \n                        Fridge object (if it exists)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            hasFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasFridge:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:34\n                            \n                        \n\n                \n                    \n                        If fridge exists determine by if this.fridge has strains\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:38\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:42\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            strainList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        strainList:     StudentPhage[]\n\n                    \n                \n                    \n                        \n                            Type :     StudentPhage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:55\n                            \n                        \n\n                \n                    \n                        List of phage currently being viewed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewStrains\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewStrains:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:51\n                            \n                        \n\n                \n                    \n                        Option to show all strains in fridge or\nonly strains of interest for grading (unknown\nand submitted)\nShould be \"all\" or \"graded\"\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\n\nimport { Course, AdminStudent, Scenario, StudentPhage, StudentFridge } from '../../../interfaces';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * Component to view the phage strains for a specific student\n * and scenario\n *\n * Admin is able to see each phage's mutations, deletions, comments, and possibly mutation guesses\n */\n@Component({\n  selector: 'student-fridge',\n  templateUrl: './student-fridge.template.html'\n})\n\nexport class StudentFridgeComponent implements OnInit, OnDestroy {\n  /**\n   * Fridge object (if it exists)\n   */\n  protected fridge: StudentFridge;\n  /**\n   * If fridge exists determine by if this.fridge has strains\n   */\n  protected hasFridge: boolean = false;\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n  private isDestroyed$: Subject;\n   /**\n   * Subscription for URL parameters\n   */\n  private paramObserver: any;\n\n  /**\n   * Option to show all strains in fridge or\n   * only strains of interest for grading (unknown\n   * and submitted)\n   *\n   * Should be `\"all\"` or `\"graded\"`\n   */\n  private viewStrains: string = 'all';\n  /**\n   * List of phage currently being viewed\n   */\n  private strainList: StudentPhage[];\n  /**\n   * Error message from the server\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _studentService: StudentService,\n    private _authService: AuthenticationService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize the view\n   * 1. Get studentId, scenarioId, and admin\n   * 2. Get the fridge\n   * 3. If the fridge exists\n   * 3a. add the \"guesses\" to each strain\n   * 3b. sort the strains by strain number\n   */\n  ngOnInit(){\n    this.paramObserver = this._route.params.subscribe(params => {\n      let studentId = params['studentId'];\n      let scenId = params['scenId'];\n      let admin = this._authService.getUser();\n\n      this._studentService.getFridge(admin.id, studentId, scenId)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((fridge) => {\n              this.fridge = fridge;\n              this.hasFridge = (fridge.strains !== undefined);\n              if(this.hasFridge){\n                let guesses = JSON.parse(this.fridge.guesses);\n                for(let strain of this.fridge.strains){\n                  let x = guesses[strain.strainNum];\n                  if(x){\n                    strain.guesses = x;\n                  } else{\n                    strain.guesses = [];\n                  }\n                }\n                this.fridge.strains.sort((a,b)=>{return a.strainNum - b.strainNum});\n              }\n              this.setPhage('all');\n            },\n                (error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Determine the CSS class for the view strains button depending on selected option\n   *\n   * @param {string} src - button determining classes for\n   *\n   * @returns {Object} classes which appy to this button in the form {\"class\": boolean, ...}\n   *\n   * @example View strains is \"all\"\n   * getButtonClass('all') -> {'btn btn-small': true, 'btn-primary': true, 'btn-primary-outline': false}\n   * getButtonClass('graded') -> {'btn btn-small': true, 'btn-primary': false, 'btn-primary-outline': true}\n   */\n  getButtonClass(src: string): Object{\n    return {\n      'btn btn-sm': true,\n      'btn-primary': (src === this.viewStrains),\n      'btn-outline-primary': (src !== this.viewStrains)\n    }\n  }\n\n  /**\n   * update the list of visible phage appropriately\n   *\n   * Called on `(click)` of \"View Strain\" button\n   * @param {string} src - button which was clicked;\n   * Should be one of `[\"all\", \"graded\"]`\n   */\n  setPhage(src: string){\n    this.viewStrains = src;\n    if(this.viewStrains === 'all'){\n      this.strainList = this.fridge.strains;\n    } else {\n      this.strainList = this.fridge.strains.filter((strain)=>{\n        if(strain.phageType === 'unknown'){\n          return true;\n        } else if(strain.phageType === 'user' && strain.submitted){\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n\n  /**\n   * When destorying the component, unsubscribe from services and\n   * observables to prevent memory leak\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        {{ fridge.owner | personName }}\n      \n    \n\n    \n      {{ fridge.scenario.scenCode }}\n      {{ fridge.scenario.label }}\n      \n        Access granted: {{ fridge.accessGranted }}\n      \n    \n\n    \n      Fridge does not exist yet\n    \n    \n    \n      \n        \n          All Strains\n          Graded Strains\n        \n      \n      \n        \n          \n        \n       \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                      {{ fridge.owner | personName }}                    {{ fridge.scenario.scenCode }}      {{ fridge.scenario.label }}              Access granted: {{ fridge.accessGranted }}                    Fridge does not exist yet                                    All Strains          Graded Strains                                                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentFridgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentIndivComponent.html":{"url":"components/StudentIndivComponent.html","title":"component - StudentIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-indiv/student-indiv.component.ts\n\n\n    \n        Description\n    \n    \n        Component to view information for a single student\nThis includes email/name/role information and access status\nfor all scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-indiv\n            \n\n\n\n\n            \n                templateUrl\n                ./student-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                newRole\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                roles\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Protected\n                                student\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _callDelete\n                            \n                            \n                                checkDelete\n                            \n                            \n                                clickButton\n                            \n                            \n                                deleteDisabled\n                            \n                            \n                                getScenStatus\n                            \n                            \n                                getStudentCourse\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                roleButtonClass\n                            \n                            \n                                roleDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _studentService: StudentService, _scenarioService: ScenarioService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _callDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _callDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:263\n                            \n                        \n\n\n                \n                    \n                            Helper function which implements delete student after user\nconfirmed deletion\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:245\n                            \n                        \n\n\n                \n                    \n                            \nwhen clicking delete button, open a modal dialog to confirm delete\nif confirm, delete and redirect to students\notherwise, do nothing\n\nCalled on (click) of the \"Delete\" button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickButton\n                            \n                            \n                        \n                    \n                \n                \n                    \nclickButton(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:210\n                            \n                        \n\n\n                \n                    \n                            When clicking a role button, update the student role\nby calling student service\nCalled on (click) of one of the role buttons\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrole of button pushed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:226\n                            \n                        \n\n\n                \n                    \n                            Determine if delete button should be disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if viewing page of logged in user or if student is an admin\nfalse otherwise\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScenStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScenStatus(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Return formatted string based on if access granted for scenario\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario to look up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \"Access granted\", \"Access not granted\", or \"NA\"\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudentCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudentCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            \nGet a formatted HTML string based on the student\nIf student has a course, returns link to the course page\nIf student doesn't have a course, returns 'No course'\n\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    formatted HTML\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Grant access for a specific scenario by calling student service\nCalled on (click) of one of the scenario buttons\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                scenario to grant access for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:278\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing to the services\nThis prevents a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Initialize component\n\nGet logged in user\nGet id of student of interest from URL\nGet the student's info\nGet list of all scenarios\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:194\n                            \n                        \n\n\n                \n                    \n                            Determine CSS classes for each role button based on the\nstudent's current role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Current student has role &quot;student&quot;\nroleButtonClass(&#39;student&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: true, &#39;btn-secondary-outline&#39;: false}\nroleButtonClass(&#39;admin&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: false, &#39;btn-secondary-outline&#39;: true}\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    possible classes with true/false as applicable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleDisabled(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Determine if a role toggle button should be disabled\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    disable for roles greater than current user\nand if viewing page of current user\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:53\n                            \n                        \n\n                \n                    \n                        Logged in user who must be an admin or instructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:66\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:45\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple\nobservables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:61\n                            \n                        \n\n                \n                    \n                        New role to change to if allowed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:49\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roles:     \n\n                    \n                \n                    \n                        \n                            Default value : StudentRolesArray\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:57\n                            \n                        \n\n                \n                    \n                        List of possible roles\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:40\n                            \n                        \n\n                \n                    \n                        List of all scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            student\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        student:     AdminStudent\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:36\n                            \n                        \n\n                \n                    \n                        Student we are viewing\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subscription ,  Subject } from 'rxjs';\n\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../student.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { StudentRolesArray } from '../student.roles';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { User } from '../../../interfaces/user.interface';\nimport { Course } from '../../../interfaces/course.interface';\nimport { AdminStudent } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * Component to view information for a single student\n * This includes email/name/role information and access status\n * for all scenarios\n */\n@Component({\n    selector: 'student-indiv',\n    templateUrl: './student-indiv.template.html'\n})\n\nexport class StudentIndivComponent implements OnInit, OnDestroy {\n\n  /**\n   * Student we are viewing\n   */\n    protected student: AdminStudent;\n  /**\n   * List of all scenarios\n   */\n    private scenarios: Scenario[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple\n   * observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Subscription for URL parameters\n   */\n    private paramObserver: any;\n  /**\n   * Logged in user who must be an admin or instructor\n   */\n    private _admin: User;\n  /**\n   * List of possible roles\n   */\n    private roles = StudentRolesArray;\n  /**\n   * New role to change to if allowed\n   */\n    private newRole: string;\n\n  /**\n   * Potential error message\n   */\n    private errorMessage: string = '';\n\n    constructor(private _router: Router,\n        private _route: ActivatedRoute,\n        private _authService: AuthenticationService,\n        private _studentService: StudentService,\n        private _scenarioService: ScenarioService,\n        private _modalService: NgbModal) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize component\n   * 1. Get logged in user\n   * 2. Get id of student of interest from URL\n   * 3. Get the student's info\n   * 4. Get list of all scenarios\n   */\n    ngOnInit() {\n        this._admin = this._authService.getUser();\n        this.paramObserver = this._route.params.subscribe(params => {\n            let studentId = params['studentId'];\n            this._studentService.getStudent(this._admin.id, studentId)\n                .takeUntil(this.isDestroyed$)\n                .subscribe((info) => {\n                    this.student = info;\n                    this.newRole = this.student.role;\n                    this._scenarioService.listScenarios()\n                        .takeUntil(this.isDestroyed$)\n                        .subscribe((scens) => {\n                            this.scenarios = scens;\n                        });\n                },\n                (error) => {\n                    this.errorMessage = readErrorMessage(error);\n                });\n\n        });\n    }\n\n  /**\n   * Return formatted string based on if access granted for scenario\n   *\n   * @param {string} scenCode - scenario to look up\n   *\n   * @returns {string} `\"Access granted\"`, `\"Access not granted\"`, or `\"NA\"`\n   */\n    getScenStatus(scenCode: string): string {\n        let isGranted = this.student.accessGranted[scenCode];\n        if (isGranted === true) {\n            return 'Access granted'\n        } else if (isGranted === false) {\n            return 'Access not granted'\n        } else {\n            return 'NA'\n        }\n    }\n\n  /**\n   * - Get a formatted HTML string based on the student\n   * - If student has a course, returns link to the course page\n   * - If student doesn't have a course, returns 'No course'\n   *\n   * @returns {string} formatted HTML\n   */\n    getStudentCourse(): string {\n        let s: AdminStudent = this.student;\n        if (s.course) {\n            return 's.course.courseNum';\n        } else {\n            return 'No course';\n        }\n    }\n\n  /**\n   * Grant access for a specific scenario by calling student service\n   *\n   * Called on `(click)` of one of the scenario buttons\n   *\n   * @param {string} scenCode scenario to grant access for\n   */\n    grantAccess(scenCode: string) {\n        this._studentService.grantScenAccess(this._admin.id, this.student.userId, scenCode, true)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                if (res !== undefined && res !== null) {\n                  this.student = res;\n                }\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if a role toggle button should be disabled\n   *\n   * @param {string} src - name of button/role\n   *\n   * @returns {boolean} disable for roles greater than current user\n   * and if viewing page of current user\n   */\n    roleDisabled(src: string): boolean {\n        if (this._admin === undefined) {\n            return false\n        } else if (this.student.userId === this._admin.id) {\n            return true;\n        } else if (src === 'admin' && this._admin.role  {'btn btn-small': true, 'bth-secondary': true, 'btn-secondary-outline': false}\n   * roleButtonClass('admin') -> {'btn btn-small': true, 'bth-secondary': false, 'btn-secondary-outline': true}\n   */\n    roleButtonClass(src: string): Object {\n        return {\n            'btn btn-sm': true,\n            'btn-outline-secondary': src !== this.student.role,\n            'btn-secondary': src === this.student.role\n        }\n    }\n\n  /**\n   * When clicking a role button, update the student role\n   * by calling student service\n   *\n   * Called on `(click)` of one of the role buttons\n   *\n   * @param {string} src - role of button pushed\n   */\n    clickButton(src: string) {\n        this._studentService.setStudentRole(this._admin.id, this.student.userId, src)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                this.student = res;\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if delete button should be disabled\n   *\n   * @returns {boolean} - `true` if viewing page of logged in user or if student is an admin\n   * `false` otherwise\n   */\n  deleteDisabled(){\n    if(this._admin === undefined){\n      return true;\n    } else if(this.student.userId === this._admin.id){\n      return false;\n    } else if(this.student.role === 'admin'){\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * - when clicking delete button, open a modal dialog to confirm delete\n   * - if confirm, delete and redirect to students\n   * - otherwise, do nothing\n   *\n   * Called on `(click)` of the \"Delete\" button\n   */\n  checkDelete(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDelete();\n      }\n    }, (dismiss)=>{\n      // do nothing\n      return;\n    });\n  }\n\n  /**\n   * Helper function which implements delete student after user\n   * confirmed deletion\n   */\n  protected _callDelete(){\n    this._studentService.deleteStudent(this._admin.id, this.student.userId)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/students']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * Destroy the component by unsubscribing to the services\n   * This prevents a memory leak\n   */\n    ngOnDestroy() {\n        this.paramObserver.unsubscribe();\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n\n    }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          \n            {{ student | personName }}\n          \n        \n        \n          Delete\n        \n      \n\n      \n        \n          Email\n        \n        {{ student.email }}\n      \n\n      \n        \n          Course\n        \n        \n          {{ student.course.courseNum }}\n          No course\n        \n      \n\n      \n        Role\n        \n          \n          {{ role.label }}\n        \n        \n      \n      \n\n    \n    \n\n    \n      Scenarios\n      \n        \n          \n            {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}\n          \n          \n            Grant access\n            View fridge\n          \n        \n        \n      \n      \n    \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                            {{ student | personName }}                                    Delete                                      Email                {{ student.email }}                              Course                          {{ student.course.courseNum }}          No course                            Role                            {{ role.label }}                                              Scenarios                                    {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}                                Grant access            View fridge                                                  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentListComponent.html":{"url":"components/StudentListComponent.html","title":"component - StudentListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-list/student-list.component.ts\n\n\n    \n        Description\n    \n    \n        \nComponent which lists students dependent on the role of logged in user;\nif \"admin\", all users in the system\nif \"instr\", all users in courses instr teaches\n\n\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-list\n            \n\n\n\n\n            \n                templateUrl\n                ./student-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing from all observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nget logged in user id\nget the list of students\norder the list of students\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error message from server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        List of students\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { AdminStudent, sortStudents } from '../../../interfaces/student.interface';\n\n/**\n * - Component which lists students dependent on the role of logged in user;\n  * - if `\"admin\"`, all users in the system\n  * - if `\"instr\"`, all users in courses instr teaches\n */\n@Component({\n    selector: 'student-list',\n    templateUrl: './student-list.template.html'\n})\nexport class StudentListComponent implements OnInit, OnDestroy {\n  /**\n   * List of students\n   */\n    private students: AdminStudent[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Error message from server\n   */\n    private errorMessage: string = '';\n\n    constructor(\n        private _studentService: StudentService,\n        private _authService: AuthenticationService\n    ) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the view\n   * 1. get logged in user id\n   * 2. get the list of students\n   * 3. order the list of students\n   */\n    ngOnInit() {\n        let admin = this._authService.getUser();\n        this._studentService.listStudents(admin.id)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((students) => {\n                this.students = students.sort(sortStudents);\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Destory the component by unsubscribing from all observables\n   */\n    ngOnDestroy() {\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n    }\n}\n\n    \n\n    \n        \nStudents\n\n  {{ errorMessage }}\n  \n      \n      \n        {{student | personName:true}}\n        {{student.course.courseNum}}\n        {{student.role}}\n      \n    \n   \n \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Students  {{ errorMessage }}                      {{student | personName:true}}        {{student.course.courseNum}}        {{student.role}}              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n  Modules\n  StudentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_imports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/student/student.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for admin-regulated student things like setting the\nrole, viewing fridges for grading, and listing all students\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PhageDeletionsPipe\n                            \n                            \n                                PhageGuessesPipe\n                            \n                            \n                                PhageMutationsPipe\n                            \n                            \n                                StudentFridgeComponent\n                            \n                            \n                                StudentIndivComponent\n                            \n                            \n                                StudentListComponent\n                            \n                            \n                                StudentPhageComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     StudentResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { StudentRoutes } from './student.routes';\n\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { StudentIndivComponent } from './student-indiv/student-indiv.component';\nimport { StudentFridgeComponent } from './student-fridge/student-fridge.component';\nimport { StudentPhageComponent } from './student-fridge/student-phage.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { StudentResolver } from './student.resolver';\nimport { PhageGuessesPipe } from '../../pipes/phage-guesses.pipe';\nimport { PhageMutationsPipe } from '../../pipes/phage-mutations.pipe';\nimport { PhageDeletionsPipe } from '../../pipes/phage-deletions.pipe';\n\n/**\n * Module for admin-regulated student things like setting the\n * role, viewing fridges for grading, and listing all students\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(StudentRoutes)\n  ],\n  declarations: [\n    StudentListComponent,\n    StudentIndivComponent,\n    StudentFridgeComponent,\n    StudentPhageComponent,\n    PhageGuessesPipe,\n    PhageMutationsPipe,\n    PhageDeletionsPipe\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    StudentResolver\n  ]\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentPhage.html":{"url":"interfaces/StudentPhage.html","title":"interface - StudentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information about the phage used for admin\nand grading\n\n            \n\n            \n                Extends\n            \n            \n                    FridgePhage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        mutationList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop location of deleetion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     boolean[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deletion guesses from the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutationList\n                                    \n                                \n                                \n                                    \n                                        mutationList:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentPhageComponent.html":{"url":"components/StudentPhageComponent.html","title":"component - StudentPhageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentPhageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-phage.component.ts\n\n\n    \n        Description\n    \n    \n        Small component which encompasses a single phage strain being viewed\nwithin a student's fridge\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-phage\n            \n\n\n\n\n            \n                templateUrl\n                ./student-phage.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatPhageType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-phage.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                        The phage which the component is created for\n\n                            \n                            Type:    StudentPhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatPhageType\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatPhageType()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Produces formatted string based on phage type and if phage is\nsubmitted to be graded\n\n\n                            \n                                    Example :\n                                        \n                                            reference phage -&gt; &quot;REFERENCE&quot;\nscenario unknown phage -&gt; &quot;UNKOWN&quot;\nuser phage, not sumitted -&gt; &quot;USER&quot;\nsubmitted phage -&gt; &quot;SUBMISSION&quot;\n                                        \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    formatted string\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input} from '@angular/core';\n\nimport { StudentPhage } from '../../../interfaces/phage.interface';\n\n/**\n * Small component which encompasses a single phage strain being viewed\n * within a student's fridge\n */\n@Component({\n  selector: 'student-phage',\n  templateUrl: './student-phage.template.html'\n})\n\nexport class StudentPhageComponent{\n\n  /**\n   * The phage which the component is created for\n   */\n  @Input() phage: StudentPhage;\n\n  constructor(){}\n\n  /**\n   * Produces formatted string based on phage type and if phage is\n   * submitted to be graded\n   *\n   * @returns {string} formatted string\n   *\n   * @example\n   * reference phage -> \"REFERENCE\"\n   * scenario unknown phage -> \"UNKOWN\"\n   * user phage, not sumitted -> \"USER\"\n   * submitted phage -> \"SUBMISSION\"\n   */\n  formatPhageType(): string{\n    if(this.phage){\n      let t = this.phage.phageType;\n      if(this.phage.phageType === 'user' && this.phage.submitted){\n        return 'SUBMISSION'\n      } else {\n        return this.phage.phageType.toUpperCase();\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n    \n        \n\n  {{ phage.strainNum + 1 }}\n\n\n\n    \n      {{ formatPhageType() }}\n    \n  \n    \n  \n \n\n  \n    Comment\n    {{ phage.comment }}\n  \n   0\">\n    Mutations\n    \n      {{ phage.mutationList | phageMutations }}\n    \n  \n  \n   0\">\n    Deletion\n    \n      {{phage.deletion | phageDeletions}}\n    \n  \n  \n   0\">\n    Guess\n    \n      {{ phage.guesses | phageGuesses }}\n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ phage.strainNum + 1 }}          {{ formatPhageType() }}                   Comment    {{ phage.comment }}     0\">    Mutations          {{ phage.mutationList | phageMutations }}           0\">    Deletion          {{phage.deletion | phageDeletions}}           0\">    Guess          {{ phage.guesses | phageGuesses }}        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentPhageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentResolver.html":{"url":"injectables/StudentResolver.html","title":"injectable - StudentResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.resolver.ts\n        \n\n            \n                Description\n            \n            \n                \nNeeded for breadcrumbs\nResolves the studentId in the URL to the student it represents\n\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Based on the URL studentId parameter, find the user\nit belongs to\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The student the id belongs to\nor an empty observable if the id doesn't belong to anyone\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { StudentService } from './student.service';\nimport { AdminStudent } from '../../interfaces/student.interface';\n\n/**\n * - Needed for breadcrumbs\n * - Resolves the studentId in the URL to the student it represents\n */\n@Injectable()\nexport class StudentResolver implements Resolve {\n\n  constructor(private _studentService: StudentService,\n              private _authService: AuthenticationService) { }\n\n  /**\n   * Based on the URL `studentId` parameter, find the user\n   * it belongs to\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {Observable} The student the id belongs to\n   * or an empty observable if the id doesn't belong to anyone\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n\n    const studentNum = route.params['studentId'];\n\n    if (studentNum) {\n      return this._studentService.getStudent(admin.id, studentNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.service.ts\n        \n\n            \n                Description\n            \n            \n                Service which deals with all student-related backend calls\nfrom an admin\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteStudent\n                            \n                            \n                                getFridge\n                            \n                            \n                                getStudent\n                            \n                            \n                                grantScenAccess\n                            \n                            \n                                listStudents\n                            \n                            \n                                setStudentRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Delete a student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student to delete\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nstudent who was just deleted\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFridge(adminId: number, studentId: number, scenId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Get scenario fridge for a student; includes fridge details such as\nfridge strains and guesses\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario Id for fridge to find\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe student's fridge\nan empty fridge if the fridge doesn't exist yet\nor other server error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Get details about a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to be looked up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ndetails about specified student\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantScenAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:105\n                            \n                        \n\n\n                \n                    \n                            Update scenario access for a student; this deletes the existing\nfridge\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        updatedState\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ntrue to grant access, false to revoke access\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    updated student\n\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistStudents(adminId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            List of students, content is dependent of logged in user role\nIf admin, return all students/users\nIf instr, returns students of courses instr teachs\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nlist of students\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStudentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStudentRole(adminId: number, studentId: number, role: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Update the role (admin, instr, student) of another student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to update\n\n\n                                                        \n                                                \n                                                \n                                                        role\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nnew role to be assigned; one of: \"admin\", \"instr\", \"student\"\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe updated student\nerror Value \"role\" is not a valid role if role isn't one of admin, instr, student\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/admin'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AdminStudent, StudentFridge } from '../../interfaces';\n\n/**\n * Service which deals with all student-related backend calls\n * from an admin\n */\n@Injectable()\nexport class StudentService {\n  \n  private _baseURL = '/api/admin';\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * List of students, content is dependent of logged in user role\n   *\n   * If `admin`, return all students/users\n   * \n   * If `instr`, returns students of courses instr teachs\n   *\n   * @param {number} adminId - userId of logged in user\n   *\n   * @returns {AdminStudent[]} - list of students\n   */\n  listStudents(adminId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students`);\n  }\n\n  /**\n   * Get details about a student\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to be looked up\n   *\n   * @returns {Observable} - details about specified student\n   * - or other server/database error\n   */\n  getStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Update the role (admin, instr, student) of another student/user\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to update\n   * @param {string} role - new role to be assigned; one of: `\"admin\", \"instr\", \"student\"`\n   *\n   * @returns {Observable} - the updated student\n   * - error `Value \"role\" is not a valid role` if role isn't one of `admin`, `instr`, `student`\n   * - or other server/database error\n   */\n  setStudentRole(adminId: number, studentId: number, role: string): Observable{\n    let body = {role: role};\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}`, body);\n  }\n\n  /**\n   * Delete a student/user\n   *\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student to delete\n   *\n   * @returns {Observable} - student who was just deleted\n   * - or other server/database error\n   */\n  deleteStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .delete(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Get scenario fridge for a student; includes fridge details such as\n   * fridge strains and guesses\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {string} scenId - scenario Id for fridge to find\n   *\n   * @returns{Observable} - the student's fridge\n   * - an empty fridge if the fridge doesn't exist yet\n   * - or other server error\n   */\n  getFridge(adminId: number, studentId: number, scenId: string): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`);\n  }\n\n  /**\n   * Update scenario access for a student; this deletes the existing\n   * fridge\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {boolean} updatedState - true to grant access, false to revoke access\n   *\n   * @returns {Observable} updated student\n   * - or other server/database error\n   */\n  grantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean): Observable{\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`, {access: updatedState});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdatePasswordComponent.html":{"url":"components/UpdatePasswordComponent.html","title":"component - UpdatePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UpdatePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/update-password/update-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a logged in user to update their password\nby entering their current password then the new password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-password\n            \n\n\n\n\n            \n                templateUrl\n                ./update-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                passwordMessage\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/update-password/update-password.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Does various checks to ensure the password fields are valid\n\nAll fields are filled in\nNew password is different from old password\nConfirm password matches new password\n\n\n\n                            \n                            \n                            \n                                Returns :     \"Enter new password\" | \"Confirm new password\" | \"Confirm password does not match\" | \"\" | \"Enter o...\n\n                            \n                                \n                                    error message if at least one condition isn't met or '' if everything is valid\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe to services/streams\nto prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet the logged in user info\nSet up the credentials with email address\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Attempt to update the password\n\nIf successful, redirects to profile page\nIf there's an error, displays error message\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        \nPassword information to send to server to update password\nHas fields password (current password), newPassword (password to change to), \nconfirmPassword (confirms typing of new password), and \nusername (user's email)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:40\n                            \n                        \n\n                \n                    \n                        Potential backend error message displayed prominantly\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:36\n                            \n                        \n\n                \n                    \n                        State to keep track of compoenent alive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            passwordMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:44\n                            \n                        \n\n                \n                    \n                        Error message about submission and why the submission didn't work as expected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        The logged in user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Component for a logged in user to update their password\n * by entering their current password then the new password\n */\n@Component({\n  selector: 'user-password',\n  templateUrl: './update-password.template.html'\n})\n\nexport class UpdatePasswordComponent{\n\n  /**\n   * The logged in user\n   */\n  private user: User;\n  /**\n   * - Password information to send to server to update password\n   * - Has fields `password` (current password), `newPassword` (password to change to), \n   * `confirmPassword` (confirms typing of new password), and \n   * `username` (user's email)\n   */\n  private credentials: any;\n  /**\n   * State to keep track of compoenent alive\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential backend error message displayed prominantly\n   */\n  private errorMessage: string = '';\n  /**\n   * Error message about submission and why the submission didn't work as expected\n   */\n  private passwordMessage: string = '';\n\n  constructor(\n    private _router: Router,\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n      this.credentials = {\n        password: '',\n        newPassword: '',\n        confirmPassword: ''\n      };\n    }\n\n  /**\n   * Initialize the component\n   * 1. Get the logged in user info\n   * 2. Set up the credentials with email address\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.user = res;\n      this.credentials['username'] = res.email;\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempt to update the password\n   * - If successful, redirects to profile page\n   * - If there's an error, displays error message\n   */\n  updatePassword(){\n    // do checks\n    this.passwordMessage = this._checkPasswords();\n    if(this.passwordMessage === ''){\n      // can update\n      this._profileService.updatePassword(this.user.id, this.credentials)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n        this._router.navigate(['/profile']);\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n    } else {\n      this.errorMessage = '';\n    }\n  }\n\n  /**\n   * Does various checks to ensure the password fields are valid\n   * 1. All fields are filled in\n   * 2. New password is different from old password\n   * 3. Confirm password matches new password\n   *\n   * @returns {string} error message if at least one condition isn't met or `''` if everything is valid\n   */\n  protected _checkPasswords(){\n    let p = this.credentials.password;\n    let n = this.credentials.newPassword;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter old password';\n    } else if(n === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p === n){\n      return 'New password cannot the same as the old password';\n    } else if(n !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * On component destruction, unsubscribe to services/streams\n   * to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Update Password\n  \n  {{ errorMessage }}\n  \n    \n      Email\n      \n        \n      \n     \n    \n      Old Password\n      \n        \n      \n     \n    \n      New Password\n      \n        \n      \n     \n    \n      Confirm Password\n      \n        \n      \n     \n    {{passwordMessage}}\n    Submit\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Password    {{ errorMessage }}            Email                                   Old Password                                   New Password                                   Confirm Password                             {{passwordMessage}}    Submit  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdatePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                The logged in user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User e-mail; also used for logging in\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to indicate user when making calls to\nthe server\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role to indicate what areas of the app are accesible to the user;\n0 = student, 1 = instr, 2 = admin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/user-profile/user-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Main user profile component; aimed for use to edit name and\nemail address. Also access update password link to update password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                            Class constructor; includes services to fetch info\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service for updating the information\n\n                                                        \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get the current user information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from services to prevent\nmemory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Initialize the component on creation\n\nGet the logged in user\nSave the user's details to object to be able to edit\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Attempts to update the profile if possible or set error\nmessage if there's a problem\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                        State to maintain open subscriptions until component is destoryed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:24\n                            \n                        \n\n                \n                    \n                        Database user id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                        User details (as an object)\nCurrently includes: firstName, lastName, and email\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Main user profile component; aimed for use to edit name and\n * email address. Also access update password link to update password\n */\n@Component({\n  selector: 'user-profile',\n  templateUrl: './user-profile.template.html'\n})\n\nexport class UserProfileComponent{\n\n  /**\n   * Database user id\n   */\n  private userId: number;\n  /**\n   * User details (as an object)\n   * Currently includes: firstName, lastName, and email\n   */\n  private userInfo: any;\n  /**\n   * State to maintain open subscriptions until component is destoryed\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential error message\n   */\n  private errorMessage: string = '';\n\n  /**\n   * Class constructor; includes services to fetch info\n   *\n   * @param {ProfileService} _profileService Service for updating the information\n   * @param {AuthenticationService} _authService Service to get the current user information\n   */\n  constructor(\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the component on creation\n   * 1. Get the logged in user\n   * 2. Save the user's details to object to be able to edit\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.userId = res.id;\n      this.userInfo = {\n        firstName: res.firstName,\n        lastName: res.lastName,\n        email: res.email\n      }\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempts to update the profile if possible or set error\n   * message if there's a problem\n   */\n  updateProfile(){\n    this._profileService.editProfile(this.userId, this.userInfo)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.userInfo = {firstName: updated.firstName,\n                      lastName: updated.lastName,\n                      email: updated.email};\n      this._authService.setUser(updated);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * On component destruction, unsubscribe from services to prevent\n   * memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Profile\n  \n    {{ errorMessage }}\n  \n  \n  Update Password\n    \n  \n    \n      \n        First Name\n        \n       \n\n      \n        Last Name\n        \n       \n     \n    \n      \n        Email\n        \n       \n     \n    Submit\n   \n\n\n \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Profile      {{ errorMessage }}      Update Password                        First Name                             Last Name                                      Email                        Submit    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_User.html":{"url":"interfaces/_User.html","title":"interface - _User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  _User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                base user class which is extended by other interfaces\nand rarely used on its own\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User first name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User last name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to index users\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n[unreleased]\n[v1.0.10]\n\nUPDATED responses on error in app controllers\nADDED check for null phage from DB when trying to create a plate\nFIXED testing error with deleting fridge\nADDED unit testing and documentation for most of the application\n\n[v1.0.9] - 2018-04-16\n\nFIXED issue with potential incorrect error dropping bact tube to plate directly\nUPDATED plexer submission\nwhen submit button is pushed, a spinner appears in the top left of the results table and the submit button is disabled\nspinner is hidden and button is active once the results come back from the server\nthis will hopefully minimize students sending the same plexer request several times bc they weren't sure if it went through--this causes server overload\n\n\n\n[v1.0.8] - 2018-02-26\n\nADDED track new phage strains parent info\nSave parent id of phage from plate to fridge\nGet parent info about phage when getting fridge\nDisplay phage parent strain number in dialog\n\n\n\n[v1.0.7] - 2018-02-23\n\nUPDATED the way phage mutations are stored to save memory\nUpdated all genetics components\nUpdated model\nUpdated front end interface and pipe\n\n\nUPDATED on rest bacteria, only WT-like genotypes sent to client so smaller data transfer\nREMOVED rate limiting (causing server errors)\nFIXED over capacity for plexer\nADDED \"Page not found\" component for invalid URL\nADDED shuffle plaque lists to force mutants and recombinants to the front\nWhen small/large plaques 100-400\nHandle and shuffle each separately\n\n\n\n[v1.0.6] - 2018-02-20\n\nFIXED recombination error which was under-generating recombinants\nADDED ability to delete non-admin users\nADDED ability to delete course\nREMOVED revoke access option on user fridges\n\n[v1.0.5]\n\nADDED rate limiting\ngenetics routes\nuser auth/update routes\n\n\nUPDATED backend genetics testing\n\n[v1.0.4] - 2018-01-24\n\nADDED Ability to reset password\nsends email to user if user exists\npassword reset token expires after an hour\n\n\nADDED SSL support\nFIXED bugs\ngrant scenario access\nSign out blocking issue\n\n\n\n[v1.0.3] - 2018-01-23\n\nADDED User profile and update password pages\nADDED user controller tests\n\n[v1.0.2] - 2018-01-10\n\nFIXED issues with genetics logic\noverflow on REST bact\nnum phage generated with uneven input phage numbers\nupdated corresponding tests\n\n\nswitched console output to debug\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    public/app/admin/admin-home/admin-home.component.ts\n            \n            \n                component\n            \n            \n                AdminHomeComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.guard.service.ts\n            \n            \n                injectable\n            \n            \n                AdminGuard\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-create/course-create.component.ts\n            \n            \n                component\n            \n            \n                CourseCreateComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-edit/course-edit.component.ts\n            \n            \n                component\n            \n            \n                CourseEditComponent\n            \n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-indiv/course-indiv.component.ts\n            \n            \n                component\n            \n            \n                CourseIndivComponent\n            \n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-list/course-list.component.ts\n            \n            \n                component\n            \n            \n                CourseListComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-scenario/course-scenario.component.ts\n            \n            \n                component\n            \n            \n                CourseScenarioComponent\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.resolver.ts\n            \n            \n                injectable\n            \n            \n                CourseResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                    public/app/admin/not-auth/not-auth.component.ts\n            \n            \n                component\n            \n            \n                NotAuthComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-fridge.component.ts\n            \n            \n                component\n            \n            \n                StudentFridgeComponent\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-phage.component.ts\n            \n            \n                component\n            \n            \n                StudentPhageComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-indiv/student-indiv.component.ts\n            \n            \n                component\n            \n            \n                StudentIndivComponent\n            \n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-list/student-list.component.ts\n            \n            \n                component\n            \n            \n                StudentListComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.resolver.ts\n            \n            \n                injectable\n            \n            \n                StudentResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.roles.ts\n            \n            \n                variable\n            \n            \n                StudentRolesArray\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.service.ts\n            \n            \n                injectable\n            \n            \n                StudentService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    public/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/authentication/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    public/app/authentication/forget-password/forget-password.component.ts\n            \n            \n                component\n            \n            \n                ForgetPasswordComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    public/app/authentication/logged-in.guard.service.ts\n            \n            \n                injectable\n            \n            \n                LoggedInGuard\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    public/app/authentication/reset-password/reset-password.component.ts\n            \n            \n                component\n            \n            \n                ResetPasswordComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    public/app/authentication/signin/signin.component.ts\n            \n            \n                component\n            \n            \n                SigninComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    public/app/authentication/signout/signout.component.ts\n            \n            \n                component\n            \n            \n                SignoutComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/authentication/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    public/app/help/help.component.ts\n            \n            \n                component\n            \n            \n                HelpComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    public/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/course.interface.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateInput\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateResults\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlexerInput\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                Fridge\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                StudentFridge\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                ExperimentPhage\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                FridgePhage\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                GenotypePhage\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                Phage\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                StudentPhage\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/scenario.interface.ts\n            \n            \n                interface\n            \n            \n                Scenario\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                AdminStudent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                Student\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                variable\n            \n            \n                sortStudents\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                _User\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/nav/nav.component.ts\n            \n            \n                component\n            \n            \n                NavComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    public/app/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/pipes/people-list-names.pipe.ts\n            \n            \n                pipe\n            \n            \n                PeopleListNamesPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/person-name.pipe.ts\n            \n            \n                pipe\n            \n            \n                PersonNamePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-deletions.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageDeletionsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-guesses.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageGuessesPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-mutations.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageMutationsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-parents.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageParentsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/profile/profile.service.ts\n            \n            \n                injectable\n            \n            \n                ProfileService\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    public/app/profile/update-password/update-password.component.ts\n            \n            \n                component\n            \n            \n                UpdatePasswordComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    public/app/profile/user-profile/user-profile.component.ts\n            \n            \n                component\n            \n            \n                UserProfileComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/fridge.component.ts\n            \n            \n                component\n            \n            \n                FridgeComponent\n            \n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/phage-dialog.component.ts\n            \n            \n                component\n            \n            \n                PhageDialogComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    public/app/scenario/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/experiment.service.ts\n            \n            \n                injectable\n            \n            \n                ExperimentService\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/lab-room/lab-room.component.ts\n            \n            \n                component\n            \n            \n                LabRoomComponent\n            \n            \n                90 %\n                (37/41)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/landing-room/landing-room.component.ts\n            \n            \n                component\n            \n            \n                LandingRoomComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/location.component.ts\n            \n            \n                component\n            \n            \n                LocationComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/model-room/model-room.component.ts\n            \n            \n                component\n            \n            \n                ModelRoomComponent\n            \n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/plexer-room/plexer-room.component.ts\n            \n            \n                component\n            \n            \n                PlexerRoomComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.component.ts\n            \n            \n                component\n            \n            \n                ScenarioComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.globals.ts\n            \n            \n                variable\n            \n            \n                ScenarioGlobals\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.resolver.ts\n            \n            \n                injectable\n            \n            \n                ScenarioResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.service.ts\n            \n            \n                injectable\n            \n            \n                ScenarioService\n            \n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                    public/app/shared/confirm-delete-dialog.component.ts\n            \n            \n                component\n            \n            \n                ConfirmDeleteDialogComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    public/app/shared/read-error.ts\n            \n            \n                variable\n            \n            \n                readErrorMessage\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/compiler-cli : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/platform-server : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^1.0.0-beta.6\n        \n            angular-skyhook : ^1.0.0-beta.2\n        \n            async : ^2.6.0\n        \n            bcrypt : ^2.0.1\n        \n            body-parser : ^1.15.2\n        \n            bootstrap : ^4.0.0-beta.3\n        \n            clone : ^2.1.1\n        \n            compression : ^1.6.0\n        \n            connect-flash : ^0.1.1\n        \n            connect-mongo : ^1.3.2\n        \n            cookie-parser : ^1.4.3\n        \n            core-js : 2.4.1\n        \n            debug : ^3.1.0\n        \n            ejs : ^2.5.2\n        \n            eslint : ^4.1.1\n        \n            express : ^4.14.0\n        \n            express-brute : ^1.0.1\n        \n            express-brute-memcached : ^0.0.1\n        \n            express-graceful-exit : ^0.4.0\n        \n            express-session : ^1.14.1\n        \n            helmet : ^3.10.0\n        \n            https : ^1.0.0\n        \n            jquery : ^3.2.1\n        \n            lodash : ^4.17.10\n        \n            method-override : ^2.3.6\n        \n            mongoose : ^5.0.7\n        \n            mongoose-sequence : ^4.0.1\n        \n            morgan : ^1.7.0\n        \n            ng2-dnd : ^5.0.2\n        \n            ngx-breadcrumbs : ^0.0.3\n        \n            nodemailer : ^4.4.2\n        \n            open-iconic : https://github.com/iconic/open-iconic.git\n        \n            passport : ^0.3.2\n        \n            passport-facebook : ^2.1.1\n        \n            passport-google-oauth : ^1.0.0\n        \n            passport-local : ^1.0.0\n        \n            popper.js : ^1.12.9\n        \n            random-js : ^1.0.8\n        \n            react-dnd-html5-backend : ^2.5.4\n        \n            react-dnd-touch-backend : ^0.3.20\n        \n            reflect-metadata : ^0.1.8\n        \n            rxjs : ^5.5.2\n        \n            systemjs : ^0.19.39\n        \n            tslib : ^1.8.0\n        \n            zone.js : ^0.8.18\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncricket\nRun angular tests with : karma start\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n   Copyright 2018 Brigitte Hofmeister\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRouteModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CourseModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelpModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScenarioModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_providers\n\n\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRouteModule\n\nAppRouteModule\n\nAppModule -->\n\nAppRouteModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            11 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        34 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTO DO\n\nAbility to remove instructor from a course\nBulk delete phage as an entire shelf\nBulk save phage to the fridge\nAllow user to delete account\nHelp pages\nClear error messages in lab room\nTesting\nprofile/update-password.component\nprofile/user-profile.component\nauthentication\nstudent/course/scenario.resolver\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            readErrorMessage   (public/.../read-error.ts)\n                        \n                        \n                            ScenarioGlobals   (public/.../scenario.globals.ts)\n                        \n                        \n                            sortStudents   (public/.../student.interface.ts)\n                        \n                        \n                            StudentRolesArray   (public/.../student.roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    public/app/shared/read-error.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            readErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        readErrorMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : function(error: any): string {\n  console.log(JSON.stringify(error));\n  let errorMessage = 'Unknown error';\n  if(error.error && error.error.message){\n   return error.error.message\n  } else if(error.error && error.error.text){\n   return error.error.text\n  } else if (error && error.message){\n   return error.message;\n  } else if(error){\n    return error;\n  }\n  return errorMessage;\n}\n                        \n                    \n\n                \n                    \n                        This function takes an error object and looks for\nthe error message; it checks several properties because\nerrors are not always uniform\n\n                    \n                \n\n            \n        \n\n    public/app/scenario/scenario.globals.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ScenarioGlobals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ScenarioGlobals:     miscellaneou\n\n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /**\n   * Number of starting phage when taken from fridge\n   */\n  numPhage:1000000,\n  /**\n   * Maximum number of plaques allowed on lab room plate\n   */\n  plateCapacity: 1500,\n  /**\n   * Maximum number of plaques allowed on each plexer room plate\n   */\n  plexerCapacity: 200,\n  /**\n   * Number of shelves in the fridge\n   */\n  nFridgeShelf: 32,\n  /**\n   * Number of spots on each shelf of the fridge\n   */\n  nFridgeSpots: 16,\n  /**\n   * Default dilution value for lab room; can be changed by user\n   */\n  defaultLabDilution: 10,\n  /**\n   * Default dilution value for plexer room; can be changed by user\n   */\n  defaultPlexerDilution: 5,\n  /**\n   * Length of the gene in number of basepairs\n   */\n  geneLength: 350,\n  /**\n   * Number of basepairs per \"block\" when guessing deletion location\n   */\n  deletionGuessLength: 10\n}\n                        \n                    \n\n                \n                    \n                        Scenario/experiement-related values used to\n\nSend the correct parameters to backend calls\nMatch some backend parameters\nHave consistent defaults\n\n\n                    \n                \n\n            \n        \n\n    public/app/interfaces/student.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortStudents:     \n\n                    \n                \n                    \n                        \n                            Default value : function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n                        \n                    \n\n                \n                    \n                        Function to sort students alphabetically by last name;\nUses first name for ties\nMakes the name lowercase before sorting to ensure sort is\ncase insensitive\n\n                    \n                \n\n            \n        \n\n    public/app/admin/student/student.roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StudentRolesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        StudentRolesArray:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    key: 'student',\n    label: 'Student',\n    value: 0\n  }, {\n    key: 'instr',\n    label: 'Instructor',\n    value: 1\n  }, {\n    key: 'admin',\n    label: 'Administrator',\n    value: 2\n  }\n]\n                        \n                    \n\n                \n                    \n                        List of user roles with their numeric value (value), string value\nused by MongoDB (key), and string displayed on webpage (label)\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers.html":{"url":"additional-documentation/controllers.html","title":"additional-page - Controllers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Controllers\n\n\n\n  \n    \n      Admin Controller\n    \n    \n      listUsers\n      getUser\n      deleteUser\n      setRole\n      hasAuthorization\n      isAdmin\n    \n  \n  \n  \n    \n      Course Controller\n    \n    \n      isInstructor\n      listCourses\n      listCourseNum\n      createCourse\n      getCourse\n      editCourse\n      deleteCourse\n      getStudents\n      deleteCourseStudents\n      getPossibleInstructors\n      setInstructor\n      getScenarioStatus\n      courseByNum\n    \n  \n  \n  \n    \n      Fridge Controller\n    \n    \n      stockFridge\n      getFridge\n      getStudentFridge\n      saveDeletions\n      deleteStudentFridge\n      addPhageToFridge\n      updatePhage\n      deletePhage\n      phageById\n      findFridgeByScenOwner\n      hasFridgeAuthorization\n      hasPhageAuthorization\n      getFridgeInfo\n    \n  \n  \n  \n    \n      Genetics Controller\n    \n    \n      createPlate\n      handlePlexer\n    \n  \n  \n  \n    \n      Scenario Controller\n    \n    \n      list\n      read\n      scenarioByCode\n    \n  \n  \n  \n    \n      User Controller\n    \n    \n      getUser\n      editUser\n      resetPasswordEmail\n      resetPassword\n      signin\n      signup\n      signout\n      grantAccess\n      requiresLogin\n      userById\n      getUserInfo\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/admin-controller.html":{"url":"additional-documentation/controllers/admin-controller.html","title":"additional-page - Admin Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Admin Controller\n\n  \n    Description\n  \n  \n    The Admin-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                listUsers\n              \n\n                getUser\n              \n\n                deleteUser\n              \n\n                setRole\n              \n\n                hasAuthorization\n              \n\n                isAdmin\n              \n          \n        \n      \n    \n  \n\n  \n  \n    listUsers\n  \n    \n      \n        listUsers(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/students\n\n        \n        \n          \n            list all users in the system for admin OR\nlist all students for instructor courses for instructor\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error\n\n    \n    200 OKIf user is admin, returns list of all users\nIf user is instr, returns list of students in instr's courses\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getUser\n  \n    \n      \n        getUser(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/students/:studentId\n\n        \n        \n          \n            Get information about a secondary user (not necessarily the user currently logged in)\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteUser\n  \n    \n      \n        deleteUser(req, res) ⇒ Object\n      \n        \n              DELETE\n\n    /api/admin/:userId/students/:studentId\n\n        \n        \n          \n            Delete a secondary user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    setRole\n  \n    \n      \n        setRole(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/students/:studentId\n\n        \n        \n          \n            Update a user's role to \"student\", \"instructor\", or \"admin\"\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n      \n      bodyObjectnew role; one of \"student\", \"instr\", \"admin\"\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated user information\n\n      \n\n\n\n          \n        \n        \n          \n            \n    Request Example :\n    /api/admin/1/students/67Make user 67 an instructor \n  {\n  role: \"instr\"\n}\n \n  \n          \n        \n    \n  \n\n  \n  \n    hasAuthorization\n  \n    \n      \n        hasAuthorization(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user is instructor or admin\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionthe next middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object to response if not authorized otherwise go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin or instructor, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to the next middleware if user is admin or instructor\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    isAdmin\n  \n    \n      \n        isAdmin(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user is admin\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionthe next middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object to response if not authorized otherwise next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to next middleware if user is an admin\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/course-controller.html":{"url":"additional-documentation/controllers/course-controller.html","title":"additional-page - Course Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Course Controller\n\n  \n    Description\n  \n  \n    The Course-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                isInstructor\n              \n\n                listCourses\n              \n\n                listCourseNum\n              \n\n                createCourse\n              \n\n                getCourse\n              \n\n                editCourse\n              \n\n                deleteCourse\n              \n\n                getStudents\n              \n\n                deleteCourseStudents\n              \n\n                getPossibleInstructors\n              \n\n                setInstructor\n              \n\n                getScenarioStatus\n              \n\n                courseByNum\n              \n          \n        \n      \n    \n  \n\n  \n  \n    isInstructor\n  \n    \n      \n        isInstructor(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to allow only admin and the instructor of the course to proceed\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n      \n      courseCOURSEcourse details from courseByNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object to response not allowed or next middleware if allowed\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 Forbiddencurrent user not authorized, send error as {message: 'Not instructor of this course'}\n\n    \n    next()If user authorized, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    listCourses\n  \n    \n      \n        listCourses() ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses\n\n        \n        \n          \n            get list of courses\nis user is admin, list all\nif user is instructor, list courses for teacher\n          \n        \n        \n          \n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUser is admin and there are no courses OR user is instr role but not the instructor of any courses; sends message as {message: 'No courses found'}\n\n    \n    200 OKList of courses; courses in the list depend on user role\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    listCourseNum\n  \n    \n      \n        listCourseNum(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/courses\n\n        \n        \n          \n            Return the list of course numbers that currently exist\n\nThis is used during sign-up and does not require a user to be logged in\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not Foundthere are no courses; sends message as {message: \"No courses found\"}\n\n    \n    200 OKList of courses with properties courseNum and id (DB id)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    createCourse\n  \n    \n      \n        createCourse(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/courses\n\n        \n        \n          \n            Create a new course and set current user as instructor\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectdetails about new course: courseNum and description\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKNewly created course\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getCourse\n  \n    \n      \n        getCourse(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum\n\n        \n        \n          \n            Get information about an existing course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKthe course information including courseNum, description, and list of instructors\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    editCourse\n  \n    \n      \n        editCourse(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/courses/:courseNum\n\n        \n        \n          \n            Update the description of an existing course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      bodyObjectcourse information to update - the description\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated course information\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteCourse\n  \n    \n      \n        deleteCourse() ⇒ Object\n      \n        \n              DELETE\n\n    /api/admin/:userId/courses/:courseNum\n\n        \n        \n          \n            Delete a course\n          \n        \n        \n          \n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about course just deleted\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getStudents\n  \n    \n      \n        getStudents(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum/students\n\n        \n        \n          \n            get list of students for a course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in the course; each student has properties firstName, lastName, userId, accessGranted, and email\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteCourseStudents\n  \n    \n      \n        deleteCourseStudents(req, res) ⇒ Object\n      \n        \n              DELETE\n\n    /api/admin/:userId/courses/:courseNum/students\n\n        \n        \n          \n            Bulk delete all students in a particular course\nMost useful when finished with semester and course is over\nDoes not remove the course itself\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 SuccessList of students just deleted\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getPossibleInstructors\n  \n    \n      \n        getPossibleInstructors(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum/instructors\n\n        \n        \n          \n            Get list of all possible instructors for a specific course (not including the instrcutors currently teaching the course)\nAdmin can add current instructors or students in the course\nInstructors can add other instrctors\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of possible instrcutors; each person has properties firstName, lastName, userId, and role\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    setInstructor\n  \n    \n      \n        setInstructor(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/courses/:courseNum/instructors/:studentId'\n\n        \n        \n          \n            Add an instuctor to the course and make user \"instructor\" role if user is a student\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      studentUSERuser to make instructor; identified with userById with id studentId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error updating the course, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error updating the user, sends description of error as {message: error-message}\n\n    \n    200 OKThe updated course\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getScenarioStatus\n  \n    \n      \n        getScenarioStatus(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum/:scenarioId\n\n        \n        \n          \n            Get scenario status (aka access granted) for a scenario for all\nstudents in a course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum\n\n      \n      scenarioSCENARIOscenario of interested; identified with scenarioByCode with id scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    404 Not FoundThere are no students in the course, sends error as {message: \"no students found\"}\n\n    \n    500 Internal Server ErrorDatabase error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in course with scenario access; each object in list has firstName, lastName, userId, and status\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    courseByNum\n  \n    \n      \n        courseByNum(req, res, next, id) ⇒ function\n      \n        \n          \n    :courseNum\n\n        \n        \n          \n            Middleware to find course by course number\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n      \n        idstringcourse number from URL\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass the error to the next middleware\n\n    \n    next('Failed to load course id')If course doesn't exist, pass message to middleware\n\n    \n    next()If success, set request course and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/fridge-controller.html":{"url":"additional-documentation/controllers/fridge-controller.html","title":"additional-page - Fridge Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Fridge Controller\n\n  \n    Description\n  \n  \n    The Fridge-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                stockFridge\n              \n\n                getFridge\n              \n\n                getStudentFridge\n              \n\n                saveDeletions\n              \n\n                deleteStudentFridge\n              \n\n                addPhageToFridge\n              \n\n                updatePhage\n              \n\n                deletePhage\n              \n\n                phageById\n              \n\n                findFridgeByScenOwner\n              \n\n                hasFridgeAuthorization\n              \n\n                hasPhageAuthorization\n              \n\n                getFridgeInfo\n              \n          \n        \n      \n    \n  \n\n  \n  \n    stockFridge\n  \n    \n      \n        stockFridge(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket/:userId/:scenarioId/new-fridge\n\n        \n        \n          \n            Create a new fridge stocked with the scenario phage\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestError creating phage for this fridge, sends error as {message: 'Unable to create new phage for scenario'}\n\n    \n    500 Internal Server ErrorError saving the new fridge, sends error as {message: 'Unable to save new fridge'}\n\n    \n    200 OKNewly created fridge cleaned by getFridgeInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getFridge\n  \n    \n      \n        getFridge(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket/:userId/:scenarioId\n\n        \n        \n          \n            Get the current user's fridge\nOnly include info needed to be known for lab room, plexer room, and model room of scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKUser's fridge for this scenario cleaned by getFridgeInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getStudentFridge\n  \n    \n      \n        getStudentFridge(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/students/:studentId/:scenarioId\n\n        \n        \n          \n            Get a user's fridge and include lots of details only\nadmin/instrs should know\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKIf fridge doesn't exist, return owner/scenario as if the fridge exists (information needed for front-end rendering)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    saveDeletions\n  \n    \n      \n        saveDeletions(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/:userId/:scenarioId/deletions\n\n        \n        \n          \n            Update the deletion guesses for the fridge\nguesses come in as object and are stringified when saving\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectupdated guesses to save\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKreturns stringified updated guesses to response\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteStudentFridge\n  \n    \n      \n        deleteStudentFridge(req, res, next) ⇒ function\n      \n        \n          \n    /api/admin/:userId/students/:studentId/:scenarioId\n\n        \n        \n          \n            Middleware which deletes a fridge and all phage within the fridge\nCalled after granting access because new fridge\nneeds to be created for the user/scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext function to go to\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioexternal:SCNEARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next()If successful, delete the fridge and all phage in the fridge, then go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    addPhageToFridge\n  \n    \n      \n        addPhageToFridge(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/:userId/:scenarioId/fridge-phage\n\n        \n        \n          \n            Create new phage with phage type \"user\", save that to DB, and add to the current fridge\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectinformation about new strain; has properties\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bade RequestOn error creating new phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error adding phage to fridge, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about the newly added strain, including info about phage parents (fetch from DB)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    updatePhage\n  \n    \n      \n        updatePhage(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/:userId/:scenarioId/:phageId\n\n        \n        \n          \n            Update the comment or submitted state of a phage\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectupdated strain info; has comment, strainNum, and submitted\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, sends description of error as {message: error-message}\n\n    \n    200 OKreturn updated phage with information about phage parents (from DB)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deletePhage\n  \n    \n      \n        deletePhage(req, res) ⇒ Object\n      \n        \n              DELETE\n\n    /api/cricket/:userId/:scenarioId/:phageId\n\n        \n        \n          \n            Delete a phage strain and remove it from the fridge\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error deleting phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error removing phage from fridge, sends error as {message: \"Unable to remove strain from fridge\"}\n\n    \n    200 OKreturn the newly deleted phage strain\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    phageById\n  \n    \n      \n        phageById(req, res, next, id) ⇒ function\n      \n        \n          \n    :phageId\n\n        \n        \n          \n            Middleware which identifies a phage strain based on the\nid\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n      \n        idstringmongoDB id of phage strain to look for\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to the next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Phage not found')If phage doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request strain and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    findFridgeByScenOwner\n  \n    \n      \n        findFridgeByScenOwner(req, next) ⇒ function\n      \n        \n          \n\n        \n        \n          \n            Middleware to find a fridge by the current user and current scenario\nuser and scenario were set in previous middleware\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Failed to find fridge')If fridge doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request fridge and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    hasFridgeAuthorization\n  \n    \n      \n        hasFridgeAuthorization(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user is fridge owner\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    hasPhageAuthorization\n  \n    \n      \n        hasPhageAuthorization(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to determine if current user has authorization to\nupdate a phage strain\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress responses object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      strainPHAGEphage strain from phageById with id phageId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getFridgeInfo\n  \n    \n      \n        getFridgeInfo(fridge) ⇒ Object\n      \n        \n          \n            Helper method to return fridge details in consistent\nformat\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        fridgeFRIDGEfridge object from DB\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \ncleaned up fridge object with properties\nscenarioDetails, guesses, accessGranted, userId, scenCode, and strains\nEach strain of strains has comment, id, parents, strainNum, phageType, submitted, and numParents\n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/genetics-controller.html":{"url":"additional-documentation/controllers/genetics-controller.html","title":"additional-page - Genetics Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Genetics Controller\n\n  \n    Description\n  \n  \n    The controller which performs genetic crosses/manipulations in\nthe lab and plexer rooms\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                handlePlexer\n              \n          \n        \n      \n    \n  \n\n  \n  \n    createPlate\n  \n    \n      \n        createPlate(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/plate\n\n        \n        \n          \n            Creates a plate for the lab room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to create the plate; has properties phage1 (numPhage and id), (optional) phage2, lawnType, location, capacity, and scenarioData\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \njson object to response\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestNumber of phage is not set for one of the phage, send error as {message: 'numPhage not set'}\n\n    \n    404 Not foundPhage 1 is not found in DB, send error as {message: Error finding the specified phage(1|2)'}\n\n    \n    500 Internal Server ErrorOn error, sends error message as {message: error-message}\n\n    \n    200 OKsuccessfully generated plate; has properties full, smallPlaque, largePlaque, genotypes, and parents\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    handlePlexer\n  \n    \n      \n        handlePlexer(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/plexer\n\n        \n        \n          \n            Generates the NxM plates for the plexer\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to generate plexer;\nhas rowPhage (list with each having id and numPhage),\ncolPhage(list with each having id and numPhage),\nscenarioData, lawnType, location, capacity\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \njson object to response\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Service ErrorOn error finding phage in DB, send error as {message: error-message}\n\n    \n    200 OKsuccessfully generated plexer result as 2D array where each cell has full, smallPlaque, and largePlaque\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/scenario-controller.html":{"url":"additional-documentation/controllers/scenario-controller.html","title":"additional-page - Scenario Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Scenario Controller\n\n  \n    Description\n  \n  \n    The Scenario-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                list\n              \n\n                read\n              \n\n                scenarioByCode\n              \n          \n        \n      \n    \n  \n\n  \n  \n    list\n  \n    \n      \n        list(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket\n\n        \n        \n          \n            List all of the sceanrios in order of degree of difficulty\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKReturn list of scenarios\neach scenario has properties label, scenCode, purpose, startingPoint, relevance, and degOfDifficulty\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    read\n  \n    \n      \n        read(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket/:scenarioId\n\n        \n        \n          \n            Get the details about a specifc scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    returns json object of scenario to response with properties label, scenCode, purpose, startingPoint, relevance, and degOfDiff\n\n\n          \n        \n    \n  \n\n  \n  \n    scenarioByCode\n  \n    \n      \n        scenarioByCode(req, res, next, id) ⇒ function\n      \n        \n          \n    :scenarioId\n\n        \n        \n          \n            Retreives a scenario from a scenario code\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware to follow\n\n      \n        idStringscenario code from URL\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    \nnext middleware\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)On error, pass the error to next middleware\n\n    \n    next('Failed to load scenario id')\nIf scenario doesn't exist, pass message to next middleware\n\n\n    \n    next()\nif successful, set request scenario and go to next middleware\n\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/user-controller.html":{"url":"additional-documentation/controllers/user-controller.html","title":"additional-page - User Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  User Controller\n\n  \n    Description\n  \n  \n    The User-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                getUser\n              \n\n                editUser\n              \n\n                updatePassword\n              \n\n                resetPasswordEmail\n              \n\n                resetPassword\n              \n\n                signin\n              \n\n                signup\n              \n\n                signout\n              \n\n                grantAccess\n              \n\n                requiresLogin\n              \n\n                userById\n              \n\n                getUserInfo\n              \n          \n        \n      \n    \n  \n\n  \n  \n    getUser\n  \n    \n      \n        getUser(req, req) ⇒ Object\n      \n        \n              GET\n\n    /api/users/:userId\n\n        \n        \n          \n            Get information about a user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        reqObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKTrimmed user information from getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    editUser\n  \n    \n      \n        editUser(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/users/:userId\n\n        \n        \n          \n            Update user info - name and/or email\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectupdated information about user, specifically firstName, lastName, and email\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    updatePassword\n  \n    \n      \n        updatePassword(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/users/:userId/update-password\n\n        \n        \n          \n            Update a user password\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectrequest body with password (old password) and newPassword (new password)\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error finding user, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    401 UnauthorizedError changing password, i.e. old password isn't correct, sends error as {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    resetPasswordEmail\n  \n    \n      \n        resetPasswordEmail(req, res, next) ⇒ Object\n      \n        \n              POST\n\n    /api/auth/forget-password\n\n        \n        \n          \n            Sends an email to a user to allow user to reset password\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with email\nincludes \"body\" which has user email\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf error with email transporter, send error as {message: 'Error with server email service'}\n\n    \n    404 Not FoundIf email doesn't belong to a current user send message as {message: 'No account with that email.'}\n\n    \n    422 Unprocessable EntityIf error trying to send reset email, send error to response as {message: error-message}\n\n    \n    200 OKSuccessfully sends the email and sends success message to response\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    resetPassword\n  \n    \n      \n        resetPassword(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/auth/reset-password\n\n        \n        \n          \n            Allows user to reset the password using a token (sent by email)\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with password (new password),\nconfirmPassword (password entered second time) and token (token sent to email to allow password reset)\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf database error, send {message: error-message}\n\n    \n    404 Not FoundIf token is invalid, send error as {message: 'Invalid token.'}\n\n    \n    403 ForbiddenIf token is expired, send error as {message: 'Token has expired'}\n\n    \n    400 Bad RequestIf password and confirm password don't match, send error as {message: 'Confirm password does not match.'}\n\n    \n    200 OKIf successfully update password, send {message: 'Password has been reset.'}\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    signin\n  \n    \n      \n        signin(req, res, next) ⇒ Object | function\n      \n        \n              POST\n\n    /api/auth/signin\n\n        \n        \n          \n            Using passport authenticate and request login in, attempts to sign users in\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email) and password\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object on error or go to next middleware on success\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, send error as {message: error-message}\n\n    \n    next()On success, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    signup\n  \n    \n      \n        signup(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/auth/signup\n\n        \n        \n          \n            Create a new user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email), password,\nfirstName, lastName, and courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error creating/saving user, sends {message: error-message}\n\n    \n    400 Bad RequestOn error logging in, sends {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    signout\n  \n    \n      \n        signout(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/auth/signout\n\n        \n        \n          \n            Sign out a logged in user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKSends true\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    grantAccess\n  \n    \n      \n        grantAccess(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/students/:studentId/:scenarioId\n\n        \n        \n          \n            grant access to student for specific scenario\nNote: this function is called after [deleteStudentFridge]{@link fridge-controller.html#deleteStudentFridge} middleware\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent to grant access for from userById with id studentId\n\n      \n      scenarioSCENARIOscenario to grant access for from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectrequest body with access indicating to grant (true) or revoke (false) access\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKIf user doesn't have accessGranted property, send 200 response as if it was successful\n\n    \n    200 OKIf successfully update user, send updated user\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    requiresLogin\n  \n    \n      \n        requiresLogin(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user can access the path depending if they are logged in\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware to follow\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    \njson response when not logged in otherwise go to next middleware\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    401 UnauthorizedIf not currently logged in, send error as {message: 'User is not logged in'}\n\n    \n    next()If logged in, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    userById\n  \n    \n      \n        userById(req, res, next, id) ⇒ function\n      \n        \n          \n    :userId | :studentId\n\n        \n        \n          \n            Find user (if they exist) by the user id\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextObjectNext function to go to\n\n      \n        idstringuser's id as a string from URL\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    \nnext middleware\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next('Invalid user')If id is invalid, pass message to next middleware\n\n    \n    next(error)If some error, pass error to next middleware\n\n    \n    next('User not found')If id doesn't belong to a user, pass message to next middleware\n\n    \n    next()Able to find user\nIf req.curUser isn't set, set request curUser as the logged in user and go to next middleware;\nIf req.curUser is set, set request student as the secondary user and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getUserInfo\n  \n    \n      \n        getUserInfo(user) ⇒ Object\n      \n        \n          \n            Returns trimmed user info in a consistent manner\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        userUSERuser object from DB\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    trimmed user object to have properties id, firstName,\nlastName, email, and role\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics.html":{"url":"additional-documentation/genetics.html","title":"additional-page - Genetics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Genetics\n\nPhage\n\n  \n    \n      Phage Scenario\n    \n    \n      generateScenario\n      makeGene\n      makePhage\n      makeWTPhage\n      makeFrameshiftPhage\n      makeDeletionPhage\n      generateFrameshift\n      checkPhageFrameshift\n      getNewSpot\n      generateDeletion\n      checkPhageDeletion\n    \n  \n  \n  \n    \n      Phage Logic\n    \n    \n      doPheno\n      getFrames\n    \n  \n  \n  \n    \n      Phage Experiment\n    \n    \n      recombine\n      mutagenize\n      _validRecombDel\n      _copyDeletion\n    \n  \n  \n \nPlates\n\n  \n    \n      Plate Experiment\n    \n    \n      createPlate\n      createPlatePhage\n      generatePlate\n      computeRecombParameters\n      computeNumOffspring\n      shufflePlaqueList\n    \n  \n  \n  \n    \n      Plexer Experiment\n    \n    \n      createPlexerPlate\n      generatePlexerPlate\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-scenario.html":{"url":"additional-documentation/genetics/phage-scenario.html","title":"additional-page - Phage Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Scenario\n\n  \n    Description\n  \n  \n    Functions which handle creating  phage for different scenarios\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                generateScenario\n              \n\n                makeGene\n              \n\n                makePhage\n              \n\n                makeWTPhage\n              \n\n                makeFrameshiftPhage\n              \n\n                makeDeletionPhage\n              \n\n                _generateFrameshift\n              \n\n                _checkPhageFrameshift\n              \n\n                _getNewSpot\n              \n\n                _generateDeletion\n              \n\n                _checkPhageDeletion\n              \n          \n        \n      \n    \n  \n\n  \n  \n    generateScenario\n  \n    \n      \n        generateScenario(scenario) ⇒ Object\n      \n        \n          \n            Generates all of the phage and other necessary info for a given scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        scenarioObjectparameters for the scenario; includes:\n\nmutationFreq (number): chance of mutation as decimal\nrecombinationFreq (number): chance of single recombination as decimal\ngcProb (number): percent of G/C's to use in gene\nminStops (number): minimum number of stop codons when out of frame\nintraMuteDist (number[])\ninterMuteDist (number)\nreferencePhage (string[]): descriptions of reference phage; known WT or mut\notherPhage (string[]): descriptions of non-reference phage; unknown WT or mut\n\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    all info needed for a new scenario\n\nstrains (Object[]): list of strains\nscenarioDetails (Object): scenario info needed for experiments later\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeGene\n  \n    \n      \n        makeGene(gcProb, minStops) ⇒ Object\n      \n        \n          \n            Make a WT gene - has no stop codons normally but has at least\nminStops with frameshifts\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        gcProbnumberGC probability (percent G/C vs A/T)\n\n      \n        minStopsnumberminimum number of stops for frameshifted gene\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    the nucleotide sequence to be used; includes:\n\nwtGene (string): nucleic acids that consitute this gene\nrealStops (number[]): location of stop codons\nframeStopList (number[][]): location and which frameshift the stop occurs\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makePhage\n  \n    \n      \n        makePhage(phageDetails, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Create a phage strain\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageDetailsObjectphage config info (from scenario config)\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectscenario parameters\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly created strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeWTPhage\n  \n    \n      \n        makeWTPhage(phage, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Create a WT phage - no mutations\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageObjectphage config info (from scenario config)\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectcomputed scenario info\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeFrameshiftPhage\n  \n    \n      \n        makeFrameshiftPhage(phage, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Generate a mutant phage strain that has at least 1 frameshift mutation\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageObjectphage config info (from scenario config)\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectcurrent scenario information; used to generate new, valid strain\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeDeletionPhage\n  \n    \n      \n        makeDeletionPhage(phage, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Create a phage strain with a large deletion\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageObjectconfiguration for phage to generate from scenario\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectconfiguration for current scenario\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _generateFrameshift\n  \n    \n      \n        _generateFrameshift(shiftType, nShifts, readable, scenData) ⇒ Array\n      \n        \n          \n            Attempt to generate a single frameshift mutation\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        shiftTypenumbershould it be insertion, deletion, or random\n\n      \n        nShiftsnumbernumber of shifts total for this phage\n\n      \n        readablestringshould be gene be in frame or not\n\n      \n        scenDataObjectcurrent scenario data to ensure valid phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    valid mutation(s) for this new phage or empty list if no valid mutation found\n\n\n          \n        \n    \n  \n\n  \n  \n    _checkPhageFrameshift\n  \n    \n      \n        _checkPhageFrameshift(keyMutes, scenData) ⇒ boolean\n      \n        \n          \n            Check that the potential frameshift(s) are valid given the\nmutations in other phage in the scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        keyMutesArraymutations to check\n\n      \n        scenDataObjectcurrent scenario data\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  boolean    \n    is the frameshift valid?\n\n\n          \n        \n    \n  \n\n  \n  \n    _getNewSpot\n  \n    \n      \n        _getNewSpot(lastMade, scenData) ⇒ number\n      \n        \n          \n            Attempt to create a new mutation\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        lastMadenumberthe last mutation made\n\n      \n        scenDataObjectcurrent scenario configuration info\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  number    \n    location of new frameshift mutation that isn't too close to other mutations\n\n\n          \n        \n    \n  \n\n  \n  \n    _generateDeletion\n  \n    \n      \n        _generateDeletion(usedDeleteSpots) ⇒ Array\n      \n        \n          \n            Attempt to generate a deletion if we run out of preset deletion spots/lengths\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        usedDeleteSpotsArraylist of deletion spots already used\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    new valid deletion if found or throws error\n\n\n          \n        \n    \n  \n\n  \n  \n    _checkPhageDeletion\n  \n    \n      \n        _checkPhageDeletion(keyMutes, usedDeleteSpots) ⇒ boolean\n      \n        \n          \n            Check that deletion is valid; far enough away from other deletions\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        keyMutesArraydeletion to check\n\n      \n        usedDeleteSpotsArraydeletions already in play for scenario\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  boolean    \n    is the deletion valid?\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-logic.html":{"url":"additional-documentation/genetics/phage-logic.html","title":"additional-page - Phage Logic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Logic\n\n  \n    Description\n  \n  \n    Functions which compute frameshift/phenotype type\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                doPheno\n              \n\n                getFrames\n              \n          \n        \n      \n    \n  \n\n  \n  \n    doPheno\n  \n    \n      \n        doPheno(mutantList, stopList) ⇒ string\n      \n        \n          \n            Determine the phenotype of a phage based on the list of mutations\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        mutantListArraymutations for this phage strain\n\n      \n        stopListArraylocations of stop codons for varying frameshifts\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  string    \n    phenotype; one of \"allTranslated\", \"frameShifted\", \"deleted\", or \"stopped\"\n\n\n          \n        \n    \n  \n\n  \n  \n    getFrames\n  \n    \n      \n        getFrames(whoSays, mutantList, stopList) ⇒ Object\n      \n        \n          \n            Get the frame shift for a mutant\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        whoSaysstringwho is asking; not used\n\n      \n        mutantListArraymutatations in this phage\n\n      \n        stopListArraylocations of stop codons depending on framshift\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    includes frame (frameshift number of gene as a whole) and frameList (frameshift cummulatively for each frame)\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-experiment.html":{"url":"additional-documentation/genetics/phage-experiment.html","title":"additional-page - Phage Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Experiments\n\n  \n    Description\n  \n  \n    Functions which perform experiments on the phage strains\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                recombine\n              \n\n                mutagenize\n              \n\n                _validRecombDel\n              \n\n                _copyDeletion\n              \n          \n        \n      \n    \n  \n\n  \n  \n    recombine\n  \n    \n      \n        recombine(phageGeno1, phageGeno2, numXOver, numToDo) ⇒ Array\n      \n        \n          \n            Recombine 2 strains with specified number of crossovers and number of offspring\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageGeno1Objectgenotype of phage 1 (shifts and deletion)\n\n      \n        phageGeno2Objectgenotype of phage 2 (shifts and deletion)\n\n      \n        numXOvernumbernumber of crossovers\n\n      \n        numToDonumberhow many offspring to create\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    list of recombined offspring genotypes (shifts and deletion)\n\n\n          \n        \n    \n  \n\n  \n  \n    mutagenize\n  \n    \n      \n        mutagenize(inList, numDesired) ⇒ Array>\n      \n        \n          \n            Create N number of mutants\n\nchecks that mutations aren't too close together on the chromosome\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        inListArraymutations (shifts) of phage to mutagenize\n\n      \n        numDesirednumbernumber of new mutants to generate\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array>    \n    2D array of new mutants;\nDimensions: numDesired x inList.length+1\n\n\n          \n        \n    \n  \n\n  \n  \n    _validRecombDel\n  \n    \n      \n        _validRecombDel(checkPos, delList) ⇒ boolean\n      \n        \n          \n            check if recombination position is within a deletion\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        checkPosnumberposition to check\n\n      \n        delListArraylist of deletions for phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  boolean    \n    true if recombination is valid (not in a deletion); false otherwise\n\n\n          \n        \n    \n  \n\n  \n  \n    _copyDeletion\n  \n    \n      \n        _copyDeletion(sPos, ePos, delList) ⇒ Array\n      \n        \n          \n            Create a copy of deletions within the start and end positions of\nchromosome chunk to be copied\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        sPosnumberstart position of chrosomome chunk to copy\n\n      \n        ePosnumberend position of chromosome chunk to copy\n\n      \n        delListArraylist of deletions for this phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    copy of the deletions\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plate-experiment.html":{"url":"additional-documentation/genetics/plate-experiment.html","title":"additional-page - Plate Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plate Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plates of phage crosses\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                createPlatePhage\n              \n\n                generatePlate\n              \n\n                _computeRecombParameters\n              \n\n                _computeNumOffspring\n              \n\n                _shufflePlaqueList\n              \n          \n        \n      \n    \n  \n\n  \n  \n    createPlate\n  \n    \n      \n        createPlate(phage1, phage2, lawnType, specials, capacity, whoCalled, scenData) ⇒ Object\n      \n        \n          \n            Creates the lab room plate\n\nOnly used in the lab room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phage1Objectfirst phage in the cross\n\n      \n        phage2Object | nullsecond phage in the cross or null if not crossing\n\n      \n        lawnTypestringE. coli bacteria type \"B\" or \"K\"\n\n      \n        specialsObjectother special parameters (not used)\n\n      \n        capacitynumbermax number of plaques allowed on the plate\n\n      \n        whoCalledstringlocation/room asking to generate the plate\n\n      \n        scenDataObjectscenario information\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    new plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques, number is index of genotype in genotypes list\ngenotypes (number[][]): list of genotypes for this plate\nparents (string[]): ids of input phage\n\n\n\n          \n        \n    \n  \n\n  \n  \n    createPlatePhage\n  \n    \n      \n        createPlatePhage() ⇒ Object\n      \n        \n          \n            Create the genotypes and strains for this plate\n\nUsed by both the lab room and plexer room\n          \n        \n        \n          \n              Returns :  Object    \n    phage for this plate\n\ngenoList (): list of genotypes\nstrainList (number[]): list of indices corresponding to genoList\nparents (string): ID's for original phage used to create plate\n\n\n\n          \n        \n    \n  \n\n  \n  \n    generatePlate\n  \n    \n      \n        generatePlate() ⇒ object\n      \n        \n          \n            Phenotypes the plate phage and ensures not too many phage on the plate\n\nThis function is only used in the lab room\n          \n        \n        \n          \n              Returns :  object    \n    representation of plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques; number is index of genotype in genotypes list\ngenotypes\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _computeRecombParameters\n  \n    \n      \n        _computeRecombParameters(f1, f2, p, n) ⇒ Array\n      \n        \n          \n            Compute the recombination parameters\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        f1numberfraction of phage1\n\n      \n        f2numberfraction of phage2\n\n      \n        pnumberrecombination probability\n\n      \n        nnumbertotal number of offspring expected\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    \nnumber of single, double, and triple recombinants to create\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _computeNumOffspring\n  \n    \n      \n        _computeNumOffspring(n1, n2, nR, mutFreq, recFreq, identical) ⇒ Object\n      \n        \n          \n            Compute the expected number of offspring\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        n1numbernumber of input for phage1\n\n      \n        n2numbernumber of input for phage2\n\n      \n        nRnumberratio of phage1 to phage2\n\n      \n        mutFreqnumbermutation frequency for the scenario\n\n      \n        recFreqnumberfrequency of recombination for scenario\n\n      \n        identicalbooleanare the two phage identical\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    numbers/types of offspring to create\n\nnumOffspring (number): number of offspring aiming for\ntotal (number): actual number of offspring to be generated\nnumGeno (number[]): number of each parental geonotype\nnumMuts (number[]): number of mutants for each parental genotype\nnumRecomb (number[]): number of single, double, and triple recomb\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _shufflePlaqueList\n  \n    \n      \n        _shufflePlaqueList(inList, numInput) ⇒ Array\n      \n        \n          \n            shuffle strains; force mutants/recombinants to be towards the front of the list\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        inListArraystrain list to shuffle\n\n      \n        numInputnumbernumber of input/parent phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    shuffled strain list\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plexer-experiment.html":{"url":"additional-documentation/genetics/plexer-experiment.html","title":"additional-page - Plexer Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plexer Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plexer plates\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlexerPlate\n              \n\n                generatePlexerPlate\n              \n          \n        \n      \n    \n  \n\n  \n  \n    createPlexerPlate\n  \n    \n      \n        createPlexerPlate(rowPhage, colPhage, lawnType, special, capacity, whoCalled, scenData) ⇒ Object\n      \n        \n          \n            Creates the plexer results\n\nOnly used in the plexer room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        rowPhageArraylist of input phage representing the rows\n\n      \n        colPhageArraylist of input phage representing the columns\n\n      \n        lawnTypestringE. coli bacteria type; \"B\" or \"K\"\n\n      \n        specialObjectother parameters; not used\n\n      \n        capacitynumbermaximum number of phage per plate\n\n      \n        whoCalledstringlocation asking to create the plexer\n\n      \n        scenDataObjectcurrent scenario data\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    plexer results; 2D array (but as an object) where each cell is a \"plate\" that has\n\nfull (boolean): plate over capacity?\nsmallPlaque (number): number of small plaque on the plate\nlargePlaque (number): number of large plaque on the plate\n\n\n\n          \n        \n    \n  \n\n  \n  \n    generatePlexerPlate\n  \n    \n      \n        generatePlexerPlate(lawnTypeStr, genoList, strainList, capacity, scenData) ⇒ Object\n      \n        \n          \n            Phenotype the phage and format results for front-end\n\nOnly used by the plexer room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        lawnTypeStrstringE. coli bacteria type; \"B\" or \"K\"\n\n      \n        genoListArraylist of genotypes on the plate\n\n      \n        strainListArraylist of strains which is the index to the genotype\n\n      \n        capacitynumbercapacity of each plexer plate\n\n      \n        scenDataObjectcurrent scenario data\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \nresults for this single plexer plate\nfull (boolean): is plate over capacity\nsmallPlaque (number): number of small plaque on plate\nlargePlaque (number): number of large plaque on plate\n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models.html":{"url":"additional-documentation/models.html","title":"additional-page - Models","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Models\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/course-model.html":{"url":"additional-documentation/models/course-model.html","title":"additional-page - Course Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Course Model\n\n  \n    Description\n  \n  \n    Database schema for course\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                courseNum\n              \n\n                description\n              \n\n                instructors\n              \n          \n        \n      \n    \n  \n\n  \n  \n    courseNum\n  \n    \n      \n        courseNum : string\n      \n        \n          \n\n        \n        \n          \n            uniquely identifable course ID\n          \n        \n    \n  \n\n  \n  \n    description\n  \n    \n      \n        description : string\n      \n        \n          \n            basic text description of the course\n          \n        \n    \n  \n\n  \n  \n    instructors\n  \n    \n      \n        instructors : Array\n      \n        \n          \n            list of instructors for the course\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/fridge-model.html":{"url":"additional-documentation/models/fridge-model.html","title":"additional-page - Fridge Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Fridge Model\n\n  \n    Description\n  \n  \n    Database schema for fridge\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                owner\n              \n\n                scenario\n              \n\n                accessGranted\n              \n\n                strains\n              \n\n                scenarioDetails\n              \n\n                guesses\n              \n          \n        \n      \n    \n  \n\n  \n  \n    owner\n  \n    \n      \n        owner : USER\n      \n        \n          \n            user who owns the fridge\n          \n        \n    \n  \n\n  \n  \n    scenario\n  \n    \n      \n        scenario : SCENARIO\n      \n        \n          \n            scenario the fridge is for\n          \n        \n    \n  \n\n  \n  \n    accessGranted\n  \n    \n      \n        accessGranted : boolean\n      \n        \n          \n            has access been granted by instructor\n- when false, phage strains are the same for all users\n- when true, phage are generated using random numbers\n          \n        \n    \n  \n\n  \n  \n    strains\n  \n    \n      \n        strains : Array\n      \n        \n          \n            list of phage strains\nin the fridge\n          \n        \n    \n  \n\n  \n  \n    scenarioDetails\n  \n    \n      \n        scenarioDetails : String\n      \n        \n          \n            - stringified object of the scenario details generated when\nthe fridge was created and is needed for performing\nexperiments\n- includes interMuteDist, intraMuteDist, mutationFreq, recombinationFreq,\ndeleteSizes, deleteSpots, usedDeleteSpots,\nusedShiftSpots, wtGene, realStops, framesStopList\n          \n        \n    \n  \n\n  \n  \n    guesses\n  \n    \n      \n        guesses : String\n      \n        \n          \n            stringified object of user's\nguesses for locations of deletions where the key is the\nstrain number of the guess and the value is an array of\nboolean values indicating if guessed a deletion\n          \n        \n        \n          \n            \n    Example : \n  \"{'1': [false, false, false, false, true, true, ...],\n  '2': [true, true, true, false, false, false, ...],\n  '3': [false, false, false, false, false, false, ...]\n }\"\n \n  \n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/phage-model.html":{"url":"additional-documentation/models/phage-model.html","title":"additional-page - Phage Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Phage Model\n\n  \n    Description\n  \n  \n    Database schema for phage strains\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                strainNum\n              \n\n                owner\n              \n\n                scenarioOrigin\n              \n\n                phageType\n              \n\n                mutationList\n              \n\n                deletion\n              \n\n                comment\n              \n\n                submitted\n              \n\n                parents\n              \n\n                numParents\n              \n          \n        \n      \n    \n  \n\n  \n  \n    strainNum\n  \n    \n      \n        strainNum : number\n      \n        \n          \n\n        \n        \n          \n            location of the phage in the fridge; note this is 0-based but fridge interface is 1-based\n          \n        \n    \n  \n\n  \n  \n    owner\n  \n    \n      \n        owner : USER\n      \n        \n          \n            user who this phage belongs to\n          \n        \n    \n  \n\n  \n  \n    scenarioOrigin\n  \n    \n      \n        scenarioOrigin : SCENARIO\n      \n        \n          \n            scenario that\nthis phage was created for\n          \n        \n    \n  \n\n  \n  \n    phageType\n  \n    \n      \n        phageType : String\n      \n        \n          \n            description of who created phage; must be one of reference, unknown or user\n          \n        \n    \n  \n\n  \n  \n    mutationList\n  \n    \n      \n        mutationList : Array\n      \n        \n          \n            list of frameshift mutations\n- for each mutation, absolute value of number indicates position in the gene\n- positive/negative number indicates plus/minus frameshift\n          \n        \n        \n          \n            \n    Example : \n    One plus frameshift mutation \n  [43]\n \n  \n\n    Example : \n    One minus frameshift mutation \n  [-178]\n \n  \n\n    Example : \n    Two frameshifts of opposite type  \n  [106, -213]\n \n  \n          \n        \n    \n  \n\n  \n  \n    deletion\n  \n    \n      \n        deletion : Array\n      \n        \n          \n            list of deletions in the strain;\n- if length 2, [0] is start of deletion and [1] is end\n- if length greater than 2, there are multiple deletions that start on even index positions and end on odd index position\n          \n        \n        \n          \n            \n    Example : \n    80 bp deletion at the beginning of gene \n  [0, 80]\n \n  \n\n    Example : \n    150 bp deletion in the middle of the gene \n  [125, 275]\n \n  \n\n    Example : \n    Multiple deletions: 40 bp-90 bp and 200 bp-280 bp \n  [40, 90, 200, 280]\n \n  \n          \n        \n    \n  \n\n  \n  \n    comment\n  \n    \n      \n        comment : String\n      \n        \n          \n            User/scenario comment that describes this phage strain; makes it easier to remember details about each phage\n          \n        \n    \n  \n\n  \n  \n    submitted\n  \n    \n      \n        submitted : boolean\n      \n        \n          \n            for user phage, is this a phage that should be graded by instructor\n- used when scenario asks users to create a phage with a specific mutation and makes it easier for the instr to phage\n          \n        \n    \n  \n\n  \n  \n    parents\n  \n    \n      \n        parents : Array\n      \n        \n          \n            when phage created in the lab room on the plate, these are the parent(s) used during the experiment\n          \n        \n    \n  \n\n  \n  \n    numParents\n  \n    \n      \n        numParents : number\n      \n        \n          \n            when phage created in lab room on the lab, number of parents used during the experiment\n   - used to know if a phage has a parent that was deleted from the DB\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/scenario-model.html":{"url":"additional-documentation/models/scenario-model.html","title":"additional-page - Scenario Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Scenario Model\n\n  \n    Description\n  \n  \n    Database schema for scenarios (scenarios are created when the application runs the first time)\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                label\n              \n\n                fileCode\n              \n\n                scenCode\n              \n\n                defOfDiff\n              \n\n                mutationFreq\n              \n\n                recombinationFreq\n              \n\n                gcProb\n              \n\n                minStops\n              \n\n                intraMuteDist\n              \n\n                interMuteDist\n              \n\n                purpose\n              \n\n                relevance\n              \n\n                startingPoint\n              \n\n                referencePhage\n              \n\n                otherPhage\n              \n          \n        \n      \n    \n  \n\n  \n  \n    label\n  \n    \n      \n        label : string\n      \n        \n          \n            human-readable label describing the scenario\n          \n        \n    \n  \n\n  \n  \n    fileCode\n  \n    \n      \n        fileCode : string\n      \n    \n  \n\n  \n  \n    scenCode\n  \n    \n      \n        scenCode : string\n      \n        \n          \n\n        \n        \n          \n            short string used to uniquely\nidentify each scenario via URL\n          \n        \n    \n  \n\n  \n  \n    defOfDiff\n  \n    \n      \n        defOfDiff : number\n      \n        \n          \n            relative degree of difficulty used to order the scenarios on the scenario page\n          \n        \n    \n  \n\n  \n  \n    mutationFreq\n  \n    \n      \n        mutationFreq : number\n      \n        \n          \n            chance creating a new frameshift mutation during an experiment\n          \n        \n    \n  \n\n  \n  \n    recombinationFreq\n  \n    \n      \n        recombinationFreq : number\n      \n        \n          \n            chance of single recombination when crossing two phage in an experiment\n          \n        \n    \n  \n\n  \n  \n    gcProb\n  \n    \n      \n        gcProb : number\n      \n        \n          \n            integer number for percent G and C's when creating the WT gene\n          \n        \n    \n  \n\n  \n  \n    minStops\n  \n    \n      \n        minStops : number\n      \n        \n          \n            minumum number of possible stop codons that would be created during frameshifts of a gene\n          \n        \n    \n  \n\n  \n  \n    intraMuteDist\n  \n    \n      \n        intraMuteDist : Array\n      \n        \n          \n            mutations on the same phage are\nbetween [0] and [1] distance apart when interMuteDist isn't set\n          \n        \n    \n  \n\n  \n  \n    interMuteDist\n  \n    \n      \n        interMuteDist : number\n      \n        \n          \n            minimum distance apart that\nmutations should be for different phage of the same scenario; equals -1 when unset\n          \n        \n    \n  \n\n  \n  \n    purpose\n  \n    \n      \n        purpose : string\n      \n        \n          \n            description of the goal of the scenario for users\n          \n        \n    \n  \n\n  \n  \n    relevance\n  \n    \n      \n        relevance : String\n      \n        \n          \n            description of why this scenario is important for learning\n          \n        \n    \n  \n\n  \n  \n    startingPoint\n  \n    \n      \n        startingPoint : String\n      \n        \n          \n            description of the phage\nstrains in the fridge when first created\n          \n        \n    \n  \n\n  \n  \n    referencePhage\n  \n    \n      \n        referencePhage : Array\n      \n        \n          \n            each item is a phage to be created for the scenario when fridge created\n- each item includes details about what mutations/deletions, if any, to include in the phage\n- as a reference phage, mutation type is told to user\n          \n        \n    \n  \n\n  \n  \n    otherPhage\n  \n    \n      \n        otherPhage : Array\n      \n        \n          \n            each item is a phage to be created for the scenario when fridge created\n- each item includes details about what mutations/deletions, if any, to include in the phage\n- as an other phage, mutation type is not told to user and discovering the mutation is often the puprose for the scenario\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/user-model.html":{"url":"additional-documentation/models/user-model.html","title":"additional-page - User Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  User Model\n\n  \n    Description\n  \n  \n    Database schema for user\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                authenticate\n              \n\n                changePassword\n              \n\n                userId\n              \n\n                firstName\n              \n\n                lastName\n              \n\n                email\n              \n\n                password\n              \n\n                course\n              \n\n                accessGranted\n              \n\n                role\n              \n\n                lastLogin\n              \n\n                resetPasswordToken\n              \n\n                resetPasswordExpires\n              \n\n                rolesEnum\n              \n          \n        \n      \n    \n  \n\n  \n  \n    authenticate\n  \n    \n      \n        authenticate(candidatePassword, callback) ⇒ function\n      \n        \n          \n            Determines if the entered password is correct\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        candidatePasswordstringuser input password to compare to database\n\n      \n        callbackfunctionCallback function to pass result to\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    Pass error message and if password is a match to the callback function\n\n\n          \n        \n    \n  \n\n  \n  \n    changePassword\n  \n    \n      \n        changePassword(oldPassword, newPassword, callback) ⇒ function\n      \n        \n          \n            Update a user password, assuming the oldPassword is correct\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        oldPasswordstringuser input for current password\n\n      \n        newPasswordstringthe new password user wants to change to\n\n      \n        callbackfunctionCallback function to pass result to\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    Pass error message or null to callback function\n\n\n          \n        \n    \n  \n\n  \n  \n    userId\n  \n    \n      \n        userId : number\n      \n        \n          \n\n        \n        \n          \n            auto-incremented user ID\n          \n        \n    \n  \n\n  \n  \n    firstName\n  \n    \n      \n        firstName : string\n      \n        \n          \n            user's first name\n          \n        \n    \n  \n\n  \n  \n    lastName\n  \n    \n      \n        lastName : string\n      \n        \n          \n            user's last name\n          \n        \n    \n  \n\n  \n  \n    email\n  \n    \n      \n        email : string\n      \n        \n          \n\n        \n        \n          \n            user's email address\n          \n        \n    \n  \n\n  \n  \n    password\n  \n    \n      \n        password : string\n      \n        \n          \n\n        \n        \n          \n            user's password; actual password is not stored in DB\n          \n        \n    \n  \n\n  \n  \n    course\n  \n    \n      \n        course : COURSE\n      \n        \n          \n            course the user is part of\n          \n        \n    \n  \n\n  \n  \n    accessGranted\n  \n    \n      \n        accessGranted : Object\n      \n        \n          \n            for each scenario (as key), has access been granted\n          \n        \n        \n          \n            \n    Example : \n  {\"scen1\": false, \"scen2\": true, \"scen3\": true}\n \n  \n          \n        \n    \n  \n\n  \n  \n    role\n  \n    \n      \n        role : string\n      \n        \n          \n            user's role which is used to determine website access; one of [rolesEnum]{@link #rolesEnum}\n          \n        \n    \n  \n\n  \n  \n    lastLogin\n  \n    \n      \n        lastLogin : Date\n      \n        \n          \n            date and time of the last time the user logged in\n          \n        \n    \n  \n\n  \n  \n    resetPasswordToken\n  \n    \n      \n        resetPasswordToken : string\n      \n        \n          \n            token generated for user when they request a password reset; necessary to be able to set the new password\n          \n        \n    \n  \n\n  \n  \n    resetPasswordExpires\n  \n    \n      \n        resetPasswordExpires : Date\n      \n        \n          \n            date and time that the password-reset token expires; token is no longer valid after this time\n          \n        \n    \n  \n\n  \n  \n    rolesEnum\n  \n    \n      \n        rolesEnum : enum\n      \n        \n          \n            List of valid roles for users and error message\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
