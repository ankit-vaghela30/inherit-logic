var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.417,1,1.124]],["body/components/AdminComponent.html",[0,0.744,1,1.773,2,0.494,3,0.333,4,1.17,5,0.306,6,3.715,7,0.179,8,5.805,9,1.064,10,5.805,11,4.013,12,7.137,13,2.775,14,3.26,15,5.101,16,1.347,17,3.684,18,0.981,19,3.783,20,2.996,21,2.341,22,1.697,23,2.853,24,0.969,25,2.481,26,1.697,27,5.805,28,0.405,29,0.956,30,2.314,31,7.137,32,2.972,33,1.295,34,2.704,35,1.404,36,2.374,37,2.087,38,1.468,39,5.805,40,0.676,41,0.011,42,1.001,43,0.544,44,0.779,45,3.122,46,4.228,47,2.677,48,2.268,49,2.334,50,2.585,51,1.564,52,0.62,53,1.508,54,0.772,55,4.228,56,0.915,57,1.508,58,1.464,59,0.709,60,0.566,61,2.182,62,1.344,63,1.652,64,2.273,65,0.319,66,0.548,67,4.228,68,3.377,69,4.637,70,0.97,71,2.677,72,1.773,73,1.17,74,1.17,75,1.05,76,1.607,77,1.05,78,1.564,79,1.17,80,0.995,81,1.108,82,0.515,83,1.17,84,1.05,85,1.17,86,1.05,87,1.17,88,1.05,89,1.607,90,1.05,91,1.835,92,1.05,93,1.17,94,1.05,95,1.108,96,1.607,97,1.079,98,1.607,99,1.05,100,1.17,101,1.05,102,1.079,103,0.758,104,1.975,105,1.05,106,1.139,107,1.05,108,0.466,109,1.05,110,1.17,111,1.05,112,0.779,113,1.05,114,1.17,115,1.05,116,1.17,117,1.05,118,1.17,119,1.05,120,0.405,121,1.108,122,1.17,123,1.079,124,0.676,125,1.05,126,0.779,127,1.05,128,1.17,129,1.05,130,1.17,131,1.05,132,1.17,133,1.05,134,1.17,135,1.05,136,1.05,137,1.05,138,1.05,139,1.17,140,1.05,141,1.17,142,1.05,143,1.108,144,1.139,145,1.17,146,0.007,147,0.007]],["title/injectables/AdminGuard.html",[148,1.714,149,3.128]],["body/injectables/AdminGuard.html",[2,0.34,3,0.406,5,0.373,7,0.281,9,1.163,18,0.806,20,3.419,21,3.297,22,2.14,28,0.494,30,1.507,33,1.477,35,1.246,36,2.895,37,2.258,38,1.362,40,1.06,41,0.011,42,1,43,0.543,44,1.22,45,3.562,52,1.132,54,0.806,56,0.711,59,0.727,60,0.69,63,2.014,65,0.389,66,0.669,146,0.008,147,0.008,148,2.772,149,4.579,150,4.53,151,5.82,152,4.895,153,3.833,154,3.438,155,2.509,156,5.202,157,6.786,158,3.374,159,5.155,160,5.82,161,5.523,162,3.005,163,5.523,164,5.155,165,4.895,166,2.758,167,2.675,168,5.29,169,2.509,170,1.187,171,2.08,172,3.15,173,3.498,174,1.549,175,1.953,176,1.936,177,4.53,178,5.155,179,5.155,180,4.118,181,5.155,182,4.53]],["title/components/AdminHomeComponent.html",[0,0.417,75,1.124]],["body/components/AdminHomeComponent.html",[0,0.75,1,1.254,2,0.333,3,0.397,4,1.397,5,0.365,7,0.214,9,1.177,16,1.362,18,0.99,24,1.156,25,2.505,26,1.91,41,0.01,42,0.986,54,0.625,59,0.501,60,0.675,65,0.381,66,0.655,70,0.94,72,1.903,73,1.397,74,1.397,75,1.903,76,1.808,77,1.254,78,1.76,79,1.397,80,1.188,81,1.323,82,0.614,83,1.397,84,1.254,85,1.397,86,1.254,87,1.397,88,1.254,89,1.808,90,1.254,91,2.005,92,1.254,93,1.397,94,1.254,95,1.323,96,1.808,97,1.288,98,1.808,99,1.254,100,1.397,101,1.254,102,1.288,103,0.904,104,2.121,105,1.254,106,1.359,107,1.254,108,0.556,109,1.254,110,1.397,111,1.254,112,0.93,113,1.254,114,1.397,115,1.254,116,1.397,117,1.254,118,1.397,119,1.254,120,0.483,121,1.323,122,1.397,123,1.288,124,0.808,125,1.254,126,0.93,127,1.254,128,1.397,129,1.254,130,1.397,131,1.254,132,1.397,133,1.254,134,1.397,135,1.254,136,1.254,137,1.254,138,1.254,139,1.397,140,1.254,141,1.397,142,1.254,143,1.323,144,1.359,145,1.397,146,0.008,147,0.008,183,4.435,184,4.031,185,4.435,186,2.721,187,5.219,188,3.243,189,4.829,190,3.669,191,5.741,192,4.517,193,6.534]],["title/modules/AdminModule.html",[194,1.522,195,3.128]],["body/modules/AdminModule.html",[1,2.051,2,0.353,3,0.422,5,0.387,7,0.227,9,1.059,16,1.117,18,0.826,41,0.011,54,0.65,59,0.862,60,0.716,65,0.512,66,0.694,75,2.051,115,2.051,126,0.986,146,0.008,147,0.008,149,5.708,155,2.57,174,1.609,184,4.276,194,2.635,195,6.123,196,1.609,197,2.763,198,3.845,199,2.304,200,3.697,201,4.704,202,4.704,203,4.704,204,4.704,205,3.676,206,4.44,207,3.502,208,1.801,209,5.353,210,2.651,211,5.962,212,5.014,213,6.785,214,3.649,215,3.006,216,2.763,217,5.353,218,5.353,219,5.353,220,5.353,221,4.276,222,5.353,223,5.353,224,4.704,225,5.353]],["title/interfaces/AdminStudent.html",[170,0.811,226,2.433]],["body/interfaces/AdminStudent.html",[2,0.367,3,0.438,5,0.402,7,0.236,9,0.988,16,1.408,18,0.967,28,0.532,29,1.144,41,0.011,42,1.144,43,0.57,51,2.041,52,1.018,54,0.532,56,1.15,59,0.69,65,0.572,70,0.901,72,1.381,108,0.613,146,0.008,147,0.008,154,3.417,169,2.871,170,1.358,171,1.497,210,2.172,226,3.736,227,4.108,228,2.208,229,6.105,230,3.762,231,4.884,232,3.736,233,3.843,234,2.759,235,2.759,236,2.315,237,1.175,238,1.353,239,3.434,240,2.315,241,3.122,242,3.623,243,5.24,244,4.44,245,2.759,246,2.759,247,4.44,248,2.241,249,4.44,250,4.44,251,3.434,252,4.44,253,4.44,254,3.434,255,3.434,256,4.44,257,6.053,258,4.44,259,2.392,260,4.44]],["title/components/AppComponent.html",[0,0.417,77,1.124]],["body/components/AppComponent.html",[0,0.749,1,1.25,2,0.332,3,0.396,4,1.805,5,0.364,7,0.213,9,0.716,16,1.306,18,0.932,19,4.25,24,1.153,25,2.505,35,1.749,38,1.035,41,0.01,42,0.984,54,0.624,59,0.5,60,0.674,65,0.38,66,0.653,70,0.653,72,1.901,73,1.393,74,1.393,75,1.25,76,1.805,77,1.901,78,2.062,79,1.393,80,1.185,81,1.319,82,0.613,83,1.393,84,1.25,85,1.393,86,1.25,87,1.393,88,1.25,89,1.805,90,1.25,91,2.003,92,1.25,93,1.393,94,1.25,95,1.319,96,1.805,97,1.284,98,1.805,99,1.25,100,1.393,101,1.25,102,1.284,103,0.902,104,2.118,105,1.25,106,1.356,107,1.25,108,0.555,109,1.25,110,1.393,111,1.25,112,0.927,113,1.25,114,1.393,115,1.25,116,1.393,117,1.25,118,1.393,119,1.25,120,0.482,121,1.319,122,1.393,123,1.284,124,0.805,125,1.25,126,0.927,127,1.25,128,1.393,129,1.25,130,1.393,131,1.25,132,1.393,133,1.25,134,1.393,135,1.25,136,1.25,137,1.25,138,1.25,139,1.393,140,1.25,141,1.393,142,1.25,143,1.319,144,1.356,145,1.393,146,0.008,147,0.008,166,2.716,167,2.259,169,2.471,189,4.82,239,4.028,261,4.422,262,4.028,263,3.366,264,5.731,265,5.731,266,5.033]],["title/modules/AppModule.html",[194,1.522,267,3.344]],["body/modules/AppModule.html",[2,0.279,3,0.333,5,0.306,7,0.179,37,2.26,41,0.011,52,0.62,59,0.876,60,0.566,63,1.654,65,0.439,66,0.549,70,0.549,77,2.093,101,1.92,113,1.92,117,1.92,126,0.78,146,0.007,147,0.007,152,3.128,174,1.272,189,4.294,190,3.725,194,2.403,195,5.345,196,1.272,197,2.185,198,3.424,199,3.221,200,3.293,205,3.442,207,2.999,208,1.424,214,3.124,215,2.377,216,2.185,246,2.101,251,2.614,267,6.62,268,3.719,269,3.719,270,3.719,271,3.719,272,3.719,273,5.345,274,5.345,275,5.345,276,5.345,277,4.157,278,5.345,279,5.345,280,3.99,281,4.233,282,5.81,283,3.719,284,3.381,285,5.81,286,2.926,287,4.233,288,4.233,289,3.128,290,5.81,291,3.381,292,3.589,293,4.233,294,4.233,295,4.233,296,4.233,297,2.926,298,3.719,299,4.233,300,4.233,301,4.233,302,4.233,303,4.233,304,4.233,305,4.233,306,4.233,307,3.381,308,4.233,309,4.233,310,4.233,311,4.233,312,4.233,313,4.017,314,3.719,315,3.719,316,5.299,317,4.233,318,4.233,319,3.719,320,4.233]],["title/modules/AuthenticationModule.html",[194,1.522,273,3.128]],["body/modules/AuthenticationModule.html",[2,0.353,3,0.421,5,0.386,7,0.226,17,3.499,41,0.011,49,2.216,54,0.749,59,0.862,60,0.715,65,0.512,66,0.693,94,2.05,95,1.401,125,2.05,126,1.442,129,2.05,131,2.05,133,2.05,146,0.008,147,0.008,174,1.607,194,2.634,196,1.607,197,2.759,198,3.842,199,2.301,200,2.653,207,3.499,208,1.799,212,5.009,214,3.645,215,3.002,273,6.084,289,3.95,321,4.697,322,4.697,323,5.345,324,6.779,325,3.985,326,5.009,327,5.956,328,5.956,329,3.364,330,5.956,331,4.27,332,5.956,333,5.345,334,5.345,335,5.345,336,5.345,337,5.345,338,4.27,339,5.414,340,4.27,341,5.345]],["title/injectables/AuthenticationService.html",[37,1.323,148,1.714]],["body/injectables/AuthenticationService.html",[0,0.372,2,0.328,3,0.203,5,0.186,7,0.274,9,0.799,13,1.929,16,0.664,18,0.491,19,2.629,28,0.247,29,0.664,30,1.891,33,0.9,34,1.528,35,0.624,37,1.18,38,1.607,40,1.035,41,0.011,42,0.976,43,0.615,44,1.192,48,2.733,49,2.744,50,1.796,51,1.087,52,1.238,53,0.92,54,0.856,56,0.842,57,2.005,58,1.947,59,0.558,60,0.345,62,0.82,64,1.387,65,0.195,66,0.335,70,0.729,95,0.676,126,1.481,144,1.087,146,0.005,147,0.007,148,1.883,153,2.003,155,2.129,167,1.398,169,1.528,171,1.742,172,2.626,173,2.687,175,0.977,176,1.784,200,2.79,208,1.891,210,1.576,212,2.982,232,3.023,234,2.003,235,2.003,238,1.259,239,2.492,240,3.45,259,1.11,286,1.783,327,3.545,328,3.545,329,4.092,342,2.266,343,2.24,344,3.156,345,4.154,346,5.17,347,3.239,348,5.621,349,5.621,350,4.035,351,4.939,352,3.223,353,4.035,354,3.673,355,4.508,356,3.673,357,2.266,358,4.154,359,4.035,360,3.223,361,2.579,362,2.196,363,3.545,364,2.579,365,1.319,366,3.995,367,1.86,368,2.129,369,1.68,370,2.503,371,4.972,372,2.17,373,2.066,374,4.179,375,3.092,376,2.606,377,2.79,378,2.411,379,1.947,380,3.545,381,3.545,382,2.982,383,2.901,384,2.492,385,3.545,386,2.579,387,4.035,388,3.545,389,4.035,390,3.472,391,2.579,392,4.035,393,2.579,394,4.113,395,4.972,396,2.579,397,2.579,398,3.223,399,4.972,400,2.982,401,4.035,402,3.545,403,4.035,404,2.579,405,1.576,406,1.796,407,2.372,408,2.982,409,4.035,410,2.579,411,3.092,412,3.886,413,2.982,414,4.472,415,4.035,416,2.579,417,4.035,418,2.579,419,2.115,420,1.827,421,2.266,422,2.629,423,4.035,424,2.492,425,4.035,426,2.579,427,5.621,428,4.035,429,2.579,430,4.035,431,2.579,432,2.79,433,2.492,434,3.239,435,1.796,436,4.035,437,4.367,438,2.579,439,2.579,440,1.593,441,2.579,442,2.579,443,2.579,444,2.579,445,6.468,446,4.035,447,4.939,448,2.579,449,2.579,450,1.906]],["title/components/ConfirmDeleteDialogComponent.html",[0,0.417,80,1.065]],["body/components/ConfirmDeleteDialogComponent.html",[0,0.675,1,1.114,2,0.296,3,0.353,4,1.241,5,0.324,7,0.19,9,0.638,16,1.257,18,0.89,24,1.027,25,2.49,26,1.767,28,0.429,29,0.995,35,1.084,38,1.405,40,0.717,41,0.011,42,1.032,43,0.561,44,0.826,54,0.753,56,0.834,57,1.6,58,1.553,59,0.6,60,0.6,65,0.339,66,0.582,70,0.582,72,1.817,73,1.241,74,1.241,75,1.114,76,1.672,77,1.114,78,1.628,79,1.241,80,1.721,81,2.171,82,1.042,83,1.241,84,1.114,85,1.241,86,1.114,87,1.241,88,1.114,89,1.672,90,1.114,91,1.892,92,1.114,93,1.241,94,1.114,95,1.176,96,1.672,97,1.144,98,1.672,99,1.114,100,1.241,101,1.114,102,1.144,103,0.804,104,2.024,105,1.114,106,1.208,107,1.114,108,0.494,109,1.114,110,1.241,111,1.114,112,0.826,113,1.114,114,1.241,115,1.114,116,1.241,117,1.114,118,1.241,119,1.114,120,0.429,121,2.107,122,1.241,123,1.144,124,0.717,125,1.114,126,0.826,127,1.114,128,1.241,129,1.114,130,1.241,131,1.114,132,1.241,133,1.114,134,1.241,135,1.114,136,1.114,137,1.114,138,1.114,139,1.241,140,1.114,141,1.241,142,1.114,143,1.176,144,1.208,145,1.241,146,0.007,147,0.007,199,1.93,326,4.466,347,3.938,376,2.628,451,6.426,452,3.582,453,6.043,454,6.043,455,5.309,456,5.309,457,6.708,458,4.107,459,3.94,460,6.911,461,6.043,462,3.119,463,6.043,464,3.938,465,4.826,466,4.484,467,3.314,468,2.922,469,2.922,470,3.94,471,2.77,472,4.826]],["title/interfaces/Course.html",[16,0.745,170,0.811]],["body/interfaces/Course.html",[2,0.388,3,0.463,5,0.425,7,0.363,16,1.455,18,1.066,28,0.562,29,1.184,41,0.011,43,0.664,44,1.492,51,1.936,56,1.166,59,0.714,65,0.444,71,3.896,146,0.008,147,0.008,170,1.288,232,4.353,233,4.062,237,1.519,473,5.162,474,4.353,475,1.439,476,5.875]],["title/components/CourseCreateComponent.html",[0,0.417,84,1.124]],["body/components/CourseCreateComponent.html",[0,0.727,1,0.837,2,0.222,3,0.265,4,0.933,5,0.244,7,0.291,9,1.054,16,1.446,18,0.785,21,2.598,22,1.445,23,2.518,24,0.772,25,2.445,26,1.445,28,0.323,29,0.814,30,2.441,32,2.986,33,1.102,34,2.441,35,1.195,37,1.884,38,1.563,40,0.539,41,0.011,42,0.883,43,0.563,44,0.621,47,2.278,48,1.931,49,2.107,52,0.857,53,2.087,54,0.755,56,0.807,57,1.763,58,1.712,59,0.736,60,0.451,62,1.071,63,1.316,65,0.254,66,0.437,70,0.437,72,1.601,73,0.933,74,0.933,75,0.837,76,1.368,77,0.837,78,1.331,79,0.933,80,0.793,81,0.883,82,0.41,83,0.933,84,1.601,85,0.933,86,0.837,87,0.933,88,0.837,89,1.368,90,0.837,91,1.619,92,0.837,93,0.933,94,0.837,95,0.883,96,1.368,97,0.86,98,1.368,99,0.837,100,0.933,101,0.837,102,0.86,103,0.604,104,1.784,105,0.837,106,0.908,107,0.837,108,0.371,109,0.837,110,0.933,111,0.837,112,0.621,113,0.837,114,0.933,115,0.837,116,0.933,117,0.837,118,0.933,119,0.837,120,0.323,121,0.883,122,0.933,123,0.86,124,0.539,125,0.837,126,0.621,127,0.837,128,0.933,129,0.837,130,0.933,131,0.837,132,0.933,133,0.837,134,0.933,135,0.837,136,0.837,137,0.837,138,0.837,139,0.933,140,0.837,141,0.933,142,0.837,143,0.883,144,0.908,145,0.933,146,0.007,147,0.006,158,2.698,170,0.604,174,1.013,188,2.452,237,1.45,277,3.465,343,1.712,362,1.931,365,2.107,367,2.278,369,2.986,373,1.816,376,2.107,377,3.416,378,2.108,379,2.232,414,3.416,419,2.577,420,1.227,421,2.598,433,3.052,434,2.196,462,2.55,474,2.657,475,0.989,477,5.053,478,6.194,479,2.961,480,2.436,481,2.775,482,4.941,483,4.941,484,6.444,485,3.504,486,5.147,487,2.518,488,2.691,489,3.285,490,3.619,491,2.698,492,4.941,493,3.052,494,3.369,495,3.22,496,3.052,497,3.369,498,3.416,499,1.931,500,2.657,501,3.369,502,3.369,503,3.369,504,3.369,505,2.196,506,1.45,507,1.554,508,2.961,509,1.611,510,3.369,511,2.278,512,1.981,513,2.961,514,3.369,515,3.369,516,2.691,517,2.329,518,3.369,519,2.961,520,2.961,521,1.892,522,1.892,523,1.981,524,1.981]],["title/components/CourseEditComponent.html",[0,0.417,86,1.124]],["body/components/CourseEditComponent.html",[0,0.527,1,0.561,2,0.24,3,0.178,4,0.625,5,0.163,7,0.193,9,0.321,14,2.038,16,1.415,18,0.896,21,2.103,22,1.061,23,1.959,24,0.517,25,2.36,26,1.061,28,0.216,29,0.598,30,2.328,32,2.542,33,1.576,34,1.976,35,0.546,37,1.525,38,1.61,40,0.361,41,0.011,42,0.687,43,0.548,44,0.416,49,1.705,52,1.036,53,2.457,54,0.677,56,0.628,57,0.805,58,0.782,59,0.731,60,0.302,61,2.95,62,0.718,63,0.882,64,1.214,65,0.17,66,0.293,70,0.591,71,3.697,72,1.295,73,0.625,74,0.625,75,0.561,76,1.005,77,0.561,78,0.978,79,0.625,80,0.854,81,1.805,82,0.993,83,0.625,84,0.561,85,0.625,86,1.295,87,0.625,88,0.561,89,1.005,90,0.561,91,1.26,92,0.561,93,0.625,94,0.561,95,0.592,96,1.005,97,0.576,98,1.005,99,0.561,100,0.625,101,0.561,102,0.576,103,0.405,104,1.444,105,0.561,106,0.608,107,0.561,108,0.249,109,0.561,110,0.625,111,0.561,112,0.416,113,0.561,114,0.625,115,0.561,116,0.625,117,0.561,118,0.625,119,0.561,120,0.216,121,1.498,122,0.625,123,0.576,124,0.361,125,0.561,126,0.416,127,0.561,128,0.625,129,0.561,130,0.625,131,0.561,132,0.625,133,0.561,134,0.625,135,0.561,136,0.561,137,0.561,138,0.561,139,0.625,140,0.561,141,0.625,142,0.561,143,0.592,144,0.608,145,0.625,146,0.005,147,0.004,153,3.03,158,1.674,162,1.334,167,1.257,174,0.678,175,0.855,176,1.061,186,1.512,192,3.606,199,0.972,205,1.005,216,1.165,226,2.805,236,1.512,237,1.207,238,1.376,248,1.464,254,2.242,255,1.394,277,2.805,343,2.311,365,1.996,367,1.674,369,2.542,370,1.616,375,2.732,376,1.187,378,1.484,379,1.807,406,2.322,420,0.561,421,1.836,435,1.616,464,2.366,465,2.899,467,3.855,468,1.471,469,1.471,472,5.33,474,1.952,475,1.044,477,5.148,480,1.896,481,2.038,487,2.038,489,2.557,490,2.929,491,2.099,493,2.812,496,2.242,499,2.038,505,1.471,506,0.972,507,1.041,509,1.079,511,2.815,513,3.19,516,1.803,517,2.51,519,3.19,520,3.19,521,2.929,522,2.929,525,6.31,526,1.984,527,3.724,528,3.63,529,3.63,530,4.583,531,4.583,532,2.805,533,3.606,534,5.216,535,5.216,536,5.216,537,5.216,538,5.216,539,4.166,540,4.166,541,5.216,542,2.943,543,1.327,544,4,545,3.63,546,2.257,547,5.33,548,5.216,549,2.257,550,2.257,551,4.932,552,4.366,553,4.614,554,4.511,555,3.589,556,2.257,557,3.855,558,2.589,559,5.364,560,2.257,561,2.257,562,1.874,563,1.802,564,1.874,565,2.257,566,3.19,567,3.63,568,2.257,569,3.63,570,2.257,571,2.257,572,2.257,573,2.134,574,2.257,575,2.038,576,2.257,577,2.257,578,2.257,579,3.19,580,1.668,581,1.471,582,1.803,583,1.668,584,1.803,585,2.257,586,1.214,587,0.592,588,0.698,589,1.12,590,1.394,591,1.984,592,1.561,593,1.668,594,1.803,595,2.257,596,3.283,597,1.803,598,4,599,2.257,600,2.257,601,4.553,602,2.257,603,1.984,604,1.984,605,1.327,606,2.257,607,6.417,608,2.257,609,2.257,610,3.63,611,1.984,612,2.257,613,2.257,614,1.803,615,1.561,616,3.19,617,3.19,618,2.899,619,2.683,620,2.257,621,1.803,622,3.19,623,3.19,624,3.19,625,2.257,626,3.19,627,2.257,628,2.134,629,3.63,630,2.257,631,2.257,632,1.561,633,1.214,634,1.214,635,3.19,636,2.51,637,2.899]],["title/components/CourseIndivComponent.html",[0,0.417,88,1.124]],["body/components/CourseIndivComponent.html",[0,0.609,1,0.764,2,0.407,3,0.242,4,0.852,5,0.222,7,0.305,9,0.657,16,1.423,18,1.029,19,3.01,21,2.485,22,1.351,23,2.387,24,0.705,25,2.428,26,1.351,28,0.295,29,0.761,30,2.46,32,2.889,33,1.03,34,2.335,35,1.117,37,1.802,38,1.557,40,0.492,41,0.011,42,0.837,43,0.59,44,0.567,47,2.13,49,1.51,51,1.494,52,0.677,53,1.648,54,0.664,56,0.765,57,1.648,58,1.6,59,0.735,60,0.412,61,3.41,62,0.978,63,1.202,65,0.232,66,0.399,70,0.719,71,3.318,72,1.531,73,0.852,74,0.852,75,0.764,76,1.279,77,0.764,78,1.244,79,0.852,80,0.724,81,0.807,82,0.375,83,0.852,84,0.764,85,0.852,86,0.764,87,0.852,88,1.531,89,1.279,90,0.764,91,1.535,92,0.764,93,0.852,94,0.764,95,0.807,96,1.279,97,0.785,98,1.279,99,0.764,100,0.852,101,0.764,102,0.785,103,0.551,104,1.706,105,0.764,106,0.829,107,0.764,108,0.913,109,0.764,110,0.852,111,0.764,112,0.567,113,0.764,114,0.852,115,0.764,116,0.852,117,0.764,118,0.852,119,0.764,120,0.295,121,0.807,122,0.852,123,0.785,124,0.492,125,0.764,126,0.567,127,0.764,128,0.852,129,0.764,130,0.852,131,0.764,132,0.852,133,0.764,134,0.852,135,0.764,136,0.764,137,0.764,138,0.764,139,0.852,140,0.764,141,0.852,142,0.764,143,0.807,144,0.829,145,0.852,146,0.005,147,0.005,158,2.13,162,1.698,170,0.551,174,0.925,186,2.309,237,0.65,238,1.2,242,3.01,248,1.863,255,1.901,263,2.384,277,3.315,280,3.182,297,2.127,343,2.135,367,2.13,373,2.038,376,1.51,378,1.753,406,2.057,420,0.764,474,2.484,475,1.481,477,5.025,480,2.309,481,2.594,485,2.13,487,2.408,489,3.114,490,3.461,491,2.557,493,3.426,499,2.408,505,2.005,506,1.324,507,1.419,509,1.471,511,1.419,527,3.01,531,5.416,532,3.315,533,4.262,543,1.809,562,2.384,563,2.293,564,2.384,575,2.594,584,2.458,586,1.655,587,0.807,588,0.951,589,1.527,590,1.901,592,2.127,593,2.274,594,2.458,596,2.982,597,2.458,598,2.704,605,1.809,632,2.127,633,1.655,634,1.655,635,4.059,637,3.69,638,6.159,639,2.458,640,4.059,641,4.619,642,4.059,643,3.426,644,4.619,645,3.077,646,2.704,647,2.853,648,3.077,649,4.619,650,3.077,651,3.077,652,3.077,653,3.194,654,3.077,655,4.619,656,1.809,657,2.704,658,3.077,659,2.704,660,2.274,661,2.704,662,2.458,663,2.704,664,2.127,665,2.458,666,4.619,667,4.619,668,4.059,669,4.619]],["title/components/CourseListComponent.html",[0,0.417,90,1.124]],["body/components/CourseListComponent.html",[0,0.753,1,0.981,2,0.261,3,0.311,4,1.093,5,0.286,7,0.167,9,0.986,16,1.467,18,0.844,22,1.619,23,2.753,24,0.905,25,2.471,26,1.619,28,0.378,29,0.912,30,2.318,33,1.235,34,2.626,35,1.339,37,2.027,38,1.501,40,0.632,41,0.011,42,0.965,43,0.525,44,0.728,47,2.554,49,1.811,52,0.812,53,1.976,54,0.724,59,0.725,60,0.529,62,1.256,63,1.544,65,0.298,66,0.512,70,0.512,71,2.554,72,1.722,73,1.093,74,1.093,75,0.981,76,1.533,77,0.981,78,1.492,79,1.093,80,0.93,81,1.036,82,0.481,83,1.093,84,0.981,85,1.093,86,0.981,87,1.093,88,0.981,89,1.533,90,1.722,91,1.77,92,0.981,93,1.093,94,0.981,95,1.036,96,1.533,97,1.008,98,1.533,99,0.981,100,1.093,101,0.981,102,1.008,103,0.708,104,1.919,105,0.981,106,1.064,107,0.981,108,0.436,109,0.981,110,1.093,111,0.981,112,0.728,113,0.981,114,1.093,115,0.981,116,1.093,117,0.981,118,1.093,119,0.981,120,0.378,121,1.036,122,1.093,123,1.008,124,0.632,125,0.981,126,0.728,127,0.981,128,1.093,129,0.981,130,1.093,131,0.981,132,1.093,133,0.981,134,1.093,135,0.981,136,0.981,137,0.981,138,0.981,139,1.093,140,0.981,141,1.093,142,0.981,143,1.036,144,1.064,145,1.093,146,0.007,147,0.007,153,2.749,154,2.384,166,2.306,170,0.708,277,3.728,343,2.401,419,1.811,420,1.376,475,1.667,477,4.931,480,2.663,485,3.764,487,2.708,488,3.156,491,2.949,493,3.421,499,2.164,500,2.978,505,2.575,509,1.889,512,2.323,523,2.323,524,2.323,653,4.792,670,6.043,671,3.156,672,4.424,673,5.539,674,3.951,675,3.829,676,3.951,677,3.421,678,3.951,679,3.951,680,3.951,681,3.471,682,4.867]],["title/modules/CourseModule.html",[194,1.522,683,3.344]],["body/modules/CourseModule.html",[2,0.335,3,0.4,5,0.367,7,0.215,16,1.419,17,3.388,18,0.799,41,0.011,59,0.865,60,0.68,65,0.496,66,0.659,80,1.711,82,0.885,84,2.023,86,2.023,88,2.023,90,2.023,92,2.023,126,0.937,146,0.008,147,0.008,174,1.528,186,2.733,194,2.585,196,1.528,197,2.623,198,3.752,199,2.188,200,3.608,205,3.627,207,3.388,208,1.71,214,3.529,215,2.854,216,2.623,478,4.06,525,4.06,527,4.277,554,4.85,580,3.756,581,3.312,638,4.06,670,4.06,683,6.545,684,4.466,685,4.466,686,5.083,687,4.466,688,5.631,689,5.083,690,6.563,691,5.242,692,5.083,693,4.466,694,5.083,695,4.466,696,4.06,697,4.466,698,5.083,699,5.083,700,5.083,701,5.083]],["title/injectables/CourseResolver.html",[148,1.714,688,3.128]],["body/injectables/CourseResolver.html",[2,0.476,3,0.394,5,0.361,7,0.275,9,0.711,14,3.646,16,1.393,21,2.618,22,2.108,28,0.479,30,1.461,33,1.448,35,1.209,37,2.232,38,1.335,40,1.221,41,0.011,42,0.98,43,0.533,44,1.196,52,1.119,59,0.805,60,0.669,62,1.589,63,1.953,65,0.377,66,0.648,146,0.008,147,0.008,148,2.732,156,4.715,161,5.47,162,2.98,163,5.47,166,2.704,167,2.809,168,5.186,169,2.46,170,1.164,174,1.502,175,1.894,176,1.898,237,1.372,254,3.087,277,4.105,292,4.01,347,4.699,374,4.261,383,3.351,420,1.242,474,4.549,488,3.992,491,3.325,493,4.01,505,3.257,509,2.39,582,3.992,657,4.392,688,4.489,702,4.392,703,6.477,704,6.493,705,4.998,706,5.186,707,4.998,708,4.01,709,4.975,710,3.817,711,1.749,712,4.998]],["title/components/CourseScenarioComponent.html",[0,0.417,92,1.124]],["body/components/CourseScenarioComponent.html",[0,0.669,1,0.612,2,0.163,3,0.194,4,0.682,5,0.178,7,0.232,9,0.945,13,1.86,14,3.077,16,1.368,18,1.047,21,2.21,22,1.138,23,2.076,24,0.564,25,2.381,26,1.138,28,0.462,29,0.641,30,2.379,32,2.642,33,0.868,34,2.076,35,0.596,37,1.602,38,1.571,40,1.015,41,0.011,42,0.958,43,0.608,44,1.01,49,1.792,51,1.476,52,1.039,53,1.955,54,0.695,56,1.054,57,1.388,58,1.348,59,0.704,60,0.33,61,3.08,62,0.783,63,0.962,65,0.186,66,0.32,70,0.32,72,1.361,73,0.682,74,0.682,75,0.612,76,1.077,77,0.612,78,1.048,79,0.682,80,0.58,81,0.646,82,0.3,83,0.682,84,0.612,85,0.682,86,0.612,87,0.682,88,0.612,89,1.077,90,0.612,91,1.335,92,1.361,93,0.682,94,0.612,95,0.646,96,1.077,97,0.629,98,1.077,99,0.612,100,0.682,101,0.612,102,0.629,103,0.441,104,1.517,105,0.612,106,0.664,107,0.612,108,0.912,109,0.612,110,0.682,111,0.612,112,0.454,113,0.612,114,0.682,115,0.612,116,0.682,117,0.612,118,0.682,119,0.612,120,0.236,121,0.646,122,0.682,123,0.629,124,0.394,125,0.612,126,0.454,127,0.612,128,0.682,129,0.612,130,0.682,131,0.612,132,0.682,133,0.612,134,0.682,135,0.612,136,0.612,137,0.612,138,0.612,139,0.682,140,0.612,141,0.682,142,0.612,143,0.646,144,0.664,145,0.682,146,0.005,147,0.005,155,3.083,158,1.794,162,1.43,166,1.62,167,1.898,170,0.441,171,1.476,172,1.06,174,0.74,175,0.933,176,1.41,186,2.642,196,1.17,206,2.947,210,1.52,224,2.164,236,2.282,237,1.591,242,3.571,248,1.569,277,2.947,280,2.829,297,1.703,343,2.197,367,1.794,369,1.62,374,2.009,375,1.178,376,1.272,378,1.372,390,1.522,406,1.733,420,0.612,440,2.404,462,2.009,474,3.703,475,1.097,477,5.042,480,2.009,481,2.185,485,1.794,487,2.141,489,2.709,490,3.077,491,2.224,493,2.98,499,2.141,505,1.605,506,1.06,507,1.136,508,2.164,509,1.178,511,2.224,521,2.185,522,2.185,532,2.947,533,3.789,543,1.448,552,3.918,553,3.789,558,3.149,562,2.009,563,1.932,564,2.009,566,3.419,575,2.185,586,1.325,587,0.646,588,0.761,589,1.223,590,1.522,592,1.703,594,1.968,596,2.594,603,2.164,604,2.164,628,2.288,632,1.703,633,1.325,634,1.325,636,2.691,643,2.98,660,1.821,664,1.703,665,3.108,696,6.179,713,2.164,714,2.876,715,2.243,716,4.039,717,3.892,718,3.419,719,4.688,720,3.892,721,3.892,722,2.876,723,3.335,724,3.892,725,3.892,726,2.463,727,3.419,728,3.274,729,4.239,730,3.892,731,2.463,732,4.688,733,3.351,734,3.892,735,2.463,736,3.892,737,2.185,738,2.463,739,2.404,740,2.463,741,2.876,742,2.463,743,2.463,744,2.463,745,2.463,746,2.463,747,2.463,748,2.463,749,2.463,750,2.009,751,2.164,752,2.463,753,2.463,754,2.164,755,2.009,756,2.463,757,2.463,758,2.463,759,2.876,760,3.892,761,2.463,762,2.463,763,2.463,764,1.448,765,2.463,766,2.463,767,2.164,768,3.892,769,2.876,770,3.892]],["title/interfaces/ExperimentPhage.html",[170,0.811,771,2.433]],["body/interfaces/ExperimentPhage.html",[2,0.297,3,0.354,5,0.325,7,0.256,9,0.639,18,0.547,28,0.43,29,0.997,41,0.011,43,0.497,51,1.211,54,0.701,56,1.01,65,0.577,82,0.958,103,0.806,120,0.853,124,0.968,146,0.007,147,0.007,162,1.652,170,1.465,171,1.63,196,1.351,228,1.429,230,3.634,237,1.835,238,1.532,362,1.756,365,1.47,368,1.703,407,2.643,419,2.394,435,2.002,475,1.211,573,2.643,587,1.919,588,1.871,711,1.63,715,2.115,737,3.399,771,3.255,772,2.93,773,2.674,774,4.522,775,4.185,776,3.462,777,2.524,778,2.93,779,1.279,780,3.255,781,2.441,782,2.524,783,2.32,784,2.945,785,2.777,786,2.643,787,2.32,788,4.023,789,2.952,790,2.93,791,2.643,792,3.399,793,1.813,794,2.417,795,4.232,796,3.944,797,3.26,798,2.32,799,2.695,800,3.559,801,2.605,802,4.185,803,4.185,804,4.185,805,4.185,806,3.944,807,2.791,808,3.108,809,2.777,810,2.32,811,2.643,812,3.108,813,2.695]],["title/injectables/ExperimentService.html",[148,1.714,814,3.128]],["body/injectables/ExperimentService.html",[2,0.427,3,0.317,5,0.291,7,0.274,28,0.386,29,0.925,30,1.89,33,1.252,35,0.974,38,1.438,40,1.034,41,0.011,42,0.976,43,0.664,44,1.191,51,1.883,52,1.116,56,0.775,57,1.437,58,1.396,59,0.694,60,0.539,62,1.281,65,0.304,66,0.523,72,1.395,103,1.006,108,0.771,120,0.729,124,1.312,146,0.009,147,0.007,148,2.449,169,2.649,170,0.722,175,1.527,176,1.642,238,1.093,286,2.786,326,4.15,343,1.945,344,4.275,345,5.167,358,5.167,369,2.912,373,2.064,374,4.032,378,1.597,420,1.737,458,4.275,462,2.899,475,1.399,558,3.47,587,1.472,588,1.736,656,3.302,711,1.513,755,3.609,773,3.425,774,3.469,776,3.164,784,2.417,788,3.302,789,2.264,793,2.264,801,3.009,814,3.883,815,3.541,816,4.319,817,3.343,818,2.064,819,5.616,820,3.883,821,5.616,822,3.541,823,5.616,824,4.935,825,5.616,826,4.791,827,4.03,828,3.012,829,2.353,830,7.352,831,4.791,832,4.323,833,4.685,834,4.486,835,4.319,836,3.66,837,4.15,838,4.834,839,5.616,840,4.791,841,4.03,842,3.883,843,3.883,844,3.66,845,3.66,846,4.15,847,4.486,848,3.66,849,5.616,850,4.935,851,4.935,852,2.626,853,4.935,854,4.03,855,2.786,856,2.786,857,2.786,858,4.03]],["title/components/ForgetPasswordComponent.html",[0,0.417,94,1.124]],["body/components/ForgetPasswordComponent.html",[0,0.697,1,0.821,2,0.218,3,0.26,4,0.915,5,0.239,7,0.245,9,0.47,13,2.329,16,1.121,18,0.777,22,1.424,24,0.757,25,2.441,26,1.424,28,0.316,29,0.802,30,2.354,32,2.966,33,1.086,35,0.799,36,1.856,37,1.867,38,1.514,40,0.529,41,0.011,42,0.873,43,0.559,44,0.609,45,2.62,50,2.169,51,1.312,52,0.714,53,1.738,54,0.724,56,1.065,57,1.738,58,1.687,59,0.634,60,0.442,62,1.05,65,0.25,66,0.429,70,0.429,72,1.586,73,0.915,74,0.915,75,0.821,76,1.348,77,0.821,78,1.312,79,0.915,80,0.778,81,0.866,82,0.402,83,0.915,84,0.821,85,0.915,86,0.821,87,0.915,88,0.821,89,1.348,90,0.821,91,1.601,92,0.821,93,0.915,94,1.586,95,2.023,96,1.348,97,0.843,98,1.348,99,0.821,100,0.915,101,0.821,102,0.843,103,0.592,104,1.767,105,0.821,106,0.89,107,0.821,108,0.364,109,0.821,110,0.915,111,0.821,112,0.609,113,0.821,114,0.915,115,0.821,116,0.915,117,0.821,118,0.915,119,0.821,120,0.316,121,0.866,122,0.915,123,0.843,124,0.529,125,0.821,126,1.466,127,0.821,128,0.915,129,0.821,130,0.915,131,0.821,132,0.915,133,0.821,134,0.915,135,0.821,136,0.821,137,0.821,138,0.821,139,0.915,140,0.821,141,0.915,142,0.821,143,0.866,144,0.89,145,0.915,146,0.006,147,0.006,175,1.252,240,3.631,263,2.514,325,3.754,329,3.996,338,6.037,343,2.211,344,2.735,362,1.903,363,2.904,365,2.088,366,4.669,368,1.845,370,2.169,371,2.285,375,3.052,376,2.602,377,4.924,378,2.29,379,2.211,382,4.718,383,2.514,405,2.494,414,4.924,480,2.409,485,3.618,487,2.494,495,4.161,499,1.903,506,1.422,507,1.524,511,2.246,512,1.943,523,1.943,524,1.943,542,2.028,555,2.864,562,2.514,563,2.418,564,2.514,605,1.943,739,3.009,859,6.641,860,2.442,861,4.28,862,3.891,863,6.258,864,6.384,865,4.871,866,3.305,867,3.305,868,3.175,869,4.28,870,2.864,871,4.871,872,3.305,873,3.305,874,3.305,875,2.154,876,4.871,877,4.871,878,4.28,879,3.305,880,2.442,881,2.442,882,2.904]],["title/interfaces/Fridge.html",[170,0.811,715,1.398]],["body/interfaces/Fridge.html",[2,0.321,3,0.383,5,0.352,7,0.206,9,0.692,18,0.592,28,0.466,29,1.05,41,0.011,43,0.66,51,1.917,54,0.611,56,1.188,59,0.633,65,0.482,82,0.866,108,0.887,120,0.681,124,1.021,146,0.008,147,0.008,155,2.971,169,2.416,170,1.275,171,2.035,232,3.43,233,3.363,236,3.146,237,1.504,238,0.947,241,4.404,365,2.086,368,2.696,420,1.584,475,1.424,709,4.157,711,2.035,715,2.732,716,3.893,750,4.048,773,2.492,780,4.062,807,2.941,810,3.292,813,3.705,818,2.882,828,2.344,829,2.146,883,3.885,884,6.061,885,5.223,886,4.714,887,3.582,888,5.223,889,3.363,890,3.17,891,3.004]],["title/interfaces/FridgePhage.html",[170,0.811,780,2.433]],["body/interfaces/FridgePhage.html",[2,0.274,3,0.327,5,0.3,7,0.278,9,0.591,18,0.506,28,0.398,29,0.945,41,0.011,43,0.646,44,1.416,51,1.119,54,0.769,56,1.108,65,0.561,82,0.936,103,0.745,120,0.858,124,0.665,146,0.007,147,0.007,162,2.108,170,1.412,171,1.908,196,1.724,228,1.321,230,3.516,237,1.817,238,1.534,362,2.241,365,2.316,368,2.173,407,3.373,419,2.576,435,1.85,475,1.148,573,2.443,587,1.857,588,1.773,711,1.545,715,2.189,737,3.221,771,2.234,772,2.708,773,2.241,774,2.566,775,2.872,776,3.391,777,2.333,778,2.708,779,1.182,780,3.533,781,2.856,782,3.221,783,2.961,784,3.049,785,3.543,786,4.165,787,3.657,788,4.371,789,3.285,790,3.738,791,4.165,792,3.689,793,1.675,794,2.234,795,4.134,796,3.738,797,3.154,798,2.144,799,2.554,800,3.373,801,2.469,802,3.966,803,3.966,804,3.966,805,3.966,806,3.738,807,2.645,808,2.872,809,2.566,810,2.144,811,2.443,812,2.872,813,2.554]],["title/interfaces/GenotypePhage.html",[170,0.811,794,2.433]],["body/interfaces/GenotypePhage.html",[2,0.277,3,0.331,5,0.304,7,0.245,9,0.598,18,0.512,28,0.402,29,0.952,41,0.011,43,0.613,44,1.065,51,1.132,54,0.682,56,1.064,65,0.564,82,1.016,103,1.036,120,0.853,124,0.672,146,0.007,147,0.007,162,1.545,170,1.416,171,1.557,196,1.263,228,1.336,230,3.281,237,1.84,238,1.502,362,1.642,365,1.374,368,1.592,407,2.471,419,2.441,435,2.574,475,1.323,573,3.4,587,2.022,588,2.043,711,1.557,715,2.2,737,3.712,771,2.26,772,2.739,773,2.582,774,2.596,775,2.906,776,3.558,777,2.36,778,2.739,779,1.196,780,3.109,781,2.331,782,2.36,783,2.169,784,3.064,785,2.596,786,2.471,787,2.169,788,4.186,789,3.186,790,2.739,791,2.471,792,3.247,793,2.331,794,3.109,795,4.393,796,4.307,797,3.435,798,3.675,799,2.943,800,3.886,801,2.845,802,4.57,803,4.57,804,4.57,805,4.57,806,4.307,807,3.048,808,3.997,809,4.397,810,2.169,811,2.471,812,2.906,813,2.574]],["title/components/HelpComponent.html",[0,0.417,99,1.124]],["body/components/HelpComponent.html",[0,0.712,1,1.28,2,0.34,3,0.406,4,1.427,5,0.373,9,0.733,16,1.315,18,0.94,24,1.181,25,2.508,26,1.936,35,1.769,38,1.06,41,0.01,42,1,51,1.389,54,0.634,59,0.512,60,0.69,65,0.389,66,0.669,70,0.669,72,1.918,73,1.427,74,1.427,75,1.28,76,1.833,77,1.28,78,1.784,79,1.427,80,1.213,81,1.351,82,0.628,83,1.427,84,1.28,85,1.427,86,1.28,87,1.427,88,1.28,89,1.833,90,1.28,91,2.026,92,1.28,93,1.427,94,1.28,95,1.351,96,1.833,97,1.315,98,1.833,99,1.918,100,1.427,101,1.28,102,1.315,103,0.924,104,2.138,105,1.28,106,1.389,107,1.28,108,0.568,109,1.28,110,1.427,111,1.28,112,0.95,113,1.28,114,1.427,115,1.28,116,1.427,117,1.28,118,1.427,119,1.28,120,0.494,121,1.351,122,1.427,123,1.315,124,0.825,125,1.28,126,0.95,127,1.28,128,1.427,129,1.28,130,1.427,131,1.28,132,1.427,133,1.28,134,1.427,135,1.28,136,1.28,137,1.28,138,1.28,139,1.427,140,1.28,141,1.427,142,1.28,143,1.351,144,1.389,145,1.427,146,0.008,147,0.008,481,3.719,892,4.53,893,5.845,894,6.623,895,6.623,896,5.155,897,5.29,898,6.623,899,5.155]],["title/modules/HelpModule.html",[194,1.522,274,3.128]],["body/modules/HelpModule.html",[2,0.403,3,0.481,5,0.442,41,0.011,59,0.856,60,0.818,65,0.556,66,0.793,99,2.118,126,1.126,146,0.009,147,0.009,174,1.837,194,2.478,196,1.837,197,3.155,198,4.08,199,2.631,200,3.034,205,3.797,207,3.801,208,2.057,214,3.96,215,3.433,216,3.155,274,6.016,900,5.371,901,5.371,902,6.113,903,6.113,904,6.113,905,6.113,906,6.113,907,6.113]],["title/components/HomeComponent.html",[0,0.417,101,1.124]],["body/components/HomeComponent.html",[0,0.759,1,1.021,2,0.271,3,0.324,4,1.138,5,0.297,7,0.174,9,0.585,11,3.938,16,1.22,18,0.859,22,1.665,23,2.812,24,0.942,25,2.477,26,1.665,28,0.394,29,0.938,30,1.91,33,1.27,34,2.672,35,0.994,36,2.309,37,2.062,38,1.45,40,0.658,41,0.011,42,0.986,43,0.467,44,0.758,45,3.063,49,2.505,52,0.835,53,2.032,54,0.834,59,0.649,60,0.55,63,1.607,64,2.211,65,0.31,66,0.533,68,3.285,69,4.549,70,1.019,71,2.626,72,1.752,73,1.138,74,1.138,75,1.021,76,1.576,77,1.021,78,1.534,79,1.138,80,0.968,81,1.078,82,0.501,83,1.138,84,1.021,85,1.138,86,1.021,87,1.138,88,1.021,89,1.576,90,1.021,91,1.808,92,1.021,93,1.138,94,1.021,95,1.078,96,1.576,97,1.049,98,1.576,99,1.021,100,1.138,101,1.752,102,1.049,103,0.737,104,1.952,105,1.021,106,1.76,107,1.021,108,0.72,109,1.021,110,1.138,111,1.021,112,0.758,113,1.021,114,1.138,115,1.021,116,1.138,117,1.021,118,1.138,119,1.021,120,0.394,121,1.078,122,1.138,123,1.049,124,0.658,125,1.021,126,0.758,127,1.021,128,1.138,129,1.021,130,1.138,131,1.021,132,1.138,133,1.021,134,1.138,135,1.021,136,1.021,137,1.021,138,1.021,139,1.138,140,1.021,141,1.138,142,1.021,143,1.078,144,1.108,145,1.138,146,0.007,147,0.007,154,2.451,175,1.558,186,2.372,188,3.501,190,3.961,191,5.004,196,1.712,208,1.916,406,2.536,408,4.209,411,3.663,480,2.721,481,3.198,487,2.756,739,3.518,741,4.209,764,2.418,908,3.613,909,5.004,910,5.696,911,5.696,912,5.696,913,4.112,914,4.112,915,5.696,916,4.209,917,5.696,918,7.053,919,5.696,920,5.696,921,5.696,922,3.938,923,5.696,924,5.004,925,5.696,926,2.536,927,3.349]],["title/components/LandingRoomComponent.html",[0,0.417,105,1.124]],["body/components/LandingRoomComponent.html",[0,0.75,1,0.865,2,0.23,3,0.274,4,0.964,5,0.252,7,0.277,9,0.495,16,1.145,18,0.883,21,3.019,22,1.48,23,2.567,24,0.798,25,2.45,26,1.48,28,0.333,29,0.834,30,2.033,33,1.46,34,2.48,35,0.842,38,1.43,40,0.954,41,0.011,42,0.9,43,0.489,44,0.642,47,2.334,48,2.558,51,1.363,52,0.742,53,1.806,54,0.485,59,0.65,60,0.466,65,0.263,66,0.452,70,0.774,72,1.626,73,0.964,74,0.964,75,0.865,76,1.401,77,0.865,78,1.363,79,0.964,80,0.82,81,0.913,82,0.424,83,0.964,84,0.865,85,0.964,86,0.865,87,0.964,88,0.865,89,1.401,90,0.865,91,1.651,92,0.865,93,0.964,94,0.865,95,0.913,96,1.401,97,0.889,98,1.401,99,0.865,100,0.964,101,0.865,102,0.889,103,0.624,104,1.812,105,1.626,106,2.017,107,0.865,108,0.969,109,0.865,110,0.964,111,0.865,112,0.642,113,0.865,114,0.964,115,0.865,116,0.964,117,0.865,118,0.964,119,0.865,120,0.717,121,0.913,122,0.964,123,0.889,124,0.557,125,0.865,126,0.642,127,0.865,128,0.964,129,0.865,130,0.964,131,0.865,132,0.964,133,0.865,134,0.964,135,0.865,136,0.865,137,0.865,138,0.865,139,0.964,140,0.865,141,0.964,142,0.865,143,0.913,144,0.938,145,0.964,146,0.006,147,0.006,156,4.481,158,2.75,167,2.267,170,0.624,174,1.047,175,1.319,176,1.743,186,2.108,188,2.513,190,2.843,238,0.986,280,3.589,315,5.752,343,2.267,373,1.86,378,1.696,419,1.655,421,2.639,480,2.483,485,3.345,487,2.558,489,3.676,490,3.905,496,3.127,499,1.978,500,2.722,512,2.048,516,2.782,517,2.408,523,2.048,524,2.048,543,2.048,562,2.613,563,2.513,564,2.613,587,1.327,588,1.564,589,1.729,643,4.043,664,2.408,711,1.363,739,3.127,750,2.613,759,2.574,769,3.741,783,2.613,784,2.817,789,2.041,793,2.639,799,3.23,928,6.375,929,5.795,930,2.782,931,4.448,932,4.838,933,4.043,934,5.062,935,3.299,936,4.448,937,5.062,938,5.362,939,4.043,940,5.062,941,4.448,942,5.062,943,5.062,944,3.741,945,3.483,946,3.483,947,3.127,948,3.483,949,5.062,950,2.574,951,3.483,952,3.06,953,3.483,954,5.062,955,5.062,956,5.062]],["title/components/ListComponent.html",[0,0.417,107,1.124]],["body/components/ListComponent.html",[0,0.752,1,0.975,2,0.259,3,0.309,4,1.086,5,0.284,7,0.166,9,0.558,16,1.199,18,0.841,22,1.612,23,2.743,24,0.899,25,2.47,26,1.612,28,0.376,29,0.908,30,2.021,32,2.878,33,1.23,34,2.618,35,0.949,36,2.204,37,2.021,38,1.595,40,0.628,41,0.011,42,0.962,43,0.597,44,0.723,45,2.965,47,2.542,49,1.803,52,0.808,53,1.967,54,0.808,56,0.879,59,0.75,60,0.525,62,1.247,63,1.533,64,2.111,65,0.296,66,0.509,68,3.135,70,0.509,72,1.717,73,1.086,74,1.086,75,0.975,76,1.526,77,0.975,78,1.485,79,1.086,80,0.924,81,1.029,82,0.478,83,1.086,84,0.975,85,1.086,86,0.975,87,1.086,88,0.975,89,1.526,90,0.975,91,1.764,92,0.975,93,1.086,94,0.975,95,1.029,96,1.526,97,1.002,98,1.526,99,0.975,100,1.086,101,0.975,102,1.002,103,0.703,104,1.913,105,0.975,106,1.057,107,1.717,108,0.962,109,0.975,110,1.086,111,0.975,112,0.723,113,0.975,114,1.086,115,0.975,116,1.086,117,0.975,118,1.086,119,0.975,120,0.376,121,1.029,122,1.086,123,1.002,124,0.628,125,0.975,126,0.723,127,0.975,128,1.086,129,0.975,130,1.086,131,0.975,132,1.086,133,0.975,134,1.086,135,0.975,136,0.975,137,0.975,138,0.975,139,1.086,140,0.975,141,1.086,142,0.975,143,1.029,144,1.057,145,1.086,146,0.006,147,0.006,175,1.487,238,1.073,280,3.568,343,2.394,411,3.304,475,1.584,480,2.654,485,3.187,487,2.7,499,2.154,500,2.965,562,2.846,563,2.736,564,2.846,643,3.936,653,5.473,662,3.135,664,2.714,672,4.404,739,3.405,769,4.074,779,1.568,916,2.901,927,3.242,950,2.901,957,3.449,958,6.912,959,5.513,960,3.925,961,3.925,962,4.404,963,3.925,964,3.925,965,3.925,966,3.135,967,3.925,968,3.925,969,3.925,970,3.925,971,4.404]],["title/components/LocationComponent.html",[0,0.417,109,1.124]],["body/components/LocationComponent.html",[0,0.749,1,1.25,2,0.478,3,0.396,4,1.393,5,0.364,7,0.213,9,0.716,14,3.662,16,1.306,18,0.932,24,1.153,25,2.505,26,1.907,41,0.01,42,0.984,54,0.624,59,0.5,60,0.674,65,0.38,66,0.653,70,0.653,72,1.901,73,1.393,74,1.393,75,1.25,76,1.805,77,1.25,78,1.757,79,1.393,80,1.185,81,1.319,82,0.613,83,1.393,84,1.25,85,1.393,86,1.25,87,1.393,88,1.25,89,1.805,90,1.25,91,2.003,92,1.25,93,1.393,94,1.25,95,1.319,96,1.805,97,1.284,98,1.805,99,1.25,100,1.393,101,1.25,102,1.284,103,1.297,104,2.118,105,1.25,106,1.356,107,1.25,108,0.555,109,1.901,110,1.393,111,1.25,112,1.333,113,1.25,114,1.393,115,1.25,116,1.393,117,1.25,118,1.393,119,1.25,120,0.482,121,1.319,122,1.393,123,1.284,124,1.158,125,1.25,126,0.927,127,1.25,128,1.393,129,1.25,130,1.393,131,1.25,132,1.393,133,1.25,134,1.393,135,1.25,136,1.25,137,1.25,138,1.25,139,1.393,140,1.25,141,1.393,142,1.25,143,1.319,144,1.356,145,1.393,146,0.008,147,0.008,186,2.716,192,4.509,481,3.662,776,3.294,972,4.422,973,6.522,974,6.522,975,6.522,976,6.522]],["title/modules/LocationModule.html",[194,1.522,977,3.128]],["body/modules/LocationModule.html",[2,0.339,3,0.405,5,0.372,41,0.011,59,0.87,60,0.688,65,0.499,66,0.667,97,2.085,102,2.085,103,0.921,105,2.029,106,1.385,109,2.029,111,2.029,112,0.947,119,2.091,123,2.085,124,0.822,126,0.947,146,0.008,147,0.008,174,1.545,194,2.225,196,1.545,197,2.653,198,3.772,199,2.212,200,3.627,205,3.637,207,3.412,208,1.73,214,3.555,215,2.887,216,2.653,581,3.35,691,5.281,814,5.648,929,4.106,977,6.178,978,4.517,979,4.517,980,5.14,981,4.517,982,5.14,983,5.14,984,5.14,985,5.14,986,5.14,987,5.14,988,5.14,989,7.715,990,4.517,991,4.517,992,4.106,993,5.14]],["title/injectables/LoggedInGuard.html",[148,1.714,278,3.128]],["body/injectables/LoggedInGuard.html",[2,0.297,3,0.355,5,0.326,7,0.257,20,3.782,21,3.299,22,1.318,28,0.431,30,1.773,33,1.352,35,1.466,36,2.531,37,2.143,38,1.409,40,1.096,41,0.011,42,1.034,43,0.562,44,1.262,45,3.26,48,2.369,49,2.841,52,1.154,54,0.842,56,0.622,59,0.68,60,0.603,65,0.34,66,0.585,70,1.117,146,0.007,147,0.007,148,2.596,151,5.327,155,2.297,156,4.527,157,6.439,158,3.159,160,5.327,161,5.657,162,3.079,163,5.657,165,5.821,166,2.525,167,2.834,171,2.122,172,2.949,173,3.275,174,1.354,176,1.773,177,3.96,180,3.6,196,1.822,248,2.445,278,4.192,351,3.96,370,2.699,373,2.228,405,2.369,411,2.898,433,3.745,464,3.951,496,3.745,875,2.937,994,6.439,995,3.96,996,6.063,997,7.648,998,4.507,999,4.507,1000,4.507,1001,6.063,1002,4.192,1003,5.327,1004,6.063,1005,4.507,1006,6.063,1007,4.507,1008,4.507,1009,4.507,1010,4.507,1011,4.507]],["title/components/ModelRoomComponent.html",[0,0.417,111,1.124]],["body/components/ModelRoomComponent.html",[0,0.613,1,0.612,2,0.163,3,0.194,4,0.682,5,0.178,7,0.204,9,0.35,16,0.983,18,0.772,21,2.21,24,0.564,25,2.381,26,1.138,28,0.571,29,0.641,30,2.48,32,2.642,33,0.868,34,1.827,35,0.596,37,1.602,38,1.608,40,0.772,41,0.011,42,0.901,43,0.618,44,0.889,45,2.594,47,1.136,48,1.52,52,1.009,53,1.955,54,0.695,56,1.002,57,0.879,58,0.853,59,0.659,60,0.33,61,3.08,62,0.783,63,0.962,65,0.186,66,0.862,70,0.32,72,1.361,73,0.682,74,0.682,75,0.612,76,1.077,77,0.612,78,1.048,79,0.682,80,0.58,81,0.646,82,0.726,83,0.682,84,0.612,85,0.682,86,0.612,87,0.682,88,0.612,89,1.077,90,0.612,91,1.335,92,0.612,93,0.682,94,0.612,95,0.646,96,1.077,97,0.629,98,1.077,99,0.612,100,0.682,101,0.612,102,0.629,103,0.441,104,1.517,105,0.612,106,0.664,107,0.612,108,0.658,109,0.612,110,0.682,111,1.361,112,1.269,113,0.612,114,0.682,115,0.612,116,0.682,117,0.612,118,0.682,119,0.612,120,0.525,121,0.646,122,0.682,123,0.629,124,0.394,125,0.612,126,0.454,127,0.612,128,0.682,129,0.612,130,0.682,131,0.612,132,0.682,133,0.612,134,0.682,135,0.612,136,0.612,137,0.612,138,0.612,139,0.682,140,0.612,141,0.682,142,0.612,143,0.646,144,0.664,145,0.682,146,0.005,147,0.007,158,1.794,162,1.43,165,1.821,167,0.853,171,1.709,172,2.568,173,2.62,174,0.74,175,0.933,176,1.602,196,1.17,208,0.829,236,2.282,237,1.814,238,1.293,248,1.569,259,2.964,262,2.404,280,2.829,343,2.197,365,1.272,367,1.794,369,1.62,373,1.43,376,1.577,378,1.559,405,0.962,406,1.733,420,0.612,435,2.958,481,2.185,489,2.709,490,3.077,499,2.141,506,1.06,507,1.136,511,2.752,521,2.185,522,2.185,532,2.947,543,1.448,552,2.404,553,3.789,558,2.72,575,2.185,586,1.325,588,1.203,589,1.932,590,2.404,596,1.325,618,4.377,619,2.876,633,1.325,634,1.325,643,2.98,653,1.703,711,1.476,715,1.844,739,2.404,741,2.876,779,1.372,789,0.993,793,2.21,797,1.733,801,1.675,813,3.548,818,2.843,829,1.844,833,1.448,868,2.536,930,1.968,941,3.419,950,1.821,952,2.164,992,6.309,1012,6.94,1013,3.892,1014,5.48,1015,5.48,1016,4.05,1017,3.571,1018,4.815,1019,3.892,1020,5.48,1021,5.48,1022,3.892,1023,3.892,1024,3.892,1025,6.886,1026,2.463,1027,5.067,1028,6.414,1029,3.892,1030,3.892,1031,3.892,1032,3.419,1033,5.48,1034,5.067,1035,2.876,1036,3.108,1037,2.876,1038,3.892,1039,3.892,1040,2.463,1041,2.463,1042,2.463,1043,3.892,1044,3.892,1045,2.463,1046,3.419,1047,2.463,1048,3.892,1049,3.108,1050,2.536,1051,3.892,1052,2.463,1053,2.463,1054,2.463,1055,2.288,1056,2.463,1057,2.463,1058,2.463,1059,2.463,1060,1.821,1061,2.463,1062,2.463,1063,2.164,1064,2.463,1065,2.463,1066,2.463,1067,1.605,1068,3.892,1069,2.463,1070,2.463,1071,2.463,1072,2.463,1073,2.463,1074,4.824,1075,4.824,1076,2.463,1077,3.108,1078,2.164,1079,2.463,1080,2.463,1081,2.463,1082,2.164,1083,2.463,1084,2.463,1085,2.463,1086,2.463,1087,2.463,1088,3.892,1089,3.419,1090,6.344,1091,3.892,1092,3.892,1093,3.419,1094,3.892,1095,3.108,1096,3.892,1097,3.892]],["title/components/NavComponent.html",[0,0.417,113,1.124]],["body/components/NavComponent.html",[0,0.739,1,1.026,2,0.273,3,0.325,4,1.143,5,0.299,7,0.175,9,0.588,14,3.208,16,1.222,18,0.86,20,2.949,22,1.67,23,2.819,24,0.946,25,2.478,26,1.67,28,0.395,29,0.941,30,2.243,33,1.274,34,2.677,35,0.999,37,2.066,38,1.525,40,0.661,41,0.011,42,0.989,43,0.537,44,0.761,47,2.634,48,2.232,52,0.837,53,2.038,54,0.814,59,0.65,60,0.553,63,1.614,64,2.221,65,0.312,66,0.536,70,0.536,72,1.755,73,1.143,74,1.143,75,1.026,76,1.581,77,1.026,78,2.159,79,1.143,80,0.972,81,1.083,82,0.503,83,1.143,84,1.026,85,1.143,86,1.026,87,1.143,88,1.026,89,1.581,90,1.026,91,1.813,92,1.026,93,1.143,94,1.026,95,1.083,96,1.581,97,1.054,98,1.581,99,1.026,100,1.143,101,1.026,102,1.054,103,0.74,104,1.956,105,1.026,106,1.113,107,1.026,108,0.818,109,1.026,110,1.143,111,1.026,112,0.761,113,1.755,114,1.143,115,1.026,116,1.143,117,1.026,118,1.143,119,1.026,120,0.395,121,1.083,122,1.143,123,1.054,124,0.661,125,1.026,126,0.761,127,1.026,128,1.143,129,1.026,130,1.143,131,1.026,132,1.143,133,1.026,134,1.143,135,1.026,136,1.026,137,1.026,138,1.026,139,1.143,140,1.026,141,1.143,142,1.026,143,1.945,144,1.113,145,1.143,146,0.007,147,0.007,175,1.565,208,1.922,238,1.112,263,2.949,264,6.21,265,6.21,343,1.979,373,2.1,411,2.731,480,2.727,481,3.208,485,3.538,487,2.761,491,2.634,498,3.95,499,2.232,500,3.072,509,1.975,512,2.429,523,2.429,524,2.429,628,2.429,677,3.529,755,2.132,779,1.625,893,4.564,916,3.053,1098,3.63,1099,4.564,1100,5.714,1101,5.714,1102,5.714,1103,3.63,1104,5.714,1105,4.131,1106,4.131,1107,5.714,1108,5.02,1109,4.131]],["title/components/NotAuthComponent.html",[0,0.417,115,1.124]],["body/components/NotAuthComponent.html",[0,0.749,1,1.248,2,0.332,3,0.396,4,1.391,5,0.363,7,0.213,9,1.127,16,1.305,18,0.931,24,1.152,25,2.505,26,1.905,41,0.01,42,0.984,52,0.955,54,0.732,59,0.499,60,0.673,65,0.379,66,0.652,70,0.938,72,1.9,73,1.391,74,1.391,75,1.248,76,1.803,77,1.248,78,1.755,79,1.391,80,1.183,81,1.318,82,0.612,83,1.391,84,1.248,85,1.391,86,1.248,87,1.391,88,1.248,89,1.803,90,1.248,91,2.001,92,1.248,93,1.391,94,1.248,95,1.318,96,1.803,97,1.283,98,1.803,99,1.248,100,1.391,101,1.248,102,1.283,103,0.901,104,2.117,105,1.248,106,1.354,107,1.248,108,0.554,109,1.248,110,1.391,111,1.248,112,0.926,113,1.248,114,1.391,115,1.9,116,1.391,117,1.248,118,1.391,119,1.248,120,0.481,121,1.318,122,1.391,123,1.283,124,0.804,125,1.248,126,0.926,127,1.248,128,1.391,129,1.248,130,1.391,131,1.248,132,1.391,133,1.248,134,1.391,135,1.248,136,1.248,137,1.248,138,1.248,139,1.391,140,1.248,141,1.391,142,1.248,143,1.318,144,1.354,145,1.391,146,0.008,147,0.008,155,2.898,182,5.725,186,2.713,190,3.659,221,4.015,433,4.025,1110,4.416,1111,4.416,1112,5.725,1113,6.516,1114,4.816]],["title/components/PageNotFoundComponent.html",[0,0.417,117,1.124]],["body/components/PageNotFoundComponent.html",[0,0.745,1,1.225,2,0.325,3,0.388,4,1.983,5,0.356,7,0.209,9,0.701,16,1.297,18,0.924,24,1.13,25,2.502,26,1.881,35,1.732,38,1.014,41,0.01,42,0.971,54,0.616,59,0.489,60,0.66,65,0.372,66,0.64,70,1.095,72,1.886,73,1.365,74,1.365,75,1.225,76,1.781,77,1.225,78,1.733,79,1.365,80,1.16,81,1.293,82,0.6,83,1.365,84,1.225,85,1.365,86,1.225,87,1.365,88,1.225,89,1.781,90,1.225,91,1.983,92,1.225,93,1.365,94,1.225,95,1.293,96,1.781,97,1.258,98,1.781,99,1.225,100,1.365,101,1.225,102,1.258,103,0.884,104,2.102,105,1.225,106,1.328,107,1.225,108,0.544,109,1.225,110,1.365,111,1.225,112,0.908,113,1.225,114,1.365,115,1.225,116,1.365,117,1.886,118,1.365,119,1.225,120,0.472,121,1.293,122,1.365,123,1.258,124,0.789,125,1.225,126,0.908,127,1.225,128,1.365,129,1.225,130,1.365,131,1.225,132,1.365,133,1.225,134,1.365,135,1.225,136,1.225,137,1.225,138,1.225,139,1.365,140,1.225,141,1.365,142,1.225,143,1.293,144,1.328,145,1.365,146,0.008,147,0.008,167,2.229,169,2.438,188,3.194,190,3.613,307,5.14,368,2.438,383,3.321,496,3.975,727,5.654,1115,5.654,1116,4.332,1117,6.435,1118,6.435,1119,4.949,1120,6.435,1121,4.93]],["title/pipes/PeopleListNamesPipe.html",[1122,1.947,1123,3.128]],["body/pipes/PeopleListNamesPipe.html",[2,0.298,3,0.355,5,0.326,7,0.191,18,0.739,22,1.319,24,1.034,33,1.006,38,0.928,40,0.722,41,0.011,42,1.235,43,0.37,44,0.831,50,2.702,52,0.889,56,1.012,59,0.448,60,0.604,65,0.341,66,0.585,146,0.007,147,0.007,171,1.847,172,2.612,208,2.574,234,4.313,235,4.313,245,3.639,246,3.012,405,2.371,475,1.467,668,5.332,728,3.784,764,4.311,947,2.787,1067,2.941,1122,2.612,1123,4.195,1124,5.332,1125,3.965,1126,5.332,1127,7.191,1128,3.954,1129,3.954,1130,6.068,1131,6.068,1132,3.505,1133,4.847,1134,4.847,1135,7.191,1136,7.481,1137,8.514,1138,8.185,1139,5.135,1140,6.068,1141,5.332,1142,2.941,1143,6.068,1144,4.512,1145,6.068,1146,3.954,1147,2.941,1148,3.604,1149,6.923,1150,3.965,1151,6.923,1152,3.965,1153,3.965,1154,3.965]],["title/pipes/PersonNamePipe.html",[1122,1.947,1155,3.128]],["body/pipes/PersonNamePipe.html",[2,0.327,3,0.39,5,0.358,7,0.21,18,0.785,22,1.447,24,1.134,33,1.104,38,1.018,40,0.792,41,0.011,42,1.261,43,0.406,44,0.912,50,2.873,52,1.052,56,1.049,59,0.491,60,0.662,65,0.374,66,0.642,146,0.008,147,0.008,171,1.933,172,2.777,234,4.228,235,4.228,245,3.775,246,3.775,405,2.521,636,4.461,728,3.926,764,3.794,1122,2.777,1126,5.669,1127,7.237,1128,4.205,1129,4.205,1132,3.636,1133,5.154,1134,6.075,1135,7.587,1136,7.339,1139,5.27,1142,3.226,1146,4.205,1147,3.226,1148,5.733,1149,6.93,1150,4.35,1151,6.93,1152,4.35,1154,4.35,1155,4.461,1156,5.669,1157,4.35,1158,6.452,1159,6.452,1160,4.951]],["title/interfaces/Phage.html",[120,0.433,170,0.811]],["body/interfaces/Phage.html",[2,0.295,3,0.352,5,0.323,7,0.255,9,0.635,18,0.544,28,0.428,29,0.992,41,0.011,43,0.56,51,1.203,54,0.699,56,1.084,65,0.576,82,0.956,103,0.801,120,0.851,124,0.715,146,0.007,147,0.007,162,1.642,166,1.86,170,1.463,171,1.624,196,1.343,228,1.42,230,3.386,237,1.826,238,1.485,362,1.746,365,1.461,368,1.692,407,2.627,419,2.388,435,1.989,475,1.206,573,2.627,587,1.914,588,1.863,711,2.116,715,2.257,737,3.385,771,2.403,772,2.911,773,2.355,774,2.76,775,3.089,776,3.515,777,4.101,778,3.928,779,1.714,780,3.241,781,2.43,782,2.509,783,2.306,784,2.936,785,2.76,786,2.627,787,2.306,788,4.011,789,2.944,790,2.911,791,2.627,792,3.385,793,1.801,794,2.403,795,4.225,796,3.928,797,3.251,798,2.306,799,2.684,800,3.544,801,2.594,802,4.167,803,4.167,804,4.167,805,4.167,806,3.928,807,2.779,808,3.089,809,2.76,810,2.306,811,2.627,812,3.089,813,2.684]],["title/pipes/PhageDeletionsPipe.html",[1122,1.947,1161,3.128]],["body/pipes/PhageDeletionsPipe.html",[2,0.358,3,0.427,5,0.392,7,0.23,22,1.584,24,1.241,33,1.208,38,1.114,40,0.867,41,0.011,42,1.032,43,0.445,44,0.998,52,1.002,56,0.943,59,0.538,60,0.725,65,0.409,66,0.703,82,1.024,120,0.654,146,0.008,147,0.008,208,2.52,237,1.582,259,2.942,587,1.792,588,1.674,728,3.528,781,2.756,1055,4.019,1067,3.53,1122,2.942,1129,4.455,1132,3.581,1139,5.126,1142,3.53,1146,4.455,1147,3.53,1161,4.726,1162,4.726,1163,4.76,1164,5.052,1165,5.052,1166,5.46,1167,6.836,1168,6.912,1169,6.836,1170,7.277,1171,6.836,1172,7.866,1173,7.866,1174,7.866,1175,6.836,1176,5.418,1177,5.418,1178,7.49,1179,5.418,1180,5.418]],["title/components/PhageDialogComponent.html",[0,0.417,119,1.124]],["body/components/PhageDialogComponent.html",[0,0.663,1,1.066,2,0.283,3,0.338,4,1.188,5,0.31,7,0.182,9,0.611,16,1.238,18,0.874,19,3.823,24,0.984,25,2.483,26,1.715,28,0.411,29,0.966,35,1.038,38,1.374,40,0.687,41,0.011,42,1.009,43,0.617,44,0.791,54,0.562,59,0.713,60,0.574,65,0.324,66,0.557,70,0.557,72,1.784,73,1.188,74,1.188,75,1.066,76,1.624,77,1.066,78,1.58,79,1.188,80,1.01,81,1.125,82,0.916,83,1.188,84,1.066,85,1.188,86,1.066,87,1.188,88,1.066,89,1.624,90,1.066,91,1.85,92,1.066,93,1.188,94,1.066,95,1.125,96,1.624,97,1.095,98,1.624,99,1.066,100,1.188,101,1.066,102,1.095,103,0.769,104,1.988,105,1.066,106,1.156,107,1.066,108,0.473,109,1.066,110,1.188,111,1.066,112,0.791,113,1.066,114,1.188,115,1.066,116,1.188,117,1.066,118,1.188,119,1.784,120,0.833,121,1.972,122,1.188,123,1.095,124,0.687,125,1.066,126,0.791,127,1.066,128,1.188,129,1.066,130,1.188,131,1.066,132,1.188,133,1.066,134,1.188,135,1.066,136,1.066,137,1.066,138,1.066,139,1.188,140,1.066,141,1.188,142,1.066,143,1.125,144,1.156,145,1.188,146,0.007,147,0.007,186,2.991,199,1.848,205,1.911,216,2.216,238,1.142,259,2.525,347,3.823,365,1.918,435,2.612,452,3.429,456,5.155,457,6.608,458,4.033,459,3.772,460,6.822,467,3.172,468,2.798,469,2.798,470,3.772,471,2.652,472,4.686,527,3.823,587,1.883,621,4.686,656,3.449,780,3.594,787,3.707,789,2.896,818,2.64,868,3.823,1093,5.155,1181,6.311,1182,5.155,1183,5.866,1184,4.293,1185,3.429,1186,5.155,1187,5.866,1188,5.866,1189,5.866,1190,5.866,1191,5.866]],["title/pipes/PhageGuessesPipe.html",[1122,1.947,1192,3.128]],["body/pipes/PhageGuessesPipe.html",[2,0.317,3,0.378,5,0.347,7,0.204,20,3.266,22,1.405,24,1.101,33,1.072,38,0.988,40,0.769,41,0.011,42,0.955,43,0.394,44,0.886,50,2.817,52,1.037,56,0.873,59,0.628,60,0.643,65,0.363,66,0.623,82,1.01,108,0.698,120,0.606,146,0.007,147,0.007,171,1.906,172,3.452,173,4.014,208,2.793,237,1.015,238,1.232,245,2.385,259,2.068,313,5.198,316,5.054,362,1.878,406,2.817,420,1.194,555,2.826,587,1.855,728,3.266,781,2.551,799,2.14,813,3.572,818,2.326,1018,5.56,1060,4.677,1063,4.223,1067,3.132,1122,2.723,1129,4.124,1132,3.382,1139,4.9,1142,3.132,1146,4.124,1147,3.132,1153,4.223,1162,4.375,1164,4.677,1165,4.677,1192,4.375,1193,4.223,1194,6.328,1195,4.806,1196,5.56,1197,6.328,1198,6.328,1199,6.606,1200,4.375,1201,5.56,1202,7.075,1203,6.328,1204,4.806,1205,4.806,1206,4.806,1207,5.56,1208,4.806,1209,5.56,1210,4.806]],["title/pipes/PhageMutationsPipe.html",[1122,1.947,1211,3.128]],["body/pipes/PhageMutationsPipe.html",[2,0.341,3,0.407,5,0.374,7,0.219,22,1.511,24,1.184,33,1.153,38,1.063,40,0.827,41,0.011,42,1.002,43,0.424,44,0.953,52,0.972,56,0.916,59,0.513,60,0.692,65,0.39,66,0.671,120,0.635,146,0.008,147,0.008,208,2.69,237,1.548,259,2.225,313,4.588,316,5.3,587,2.25,728,3.425,737,3.726,781,3.117,784,3.694,795,4.532,796,4.324,811,3.901,1055,3.901,1067,3.369,1122,2.856,1129,4.324,1132,3.696,1139,5.332,1142,3.369,1146,4.324,1147,3.369,1162,4.588,1164,4.904,1165,4.904,1166,5.3,1209,5.83,1211,4.588,1212,4.543,1213,6.793,1214,6.793,1215,7.732,1216,6.793,1217,7.732,1218,6.636,1219,5.17,1220,5.17]],["title/pipes/PhageParentsPipe.html",[1122,1.947,1221,3.128]],["body/pipes/PhageParentsPipe.html",[2,0.285,3,0.341,5,0.313,7,0.183,20,3.043,22,1.264,24,0.991,33,0.964,38,0.889,40,0.692,41,0.011,42,0.89,43,0.355,44,0.797,52,0.983,56,0.813,59,0.585,60,0.579,65,0.326,66,0.561,82,0.718,120,0.803,121,1.545,146,0.007,147,0.007,166,3,186,2.455,208,2.618,237,1.593,238,1.148,243,2.989,259,2.887,406,2.625,587,2.087,588,2.461,590,4.45,711,2.183,728,3.043,764,2.542,777,4.667,781,3.137,789,3.499,791,5.102,818,3.083,1122,2.537,1129,3.842,1132,3.444,1139,5.07,1141,5.18,1142,2.818,1146,3.842,1147,2.818,1162,4.076,1164,4.357,1165,4.357,1166,4.709,1182,5.18,1185,3.453,1200,4.076,1221,4.076,1222,3.799,1223,3.17,1224,6.708,1225,4.709,1226,5.895,1227,5.895,1228,5.895,1229,5.895,1230,7.204,1231,6.33,1232,5.324,1233,5.895,1234,5.18,1235,5.895,1236,5.895,1237,5.895,1238,5.895,1239,5.895,1240,4.324,1241,4.324,1242,4.324,1243,4.324,1244,4.324,1245,4.324,1246,4.324,1247,3.799,1248,4.324,1249,4.324,1250,6.708,1251,6.708,1252,4.324]],["title/interfaces/PlateInput.html",[170,0.811,826,2.949]],["body/interfaces/PlateInput.html",[2,0.314,3,0.375,5,0.344,7,0.202,28,0.674,29,1.036,41,0.011,43,0.578,51,1.897,56,0.972,59,0.473,65,0.588,82,0.58,103,1.127,108,0.525,120,0.827,124,1.199,146,0.007,147,0.007,169,2.838,170,1.434,171,1.283,230,3.496,237,1.75,238,1.225,365,1.557,379,1.649,384,2.941,419,2.45,420,1.562,421,1.92,475,1.499,647,2.941,656,2.8,710,2.8,771,4.507,773,3.306,776,2.049,779,1.789,789,1.92,793,2.536,794,2.561,797,2.8,798,2.458,807,2.195,816,2.941,817,2.276,826,4.099,829,2.116,831,3.103,832,3.698,833,2.8,835,2.941,840,3.103,842,3.292,843,3.292,844,3.103,845,3.103,848,3.103,852,3.103,855,3.292,856,3.292,857,3.292,889,3.292,926,2.12,1253,3.519,1254,5.984,1255,5.179,1256,5.179,1257,5.024,1258,3.103,1259,3.292,1260,3.292,1261,3.103,1262,3.519,1263,5.024,1264,2.941,1265,3.103,1266,4.099,1267,4.797,1268,4.099,1269,3.803,1270,4.099]],["title/interfaces/PlateResults.html",[170,0.811,852,2.949]],["body/interfaces/PlateResults.html",[2,0.291,3,0.347,5,0.318,7,0.187,28,0.726,29,0.983,41,0.011,43,0.642,51,1.607,56,0.934,59,0.437,65,0.573,82,0.536,103,1.213,108,0.485,120,0.844,124,1.161,146,0.007,147,0.007,169,2.565,170,1.402,171,1.824,230,2.962,237,1.814,238,1.318,365,1.439,379,2.067,384,3.686,419,2.373,420,1.093,421,1.775,475,1.565,647,3.686,656,3.509,710,2.588,771,4.08,773,3.37,776,1.895,779,1.698,789,2.927,793,2.73,794,2.367,797,3.232,798,2.272,807,2.752,816,2.719,817,2.105,826,2.869,829,2.442,831,2.869,832,3.981,833,3.509,835,4.483,840,2.869,842,3.044,843,3.044,844,2.869,845,2.869,848,3.889,852,3.889,855,3.044,856,3.044,857,3.044,889,3.044,926,1.96,1253,3.254,1254,5.408,1255,3.044,1256,3.044,1257,4.767,1258,2.869,1259,3.044,1260,3.044,1261,2.869,1262,3.254,1263,5.798,1264,3.686,1265,3.889,1266,4.73,1267,5.094,1268,5.098,1269,4.767,1270,5.098]],["title/interfaces/PlexerInput.html",[170,0.811,840,2.949]],["body/interfaces/PlexerInput.html",[2,0.311,3,0.372,5,0.341,7,0.2,28,0.671,29,1.029,41,0.011,43,0.575,51,1.888,56,0.967,59,0.468,65,0.586,82,0.574,103,1.12,108,0.52,120,0.833,124,1.303,146,0.007,147,0.007,169,2.828,170,1.43,171,1.271,230,3.48,237,1.747,238,1.217,365,2.044,379,1.634,384,2.914,419,2.292,420,1.172,421,1.902,475,1.597,647,2.914,656,2.774,710,2.774,771,4.499,773,3.269,776,2.031,779,1.778,789,1.902,793,2.521,794,2.537,797,2.783,798,2.435,807,2.175,816,2.914,817,2.256,826,3.075,829,2.103,831,3.075,832,3.676,833,2.774,835,2.914,840,4.074,842,4.322,843,4.322,844,3.075,845,3.075,848,3.075,852,3.075,855,5.161,856,5.161,857,3.262,889,3.262,926,2.101,1253,3.487,1254,5.962,1255,3.262,1256,3.262,1257,4.993,1258,3.075,1259,3.262,1260,3.262,1261,3.075,1262,3.487,1263,4.993,1264,2.914,1265,3.075,1266,4.074,1267,4.787,1268,4.074,1269,3.769,1270,4.074]],["title/modules/ProfileModule.html",[194,1.522,275,3.128]],["body/modules/ProfileModule.html",[2,0.381,3,0.455,5,0.417,41,0.011,54,0.553,59,0.862,60,0.772,65,0.537,66,0.749,126,1.064,140,2.09,142,2.09,146,0.008,147,0.008,174,1.735,194,2.393,196,1.735,197,2.979,198,3.978,199,2.484,200,3.826,205,3.746,207,3.671,208,1.942,214,3.824,215,3.241,216,2.979,275,6.096,339,4.61,542,2.403,1271,5.071,1272,5.071,1273,5.772,1274,5.071,1275,5.197,1276,5.772,1277,5.772,1278,5.772,1279,4.61,1280,4.266,1281,5.071,1282,4.61,1283,5.772]],["title/injectables/ProfileService.html",[148,1.714,1275,2.795]],["body/injectables/ProfileService.html",[2,0.281,3,0.336,5,0.308,7,0.282,13,2.791,28,0.408,29,0.961,30,1.947,33,1.302,35,1.031,38,1.473,40,1.065,41,0.011,42,1.005,43,0.588,44,1.227,49,2.342,50,2.599,51,2.176,52,1.135,54,0.844,56,0.919,57,1.52,58,1.476,59,0.711,60,0.57,62,1.355,64,2.292,65,0.322,66,0.553,143,1.877,146,0.007,147,0.007,148,2.522,152,4.314,167,2.022,175,1.615,176,2.094,210,2.281,236,3.452,237,1.707,240,2.431,286,2.947,329,4.3,345,5.293,357,3.745,358,5.293,360,4.663,366,3.606,368,3.06,369,2.982,373,2.632,374,4.094,378,2.358,395,5.186,411,2.791,421,3.304,432,4.951,437,3.745,447,5.13,527,3.804,542,3.537,587,1.117,588,1.317,886,4.314,1275,3.606,1284,3.745,1285,5.838,1286,5.13,1287,3.804,1288,5.838,1289,4.663,1290,5.838,1291,5.838,1292,4.262,1293,5.838,1294,5.838,1295,5.72,1296,5.838,1297,4.262,1298,5.13,1299,5.72,1300,4.314,1301,5.13,1302,5.838,1303,5.838,1304,5.838]],["title/components/ResetPasswordComponent.html",[0,0.417,125,1.124]],["body/components/ResetPasswordComponent.html",[0,0.692,1,0.689,2,0.183,3,0.219,4,0.768,5,0.201,7,0.118,9,0.395,13,2.042,16,1.039,18,0.712,21,1.119,22,1.249,23,2.24,24,0.636,25,2.407,26,1.249,28,0.266,29,0.703,30,2.38,32,2.775,33,0.952,34,2.214,35,1.033,36,1.558,37,1.949,38,1.544,40,0.444,41,0.011,42,0.786,43,0.588,44,0.511,45,2.296,47,1.969,52,1.05,53,1.857,54,0.638,56,0.92,57,1.857,58,1.803,59,0.627,60,0.371,62,0.882,65,0.21,66,0.36,70,0.36,72,1.452,73,0.768,74,0.768,75,0.689,76,1.182,77,0.689,78,1.15,79,0.768,80,0.653,81,2.002,82,0.338,83,0.768,84,0.689,85,0.768,86,0.689,87,0.768,88,0.689,89,1.182,90,0.689,91,1.441,92,0.689,93,0.768,94,0.689,95,0.728,96,1.182,97,0.708,98,1.182,99,0.689,100,0.768,101,0.689,102,0.708,103,0.497,104,1.618,105,0.689,106,0.747,107,0.689,108,0.306,109,0.689,110,0.768,111,0.689,112,0.511,113,0.689,114,0.768,115,0.689,116,0.768,117,0.689,118,0.768,119,0.689,120,0.266,121,0.728,122,0.768,123,0.708,124,0.444,125,1.452,126,1.5,127,0.689,128,0.768,129,0.689,130,0.768,131,0.689,132,0.768,133,0.689,134,0.768,135,0.689,136,0.689,137,0.689,138,0.689,139,0.768,140,0.689,141,0.768,142,0.689,143,0.728,144,0.747,145,0.768,146,0.005,147,0.008,155,1.618,167,1.479,171,1.402,172,1.194,173,2.042,174,0.834,188,2.12,240,2.434,248,1.722,263,1.432,325,2.511,329,4.337,340,6.101,343,1.479,344,2.398,362,1.669,365,2.27,367,1.969,370,1.901,372,2.296,375,2.794,376,2.498,378,2.257,379,2.025,390,1.714,394,2.511,395,4.608,399,5.587,402,3.752,405,2.284,411,2.042,414,2.952,420,2.007,435,1.901,450,3.847,458,3.282,462,3.017,464,2.783,480,2.168,485,3.461,487,2.284,489,2.923,490,3.282,495,2.783,499,1.669,500,2.296,506,1.194,507,1.28,511,2.4,512,1.632,523,1.632,524,1.632,542,1.778,552,3.611,587,0.728,588,0.858,589,1.377,590,1.714,605,1.632,675,2.952,829,1.437,860,2.051,861,3.752,862,3.411,863,5.856,869,3.752,875,1.808,878,3.752,880,2.051,881,2.051,882,2.438,1035,2.051,1077,3.411,1223,2.296,1305,6.711,1306,3.752,1307,5.846,1308,5.136,1309,5.846,1310,4.271,1311,2.775,1312,3.752,1313,3.752,1314,3.847,1315,2.775,1316,2.775,1317,4.271,1318,4.669,1319,2.775,1320,5.846,1321,2.438,1322,3.752,1323,2.775,1324,4.271,1325,2.438,1326,4.271,1327,2.438,1328,2.438,1329,2.775,1330,2.775,1331,2.775,1332,2.775,1333,2.438,1334,2.775,1335,2.775,1336,3.752,1337,3.752,1338,3.752,1339,2.438,1340,3.411,1341,3.752]],["title/interfaces/Scenario.html",[108,0.499,170,0.811]],["body/interfaces/Scenario.html",[2,0.371,3,0.443,5,0.407,7,0.323,28,0.539,29,1.153,41,0.011,43,0.673,51,1.516,56,1.231,59,0.695,65,0.425,108,0.973,120,0.67,146,0.008,147,0.008,167,2.425,169,2.132,170,1.255,187,5.592,238,1.363,263,3.614,711,1.886,750,4.116,779,1.991,818,2.573,829,1.894,891,5.165,932,5.893,933,5.592,938,5.893,939,5.592,1342,4.945,1343,6.369,1344,5.592,1345,5.174,1346,7.001,1347,7.001,1348,6.152,1349,6.152]],["title/components/ScenarioComponent.html",[0,0.417,127,1.124]],["body/components/ScenarioComponent.html",[0,0.775,1,1.262,2,0.335,3,0.4,4,1.407,5,0.367,7,0.215,9,0.723,16,1.31,18,0.935,24,1.164,25,2.506,26,1.919,41,0.01,42,0.991,54,0.628,59,0.505,60,0.68,65,0.384,66,0.659,70,0.659,72,1.908,73,1.407,74,1.407,75,1.262,76,1.817,77,1.262,78,1.768,79,1.407,80,1.196,81,1.332,82,0.619,83,1.407,84,1.262,85,1.407,86,1.262,87,1.407,88,1.262,89,1.817,90,1.262,91,2.012,92,1.262,93,1.407,94,1.262,95,1.332,96,1.817,97,1.297,98,1.817,99,1.262,100,1.407,101,1.262,102,1.297,103,0.911,104,2.126,105,1.262,106,1.369,107,1.262,108,0.877,109,1.262,110,1.407,111,1.262,112,0.937,113,1.262,114,1.407,115,1.262,116,1.407,117,1.262,118,1.407,119,1.262,120,0.487,121,1.332,122,1.407,123,1.297,124,0.813,125,1.262,126,0.937,127,1.908,128,1.407,129,1.262,130,1.407,131,1.262,132,1.407,133,1.262,134,1.407,135,1.262,136,1.262,137,1.262,138,1.262,139,1.407,140,1.262,141,1.407,142,1.262,143,1.332,144,1.369,145,1.407,146,0.008,147,0.008,186,2.733,194,2.208,238,1.278,263,3.388,292,4.054,475,1.313,718,5.767,776,2.825,1350,4.466]],["title/modules/ScenarioModule.html",[194,1.522,276,3.128]],["body/modules/ScenarioModule.html",[0,0.648,2,0.374,3,0.446,5,0.409,7,0.24,11,4.859,17,3.628,41,0.011,59,0.852,60,0.758,65,0.531,66,0.735,107,2.08,108,0.881,126,1.044,127,2.08,146,0.008,147,0.008,174,1.702,194,2.818,196,1.702,197,2.923,198,3.945,199,2.437,200,2.811,205,3.729,207,3.628,208,1.906,214,3.78,215,3.18,216,2.923,238,1.369,263,2.923,276,6.02,697,4.976,887,3.947,977,4.859,1351,4.976,1352,4.976,1353,5.663,1354,5.663,1355,6.176,1356,5.614,1357,6.176,1358,5.663,1359,5.663,1360,5.663,1361,5.663]],["title/injectables/ScenarioResolver.html",[148,1.714,279,3.128]],["body/injectables/ScenarioResolver.html",[2,0.324,3,0.386,5,0.354,7,0.272,22,2.089,28,0.469,33,1.69,35,1.186,38,1.319,40,1.026,41,0.011,42,0.968,43,0.526,44,1.181,48,2.791,52,1.111,59,0.781,60,0.656,62,1.559,65,0.37,66,0.636,108,0.96,146,0.008,147,0.008,148,2.707,156,4.857,161,5.437,162,2.626,163,5.239,166,2.67,167,2.946,174,1.474,175,1.858,176,2.215,188,3.183,238,1.623,254,3.029,279,4.433,280,3.911,292,3.961,343,2.625,347,4.656,368,2.871,370,2.855,374,3.911,384,3.961,420,1.218,421,2.585,434,4.179,496,3.961,643,3.961,703,6.443,706,5.122,710,3.77,711,2.041,750,3.911,754,4.309,779,1.824,828,2.356,891,4.681,935,4.179,950,3.624,966,3.917,1344,5.122,1345,4.739,1362,4.309,1363,4.904,1364,4.904,1365,4.904,1366,5.634,1367,6.412,1368,4.904,1369,4.904,1370,4.904]],["title/modules/SharedModule.html",[194,1.522,205,2.014]],["body/modules/SharedModule.html",[0,0.588,2,0.321,3,0.383,5,0.352,7,0.206,41,0.011,57,1.735,59,0.867,60,0.651,65,0.57,66,0.631,80,2.027,81,1.275,82,0.592,126,0.896,146,0.008,147,0.008,169,2.416,194,2.8,196,1.462,197,2.511,198,3.673,199,2.745,200,2.414,205,3.903,207,3.292,208,1.637,214,3.43,262,3.94,289,3.595,291,3.885,292,3.004,330,6.253,331,3.885,332,6.253,369,2.656,435,2.84,468,3.17,469,3.17,471,3.94,475,0.973,581,3.17,656,3.75,944,3.595,1122,2.745,1123,5.954,1155,5.954,1221,5.954,1371,4.274,1372,4.274,1373,4.274,1374,4.864,1375,6.378,1376,6.378,1377,6.378,1378,6.378,1379,4.274,1380,5.604,1381,6.378,1382,6.378,1383,6.378,1384,4.274,1385,6.378,1386,4.274,1387,4.274,1388,4.864,1389,4.864,1390,4.864,1391,4.864,1392,4.274,1393,4.864,1394,4.864,1395,4.864,1396,4.864,1397,4.864]],["title/components/SigninComponent.html",[0,0.417,129,1.124]],["body/components/SigninComponent.html",[0,0.717,1,0.908,2,0.241,3,0.288,4,1.012,5,0.264,7,0.155,9,0.52,14,2.943,16,1.167,18,0.815,21,2.699,22,1.532,24,0.837,25,2.459,26,1.532,28,0.35,29,0.863,30,1.957,32,3.071,33,1.169,35,0.884,36,2.053,37,1.957,38,1.517,40,0.585,41,0.011,42,0.925,43,0.549,44,0.674,45,2.819,49,2.189,52,0.768,53,1.87,54,0.786,56,0.846,57,1.304,58,1.266,59,0.704,60,0.489,62,1.162,65,0.276,66,0.474,70,0.919,72,1.663,73,1.012,74,1.012,75,0.908,76,1.451,77,0.908,78,1.412,79,1.012,80,0.86,81,0.958,82,0.445,83,1.012,84,0.908,85,1.012,86,0.908,87,1.012,88,0.908,89,1.451,90,0.908,91,1.696,92,0.908,93,1.012,94,0.908,95,1.607,96,1.451,97,0.933,98,1.451,99,0.908,100,1.012,101,0.908,102,0.933,103,0.655,104,1.853,105,0.908,106,0.985,107,0.908,108,0.403,109,0.908,110,1.012,111,0.908,112,0.674,113,0.908,114,1.012,115,0.908,116,1.012,117,0.908,118,1.012,119,0.908,120,0.35,121,0.958,122,1.012,123,0.933,124,0.585,125,0.908,126,0.674,127,0.908,128,1.012,129,1.663,130,1.012,131,0.908,132,1.012,133,0.908,134,1.012,135,0.908,136,0.908,137,0.908,138,0.908,139,1.012,140,0.908,141,1.012,142,0.908,143,0.958,144,0.985,145,1.012,146,0.006,147,0.006,155,2.536,158,2.826,167,2.319,174,1.099,175,1.385,180,4.187,190,2.943,238,1.021,240,2.788,325,3.082,329,3.661,343,2.555,354,5.451,367,2.417,368,1.986,373,1.926,375,2.506,376,2.189,378,2.098,394,3.082,395,5.373,405,2.616,411,3.715,412,3.624,432,3.624,433,4.135,434,3.416,462,2.706,480,2.552,485,3.702,487,2.616,499,2.048,500,2.819,506,1.573,507,1.685,511,1.685,512,2.149,523,2.149,524,2.149,542,1.522,605,2.149,614,2.92,868,3.416,875,2.382,880,2.701,881,2.701,1002,4.9,1108,4.606,1398,3.212,1399,5.242,1400,5.242,1401,5.242,1402,3.655,1403,4.606,1404,3.655,1405,5.242,1406,3.874,1407,5.242,1408,3.655,1409,5.882,1410,3.655,1411,3.655,1412,3.212,1413,3.655]],["title/components/SignoutComponent.html",[0,0.417,131,1.124]],["body/components/SignoutComponent.html",[0,0.764,1,1.055,2,0.28,3,0.335,4,1.176,5,0.307,7,0.18,9,0.604,14,3.27,16,1.234,18,0.871,21,2.883,22,1.703,23,2.86,24,0.973,25,2.482,28,0.407,29,0.959,30,2.19,33,1.299,34,2.709,35,1.408,37,2.262,38,1.47,40,0.68,41,0.011,42,1.003,43,0.478,44,0.783,52,0.853,53,2.077,54,0.773,59,0.71,60,0.568,62,1.35,65,0.321,66,0.551,70,0.972,72,1.776,73,1.176,74,1.176,75,1.055,76,1.612,77,1.055,78,1.569,79,1.176,80,1,81,1.113,82,0.517,83,1.176,84,1.055,85,1.176,86,1.055,87,1.176,88,1.055,89,1.612,90,1.055,91,1.839,92,1.055,93,1.176,94,1.055,95,1.113,96,1.612,97,1.084,98,1.612,99,1.055,100,1.176,101,1.055,102,1.084,103,0.761,104,1.979,105,1.055,106,1.144,107,1.055,108,0.468,109,1.055,110,1.176,111,1.055,112,0.783,113,1.055,114,1.176,115,1.055,116,1.176,117,1.055,118,1.176,119,1.055,120,0.407,121,1.113,122,1.176,123,1.084,124,0.68,125,1.055,126,1.225,127,1.055,128,1.176,129,1.055,130,1.176,131,1.776,132,1.176,133,1.055,134,1.176,135,1.055,136,1.055,137,1.055,138,1.055,139,1.176,140,1.055,141,1.176,142,1.055,143,1.113,144,1.144,145,1.176,146,0.007,147,0.007,158,3.064,174,1.277,190,4.015,208,2.406,325,3.424,343,2.017,355,4.304,379,2.017,406,2.593,408,4.304,411,3.419,480,2.767,485,3.721,487,2.794,491,2.685,499,2.275,500,3.132,512,2.497,517,2.937,523,2.497,524,2.497,587,1.113,588,1.313,589,2.108,628,2.497,675,4.026,875,2.768,1002,4.026,1103,3.732,1414,3.732,1415,5.824,1416,5.824,1417,4.247,1418,4.247,1419,4.652,1420,4.247,1421,4.247,1422,4.247]],["title/components/SignupComponent.html",[0,0.417,133,1.124]],["body/components/SignupComponent.html",[0,0.695,1,0.701,2,0.186,3,0.222,4,0.781,5,0.204,7,0.183,9,0.401,13,2.067,14,2.428,16,1.443,18,0.718,21,2.377,22,1.264,23,2.263,24,0.646,25,2.41,26,1.264,28,0.27,29,0.712,30,2.328,32,2.793,33,0.964,34,2.233,35,0.682,36,1.584,37,1.724,38,1.55,40,0.692,41,0.011,42,1.138,43,0.573,44,0.797,45,2.325,48,1.689,49,1.414,52,1.023,53,1.876,54,0.776,56,1.019,57,1.876,58,1.821,59,0.666,60,0.377,61,3.281,62,0.896,65,0.213,66,0.366,70,0.682,72,1.464,73,0.781,74,0.781,75,0.701,76,1.197,77,0.701,78,1.588,79,0.781,80,0.664,81,1.379,82,0.343,83,0.781,84,0.701,85,0.781,86,0.701,87,0.781,88,0.701,89,1.197,90,0.701,91,1.455,92,0.701,93,0.781,94,0.701,95,0.739,96,1.197,97,0.72,98,1.197,99,0.701,100,0.781,101,0.701,102,0.72,103,0.505,104,1.632,105,0.701,106,0.76,107,0.701,108,0.311,109,0.701,110,0.781,111,0.701,112,0.52,113,0.701,114,0.781,115,0.701,116,0.781,117,0.701,118,0.781,119,0.701,120,0.27,121,0.739,122,0.781,123,0.72,124,0.451,125,0.701,126,0.52,127,0.701,128,0.781,129,0.701,130,0.781,131,0.701,132,0.781,133,1.464,134,0.781,135,0.701,136,0.701,137,0.701,138,0.701,139,0.781,140,0.701,141,0.781,142,0.701,143,0.739,144,0.76,145,0.781,146,0.005,147,0.008,158,2.425,162,1.589,171,1.165,174,0.848,175,1.068,176,0.825,190,2.428,192,4.828,234,2.146,235,2.146,238,1.306,240,2.793,245,2.146,246,2.146,248,1.744,263,2.232,277,3.17,298,2.478,329,3.466,343,2.042,356,5.572,362,2.303,365,1.928,366,3.642,367,1.994,369,1.801,373,2.167,375,2.067,376,1.414,378,2.049,394,2.542,405,1.689,411,3.72,412,4.076,420,1.306,421,1.744,474,2.325,475,1.509,480,2.19,487,2.303,493,3.248,499,2.303,506,1.214,507,1.3,511,2.718,517,1.95,521,1.584,522,1.584,532,3.17,562,2.232,563,2.146,564,2.232,575,2.428,586,1.517,596,2.325,605,1.658,628,1.658,633,1.517,634,1.517,647,2.671,653,4.638,681,3.799,682,3.799,711,1.588,764,1.658,779,1.23,829,1.455,868,3.842,875,3.427,880,2.084,881,2.084,927,4.575,1055,2.542,1099,4.709,1223,2.325,1340,3.454,1341,3.799,1403,3.799,1412,2.478,1419,3.454,1423,2.478,1424,4.324,1425,5.896,1426,4.324,1427,4.324,1428,4.324,1429,2.821,1430,4.958,1431,6.491,1432,3.799,1433,2.821,1434,2.821,1435,2.821,1436,2.821,1437,3.799,1438,2.821,1439,4.324,1440,2.821,1441,2.821,1442,4.324,1443,2.821,1444,4.324,1445,2.821,1446,2.821,1447,2.821,1448,4.324,1449,2.821,1450,2.821,1451,2.821,1452,2.821,1453,2.821]],["title/interfaces/Student.html",[18,0.551,170,0.811]],["body/interfaces/Student.html",[2,0.361,3,0.431,5,0.395,7,0.232,9,0.778,16,1.238,18,0.961,28,0.523,29,1.132,41,0.011,42,1.135,43,0.617,44,1.53,51,2.026,52,1.008,54,0.658,56,1.145,59,0.683,65,0.568,70,0.709,72,1.358,108,0.758,146,0.008,147,0.008,154,2.353,169,2.849,170,1.348,171,2.026,210,2.136,226,2.94,227,4.04,228,1.737,229,4.803,230,3.733,231,4.803,232,4.044,233,3.779,234,2.713,235,2.713,236,2.276,237,1.155,238,1.464,239,4.247,240,3.286,241,4.431,242,5.143,243,5.2,244,4.366,245,2.713,246,2.713,247,4.366,248,2.204,249,4.366,250,4.366,251,3.377,252,4.366,253,4.366,254,3.377,255,3.377,256,4.366,257,6.007,258,4.366,259,2.353,260,4.366]],["title/interfaces/StudentFridge.html",[170,0.811,890,2.949]],["body/interfaces/StudentFridge.html",[2,0.325,3,0.388,5,0.356,7,0.209,9,0.915,18,0.783,28,0.472,29,1.06,41,0.011,43,0.675,44,1.489,51,1.93,54,0.472,56,1.151,59,0.639,65,0.486,82,0.872,108,0.92,120,0.686,124,0.789,146,0.008,147,0.008,155,2.877,169,1.868,170,1.284,171,2.045,232,4.083,233,3.409,236,2.053,237,1.042,238,1.253,241,4.423,365,1.612,368,3.06,420,1.225,475,1.433,709,3.213,711,1.733,715,2.742,716,3.769,750,3.321,773,1.926,780,3.46,807,2.273,810,3.919,813,3.715,818,2.895,828,1.812,829,1.659,883,3.938,884,5.822,885,3.409,886,3.644,887,2.769,888,5.689,889,3.409,890,4.193,891,3.045,1454,6.435]],["title/components/StudentFridgeComponent.html",[0,0.417,135,1.124]],["body/components/StudentFridgeComponent.html",[0,0.629,1,0.596,2,0.158,3,0.189,4,0.664,5,0.173,7,0.201,9,0.892,16,1.033,18,0.877,20,3.237,21,2.178,22,1.114,23,2.041,24,0.55,25,2.375,26,1.114,28,0.23,29,0.628,30,2.336,32,2.612,33,0.85,34,2.046,35,0.58,37,1.579,38,1.538,40,0.943,41,0.011,42,0.889,43,0.591,44,1.212,47,1.757,48,1.489,52,1.03,53,1.691,54,0.454,56,1.061,57,1.691,58,1.642,59,0.677,60,0.321,61,3.041,62,0.763,63,0.938,65,0.181,66,0.912,70,0.311,72,1.341,73,0.664,74,0.664,75,0.596,76,1.055,77,0.596,78,1.027,79,0.664,80,0.565,81,0.629,82,0.577,83,0.664,84,0.596,85,0.664,86,0.596,87,0.664,88,0.596,89,1.055,90,0.596,91,1.312,92,0.596,93,0.664,94,0.596,95,0.629,96,1.055,97,0.612,98,1.055,99,0.596,100,0.664,101,0.596,102,0.612,103,0.43,104,1.495,105,0.596,106,0.646,107,0.596,108,0.595,109,0.596,110,0.664,111,0.596,112,0.442,113,0.596,114,0.664,115,0.596,116,0.664,117,0.596,118,0.664,119,0.596,120,0.629,121,0.629,122,0.664,123,0.612,124,0.384,125,0.596,126,0.442,127,0.596,128,0.664,129,0.596,130,0.664,131,0.596,132,0.664,133,0.596,134,0.664,135,1.341,136,0.596,137,0.596,138,0.596,139,0.664,140,0.596,141,0.664,142,0.596,143,0.629,144,0.646,145,0.664,146,0.004,147,0.004,155,1.444,158,1.757,162,1.401,167,1.32,170,0.43,171,1.771,172,3.164,173,3.143,174,0.721,175,0.909,176,1.114,186,3.114,187,3.045,192,2.635,196,1.146,206,2.904,226,1.29,237,0.805,243,2.635,248,1.537,280,1.239,297,1.659,313,2.635,343,1.32,365,1.246,368,2.585,374,2.787,376,1.246,378,1.536,379,1.32,406,1.697,420,0.596,475,1.081,480,1.974,485,1.757,487,2.11,489,2.663,490,3.033,491,2.186,498,2.635,499,2.11,506,1.033,507,1.106,509,1.147,511,1.106,532,2.904,533,3.734,542,1.587,543,1.411,551,2.817,552,4.448,553,3.734,555,2.241,558,1.892,562,1.967,563,1.892,564,1.967,573,2.241,575,2.14,586,1.29,587,0.629,588,0.742,589,1.191,592,1.659,593,1.773,596,1.29,605,1.411,619,1.773,632,1.659,633,1.29,634,1.29,636,2.635,715,2.488,716,1.892,719,4.635,723,3.278,733,3.033,751,2.108,759,2.817,764,1.411,779,1.676,781,1.537,783,2.447,784,2.324,787,1.967,792,3.831,809,4.061,810,2.787,813,2.623,818,3.054,829,1.817,836,3.519,868,2.484,887,2.14,890,3.519,931,3.349,971,3.045,1017,2.484,1027,3.045,1034,6.472,1036,4.706,1055,2.241,1067,1.564,1089,6.328,1132,1.822,1207,2.108,1455,5.248,1456,5.61,1457,2.108,1458,3.812,1459,3.812,1460,5.401,1461,4.314,1462,5.401,1463,3.812,1464,3.812,1465,3.812,1466,3.812,1467,2.4,1468,3.812,1469,3.812,1470,3.812,1471,2.4,1472,2.4,1473,3.812,1474,3.812,1475,3.812,1476,2.4,1477,3.812,1478,2.4,1479,2.4,1480,4.742,1481,2.4,1482,2.4,1483,2.4,1484,2.4,1485,2.817,1486,1.773,1487,2.108,1488,2.4,1489,2.4,1490,2.4,1491,2.4,1492,2.4,1493,2.4,1494,3.812,1495,2.4,1496,3.812,1497,2.4,1498,2.4,1499,2.4,1500,2.4,1501,4.742,1502,2.4,1503,3.812,1504,2.4,1505,3.812,1506,2.4,1507,3.812,1508,3.812,1509,3.812,1510,3.812]],["title/components/StudentIndivComponent.html",[0,0.417,136,1.124]],["body/components/StudentIndivComponent.html",[0,0.604,1,0.448,2,0.301,3,0.142,4,0.499,5,0.13,7,0.232,9,0.828,13,1.444,16,1.252,18,1.019,20,2.617,21,1.836,22,1.332,23,1.676,24,0.413,25,2.299,26,0.883,28,0.173,29,0.497,30,2.336,32,2.283,33,0.673,34,1.725,35,0.436,37,1.332,38,1.578,40,0.977,41,0.011,42,1.016,43,0.577,44,1.01,47,1.392,48,2.142,49,1.793,51,1.227,52,1.21,53,1.956,54,0.721,56,1.143,57,1.077,58,1.046,59,0.721,60,0.241,61,2.617,62,0.573,63,0.705,64,0.97,65,0.136,66,0.505,70,0.755,71,1.392,72,1.131,73,0.499,74,0.499,75,0.448,76,0.836,77,0.448,78,0.813,79,0.499,80,0.711,81,1.526,82,0.934,83,0.499,84,0.448,85,0.499,86,0.448,87,0.499,88,0.448,89,0.836,90,0.448,91,1.078,92,0.448,93,0.499,94,0.448,95,0.473,96,0.836,97,0.46,98,0.836,99,0.448,100,0.499,101,0.448,102,0.46,103,0.323,104,1.261,105,0.448,106,0.486,107,0.448,108,0.885,109,0.448,110,0.499,111,0.448,112,0.332,113,0.448,114,0.499,115,0.448,116,0.499,117,0.448,118,0.499,119,0.448,120,0.173,121,1.021,122,0.499,123,0.46,124,0.289,125,0.448,126,0.332,127,0.448,128,0.499,129,0.448,130,0.499,131,0.448,132,0.499,133,0.448,134,0.499,135,0.448,136,1.131,137,0.448,138,0.448,139,0.499,140,0.448,141,0.499,142,0.448,143,0.473,144,0.486,145,0.499,146,0.004,147,0.004,154,3.42,155,2.788,158,1.392,162,1.11,166,2.111,167,1.578,171,1.568,172,3.167,173,3.132,174,0.542,175,0.683,176,1.332,186,2.728,199,0.776,205,0.803,206,2.449,210,1.18,216,0.931,226,2.726,240,1.257,242,1.968,248,1.218,254,1.114,262,1.114,263,1.559,280,2.351,297,1.247,343,1.899,367,1.392,373,1.11,374,1.559,375,0.862,376,0.987,378,1.295,383,1.559,390,1.114,406,1.344,420,0.967,440,2.813,464,1.176,465,1.441,467,3.366,468,1.176,469,1.176,475,1.097,480,1.622,485,1.796,487,1.779,489,2.187,490,2.557,491,1.796,499,1.779,506,0.776,507,0.832,509,0.862,511,2.1,521,2.187,522,2.187,530,4.002,532,2.449,533,3.149,542,1.257,543,1.061,544,3.422,547,2.412,552,4.602,553,4.53,555,2.29,557,2.232,558,3.252,559,3.422,562,1.559,563,1.499,564,1.559,575,1.696,580,1.333,581,1.176,582,1.441,583,1.333,586,0.97,587,0.473,588,0.557,589,0.895,590,1.114,591,2.653,592,1.247,593,1.333,596,2.726,597,1.441,605,1.061,616,1.585,617,1.585,618,1.441,619,2.232,621,2.412,622,1.585,623,1.585,624,1.585,626,1.585,628,2.29,632,1.247,633,0.97,634,0.97,636,2.088,639,1.441,640,2.653,642,2.653,643,2.406,646,2.653,660,3.366,662,1.441,663,1.585,664,1.247,665,1.441,711,0.813,715,0.933,716,3.549,719,4.052,722,2.232,723,2.693,728,2.83,729,3.422,732,2.878,733,1.696,739,1.865,750,2.617,755,2.351,764,2.29,767,1.585,769,2.232,779,0.859,781,1.836,809,3.92,829,0.607,836,1.968,887,1.696,927,1.775,966,1.441,1002,2.088,1027,1.441,1034,5.502,1036,3.111,1037,4.513,1046,2.653,1055,1.775,1132,0.862,1287,1.968,1318,4.38,1431,3.422,1455,5.35,1485,2.232,1486,1.333,1487,1.585,1511,6.181,1512,1.968,1513,3.02,1514,4.554,1515,4.554,1516,4.554,1517,3.02,1518,4.554,1519,3.02,1520,4.554,1521,3.02,1522,3.02,1523,1.804,1524,1.804,1525,3.02,1526,1.804,1527,2.653,1528,1.804,1529,3.02,1530,1.804,1531,2.232,1532,1.804,1533,4.554,1534,3.02,1535,1.804,1536,1.804,1537,1.804,1538,3.02,1539,1.804,1540,3.895,1541,1.804,1542,1.804,1543,2.653,1544,4.554,1545,3.02,1546,3.02,1547,3.02,1548,3.02,1549,1.804,1550,1.804,1551,3.02,1552,1.804,1553,2.653,1554,1.804,1555,1.804,1556,1.804,1557,1.804,1558,3.111,1559,1.804,1560,1.804,1561,1.804,1562,1.585,1563,1.804,1564,1.804,1565,3.895,1566,1.804,1567,1.804,1568,1.804,1569,1.804,1570,1.804,1571,4.554,1572,3.02,1573,1.804,1574,3.02,1575,1.804,1576,1.804,1577,1.804,1578,1.804,1579,1.804,1580,1.804,1581,1.804,1582,3.02,1583,2.653,1584,3.02,1585,3.02]],["title/components/StudentListComponent.html",[0,0.417,137,1.124]],["body/components/StudentListComponent.html",[0,0.716,1,0.903,2,0.24,3,0.286,4,1.007,5,0.263,7,0.154,9,0.95,16,1.249,18,1.059,22,1.527,23,2.63,24,0.833,25,2.458,26,1.527,28,0.348,29,0.86,30,2.374,32,3.066,33,1.165,34,2.53,35,1.263,37,1.953,38,1.514,40,0.582,41,0.011,42,0.922,43,0.548,44,0.67,47,2.408,49,2.184,52,0.765,53,1.863,54,0.768,56,0.843,57,1.297,58,1.26,59,0.731,60,0.487,61,3.651,62,1.156,63,1.421,65,0.275,66,0.472,70,0.472,72,1.659,73,1.007,74,1.007,75,0.903,76,1.446,77,0.903,78,1.407,79,1.007,80,0.856,81,0.953,82,0.443,83,1.007,84,0.903,85,1.007,86,0.903,87,1.007,88,0.903,89,1.446,90,0.903,91,1.691,92,0.903,93,1.007,94,0.903,95,0.953,96,1.446,97,0.928,98,1.446,99,0.903,100,1.007,101,0.903,102,0.928,103,0.652,104,1.849,105,0.903,106,0.98,107,0.903,108,0.401,109,0.903,110,1.007,111,0.903,112,0.67,113,0.903,114,1.007,115,0.903,116,1.007,117,0.903,118,1.007,119,0.903,120,0.348,121,0.953,122,1.007,123,0.928,124,0.582,125,0.903,126,0.67,127,0.903,128,1.007,129,0.903,130,1.007,131,0.903,132,1.007,133,0.903,134,1.007,135,0.903,136,0.903,137,1.659,138,0.903,139,1.007,140,0.903,141,1.007,142,0.903,143,0.953,144,0.98,145,1.007,146,0.006,147,0.006,153,3.315,154,2.248,162,1.919,171,1.407,186,2.175,196,1.57,206,3.592,226,3.592,248,2.106,255,2.246,374,3.447,376,1.708,378,1.738,379,1.809,406,2.325,420,0.903,475,1.605,480,2.545,487,2.61,491,2.818,498,3.611,499,2.61,506,1.565,507,1.677,509,1.739,511,1.677,521,2.042,522,2.042,532,3.592,575,2.933,583,2.688,586,1.956,587,0.953,588,1.124,589,1.805,596,1.956,633,1.956,634,1.956,637,4.172,659,3.196,660,2.688,661,3.196,671,2.905,672,4.172,711,1.407,723,3.611,1055,3.071,1430,3.86,1455,5.244,1486,2.688,1562,4.589,1583,4.589,1586,6.059,1587,4.589,1588,4.172,1589,3.196,1590,5.223,1591,3.637,1592,3.637,1593,3.637,1594,3.637,1595,3.637]],["title/modules/StudentModule.html",[194,1.522,1596,3.344]],["body/modules/StudentModule.html",[2,0.322,3,0.385,5,0.353,7,0.207,9,0.91,18,1.014,41,0.011,59,0.868,60,0.654,65,0.483,66,0.634,80,1.678,82,0.595,126,0.9,135,2.001,136,2.001,137,2.001,138,2.001,146,0.008,147,0.008,154,2.752,174,1.468,186,2.663,194,2.546,196,1.468,197,2.521,198,3.68,199,2.102,200,3.539,205,3.587,207,3.301,208,1.643,214,3.439,215,2.742,216,2.521,405,2.499,475,1.28,580,3.609,581,3.183,691,5.108,693,4.291,695,4.291,715,1.976,792,3.591,1161,5.571,1192,5.571,1211,5.571,1392,6.265,1456,4.726,1511,3.901,1586,3.901,1596,6.576,1597,4.291,1598,4.291,1599,4.884,1600,4.291,1601,5.571,1602,4.884,1603,6.395,1604,6.395,1605,4.884,1606,4.884,1607,4.884,1608,4.884,1609,4.884,1610,4.884,1611,4.884,1612,4.884,1613,4.884]],["title/interfaces/StudentPhage.html",[170,0.811,810,2.335]],["body/interfaces/StudentPhage.html",[2,0.281,3,0.335,5,0.307,7,0.247,9,0.829,18,0.71,28,0.407,29,0.96,41,0.011,43,0.587,44,1.074,51,1.57,54,0.685,56,0.987,65,0.566,82,1.018,103,0.762,120,0.848,124,0.68,146,0.007,147,0.007,162,1.563,170,1.421,171,1.927,196,1.278,228,1.853,230,3.551,237,1.843,238,1.507,362,1.661,365,1.39,368,1.611,407,2.5,419,2.339,435,1.893,475,1.331,573,2.5,587,2.029,588,2.055,711,1.57,715,2.055,737,3.734,771,2.287,772,2.771,773,2.277,774,2.627,775,2.94,776,3.566,777,2.388,778,2.771,779,1.21,780,3.576,781,2.35,782,2.388,783,2.195,784,3.079,785,2.627,786,2.5,787,2.195,788,3.91,789,2.885,790,2.771,791,2.5,792,3.734,793,1.715,794,2.287,795,4.404,796,4.334,797,3.447,798,2.195,799,2.961,800,3.91,801,2.862,802,4.598,803,4.598,804,4.598,805,4.598,806,4.334,807,3.066,808,2.94,809,2.627,810,3.008,811,4.206,812,4.03,813,3.447]],["title/components/StudentPhageComponent.html",[0,0.417,138,1.124]],["body/components/StudentPhageComponent.html",[0,0.729,1,0.969,2,0.257,3,0.307,4,1.079,5,0.282,7,0.165,9,0.555,16,1.196,18,0.962,24,0.893,25,2.469,26,1.605,28,0.373,33,1.224,35,1.535,38,1.306,41,0.011,42,0.828,43,0.521,52,1.065,54,0.721,56,1.068,59,0.545,60,0.522,65,0.294,66,0.506,70,0.506,72,1.712,73,1.079,74,1.079,75,0.969,76,1.519,77,0.969,78,1.478,79,1.079,80,0.918,81,1.022,82,0.773,83,1.079,84,0.969,85,1.079,86,0.969,87,1.079,88,0.969,89,1.519,90,0.969,91,1.758,92,0.969,93,1.079,94,0.969,95,1.022,96,1.519,97,0.995,98,1.519,99,0.969,100,1.079,101,0.969,102,0.995,103,0.699,104,1.908,105,0.969,106,1.05,107,0.969,108,0.7,109,0.969,110,1.079,111,0.969,112,0.719,113,0.969,114,1.079,115,0.969,116,1.079,117,0.969,118,1.079,119,0.969,120,0.834,121,1.022,122,1.079,123,0.995,124,0.624,125,0.969,126,0.719,127,0.969,128,1.079,129,0.969,130,1.079,131,0.969,132,1.079,133,0.969,134,1.079,135,0.969,136,0.969,137,0.969,138,1.712,139,1.079,140,0.969,141,1.079,142,0.969,143,1.022,144,1.05,145,1.079,146,0.006,147,0.006,166,2.285,186,2.285,259,3.243,365,2.254,419,1.795,458,3.87,573,3.227,587,1.439,714,4.056,715,1.696,728,3.557,732,4.056,782,3.566,783,2.833,784,2.362,787,2.833,792,3.082,810,3.278,813,2.444,818,2.017,836,3.577,1132,2.624,1168,4.822,1185,3.115,1186,4.822,1199,4.822,1213,4.822,1406,4.056,1455,4.765,1456,5.093,1512,3.577,1543,6.056,1614,3.426,1615,5.488,1616,5.488,1617,7.535,1618,5.488,1619,3.9,1620,5.488,1621,3.9,1622,3.9,1623,5.488,1624,3.9,1625,3.9,1626,3.9,1627,3.9,1628,3.9,1629,3.9,1630,3.9,1631,3.9,1632,3.9,1633,5.488,1634,5.488,1635,5.488,1636,5.488]],["title/injectables/StudentResolver.html",[148,1.714,1601,3.128]],["body/injectables/StudentResolver.html",[2,0.331,3,0.395,5,0.363,7,0.276,9,0.714,18,0.931,21,2.625,22,2.112,28,0.48,30,1.467,33,1.452,35,1.214,37,2.235,38,1.339,40,1.223,41,0.011,42,0.983,43,0.534,44,1.2,52,1.12,54,0.623,59,0.806,60,0.672,62,1.595,63,1.961,65,0.379,66,0.651,146,0.008,147,0.008,148,2.737,156,4.723,161,5.477,162,2.983,163,5.477,166,2.711,167,2.812,168,5.2,169,2.896,170,1.167,174,1.509,175,1.901,176,1.903,206,4.112,226,2.699,254,3.1,292,4.021,347,4.709,374,4.265,383,3.36,420,1.247,491,3.332,509,2.399,583,3.709,703,6.484,706,5.2,708,4.021,709,5.29,710,3.828,711,2.059,723,4.501,733,4.293,848,4.243,1486,3.709,1589,4.41,1601,4.501,1637,4.41,1638,5.019,1639,5.019,1640,6.51,1641,7.226,1642,5.019,1643,5.019]],["title/injectables/StudentService.html",[148,1.714,206,2.433]],["body/injectables/StudentService.html",[2,0.201,3,0.24,5,0.22,7,0.304,9,1.094,16,0.754,17,2.365,18,1.07,19,2.986,28,0.291,29,0.754,30,1.611,33,1.022,35,0.736,38,1.517,40,1.147,41,0.011,42,1.082,43,0.605,44,1.321,49,2.643,52,1.237,54,0.774,56,1.104,57,1.086,58,1.908,59,0.609,60,0.407,62,0.967,65,0.23,66,0.395,82,0.898,108,0.762,146,0.005,147,0.005,148,2.087,153,3.817,154,3.58,155,2.716,170,0.545,171,1.651,172,1.972,173,2.19,175,1.153,176,2.363,196,1.377,206,2.464,212,3.386,226,2.464,236,3.529,237,1.87,286,2.104,343,1.587,344,2.573,345,4.53,358,4.53,368,2.322,369,1.908,371,3.167,373,1.684,374,4.267,378,2.251,379,1.587,383,2.365,420,1.138,421,2.786,455,4.026,475,1.227,542,3.202,558,2.274,584,3.659,708,2.83,710,2.694,711,1.234,715,2.538,716,2.274,732,3.386,733,4.718,759,5.298,781,2.472,813,2.04,818,1.684,822,2.674,824,4.026,853,6.07,890,1.983,927,2.694,1295,5.892,1314,3.386,1531,3.386,1588,3.659,1644,2.674,1645,4.581,1646,3.659,1647,3.659,1648,4.581,1649,4.581,1650,4.581,1651,4.581,1652,4.581,1653,3.044,1654,6.13,1655,7.914,1656,4.581,1657,3.044,1658,4.581,1659,3.044,1660,4.581,1661,6.575,1662,3.044,1663,3.659,1664,4.581,1665,3.044,1666,4.581,1667,4.581,1668,3.044,1669,4.581,1670,2.986,1671,4.581,1672,3.044,1673,3.044,1674,3.044,1675,3.044,1676,3.044,1677,3.044,1678,3.044]],["title/components/UpdatePasswordComponent.html",[0,0.417,140,1.124]],["body/components/UpdatePasswordComponent.html",[0,0.689,1,0.676,2,0.382,3,0.214,4,0.754,5,0.197,7,0.115,9,0.387,16,1.03,18,0.705,21,2.333,24,0.624,25,2.403,26,1.23,28,0.261,29,0.693,30,2.389,32,2.754,33,0.939,34,2.192,35,1.018,37,1.692,38,1.536,40,0.436,41,0.011,42,0.776,43,0.584,44,0.502,47,1.94,48,2.444,49,2.163,50,1.874,51,1.134,52,1.114,53,1.835,54,0.787,56,0.952,57,1.501,58,1.458,59,0.685,60,0.364,61,3.229,62,0.865,63,1.064,64,1.464,65,0.206,66,0.353,70,0.667,72,1.437,73,0.754,74,0.754,75,0.676,76,1.165,77,0.676,78,1.134,79,0.754,80,0.641,81,1.993,82,0.331,83,0.754,84,0.676,85,0.754,86,0.676,87,0.754,88,0.676,89,1.165,90,0.676,91,1.424,92,0.676,93,0.754,94,0.676,95,0.714,96,1.165,97,0.695,98,1.165,99,0.676,100,0.754,101,0.676,102,0.695,103,0.488,104,1.602,105,0.676,106,0.733,107,0.676,108,0.3,109,0.676,110,0.754,111,0.676,112,0.502,113,0.676,114,0.754,115,0.676,116,0.754,117,0.676,118,0.754,119,0.676,120,0.261,121,0.714,122,0.754,123,0.695,124,0.436,125,0.676,126,0.502,127,0.676,128,0.754,129,0.676,130,0.754,131,0.676,132,0.754,133,0.676,134,0.754,135,0.676,136,0.676,137,0.676,138,0.676,139,0.754,140,1.437,141,0.754,142,0.676,143,1.349,144,0.733,145,0.754,146,0.005,147,0.008,158,1.94,162,1.547,174,0.818,240,2.754,251,2.599,329,4.386,344,3.25,362,2.01,365,1.376,366,2.599,367,1.94,369,1.752,370,1.874,375,2.012,376,2.329,378,2.162,379,1.458,388,3.698,394,2.474,395,4.573,405,1.644,412,2.91,420,2,450,3.802,462,2.987,487,2.261,491,2.372,495,4.31,499,1.644,506,1.172,507,1.255,509,1.302,511,2.372,521,1.529,522,1.529,532,3.112,542,3.165,543,1.601,562,2.172,563,2.089,564,2.172,586,1.464,587,1.103,588,1.301,589,1.351,596,2.263,628,2.474,633,1.464,634,1.464,675,2.91,719,3.802,755,1.405,781,1.697,807,1.255,860,2.012,862,3.361,916,2.012,927,2.474,1002,2.91,1035,2.012,1077,3.361,1275,3.575,1279,2.175,1282,6.072,1287,2.743,1289,4.622,1299,5.283,1300,3.802,1308,5.085,1321,2.392,1322,3.698,1325,2.392,1327,2.392,1328,3.698,1333,2.392,1336,2.392,1337,2.392,1338,3.698,1339,2.392,1406,4.277,1670,2.743,1679,6.679,1680,6.614,1681,4.52,1682,4.208,1683,2.723,1684,4.208,1685,6.614,1686,4.208,1687,3.361,1688,2.723,1689,3.698,1690,4.208,1691,4.208,1692,2.723,1693,4.208,1694,2.723,1695,2.723,1696,3.698,1697,2.723,1698,4.208,1699,3.698,1700,4.208,1701,4.208,1702,4.208,1703,3.698,1704,2.723,1705,2.392,1706,2.392,1707,2.392,1708,2.723,1709,2.723,1710,2.723,1711,2.723,1712,3.361,1713,2.723,1714,4.208]],["title/interfaces/User.html",[54,0.433,170,0.811]],["body/interfaces/User.html",[2,0.338,3,0.403,5,0.37,7,0.217,9,0.938,11,4.558,18,0.803,28,0.631,29,1.086,41,0.011,42,1.232,43,0.654,49,2.385,50,3.43,54,0.844,56,1.19,65,0.498,66,0.664,146,0.008,147,0.008,153,3.272,154,3.512,166,2.131,170,1.38,230,2.541,232,2.753,234,3.956,235,3.956,236,2.131,237,1.754,238,1.638,239,4.073,240,3.207,245,3.62,246,3.62,248,2.658,259,2.838,379,2.284,462,3.403,558,3.272,587,1.728,588,2.038,711,2.236,797,3.43,844,4.297,1715,4.088,1716,5.793,1717,5.793,1718,5.793,1719,4.498]],["title/components/UserProfileComponent.html",[0,0.417,142,1.124]],["body/components/UserProfileComponent.html",[0,0.738,1,0.798,2,0.415,3,0.253,4,0.889,5,0.232,7,0.202,9,0.457,16,1.108,18,0.766,24,0.736,25,2.436,26,1.394,28,0.307,29,0.785,30,2.386,32,2.935,33,1.063,34,2.385,35,1.522,37,1.967,38,1.541,40,0.514,41,0.011,42,1.156,43,0.552,44,0.592,47,2.199,48,2.628,49,1.559,50,2.123,51,1.696,52,0.834,53,2.029,54,0.803,56,0.785,57,1.145,58,1.112,59,0.7,60,0.43,61,3.472,62,1.021,63,1.255,64,1.727,65,0.242,66,0.738,70,0.417,72,1.564,73,0.889,74,0.889,75,0.798,76,1.32,77,0.798,78,1.284,79,0.889,80,0.756,81,0.842,82,0.391,83,0.889,84,0.798,85,0.889,86,0.798,87,0.889,88,0.798,89,1.32,90,0.798,91,1.574,92,0.798,93,0.889,94,0.798,95,0.842,96,1.32,97,0.819,98,1.32,99,0.798,100,0.889,101,0.798,102,0.819,103,0.575,104,1.742,105,0.798,106,0.865,107,0.798,108,0.354,109,0.798,110,0.889,111,0.798,112,0.592,113,0.798,114,0.889,115,0.798,116,0.889,117,0.798,118,0.889,119,0.798,120,0.307,121,0.842,122,0.889,123,0.819,124,0.514,125,0.798,126,0.592,127,0.798,128,0.889,129,0.798,130,0.889,131,0.798,132,0.889,133,0.798,134,0.889,135,0.798,136,0.798,137,0.798,138,0.798,139,0.889,140,0.798,141,0.889,142,1.564,143,2.008,144,0.865,145,0.889,146,0.006,147,0.006,155,1.806,162,1.752,176,1.394,189,3.524,234,3.125,235,3.125,236,2.622,237,1.202,238,0.928,240,3.121,245,2.367,246,2.367,263,2.461,329,3.498,343,2.596,365,1.559,366,2.945,367,2.199,373,2.314,376,2.058,378,1.913,380,4.19,394,2.804,405,1.863,420,0.798,421,2.538,435,2.123,485,2.199,487,2.46,491,2.903,498,3.297,499,1.863,506,1.382,507,1.481,509,1.535,511,2.199,521,1.803,522,1.803,527,4.103,532,3.385,542,3.245,555,2.804,557,3.524,562,2.461,563,2.367,564,2.461,586,1.727,587,0.842,588,0.992,596,2.564,611,2.821,628,1.888,633,1.727,634,1.727,675,3.297,711,1.284,779,1.791,962,3.809,1082,2.821,1223,2.564,1275,4.155,1279,2.565,1280,5.659,1419,3.809,1681,4.998,1696,4.19,1705,2.821,1706,2.821,1707,2.821,1720,6.729,1721,2.821,1722,4.19,1723,4.769,1724,6.296,1725,6.296,1726,3.211,1727,4.769,1728,3.211,1729,3.211,1730,3.211,1731,3.211,1732,4.769,1733,4.769,1734,3.211,1735,3.211,1736,3.211,1737,5.688,1738,3.211,1739,3.211,1740,3.211,1741,3.211,1742,3.211,1743,3.211,1744,3.211]],["title/interfaces/_User.html",[170,0.811,232,2.433]],["body/interfaces/_User.html",[2,0.351,3,0.419,5,0.384,7,0.225,9,0.756,11,5.4,18,0.647,28,0.711,29,1.112,41,0.011,42,1.244,43,0.609,49,1.738,50,3.007,54,0.845,56,1.181,65,0.51,66,0.876,146,0.008,147,0.008,153,2.638,154,2.906,166,2.812,170,1.445,230,3.352,232,3.632,234,4.002,235,4.002,236,3.252,237,1.704,238,1.679,239,3.282,240,2.213,245,3.684,246,3.684,248,2.143,259,2.287,379,1.841,462,4.031,558,2.638,587,1.393,588,1.642,711,2.104,797,3.007,844,3.463,1715,4.245,1716,4.669,1717,4.669,1718,4.669,1719,5.934]],["title/changelog.html",[677,2.364,799,1.704,1745,3.362]],["body/changelog.html",[0,0.563,2,0.403,9,0.648,16,0.75,18,0.555,41,0.007,44,0.84,54,0.773,70,0.792,82,0.839,108,0.502,112,0.84,120,0.785,121,1.195,124,1.103,126,1.126,143,1.195,146,0.009,147,0.007,155,2.314,156,3.773,165,3.368,167,1.579,170,0.817,208,1.534,237,1.291,239,2.815,240,1.898,262,2.815,329,3.42,362,1.781,365,1.997,367,2.101,368,1.727,369,1.898,370,2.72,372,2.451,377,3.151,378,2.184,379,2.387,384,2.815,390,2.815,398,3.64,399,3.151,400,3.368,407,2.68,411,2.179,413,5.673,419,1.49,420,1.132,422,2.97,432,3.151,433,2.815,435,2.72,458,2.559,462,2.352,464,2.97,471,2.815,475,0.912,496,2.815,542,3.496,552,4.256,554,6.302,563,2.262,615,4.224,647,2.815,677,2.815,711,1.228,715,2.275,716,2.262,773,2.692,784,1.962,789,2.968,806,2.97,807,2.101,818,2.245,828,2.245,829,1.534,832,2.68,833,2.68,838,4.224,850,4.005,870,2.68,897,3.64,922,3.151,926,3.278,947,2.815,1028,3.64,1095,3.64,1099,3.64,1119,2.97,1122,1.962,1128,2.97,1134,3.64,1200,3.151,1247,4.005,1258,2.97,1264,2.815,1265,2.97,1267,2.68,1298,4.005,1301,4.005,1318,3.64,1366,4.005,1406,3.368,1527,4.005,1663,3.64,1699,4.005,1745,4.005,1746,4.558,1747,4.558,1748,2.72,1749,2.815,1750,7.902,1751,4.558,1752,1.675,1753,4.558,1754,7.092,1755,4.558,1756,3.64,1757,6.891,1758,4.558,1759,6.109,1760,4.558,1761,4.558,1762,6.109,1763,4.558,1764,4.558,1765,4.005,1766,4.558,1767,4.558,1768,4.558,1769,4.558,1770,4.558,1771,4.558,1772,4.558,1773,6.109,1774,4.558,1775,4.558,1776,6.891,1777,4.558,1778,4.558,1779,6.109,1780,4.558,1781,4.515,1782,6.109,1783,4.558,1784,4.558,1785,6.109,1786,5.368,1787,5.368,1788,4.005,1789,3.151,1790,4.491,1791,4.558,1792,4.558,1793,4.005,1794,6.055,1795,4.558,1796,4.558,1797,4.558,1798,6.891,1799,4.558,1800,4.558,1801,4.558,1802,4.005,1803,4.558,1804,4.558,1805,4.558,1806,4.558,1807,4.558,1808,4.558,1809,4.558,1810,4.005]],["title/coverage.html",[1811,5.341]],["body/coverage.html",[0,0.817,1,0.898,5,0.261,6,3.176,16,0.595,18,0.44,37,1.057,41,0.011,43,0.297,54,0.346,75,0.898,77,0.898,80,0.851,82,0.44,84,0.898,86,0.898,88,0.898,90,0.898,92,0.898,94,0.898,97,0.922,99,0.898,101,0.898,102,0.922,105,0.898,107,0.898,108,0.399,109,0.898,111,0.898,113,0.898,115,0.898,117,0.898,119,0.898,120,0.346,123,0.922,125,0.898,127,0.898,129,0.898,131,0.898,133,0.898,135,0.898,136,0.898,137,0.898,138,0.898,140,0.898,142,0.898,146,0.006,147,0.006,148,3.072,149,2.499,150,3.176,170,1.512,183,3.176,184,2.888,185,3.176,206,1.944,221,2.888,226,1.944,227,4.501,232,1.944,255,2.233,259,1.556,261,3.176,277,1.944,278,2.499,279,2.499,280,1.866,307,2.888,338,2.888,340,2.888,342,3.176,406,2.966,420,0.898,451,3.176,452,4.154,473,3.176,475,0.723,477,4.599,478,2.888,479,3.176,506,1.556,525,2.888,526,3.176,638,2.888,639,4.154,670,2.888,671,4.154,688,2.499,696,2.888,702,3.176,713,3.176,715,1.117,771,1.944,772,4.599,780,1.944,794,1.944,810,1.866,814,2.499,815,3.176,826,2.356,840,2.356,852,2.356,859,3.176,860,4.501,883,4.154,890,2.356,892,3.176,908,3.176,928,3.176,929,2.888,930,5.32,935,2.356,957,3.176,972,3.176,990,3.176,991,3.176,992,2.888,994,3.176,995,3.176,1012,3.176,1060,2.672,1095,7.031,1098,3.176,1110,3.176,1111,3.176,1115,3.176,1116,3.176,1122,3.163,1123,2.499,1124,3.176,1125,3.176,1155,2.499,1156,3.176,1157,3.176,1161,2.499,1162,4.605,1163,3.176,1170,5.852,1181,3.176,1192,2.499,1193,3.176,1211,2.499,1212,3.176,1214,4.569,1221,2.499,1222,3.176,1253,4.501,1275,2.233,1280,2.672,1282,2.888,1284,3.176,1305,3.176,1342,3.176,1350,3.176,1362,3.176,1398,3.176,1414,3.176,1423,3.176,1455,4.605,1456,3.843,1457,3.176,1511,2.888,1558,2.888,1586,2.888,1601,2.499,1614,3.176,1637,3.176,1644,3.176,1679,3.176,1715,4.154,1720,3.176,1721,3.176,1752,1.329,1765,3.176,1811,3.176,1812,3.615,1813,8.332,1814,6.091,1815,6.091,1816,6.661,1817,6.661,1818,5.2,1819,5.2,1820,6.091,1821,3.615,1822,3.615,1823,3.615,1824,5.2,1825,5.2,1826,3.615,1827,3.615,1828,6.091,1829,3.615,1830,3.615,1831,5.2,1832,5.2,1833,3.615,1834,3.615,1835,5.2,1836,3.176,1837,5.2,1838,3.615,1839,3.615,1840,3.615,1841,5.852,1842,6.091,1843,3.615,1844,4.569,1845,5.2,1846,5.2,1847,5.2,1848,5.2,1849,7.348,1850,5.2,1851,3.615,1852,3.615,1853,5.2,1854,3.615,1855,3.615,1856,3.615,1857,3.615,1858,3.615,1859,3.615,1860,5.2,1861,3.615,1862,3.615,1863,3.615,1864,3.615,1865,3.615,1866,3.615,1867,3.615,1868,3.176,1869,3.615,1870,3.615,1871,3.615,1872,3.176,1873,3.176,1874,3.615]],["title/dependencies.html",[196,1.628,1875,3.826]],["body/dependencies.html",[24,1.147,33,1.116,41,0.011,60,0.67,62,1.591,146,0.008,147,0.008,174,1.504,196,1.504,199,2.797,283,6.34,284,5.191,289,3.699,291,3.998,292,3.092,331,3.998,360,3.998,369,2.706,371,3.46,379,1.734,468,3.262,469,3.262,557,3.699,944,3.699,1355,4.398,1379,4.398,1380,6.34,1384,4.398,1386,5.71,1387,4.398,1810,4.398,1876,5.005,1877,8.597,1878,6.499,1879,5.005,1880,5.005,1881,5.005,1882,7.915,1883,5.005,1884,5.005,1885,5.005,1886,5.005,1887,5.005,1888,6.499,1889,5.005,1890,5.005,1891,5.005,1892,5.005,1893,6.499,1894,5.005,1895,5.005,1896,6.499,1897,5.005,1898,5.005,1899,5.005,1900,5.005,1901,5.005,1902,5.005,1903,5.005,1904,6.499,1905,5.005,1906,5.005,1907,5.005,1908,5.005,1909,5.005,1910,5.005,1911,6.955,1912,5.005,1913,6.499,1914,5.005,1915,5.005,1916,5.005,1917,5.005,1918,5.005,1919,5.005,1920,5.005,1921,5.005,1922,5.005,1923,5.005,1924,5.005,1925,5.005,1926,5.005,1927,5.005,1928,5.005,1929,5.005,1930,6.499,1931,5.005,1932,4.398,1933,5.005,1934,5.005,1935,5.005,1936,5.005,1937,5.005,1938,5.005,1939,5.005,1940,5.005,1941,5.005,1942,5.005,1943,6.711,1944,5.005,1945,5.005,1946,5.005,1947,5.005,1948,5.005,1949,5.005,1950,5.005,1951,3.998,1952,5.005,1953,5.005,1954,5.005,1955,5.005,1956,5.005,1957,5.005,1958,5.005,1959,5.005,1960,5.005,1961,5.005,1962,5.005,1963,5.005,1964,5.005]],["title/index.html",[28,0.366,677,2.364,799,1.704]],["body/index.html",[41,0.01,78,1.871,146,0.009,147,0.009,413,5.133,799,3.093,944,5.133,1965,5.548,1966,6.946]],["title/license.html",[677,2.364,799,1.704,1967,3.362]],["body/license.html",[5,0.466,41,0.009,146,0.009,147,0.009,238,1.254,262,3.978,434,4.196,887,3.616,971,5.143,1689,5.658,1754,5.658,1786,5.658,1793,7.1,1911,5.658,1967,7.715,1968,6.439,1969,6.439,1970,6.439,1971,6.439,1972,6.439,1973,7.597,1974,6.439,1975,6.439,1976,6.439,1977,5.658,1978,6.439,1979,6.439,1980,6.439,1981,6.439,1982,6.439,1983,6.439,1984,7.597,1985,6.439,1986,6.439,1987,6.439,1988,6.439,1989,6.439,1990,6.439,1991,6.439,1992,6.439]],["title/modules.html",[194,2.045]],["body/modules.html",[41,0.009,146,0.009,147,0.009,194,2.155,195,4.428,205,2.852,267,4.734,273,4.428,274,4.428,275,4.428,276,4.428,284,7.081,683,4.734,977,4.428,1596,4.734,1802,7.79,1993,8.866,1994,8.866]],["title/overview.html",[1995,5.341]],["body/overview.html",[0,0.343,1,1.536,37,1.808,41,0.011,65,0.281,75,1.536,77,1.896,80,1.797,84,1.536,86,1.536,88,1.536,90,1.536,92,1.536,94,1.536,97,1.578,99,1.536,101,1.536,102,1.578,105,1.536,107,1.536,109,1.536,111,1.536,113,1.536,115,1.536,117,1.536,119,1.536,123,1.578,125,1.536,126,0.685,127,1.536,129,1.536,131,1.536,133,1.536,135,1.536,136,1.536,137,1.536,138,1.536,140,1.536,142,1.536,146,0.006,147,0.006,148,1.407,149,4.276,170,0.666,194,1.784,195,5.823,196,1.117,197,1.918,198,1.918,199,1.599,200,1.844,201,3.265,202,3.265,203,3.265,204,3.265,205,3.861,206,3.326,207,2.737,208,1.25,267,6.548,268,3.265,269,3.265,270,3.265,271,3.265,272,3.265,273,5.743,274,5.277,275,5.638,276,5.492,277,3.326,278,4.276,279,4.276,280,3.192,321,3.265,322,3.265,683,6.26,684,3.265,685,3.265,687,3.265,688,4.276,814,4.276,900,3.265,901,3.265,977,5.958,978,3.265,979,3.265,981,3.265,1122,1.599,1123,5.277,1155,5.277,1161,4.276,1192,4.276,1200,2.569,1211,4.276,1221,5.277,1234,3.265,1271,3.265,1272,3.265,1274,3.265,1275,3.82,1340,2.968,1351,3.265,1352,3.265,1371,3.265,1372,3.265,1373,3.265,1596,6.369,1597,3.265,1598,3.265,1600,3.265,1601,4.276,1756,2.968,1995,3.265,1996,3.715]],["title/todo.html",[614,3.056,677,2.364,799,1.704]],["body/todo.html",[13,3.157,16,1.27,18,0.804,41,0.009,54,0.632,70,0.857,71,3.045,82,0.939,103,1.183,120,0.738,146,0.009,147,0.009,325,3.883,339,5.275,376,2.159,378,1.878,382,4.881,413,4.881,435,2.94,615,4.566,715,2.041,793,2.663,893,5.275,1078,5.803,1280,4.881,1281,5.803,1794,5.803,1997,6.774,1998,6.604,1999,5.803,2000,6.604,2001,6.604,2002,6.604]],["title/miscellaneous/variables.html",[406,2.411,2003,3.362]],["body/miscellaneous/variables.html",[9,0.651,13,2.928,17,2.361,18,0.84,28,0.438,29,0.753,32,2.55,40,0.98,41,0.011,42,1.042,43,0.503,52,1.184,54,0.661,56,0.953,57,2.882,58,2.974,69,3.654,71,2.109,72,1.136,82,0.557,103,1.098,120,0.438,124,0.98,146,0.007,147,0.008,153,2.271,154,1.969,210,2.393,227,3.381,237,1.707,238,1.344,243,4.773,244,3.654,245,2.271,246,2.271,247,3.654,248,1.845,249,3.654,250,3.654,251,2.826,252,3.654,253,3.654,255,4.264,256,3.654,257,5.514,258,3.654,259,2.636,260,3.654,314,4.02,362,1.787,369,2.55,370,2.037,376,1.496,378,2.25,406,2.037,462,2.361,475,0.915,506,2.971,558,2.271,587,1.199,588,1.414,647,2.826,715,2.134,773,2.393,776,1.969,778,2.981,779,1.301,783,2.361,793,2.973,799,2.037,813,2.037,829,2.061,838,4.234,891,4.554,1003,4.02,1016,5.449,1028,3.654,1049,3.654,1050,2.981,1060,5.102,1196,4.02,1200,4.234,1216,4.02,1231,4.02,1262,4.526,1287,3.991,1531,3.381,1558,5.514,1756,3.654,1836,4.02,1868,4.02,1872,4.02,1873,5.381,1999,4.02,2003,6.066,2004,4.575,2005,4.575,2006,4.575,2007,4.575,2008,4.575,2009,4.575,2010,6.125,2011,6.125,2012,6.125,2013,6.125,2014,4.575,2015,4.575,2016,4.575,2017,4.575,2018,4.575,2019,4.575,2020,4.575,2021,2.69,2022,4.575,2023,4.575,2024,4.02,2025,4.575,2026,6.125,2027,4.575,2028,4.575,2029,6.125,2030,4.575,2031,4.575,2032,4.02,2033,4.575,2034,3.654,2035,3.654,2036,4.575,2037,4.575]],["title/additional-documentation/controllers.html",[70,0.496,228,1.216,1748,1.704]],["body/additional-documentation/controllers.html",[9,0.892,16,1.033,41,0.009,54,0.6,108,0.691,146,0.009,147,0.009,346,5.527,352,5.01,354,4.635,355,4.635,356,4.635,369,2.612,475,1.255,486,5.01,539,5.01,540,5.01,715,1.938,722,4.635,820,4.336,926,2.793,1646,5.01,1647,5.01,1748,3.861,1752,2.305,2038,5.511,2039,5.511,2040,5.511,2041,5.511,2042,5.511,2043,5.511,2044,5.511,2045,5.511,2046,5.511,2047,5.511,2048,5.511,2049,5.511,2050,5.511,2051,5.511,2052,5.511,2053,5.511,2054,5.511,2055,5.511,2056,5.511,2057,5.511,2058,5.511,2059,5.511,2060,5.511,2061,5.511,2062,5.511,2063,5.511,2064,5.511,2065,5.511,2066,4.336,2067,5.511,2068,5.511,2069,5.511,2070,4.336,2071,5.511]],["title/additional-documentation/controllers/admin-controller.html",[9,0.471,70,0.43,228,1.054,1748,1.476]],["body/additional-documentation/controllers/admin-controller.html",[7,0.362,9,1.178,16,0.891,17,1.972,18,0.832,28,0.366,40,1.325,41,0.011,43,0.679,48,2.454,49,1.249,50,1.701,51,1.84,52,1.152,54,0.841,71,3.548,82,0.659,146,0.006,147,0.006,153,3.117,154,2.703,176,2.42,188,1.897,210,3.007,236,3.117,346,3.998,362,2.114,370,3.333,372,4.489,376,2.571,378,2.374,379,2.366,424,4.219,440,3.342,475,1.367,542,1.591,711,2.154,733,3.527,755,3.863,779,2.515,781,1.541,828,1.404,870,5.046,1037,5.327,1114,5.048,1132,1.827,1587,3.358,1748,2.796,1752,1.404,2021,4.016,2038,4.754,2039,4.754,2040,4.754,2041,4.754,2042,4.754,2070,5.528,2072,3.821,2073,3.821,2074,4.878,2075,4.878,2076,5.532,2077,4.878,2078,4.878,2079,4.451,2080,4.451,2081,3.052,2082,3.821,2083,3.358,2084,6.281,2085,3.821,2086,6.281,2087,5.41,2088,3.821,2089,3.821,2090,2.642,2091,3.821,2092,3.358,2093,3.821,2094,3.821,2095,3.821,2096,5.436,2097,5.436,2098,5.41,2099,3.998,2100,4.321,2101,5.41,2102,3.821,2103,1.645]],["title/additional-documentation/controllers/course-controller.html",[16,0.546,70,0.43,228,1.054,1748,1.476]],["body/additional-documentation/controllers/course-controller.html",[7,0.367,9,0.788,13,2.336,16,1.447,17,1.297,18,0.906,28,0.241,29,0.805,40,1.321,41,0.01,43,0.677,48,2.165,49,0.822,51,1.493,52,1.139,54,0.79,71,3.432,82,0.779,108,0.539,146,0.005,147,0.005,153,1.247,154,2.385,155,1.498,167,0.87,176,2.413,188,2.426,196,0.755,210,2.5,234,2.426,235,2.426,236,3.151,237,1.543,238,0.77,240,1.046,241,1.411,242,2.576,248,1.594,368,2.099,370,3.497,372,4.46,373,1.453,375,1.201,376,2.772,378,2.456,379,2.529,383,1.297,405,1.545,411,1.201,419,1.293,420,0.982,421,2.876,422,1.638,424,4.51,434,1.638,474,4.003,475,1.427,486,3.158,539,3.903,540,3.158,542,2.509,551,3.612,555,2.324,615,1.737,708,1.552,711,2.093,716,1.247,733,1.411,755,3.842,779,2.52,828,0.924,829,1.644,870,5.067,887,1.411,927,1.478,935,2.576,1017,1.638,1114,2.922,1119,3.185,1148,2.007,1264,1.552,1356,2.007,1485,1.857,1588,2.007,1647,3.158,1748,2.176,1749,1.552,1752,0.924,1997,2.208,2021,4.377,2043,3.474,2044,4.294,2045,3.474,2046,3.474,2047,3.474,2048,3.474,2049,3.474,2050,3.474,2051,6.541,2066,1.737,2070,5.232,2074,4.851,2075,4.851,2076,5.501,2077,4.932,2078,5.002,2079,4.758,2080,4.648,2090,3.379,2092,2.208,2096,4.628,2097,5.047,2099,1.857,2103,1.082,2104,2.513,2105,2.513,2106,2.922,2107,7.133,2108,2.513,2109,3.158,2110,3.953,2111,2.513,2112,3.903,2113,2.513,2114,6.025,2115,2.513,2116,2.513,2117,2.007,2118,3.953,2119,2.513,2120,2.513,2121,2.208,2122,2.513,2123,4.887,2124,3.953,2125,2.513,2126,2.513,2127,2.208,2128,2.513,2129,3.953,2130,2.513,2131,2.513,2132,2.513,2133,2.513,2134,2.513,2135,2.513,2136,2.513,2137,2.513,2138,3.953,2139,2.513,2140,2.513,2141,2.513,2142,2.513,2143,2.513,2144,1.857,2145,2.007,2146,2.513,2147,2.513,2148,2.513,2149,2.208,2150,2.513,2151,2.513,2152,2.513,2153,2.007,2154,2.733,2155,2.007,2156,2.513]],["title/additional-documentation/controllers/fridge-controller.html",[70,0.43,228,1.054,715,1.024,1748,1.476]],["body/additional-documentation/controllers/fridge-controller.html",[2,0.308,7,0.359,17,1.208,20,1.208,28,0.224,29,0.615,33,0.522,40,1.319,41,0.01,43,0.68,48,2.642,50,1.664,51,1.007,52,1.156,54,0.772,82,0.793,103,0.419,108,0.889,112,0.431,120,0.782,124,0.375,146,0.004,147,0.004,155,0.887,162,0.86,166,0.975,169,1.767,176,2.411,188,3.623,210,3.054,236,3.094,241,1.314,362,0.915,365,1.525,368,2.017,370,3.308,372,4.454,373,1.714,375,2.23,376,2.654,378,2.418,379,2.149,383,2.407,405,1.822,419,2.129,420,1.68,421,1.507,422,3.47,424,3.832,435,2.591,440,2.308,542,2.423,547,1.87,551,1.73,554,2.762,558,1.162,615,3.225,708,2.308,711,2.173,714,1.73,715,2.633,716,1.162,728,1.208,733,2.098,750,3.767,755,3.767,777,2.098,779,2.5,785,1.446,786,1.376,787,2.407,789,1.881,791,1.376,793,1.881,813,2.591,818,2.873,828,0.86,829,0.788,834,2.985,870,4.997,884,1.73,885,1.618,888,3.225,897,1.87,927,1.376,935,1.525,947,1.446,962,1.87,1017,4.658,1114,4.812,1295,3.726,1485,2.762,1531,1.73,1646,2.985,1670,2.435,1748,2.077,1749,3.289,1752,0.86,1781,1.73,2021,3.828,2035,1.87,2052,3.283,2053,3.283,2054,3.283,2055,3.283,2056,3.283,2057,3.283,2058,3.283,2059,5.114,2060,5.451,2061,3.283,2062,3.283,2063,4.679,2066,4.942,2070,5.216,2074,4.842,2075,4.757,2076,5.394,2077,4.543,2078,4.842,2079,4.043,2080,3.793,2081,1.87,2090,3.225,2096,5.541,2097,5.701,2099,2.762,2100,2.985,2103,1.007,2106,4.301,2109,4.648,2121,2.057,2127,2.057,2144,3.447,2145,3.726,2153,2.985,2154,3.682,2155,1.87,2157,2.341,2158,2.341,2159,2.341,2160,6.125,2161,2.341,2162,4.664,2163,2.341,2164,4.098,2165,2.341,2166,2.341,2167,2.341,2168,2.341,2169,3.283,2170,2.341,2171,2.341,2172,2.057,2173,3.283,2174,2.341,2175,2.341,2176,2.341,2177,2.341,2178,3.283,2179,5.325,2180,5.325,2181,3.283,2182,4.098,2183,2.341,2184,2.341,2185,2.341,2186,2.341,2187,2.341,2188,2.341,2189,2.341,2190,3.737,2191,4.664,2192,5.325,2193,2.341,2194,2.341,2195,2.341,2196,2.341,2197,2.057,2198,2.341,2199,2.341,2200,2.341,2201,2.341,2202,2.341,2203,2.341,2204,2.341]],["title/additional-documentation/controllers/genetics-controller.html",[70,0.43,228,1.054,926,1.476,1748,1.476]],["body/additional-documentation/controllers/genetics-controller.html",[7,0.338,28,0.489,29,1.085,40,1.232,41,0.01,43,0.632,44,0.942,52,0.965,103,1.18,120,0.698,124,1.232,146,0.009,147,0.008,169,2.495,176,2.251,211,5.788,343,1.77,370,3.428,372,4.14,376,2.713,378,2.416,379,1.77,405,2.574,419,2.154,422,3.331,424,4.069,475,1.023,587,1.34,708,4.069,711,1.963,755,3.4,773,3.008,774,4.755,776,2.835,779,2.436,781,2.061,789,2.061,793,2.656,801,2.2,816,3.157,820,4.554,828,2.928,829,2.452,832,3.873,835,4.069,846,3.777,847,4.083,855,3.534,857,4.554,870,4.796,926,2.933,1119,3.331,1255,3.534,1256,3.534,1261,4.293,1267,3.005,1268,4.293,1270,4.293,1314,3.777,1748,3.245,1749,4.069,1752,1.878,2021,3.873,2064,5.788,2074,4.293,2075,4.293,2077,4.293,2078,4.293,2079,4.293,2080,4.293,2090,4.554,2103,2.2,2112,4.083,2144,3.777,2205,5.111,2206,5.111,2207,5.111,2208,6.587,2209,5.111,2210,5.111,2211,5.111,2212,5.788,2213,5.111,2214,5.111,2215,5.111,2216,5.111]],["title/additional-documentation/controllers/scenario-controller.html",[70,0.43,108,0.365,228,1.054,1748,1.476]],["body/additional-documentation/controllers/scenario-controller.html",[7,0.34,17,2.703,28,0.501,29,1.102,40,1.243,41,0.01,43,0.637,52,1.139,108,0.96,146,0.008,147,0.008,167,1.814,176,2.271,188,2.599,210,2.881,368,1.984,370,2.332,372,4.317,375,2.504,376,2.411,378,2.283,379,1.814,383,2.703,405,2.046,421,2.112,424,3.235,475,1.555,711,1.802,741,4.945,750,3.805,755,3.805,779,2.476,828,1.925,829,1.762,851,4.602,870,4.907,891,4.133,932,4.945,938,4.945,1017,4.36,1343,5.344,1356,4.183,1430,3.87,1748,3.283,1752,1.925,2021,3.079,2065,5.879,2066,5.097,2074,4.805,2075,4.805,2077,4.36,2078,4.36,2079,3.413,2080,3.413,2096,5.676,2097,5.55,2103,2.254,2106,3.87,2154,4.626,2155,4.183,2160,4.602,2182,4.602,2217,5.237,2218,5.237,2219,4.602,2220,4.602,2221,5.237,2222,5.237,2223,5.237,2224,5.237,2225,5.237,2226,5.237,2227,5.237,2228,4.602,2229,5.237,2230,5.237]],["title/additional-documentation/controllers/user-controller.html",[54,0.317,70,0.43,228,1.054,1748,1.476]],["body/additional-documentation/controllers/user-controller.html",[2,0.264,7,0.352,13,2.355,17,1.313,18,0.486,28,0.244,29,0.657,40,1.309,41,0.01,42,0.384,43,0.671,48,1.925,49,2.277,51,1.327,52,1.128,54,0.833,56,0.351,81,1.047,108,0.281,126,1.117,146,0.005,147,0.007,152,1.881,154,1.095,155,2.437,167,0.881,172,1.718,173,1.217,176,2.392,188,3.338,196,0.765,208,0.856,210,2.918,234,2.445,235,2.445,236,2.524,238,0.777,240,3.31,241,1.429,325,1.496,326,1.881,329,4.104,343,0.881,346,2.951,352,3.189,354,2.951,355,2.951,356,2.951,362,0.994,368,0.964,370,3.756,371,4.65,372,4.447,373,0.935,375,3.215,376,2.791,377,2.76,378,2.45,379,2.33,381,2.236,382,1.881,383,2.543,385,2.236,394,1.496,398,3.935,399,4.65,400,2.951,405,2.18,411,1.909,412,2.76,414,2.76,419,0.832,420,1.224,422,3.211,424,3.973,433,1.572,440,1.572,450,1.881,471,1.572,474,1.368,495,1.658,542,3.11,558,1.263,708,3.744,709,2.602,711,2.012,715,0.786,716,2.769,722,2.951,733,2.242,750,1.313,755,3.782,779,2.514,797,1.133,828,0.935,870,5.053,887,2.242,1017,1.658,1037,1.881,1119,2.602,1223,1.368,1225,2.033,1286,2.236,1287,1.658,1289,3.189,1299,3.189,1300,1.881,1409,2.236,1663,2.033,1670,2.602,1748,2.194,1749,1.572,1752,0.935,1943,2.236,2021,4.308,2034,2.033,2035,2.033,2066,1.759,2067,3.508,2068,3.508,2069,3.508,2070,4.65,2071,5.651,2074,4.947,2075,4.775,2076,4.124,2077,4.775,2078,4.867,2079,4.192,2080,3.636,2081,3.935,2083,2.236,2090,4.65,2096,5.387,2097,5.445,2099,1.881,2100,2.033,2103,1.095,2106,3.641,2109,2.033,2112,4.457,2144,3.641,2145,3.189,2149,2.236,2153,2.033,2154,3.406,2164,4.329,2169,2.236,2173,2.236,2181,2.236,2197,2.236,2212,2.236,2228,2.236,2231,2.545,2232,3.993,2233,2.545,2234,2.545,2235,3.993,2236,4.927,2237,2.545,2238,2.545,2239,6.432,2240,3.993,2241,2.545,2242,2.545,2243,2.545,2244,3.993,2245,3.993,2246,2.545,2247,2.545,2248,2.545,2249,2.545,2250,2.545,2251,2.545,2252,2.545,2253,2.545,2254,2.545,2255,2.545,2256,2.545,2257,2.545,2258,2.545,2259,2.545,2260,2.545,2261,2.545,2262,2.545,2263,2.545,2264,2.545,2265,2.545,2266,2.545,2267,2.545,2268,2.545,2269,2.545,2270,2.545,2271,2.545,2272,2.545,2273,2.545,2274,3.993,2275,2.545,2276,2.545,2277,3.993,2278,2.545,2279,2.545]],["title/additional-documentation/genetics.html",[70,0.496,228,1.216,926,1.704]],["body/additional-documentation/genetics.html",[41,0.009,108,0.72,120,0.803,124,1.045,146,0.009,147,0.009,369,2.72,773,2.993,817,3.886,820,4.516,922,4.516,926,2.908,1752,2.401,1790,4.257,2280,5.74,2281,5.74,2282,5.74,2283,5.74,2284,5.74,2285,5.74,2286,6.532,2287,6.532,2288,6.532,2289,6.532,2290,6.532,2291,5.74,2292,5.74,2293,5.74,2294,5.74,2295,5.74,2296,5.74,2297,5.74,2298,6.532,2299,6.532,2300,6.532,2301,5.74,2302,5.74]],["title/additional-documentation/genetics/phage-scenario.html",[70,0.43,108,0.365,120,0.317,228,1.054]],["body/additional-documentation/genetics/phage-scenario.html",[2,0.508,7,0.352,28,0.338,29,1.085,40,1.305,41,0.01,43,0.662,48,1.381,51,0.952,52,1.183,56,0.83,82,1.002,108,0.937,120,0.823,146,0.006,147,0.006,169,1.938,171,1.775,176,2.36,208,1.721,210,1.381,237,1.777,238,1.283,245,1.754,248,1.425,251,2.183,344,4.407,362,2.575,367,1.629,373,1.88,378,1.005,394,3.535,419,2.384,420,1.811,432,2.443,475,1.024,500,1.9,587,0.926,710,2.078,776,2.588,777,4.324,779,2.454,782,2.873,783,3.61,784,3.43,785,2.183,786,4.528,787,3.402,795,4.044,798,1.824,800,4.112,801,2.837,811,3.875,817,1.689,818,2.929,828,2.764,833,3.008,834,5.264,837,2.612,885,2.443,886,3.781,926,1.573,936,4.495,1050,4.558,1119,3.334,1128,2.303,1133,2.823,1265,4.295,1345,2.612,1512,3.334,1670,2.303,1687,2.823,1752,1.299,1789,2.443,1790,2.303,1932,3.105,1951,2.823,1965,2.823,2024,3.105,2103,1.521,2280,4.495,2281,4.495,2282,4.495,2283,4.495,2284,4.495,2285,4.495,2303,5.116,2304,5.116,2305,5.116,2306,5.116,2307,5.116,2308,3.534,2309,3.534,2310,2.823,2311,4.495,2312,5.116,2313,2.823,2314,3.105,2315,4.495,2316,3.534,2317,5.283,2318,3.105,2319,4.803,2320,4.495,2321,2.823,2322,2.823,2323,3.105,2324,5.116,2325,3.105,2326,3.534,2327,3.534,2328,3.534,2329,3.105,2330,3.534,2331,3.534,2332,3.534,2333,3.534,2334,3.534,2335,3.105,2336,3.534,2337,3.534,2338,3.534,2339,3.105,2340,3.534,2341,3.534,2342,3.534,2343,6.447,2344,3.534,2345,7.292,2346,6.591,2347,6.591,2348,3.105,2349,3.534,2350,5.116,2351,3.534,2352,6.013,2353,3.534,2354,5.791,2355,3.534,2356,3.534,2357,3.534,2358,3.534,2359,3.534,2360,3.534,2361,3.534,2362,3.534,2363,3.105,2364,3.534,2365,3.534,2366,3.534,2367,3.534,2368,3.534,2369,3.534,2370,3.534,2371,3.534,2372,3.534,2373,3.105,2374,3.534,2375,3.534,2376,3.534,2377,3.534,2378,3.534,2379,3.534,2380,3.105,2381,3.534,2382,3.534,2383,3.534,2384,3.534,2385,3.534,2386,3.534]],["title/additional-documentation/genetics/phage-logic.html",[70,0.43,120,0.317,228,1.054,922,2.292]],["body/additional-documentation/genetics/phage-logic.html",[7,0.333,20,3.118,28,0.578,40,1.17,41,0.01,43,0.645,52,1.072,56,1.009,82,0.736,120,0.782,146,0.009,147,0.009,166,2.516,176,2.138,196,1.816,210,2.36,237,1.276,238,1.176,373,2.22,475,1.209,779,2.08,781,2.436,784,2.6,795,4.395,798,3.118,800,4.624,818,2.22,828,2.22,829,2.033,922,4.177,926,2.69,1050,3.937,1266,4.766,1752,2.22,1789,4.177,2103,2.6,2291,6.425,2292,6.425,2319,5.841,2320,6.91,2387,5.309,2388,6.042,2389,6.042,2390,7.313,2391,6.042,2392,7.313,2393,6.042,2394,6.042,2395,6.042,2396,6.042,2397,6.042,2398,4.465,2399,6.042,2400,6.042,2401,6.042,2402,6.042,2403,6.042]],["title/additional-documentation/genetics/phage-experiment.html",[70,0.43,120,0.317,228,1.054,817,1.585]],["body/additional-documentation/genetics/phage-experiment.html",[7,0.341,28,0.507,40,1.248,41,0.01,43,0.64,52,1.143,82,1.041,120,0.801,146,0.008,147,0.008,171,1.816,172,2.28,173,2.533,176,2.281,210,2.07,237,1.566,313,3.663,344,2.975,362,2.896,419,2.424,420,1.674,440,3.273,475,1.06,587,1.389,588,2.083,714,4.981,737,4.381,784,2.28,798,4.027,799,2.359,801,3.601,816,3.273,817,3.222,818,2.477,828,2.477,846,3.916,926,2.359,947,3.273,1032,6.514,1267,3.115,1314,3.916,1712,4.232,1752,1.947,1789,5.125,1790,5.366,1977,7.079,2103,2.28,2293,6.514,2294,5.923,2295,5.923,2373,4.656,2404,5.299,2405,5.299,2406,5.299,2407,5.299,2408,6.741,2409,6.514,2410,5.299,2411,5.299,2412,5.299,2413,5.299,2414,4.656,2415,5.299,2416,6.741,2417,5.299,2418,5.299,2419,5.299,2420,5.299,2421,5.299,2422,5.299,2423,5.299,2424,6.741,2425,5.299,2426,6.741,2427,5.299,2428,5.299,2429,7.413,2430,5.299,2431,5.299,2432,5.299]],["title/additional-documentation/genetics/plate-experiment.html",[70,0.43,228,1.054,773,1.295,817,1.585]],["body/additional-documentation/genetics/plate-experiment.html",[7,0.318,13,2.042,28,0.719,40,1.24,41,0.01,43,0.616,51,1.151,52,1.136,56,0.807,103,1.285,108,0.645,120,0.794,124,0.684,146,0.007,147,0.007,171,1.575,176,2.096,210,2.285,237,1.866,238,1.462,251,2.639,384,2.639,390,2.639,419,2.535,420,1.061,458,3.743,475,1.659,656,4.215,711,1.151,773,3.357,779,2.299,788,4.215,789,2.89,793,3.027,797,1.902,801,3.085,818,2.45,820,4.043,828,2.45,829,1.968,831,3.811,832,3.92,835,3.612,836,3.811,837,4.321,838,5.191,845,2.784,926,1.902,1035,3.158,1128,2.784,1232,3.158,1255,4.609,1256,4.956,1258,2.784,1259,2.954,1260,2.954,1261,2.784,1264,3.612,1266,2.784,1267,5.026,1268,3.811,1270,3.811,1313,3.754,1461,3.413,1512,3.811,1703,5.138,1712,3.413,1722,3.754,1752,1.57,1781,3.158,1787,5.858,1788,3.754,1789,2.954,1790,4.344,2103,1.839,2296,5.858,2297,5.858,2329,3.754,2343,3.413,2348,3.754,2363,3.754,2387,5.138,2398,3.158,2409,6.597,2414,3.754,2433,3.754,2434,5.847,2435,5.847,2436,5.847,2437,4.273,2438,3.754,2439,4.273,2440,4.273,2441,4.273,2442,3.754,2443,4.273,2444,4.273,2445,4.273,2446,5.138,2447,4.273,2448,4.273,2449,4.273,2450,4.273,2451,4.273,2452,4.273,2453,4.273,2454,4.273,2455,4.273,2456,5.847,2457,5.847,2458,4.273,2459,4.273,2460,4.273,2461,4.273,2462,4.273,2463,5.847,2464,4.273,2465,4.273,2466,4.273,2467,4.273,2468,4.273,2469,4.273,2470,4.273,2471,4.273,2472,4.273,2473,3.754,2474,4.273,2475,4.273,2476,4.273,2477,4.273,2478,4.273,2479,4.273,2480,4.273,2481,4.273,2482,4.273,2483,4.273,2484,4.273,2485,4.273]],["title/additional-documentation/genetics/plexer-experiment.html",[70,0.43,124,0.53,228,1.054,817,1.585]],["body/additional-documentation/genetics/plexer-experiment.html",[7,0.316,28,0.65,40,1.193,41,0.01,43,0.643,52,0.995,108,0.749,120,0.75,124,1.371,146,0.01,147,0.008,171,1.829,176,1.985,210,2.095,237,1.81,238,1.451,419,2.437,458,3.813,728,2.767,773,3.412,779,2.3,793,2.738,801,2.307,818,1.97,828,1.97,829,2.285,831,3.494,832,4.607,833,3.993,835,4.195,836,4.426,837,5.019,838,5.418,842,3.707,843,3.707,845,4.426,846,3.962,847,4.282,848,4.426,856,3.707,926,2.387,947,3.312,1128,3.494,1258,4.426,1259,4.695,1260,4.695,1261,3.494,1264,4.195,1266,3.494,1267,3.993,1268,4.426,1270,4.426,1461,4.282,1512,3.494,1752,1.97,1781,3.962,2032,4.711,2103,2.307,2301,5.967,2302,5.967,2343,5.424,2354,5.967,2398,3.962,2433,4.711,2438,4.711,2442,4.711,2446,4.711,2486,5.361,2487,5.361,2488,5.361,2489,5.361,2490,5.361,2491,5.361,2492,5.361,2493,5.361,2494,5.361,2495,5.361,2496,5.361]],["title/additional-documentation/models.html",[70,0.496,112,0.705,228,1.216]],["body/additional-documentation/models.html",[41,0.009,112,1.29,146,0.009,147,0.009,369,2.915,1752,2.573]],["title/additional-documentation/models/course-model.html",[16,0.546,70,0.43,112,0.611,228,1.054]],["body/additional-documentation/models/course-model.html",[7,0.363,16,1.409,28,0.629,41,0.01,56,1.061,71,3.873,112,1.416,146,0.009,147,0.009,319,5.771,474,4.381,475,1.314,711,1.769,801,2.827,828,2.414,1112,5.771,1223,3.532,1752,2.414,2103,2.827,2497,4.541,2498,5.771,2499,6.568]],["title/additional-documentation/models/fridge-model.html",[70,0.43,112,0.611,228,1.054,715,1.024]],["body/additional-documentation/models/fridge-model.html",[7,0.238,28,0.538,41,0.01,50,2.502,54,0.729,56,0.965,58,2.423,71,2.591,82,0.852,108,0.921,112,1.289,120,0.729,146,0.008,147,0.008,155,2.129,169,2.129,171,1.884,172,3.597,173,4.231,237,1.478,238,1.094,241,4.277,373,2.065,419,1.837,421,2.266,475,1.124,587,1.473,588,1.737,589,2.789,715,2.583,716,2.789,776,2.419,779,1.99,797,2.502,801,3.01,807,2.591,813,3.721,816,3.471,817,2.686,818,3.072,828,2.799,885,5.265,888,5.265,1016,4.153,1132,2.686,1223,3.022,1752,2.065,1951,4.488,2103,2.419,2178,6.146,2310,4.488,2313,4.488,2321,4.488,2322,4.488,2335,4.938,2339,4.938,2380,4.938,2497,3.885,2500,5.619,2501,5.619,2502,5.619,2503,5.619,2504,5.619]],["title/additional-documentation/models/phage-model.html",[70,0.43,112,0.611,120,0.317,228,1.054]],["body/additional-documentation/models/phage-model.html",[7,0.269,28,0.68,41,0.01,43,0.397,54,0.75,56,0.877,58,1.676,71,2.231,82,1.033,103,1.272,108,0.783,112,1.171,120,0.836,146,0.007,147,0.007,153,2.401,166,2.647,170,0.867,171,1.303,237,1.654,238,1.468,248,2.563,259,3.055,365,2.321,419,2.56,421,1.951,475,1.272,575,3.569,579,4.251,587,1.666,588,1.964,709,3.153,715,1.964,737,3.986,773,1.89,776,2.082,777,3.986,781,2.862,782,2.717,783,2.497,784,3.37,786,4.173,787,3.891,789,3.157,791,4.173,792,2.717,793,2.563,795,4.21,797,2.83,799,2.83,801,3.055,811,4.173,817,3.038,818,2.609,828,1.778,829,2.139,884,3.575,887,2.717,888,4.907,947,3.926,1049,5.077,1050,4.626,1055,3.737,1132,3.842,1201,5.585,1223,2.602,1225,3.864,1232,3.575,1349,4.251,1437,4.251,1553,4.251,1749,2.988,1752,1.778,1841,5.585,1844,5.585,2021,3.737,2103,2.082,2117,5.077,2172,4.251,2398,3.575,2497,3.345,2505,7.098,2506,4.838,2507,4.838,2508,4.838,2509,4.838,2510,4.838,2511,4.838,2512,4.838,2513,4.838,2514,4.838,2515,4.838,2516,4.838,2517,8.037,2518,4.838,2519,4.838,2520,4.838,2521,4.838,2522,6.356,2523,4.251,2524,4.838]],["title/additional-documentation/models/scenario-model.html",[70,0.43,108,0.365,112,0.611,228,1.054]],["body/additional-documentation/models/scenario-model.html",[7,0.321,15,4.309,28,0.469,41,0.01,43,0.526,54,0.684,56,1.134,59,0.487,70,0.636,108,0.956,112,1.181,120,0.814,146,0.008,147,0.008,167,1.698,237,1.761,238,1.248,246,3.183,259,2.11,262,3.029,373,2.785,405,1.916,408,3.624,419,2.756,420,1.218,421,2.585,471,3.029,555,2.883,587,1.681,715,2.208,750,3.688,782,2.754,784,3.472,788,2.883,795,3.448,800,2.883,801,3.075,807,2.956,817,3.065,818,1.802,828,1.802,829,2.646,891,4.681,924,4.309,932,5.28,933,3.917,935,3.196,938,5.28,939,3.917,1050,4.179,1223,2.637,1232,3.624,1265,3.196,1343,5.707,1344,3.917,1345,3.624,1348,4.309,1357,4.309,1430,3.624,1432,6.658,1512,3.196,1670,3.196,1687,3.917,1752,1.802,1790,3.196,1965,3.917,2103,2.11,2117,5.122,2219,4.309,2220,4.309,2310,5.707,2311,5.634,2313,5.707,2314,6.278,2315,4.309,2317,6.278,2318,4.309,2319,3.917,2321,5.707,2322,6.053,2323,6.278,2325,6.278,2497,3.39,2498,4.309,2523,4.309,2525,7.145,2526,7.145,2527,4.904,2528,4.904,2529,4.904,2530,4.904,2531,4.904,2532,6.412,2533,6.412,2534,4.904,2535,6.412,2536,6.412,2537,4.904]],["title/additional-documentation/models/user-model.html",[54,0.317,70,0.43,112,0.611,228,1.054]],["body/additional-documentation/models/user-model.html",[7,0.303,16,1.296,20,3.318,28,0.471,40,1.029,41,0.01,42,0.97,43,0.528,48,1.924,49,1.61,50,3.506,52,0.942,54,0.808,56,1.114,108,0.543,112,1.185,126,1.185,146,0.009,147,0.008,154,3.389,155,2.436,172,2.767,173,2.354,176,1.88,210,3.259,234,3.553,235,3.553,236,2.981,237,1.04,238,0.959,240,3.16,241,4.02,245,3.191,246,2.444,325,3.78,329,4.325,344,3.61,366,3.041,372,2.648,376,2.341,378,2.036,390,3.041,399,4.949,400,3.639,405,1.924,407,2.895,420,1.597,458,3.61,471,4.688,475,0.985,495,3.209,500,2.648,542,2.05,711,1.326,716,2.444,779,1.4,781,1.985,790,3.209,828,2.363,829,1.657,909,4.326,1016,3.639,1132,2.354,1223,3.457,1287,3.209,1300,3.639,1306,4.326,1312,4.326,1749,3.041,1752,1.809,2034,5.135,2103,2.119,2154,5.247,2473,4.326,2497,3.404,2538,6.429,2539,7.159,2540,7.159,2541,7.159,2542,7.59,2543,4.924,2544,7.59,2545,4.924,2546,6.429,2547,4.924,2548,4.924,2549,4.924,2550,4.924,2551,4.924,2552,4.924,2553,4.924,2554,4.924,2555,4.924,2556,4.924,2557,4.924,2558,7.59,2559,4.924]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["0",{"_index":259,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Student.html":{},"components/StudentPhageComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["0.0.1",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["0.0.3",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["0.1.8",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["0.19.39",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["0.8.18",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1798,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":587,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["1.0.0",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["1.12.9",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["1.14.1",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1200,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10/11",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1095,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["106",{"_index":2514,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["11",{"_index":1234,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"overview.html":{}}}],["11/15",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":2520,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["13/14",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["140",{"_index":1172,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["145",{"_index":1171,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["15/18",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["15/19",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":2518,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["1500",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1756,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["163",{"_index":1215,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["178",{"_index":2512,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["190",{"_index":1173,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["2",{"_index":588,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["2.0",{"_index":1973,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["2.3.6",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1817,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["20/21",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["2018",{"_index":1754,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["208",{"_index":1217,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["213",{"_index":2515,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["23",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["25/26",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["260",{"_index":1174,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["27/27",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["275",{"_index":2521,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["280",{"_index":2522,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["2d",{"_index":846,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["3",{"_index":589,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/models/fridge-model.html":{}}}],["3.1.0",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1815,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1216,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":1996,"title":{},"body":{"overview.html":{}}}],["350",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37/41",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["39;bth",{"_index":1546,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["39;btn",{"_index":1544,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["3a",{"_index":1473,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["3b",{"_index":1474,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["4",{"_index":590,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{}}}],["4.0.0",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["4.17.10",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1201,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"additional-documentation/models/phage-model.html":{}}}],["400",{"_index":422,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["401",{"_index":2240,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["403",{"_index":2099,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["404",{"_index":2112,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["422",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["43",{"_index":2510,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["5",{"_index":1231,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1824,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1170,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"coverage.html":{}}}],["50,145",{"_index":1169,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["500",{"_index":424,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["6",{"_index":1340,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["6/6",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1816,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":2094,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["7/10",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1819,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1818,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1236,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["80",{"_index":1844,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{}}}],["83",{"_index":1820,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1214,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"coverage.html":{}}}],["9",{"_index":1237,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["9/9",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1841,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{}}}],["92",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["_admin",{"_index":530,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_after_",{"_index":1007,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["_authenticationservic",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["_authservic",{"_index":491,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_baseurl",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["_calldelet",{"_index":1515,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["_calldeletecours",{"_index":536,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_calldeletecoursestud",{"_index":537,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_checkpassword",{"_index":1308,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_checkphagedelet",{"_index":2307,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphagedeletion(keymut",{"_index":2379,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift",{"_index":2304,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift(keymut",{"_index":2366,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_computenumoffspr",{"_index":2435,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computenumoffspring(n1",{"_index":2458,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparamet",{"_index":2434,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparameters(f1",{"_index":2450,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_copydelet",{"_index":2295,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_copydeletion(spo",{"_index":2427,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_courseservic",{"_index":493,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{}}}],["_error_",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["_experimentinput",{"_index":1254,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_generatedelet",{"_index":2306,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generatedeletion(useddeletespot",{"_index":2374,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift",{"_index":2303,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift(shifttyp",{"_index":2358,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_genotyp",{"_index":1263,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_getnewspot",{"_index":2305,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_getnewspot(lastmad",{"_index":2369,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_http",{"_index":824,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["_modalservic",{"_index":544,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_profileservic",{"_index":1681,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_reordercours",{"_index":1426,"title":{},"body":{"components/SignupComponent.html":{}}}],["_reordercourses(cours",{"_index":1428,"title":{},"body":{"components/SignupComponent.html":{}}}],["_rout",{"_index":489,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_router",{"_index":158,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_scenarioservic",{"_index":643,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["_shuffleplaquelist",{"_index":2436,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_shuffleplaquelist(inlist",{"_index":2479,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_studentservic",{"_index":723,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["_success_",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["_user",{"_index":232,"title":{"interfaces/_User.html":{}},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["_validrecombdel",{"_index":2294,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_validrecombdel(checkpo",{"_index":2423,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_width",{"_index":1014,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["a.firstname.tolowercase().localecompare(b.firstname.tolowercas",{"_index":260,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.lastname.tolowercase().localecompare(b.lastname.tolowercas",{"_index":258,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.strainnum",{"_index":1498,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["a/t",{"_index":2332,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["abil",{"_index":1794,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["abov",{"_index":193,"title":{},"body":{"components/AdminHomeComponent.html":{}}}],["absolut",{"_index":2506,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["acces",{"_index":1718,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["access",{"_index":155,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"injectables/LoggedInGuard.html":{},"components/NotAuthComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["accessgr",{"_index":241,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["account",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"todo.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["acess",{"_index":1004,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["acid",{"_index":2337,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["activ",{"_index":165,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"changelog.html":{}}}],["activatedrout",{"_index":490,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["activatedroutesnapshot",{"_index":161,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["activemod",{"_index":457,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["actual",{"_index":2473,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["actual_compon",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ad",{"_index":554,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["add",{"_index":551,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["adding/remov",{"_index":585,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor",{"_index":538,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor(this._admin.id",{"_index":609,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addit",{"_index":228,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{}}}],["addphagetofridg",{"_index":2056,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["addphagetofridge(req",{"_index":2185,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["address",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["adjust",{"_index":1227,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["admin",{"_index":9,"title":{"additional-documentation/controllers/admin-controller.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["admin'},{'nam",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["admin.compon",{"_index":219,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.guard.servic",{"_index":223,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.rout",{"_index":218,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.template.html",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.modul",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/course/course.servic",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"components/SignupComponent.html":{}}}],["admin/instr",{"_index":2171,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["admincompon",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":149,"title":{"injectables/AdminGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"coverage.html":{},"overview.html":{}}}],["adminhomecompon",{"_index":75,"title":{"components/AdminHomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminid",{"_index":1655,"title":{},"body":{"injectables/StudentService.html":{}}}],["administr",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["adminmodul",{"_index":195,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminrout",{"_index":217,"title":{},"body":{"modules/AdminModule.html":{}}}],["adminstud",{"_index":226,"title":{"interfaces/AdminStudent.html":{}},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["adminus",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{}}}],["agre",{"_index":1981,"title":{},"body":{"license.html":{}}}],["aim",{"_index":1722,"title":{},"body":{"components/UserProfileComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["aka",{"_index":2148,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["al",{"_index":920,"title":{},"body":{"components/HomeComponent.html":{}}}],["aliv",{"_index":1701,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["allow",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["alltransl",{"_index":2394,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["alphabet",{"_index":244,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["alreadi",{"_index":886,"title":{},"body":{"interfaces/Fridge.html":{},"injectables/ProfileService.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["alway",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":1286,"title":{},"body":{"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["andtoken",{"_index":397,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["angular",{"_index":944,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["angular/compil",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":331,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":174,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"modules/HelpModule.html":{},"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":455,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"injectables/StudentService.html":{}}}],["anyon",{"_index":1640,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["anyth",{"_index":324,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["apach",{"_index":1971,"title":{},"body":{"license.html":{}}}],["apart",{"_index":2533,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["api/admin",{"_index":1671,"title":{},"body":{"injectables/StudentService.html":{}}}],["api/admin/1/students/67mak",{"_index":2093,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/cours",{"_index":2110,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum",{"_index":2123,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/:scenarioid",{"_index":2147,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructor",{"_index":2137,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructors/:studentid",{"_index":2141,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/stud",{"_index":2129,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/stud",{"_index":2073,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid",{"_index":2084,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid/:scenarioid",{"_index":2169,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["api/auth",{"_index":425,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["api/auth/forget",{"_index":2243,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/reset",{"_index":2249,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signin",{"_index":2254,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signout",{"_index":2260,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signup",{"_index":2257,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/cours",{"_index":2116,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/cricket",{"_index":851,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:scenarioid",{"_index":2223,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:userid/:scenarioid",{"_index":2166,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/:phageid",{"_index":2190,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/delet",{"_index":2177,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/fridg",{"_index":2186,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/new",{"_index":2158,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/pl",{"_index":2207,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/cricket/plex",{"_index":2214,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/us",{"_index":1303,"title":{},"body":{"injectables/ProfileService.html":{}}}],["api/users/:userid",{"_index":2232,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/users/:userid/upd",{"_index":2238,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["app",{"_index":239,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{}}}],["app'},{'nam",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["app.compon",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["app.rout",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":77,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["appi",{"_index":1470,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["applic",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/ModelRoomComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"license.html":{},"additional-documentation/models/scenario-model.html":{}}}],["application/json",{"_index":446,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["appmodul",{"_index":267,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":1477,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["approut",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["area",{"_index":1717,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["aren't",{"_index":2417,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["aris",{"_index":649,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["array",{"_index":801,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["ask",{"_index":2398,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["aspect",{"_index":910,"title":{},"body":{"components/HomeComponent.html":{}}}],["assign",{"_index":1669,"title":{},"body":{"injectables/StudentService.html":{}}}],["assum",{"_index":1306,"title":{},"body":{"components/ResetPasswordComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["async",{"_index":1355,"title":{},"body":{"modules/ScenarioModule.html":{},"dependencies.html":{}}}],["attempt",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["auth",{"_index":182,"title":{},"body":{"injectables/AdminGuard.html":{},"components/NotAuthComponent.html":{}}}],["auth'},{'nam",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["auth.compon",{"_index":222,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth.component.t",{"_index":1111,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth.template.html",{"_index":1113,"title":{},"body":{"components/NotAuthComponent.html":{}}}],["auth/not",{"_index":221,"title":{},"body":{"modules/AdminModule.html":{},"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth/upd",{"_index":1796,"title":{},"body":{"changelog.html":{}}}],["authent",{"_index":325,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"todo.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["authenticate(candidatepassword",{"_index":2543,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["authentication.rout",{"_index":334,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.servic",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["authentication/authentication.modul",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/authentication.servic",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["authentication/log",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationmodul",{"_index":273,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":333,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationservic",{"_index":37,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservice]{@link",{"_index":1420,"title":{},"body":{"components/SignoutComponent.html":{}}}],["authetn",{"_index":1108,"title":{},"body":{"components/NavComponent.html":{},"components/SigninComponent.html":{}}}],["author",{"_index":1114,"title":{},"body":{"components/NotAuthComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["auto",{"_index":2551,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["avail",{"_index":653,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{}}}],["away",{"_index":2383,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["b",{"_index":1259,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["b.strainnum",{"_index":1499,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["back",{"_index":496,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/PageNotFoundComponent.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{}}}],["backend",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/genetics.html":{},"additional-documentation/models.html":{}}}],["backend/databas",{"_index":1043,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["bact",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["bacteria",{"_index":1258,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["bad",{"_index":2144,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bade",{"_index":2188,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bar",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["base",{"_index":166,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{}}}],["basepair",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basi",{"_index":1985,"title":{},"body":{"license.html":{}}}],["basic",{"_index":1112,"title":{},"body":{"components/NotAuthComponent.html":{},"additional-documentation/models/course-model.html":{}}}],["bc",{"_index":1769,"title":{},"body":{"changelog.html":{}}}],["bcrypt",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["be",{"_index":573,"title":{},"body":{"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{}}}],["becom",{"_index":1139,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["befor",{"_index":250,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["beforehand",{"_index":1079,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["begin",{"_index":1349,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["behaviorsubject",{"_index":427,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(nul",{"_index":428,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["belong",{"_index":709,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["below",{"_index":871,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["beta.2",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["beta.3",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["beta.6",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["bg",{"_index":1038,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["block",{"_index":1028,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectcours",{"_index":2126,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectdetail",{"_index":2120,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectinfo",{"_index":2208,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["bodyobjectinform",{"_index":2187,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bodyobjectnew",{"_index":2091,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["bodyobjectrequest",{"_index":2239,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectupd",{"_index":2181,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["boolean",{"_index":171,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["bootstrap",{"_index":199,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":469,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["both",{"_index":1313,"title":{},"body":{"components/ResetPasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["box",{"_index":1182,"title":{},"body":{"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{}}}],["bp",{"_index":2517,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["breadcrumb",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"injectables/CourseResolver.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"injectables/StudentResolver.html":{},"dependencies.html":{}}}],["breadcrumbsconfig.postprocess",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["brigitt",{"_index":1969,"title":{},"body":{"license.html":{}}}],["brows",{"_index":1994,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["brute",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["bth",{"_index":1574,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["btn",{"_index":1034,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["bug",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":1997,"title":{},"body":{"todo.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["button",{"_index":552,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["button/rol",{"_index":1540,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["c",{"_index":1077,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["c'",{"_index":2530,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["c.coursenum",{"_index":1444,"title":{},"body":{"components/SignupComponent.html":{}}}],["call",{"_index":558,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["callback",{"_index":2544,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["callbackfunctioncallback",{"_index":2546,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["canaccessadmin",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["canactiv",{"_index":997,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivate(rout",{"_index":999,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivatechild",{"_index":157,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["canactivatechild(rout",{"_index":160,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["cancel",{"_index":472,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{}}}],["candidatepasswordstringus",{"_index":2545,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["capac",{"_index":832,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbercapac",{"_index":2496,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbermax",{"_index":2444,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["capacitynumbermaximum",{"_index":2490,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["card",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{}}}],["case",{"_index":252,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["caus",{"_index":1773,"title":{},"body":{"changelog.html":{}}}],["cell",{"_index":847,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["certain",{"_index":937,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["chanc",{"_index":2311,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["chang",{"_index":1287,"title":{},"body":{"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["changelog",{"_index":1745,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changepassword",{"_index":2538,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["changepassword(oldpassword",{"_index":2547,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["charact",{"_index":1341,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["checkdelet",{"_index":1516,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["checkphagedelet",{"_index":2290,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkphageframeshift",{"_index":2287,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkposnumberposit",{"_index":2425,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["child",{"_index":996,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["child/sub",{"_index":1006,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["chromosom",{"_index":1032,"title":{},"body":{"components/ModelRoomComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["chrosomom",{"_index":2431,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["chunk",{"_index":2429,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["class",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["class=\"btn",{"_index":1088,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["class=\"row",{"_index":1093,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{}}}],["clean",{"_index":2164,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["cleaner",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["clear",{"_index":1078,"title":{},"body":{"components/ModelRoomComponent.html":{},"todo.html":{}}}],["cli",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":553,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["click)=\"savedata",{"_index":1092,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["clickbutton",{"_index":1517,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["clickbutton(src",{"_index":1525,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["client",{"_index":1366,"title":{},"body":{"injectables/ScenarioResolver.html":{},"changelog.html":{}}}],["clone",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":2373,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["cluster_adminmodul",{"_index":201,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declar",{"_index":202,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_import",{"_index":203,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_provid",{"_index":204,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":321,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":322,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_coursemodul",{"_index":684,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_declar",{"_index":685,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_import",{"_index":686,"title":{},"body":{"modules/CourseModule.html":{}}}],["cluster_coursemodule_provid",{"_index":687,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_helpmodul",{"_index":900,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_declar",{"_index":901,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_import",{"_index":902,"title":{},"body":{"modules/HelpModule.html":{}}}],["cluster_locationmodul",{"_index":978,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":979,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":980,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":981,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_profilemodul",{"_index":1271,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declar",{"_index":1272,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_import",{"_index":1273,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_provid",{"_index":1274,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_scenariomodul",{"_index":1351,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_declar",{"_index":1352,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_import",{"_index":1353,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["cluster_sharedmodul",{"_index":1371,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1372,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1373,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_studentmodul",{"_index":1597,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_declar",{"_index":1598,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_import",{"_index":1599,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_provid",{"_index":1600,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["code",{"_index":741,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ModelRoomComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["codon",{"_index":2319,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["col",{"_index":1090,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["coli",{"_index":845,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["collegu",{"_index":923,"title":{},"body":{"components/HomeComponent.html":{}}}],["colphag",{"_index":856,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["colphage(list",{"_index":2216,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["colphagearraylist",{"_index":2488,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["column",{"_index":843,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["come",{"_index":897,"title":{},"body":{"components/HelpComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["comment",{"_index":787,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["commonmodul",{"_index":332,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["commun",{"_index":1285,"title":{},"body":{"injectables/ProfileService.html":{}}}],["compar",{"_index":1312,"title":{},"body":{"components/ResetPasswordComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["comparison",{"_index":257,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":1346,"title":{},"body":{"interfaces/Scenario.html":{}}}],["complianc",{"_index":1975,"title":{},"body":{"license.html":{}}}],["compoen",{"_index":1700,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["compress",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["comput",{"_index":2387,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["computenumoffspr",{"_index":2299,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["computerecombparamet",{"_index":2298,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["concat(x",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["condit",{"_index":1689,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"license.html":{}}}],["config",{"_index":2345,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["configur",{"_index":2372,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["confirm",{"_index":81,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["confirmdeletedialogcompon",{"_index":80,"title":{"components/ConfirmDeleteDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmpassword",{"_index":450,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["connect",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["consist",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["consitut",{"_index":2338,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["consol",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["console.log(json.stringify(error",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":254,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(_authenticationservic",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(_authservic",{"_index":1103,"title":{},"body":{"components/NavComponent.html":{},"components/SignoutComponent.html":{}}}],["constructor(_courseservic",{"_index":488,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{}}}],["constructor(_http",{"_index":822,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["constructor(_profileservic",{"_index":1726,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["constructor(_rout",{"_index":543,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["constructor(_scenarioservic",{"_index":1363,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["constructor(_studentservic",{"_index":1589,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["constructor(activemod",{"_index":459,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["constructor(breadcrumbsconfig",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(http",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["constructor(priv",{"_index":175,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["constructor(publ",{"_index":470,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["contain",{"_index":1376,"title":{},"body":{"modules/SharedModule.html":{}}}],["content",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseIndivComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/StudentService.html":{}}}],["content'},{'nam",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["control",{"_index":1748,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}},"body":{"changelog.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["controller.html#deletestudentfridg",{"_index":2264,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["contructor",{"_index":943,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["cooki",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["copi",{"_index":1977,"title":{},"body":{"license.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["copyright",{"_index":1968,"title":{},"body":{"license.html":{}}}],["core",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["correctli",{"_index":1320,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["correspond",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["count",{"_index":849,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["courenum",{"_index":567,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["cours",{"_index":16,"title":{"interfaces/Course.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["course.coursenum",{"_index":682,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["course.interfac",{"_index":231,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["course.resolv",{"_index":700,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.rout",{"_index":699,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.servic",{"_index":505,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{}}}],["course.touppercas",{"_index":753,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["coursebynum",{"_index":2051,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["coursebynum(req",{"_index":2151,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecoursecours",{"_index":2107,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecreatecompon",{"_index":84,"title":{"components/CourseCreateComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursedetail",{"_index":484,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["courseeditcompon",{"_index":86,"title":{"components/CourseEditComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseindivcompon",{"_index":88,"title":{"components/CourseIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseinfo",{"_index":531,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.coursenum",{"_index":635,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.descript",{"_index":666,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courseinfo.instructor",{"_index":667,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courselistcompon",{"_index":90,"title":{"components/CourseListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursemodul",{"_index":683,"title":{"modules/CourseModule.html":{}},"body":{"modules/CourseModule.html":{},"modules.html":{},"overview.html":{}}}],["coursenum",{"_index":474,"title":{},"body":{"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{}}}],["courseresolv",{"_index":688,"title":{"injectables/CourseResolver.html":{}},"body":{"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"coverage.html":{},"overview.html":{}}}],["courserout",{"_index":698,"title":{},"body":{"modules/CourseModule.html":{}}}],["courses.filter((c",{"_index":1445,"title":{},"body":{"components/SignupComponent.html":{}}}],["courses.filter((c)=>{return",{"_index":1443,"title":{},"body":{"components/SignupComponent.html":{}}}],["coursescenariocompon",{"_index":92,"title":{"components/CourseScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseservic",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverag",{"_index":1811,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpassword",{"_index":1425,"title":{},"body":{"components/SignupComponent.html":{}}}],["crate",{"_index":2352,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["creat",{"_index":419,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["create'},{'nam",{"_index":85,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["create.compon",{"_index":692,"title":{},"body":{"modules/CourseModule.html":{}}}],["create.component.t",{"_index":479,"title":{},"body":{"components/CourseCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:24",{"_index":503,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:25",{"_index":504,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:30",{"_index":502,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:34",{"_index":492,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:47",{"_index":501,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:58",{"_index":494,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:75",{"_index":497,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.style.css",{"_index":482,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.template.html",{"_index":483,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create/cours",{"_index":478,"title":{},"body":{"components/CourseCreateComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["createcours",{"_index":486,"title":{},"body":{"components/CourseCreateComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(req",{"_index":2119,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(this.admin.id",{"_index":514,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["createpl",{"_index":820,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(phage1",{"_index":2437,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(pl",{"_index":825,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["createplate(req",{"_index":2206,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["createplatephag",{"_index":2296,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplexerpl",{"_index":2301,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["createplexerplate(rowphag",{"_index":2486,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["creating/sav",{"_index":2258,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["creation",{"_index":1419,"title":{},"body":{"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{}}}],["credenti",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["crick",{"_index":918,"title":{},"body":{"components/HomeComponent.html":{}}}],["cricket",{"_index":78,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["cross",{"_index":788,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["crosses/manipul",{"_index":2205,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["crossov",{"_index":2408,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["css",{"_index":1027,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["cummul",{"_index":2403,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["current",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["curus",{"_index":2275,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["curuseruserlog",{"_index":2076,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["dark",{"_index":1039,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["dat",{"_index":1087,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["data",{"_index":833,"title":{},"body":{"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["databas",{"_index":1223,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["date",{"_index":2558,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["db",{"_index":1749,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["deal",{"_index":212,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/StudentService.html":{}}}],["debug",{"_index":1810,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["decim",{"_index":2312,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["declar",{"_index":198,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlabdilut",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultplexerdilut",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defin",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["defofdiff",{"_index":2526,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["degofdiff",{"_index":2225,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degofdifficulti",{"_index":2221,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degre",{"_index":2219,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["del",{"_index":1069,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["deleet",{"_index":812,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["delet",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["delete(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1675,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletecours",{"_index":539,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestud",{"_index":540,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestudents(req",{"_index":2130,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["deletedis",{"_index":1518,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["deletephag",{"_index":2058,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletephage(req",{"_index":2193,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletes",{"_index":2501,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletespot",{"_index":2502,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletestud",{"_index":1645,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudent(adminid",{"_index":1652,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudentfridg",{"_index":2055,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge(req",{"_index":2183,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge]{@link",{"_index":2263,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["deleteus",{"_index":2039,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["deleteuser(req",{"_index":2088,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["deletion.length",{"_index":1178,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i",{"_index":1179,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i+1",{"_index":1180,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletionguesslength",{"_index":1196,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"miscellaneous/variables.html":{}}}],["deletionlist",{"_index":1167,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletions.pip",{"_index":1612,"title":{},"body":{"modules/StudentModule.html":{}}}],["deletions.pipe.t",{"_index":1163,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"coverage.html":{}}}],["deletions.pipe.ts:16",{"_index":1176,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["dellist",{"_index":2424,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["dellistarraylist",{"_index":2426,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["depend",{"_index":196,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["describ",{"_index":2523,"title":{},"body":{"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["descript",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["desctruct",{"_index":1403,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["destori",{"_index":498,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["destroy",{"_index":739,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["destruct",{"_index":675,"title":{},"body":{"components/CourseListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["detail",{"_index":421,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["determin",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/user-model.html":{}}}],["dialog",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["dialog'},{'nam",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialog.compon",{"_index":581,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["dialog.component.t",{"_index":452,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:18",{"_index":461,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1183,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":466,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1184,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.template.html",{"_index":456,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["didn't",{"_index":1322,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["differ",{"_index":1687,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["difficulti",{"_index":2220,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dilut",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dimens",{"_index":2421,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["direct",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["directli",{"_index":1761,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":1318,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["discov",{"_index":924,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dismiss",{"_index":626,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["display",{"_index":462,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["distanc",{"_index":2532,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["distribut",{"_index":1984,"title":{},"body":{"license.html":{}}}],["dnd",{"_index":1380,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["dndmodul",{"_index":1378,"title":{},"body":{"modules/SharedModule.html":{}}}],["dndmodule.forroot",{"_index":1394,"title":{},"body":{"modules/SharedModule.html":{}}}],["document",{"_index":1752,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["doesn't",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"components/ForgetPasswordComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["don't",{"_index":2252,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["donald",{"_index":1137,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["dopheno",{"_index":2291,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["dopheno(mutantlist",{"_index":2389,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["doubl",{"_index":2456,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["drag",{"_index":808,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["drop",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["duck",{"_index":1138,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["dure",{"_index":2117,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dynam",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":844,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["each",{"_index":829,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["easier",{"_index":575,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["edit",{"_index":527,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/UserProfileComponent.html":{}}}],["edit'},{'nam",{"_index":87,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["edit.compon",{"_index":694,"title":{},"body":{"modules/CourseModule.html":{}}}],["edit.component.t",{"_index":526,"title":{},"body":{"components/CourseEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:105",{"_index":570,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:122",{"_index":550,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:145",{"_index":556,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:161",{"_index":546,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:178",{"_index":560,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:195",{"_index":549,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:209",{"_index":561,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:33",{"_index":572,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:37",{"_index":577,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:41",{"_index":578,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:45",{"_index":571,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:46",{"_index":576,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:50",{"_index":574,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:54",{"_index":545,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:71",{"_index":565,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:97",{"_index":568,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.style.css",{"_index":528,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.template.html",{"_index":529,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit/cours",{"_index":525,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["editcours",{"_index":2047,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(req",{"_index":2125,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(this._admin.id",{"_index":606,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["editprofil",{"_index":1288,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editprofile(userid",{"_index":1291,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editus",{"_index":2067,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["edituser(req",{"_index":2234,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["ej",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":803,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["elm.userid",{"_index":613,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["email",{"_index":240,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["email/name/rol",{"_index":1513,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["empti",{"_index":710,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["encompass",{"_index":1615,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["end",{"_index":947,"title":{},"body":{"components/LandingRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["enough",{"_index":2382,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["enrol",{"_index":655,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["ensur",{"_index":251,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"interfaces/Student.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["enter",{"_index":495,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["entir",{"_index":1998,"title":{},"body":{"todo.html":{}}}],["entityif",{"_index":2247,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["entranc",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{}}}],["entrycompon",{"_index":691,"title":{},"body":{"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/StudentModule.html":{}}}],["enum",{"_index":2559,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["epo",{"_index":2428,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["eposnumberend",{"_index":2432,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["equal",{"_index":2534,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["err",{"_index":521,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["err2",{"_index":603,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["error",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["error.error.messag",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.error.text",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.messag",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.t",{"_index":1873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errordatabas",{"_index":2150,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["errorerror",{"_index":2163,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["errorif",{"_index":2244,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["errormessag",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["erroron",{"_index":2080,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["errror",{"_index":423,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["eslint",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["et",{"_index":919,"title":{},"body":{"components/HomeComponent.html":{}}}],["even",{"_index":1437,"title":{},"body":{"components/SignupComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["everyth",{"_index":1691,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["exampl",{"_index":1132,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["except",{"_index":1974,"title":{},"body":{"license.html":{}}}],["exeri",{"_index":2433,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["exisit",{"_index":1294,"title":{},"body":{"injectables/ProfileService.html":{}}}],["exist",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["exit",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["expect",{"_index":1703,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["experi",{"_index":817,"title":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["experiment.servic",{"_index":985,"title":{},"body":{"modules/LocationModule.html":{}}}],["experimentphag",{"_index":771,"title":{"interfaces/ExperimentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["experimentservic",{"_index":814,"title":{"injectables/ExperimentService.html":{}},"body":{"injectables/ExperimentService.html":{},"modules/LocationModule.html":{},"coverage.html":{},"overview.html":{}}}],["expir",{"_index":400,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["export",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"overview.html":{}}}],["express",{"_index":1911,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extend",{"_index":230,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["f1numberfract",{"_index":2452,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2",{"_index":2451,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2numberfract",{"_index":2453,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["facebook",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":173,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["far",{"_index":2381,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["featur",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{}}}],["fetch",{"_index":962,"title":{},"body":{"components/ListComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["field",{"_index":1685,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"license.html":{}}}],["filecod",{"_index":2525,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["fill",{"_index":1686,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["find",{"_index":708,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["findfridgebyscenown",{"_index":2060,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["findfridgebyscenowner(req",{"_index":2198,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["finish",{"_index":2132,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["first",{"_index":246,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["firstnam",{"_index":234,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["fix",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["fname",{"_index":1149,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["follow",{"_index":2228,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["for(let",{"_index":1067,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["forbiddencurr",{"_index":2108,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["forbiddenif",{"_index":2100,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["forc",{"_index":1788,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["forget",{"_index":95,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["forgetpassword",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forgetpassword(bodi",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordcompon",{"_index":94,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotten",{"_index":328,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["form",{"_index":868,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["format",{"_index":728,"title":{},"body":{"components/CourseScenarioComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["formataccess",{"_index":720,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(isgr",{"_index":725,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(student.statu",{"_index":770,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formatphagetyp",{"_index":1617,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["formsmodul",{"_index":330,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":1119,"title":{},"body":{"components/PageNotFoundComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["found')if",{"_index":2197,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["found'},{'nam",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["found.compon",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.t",{"_index":1116,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1121,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.template.html",{"_index":1120,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/pag",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["foundif",{"_index":2245,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundphag",{"_index":2210,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["foundther",{"_index":2118,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["foundun",{"_index":2235,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundus",{"_index":2113,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["frame",{"_index":2320,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["framelist",{"_index":2402,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frameshift",{"_index":795,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["frameshift(",{"_index":2367,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["frameshift/phenotyp",{"_index":2388,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["framesstoplist",{"_index":2504,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["framestoplist",{"_index":2340,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["framshift",{"_index":2400,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frequenc",{"_index":2468,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["fridg",{"_index":715,"title":{"interfaces/Fridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["fridge')if",{"_index":2200,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridge'},{'nam",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["fridge.accessgr",{"_index":1510,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.compon",{"_index":1607,"title":{},"body":{"modules/StudentModule.html":{}}}],["fridge.component.t",{"_index":1457,"title":{},"body":{"components/StudentFridgeComponent.html":{},"coverage.html":{}}}],["fridge.component.ts:118",{"_index":1467,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:133",{"_index":1476,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:154",{"_index":1471,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:30",{"_index":1478,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:34",{"_index":1479,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:38",{"_index":1481,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:42",{"_index":1482,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:51",{"_index":1484,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:55",{"_index":1483,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:59",{"_index":1465,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:76",{"_index":1472,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.own",{"_index":1507,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.label",{"_index":1509,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.scencod",{"_index":1508,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.strain",{"_index":1491,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.template.html",{"_index":1459,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge/fridge.compon",{"_index":986,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/phag",{"_index":987,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/stud",{"_index":1456,"title":{},"body":{"components/StudentFridgeComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["fridgecompon",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fridgefridgefridg",{"_index":2204,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgefridgelog",{"_index":2179,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgephag",{"_index":780,"title":{"interfaces/FridgePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["frist",{"_index":1126,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["front",{"_index":1781,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["full",{"_index":835,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["function",{"_index":210,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["function(a,b",{"_index":256,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["function(error",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["futur",{"_index":940,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["g",{"_index":2529,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["g/c",{"_index":2330,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["g/c'",{"_index":2316,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gcprob",{"_index":2314,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["gcprobnumbergc",{"_index":2328,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gene",{"_index":1050,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["genear",{"_index":1015,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["genelength",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gener",{"_index":828,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["generatedelet",{"_index":2289,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generateframeshift",{"_index":2286,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generatepl",{"_index":2297,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["generateplexerpl",{"_index":2302,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["generateplexerplate(lawntypestr",{"_index":2492,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["generatescenario",{"_index":2280,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["generatescenario(scenario",{"_index":2308,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["genet",{"_index":926,"title":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolist",{"_index":2446,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolistarraylist",{"_index":2494,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotyp",{"_index":1267,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotypephag",{"_index":794,"title":{"interfaces/GenotypePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["geonotyp",{"_index":2475,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["get",{"_index":677,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"components/CourseListComponent.html":{},"components/NavComponent.html":{},"changelog.html":{}}}],["get(`${this._baseurl}/${adminid}/stud",{"_index":1672,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1673,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1677,"title":{},"body":{"injectables/StudentService.html":{}}}],["getblockclass",{"_index":1019,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getblockclass(strain",{"_index":1024,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getbuttonclass",{"_index":1463,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('al",{"_index":1468,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('grad",{"_index":1469,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass(src",{"_index":1466,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getcours",{"_index":2046,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getcourse(req",{"_index":2122,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getfram",{"_index":2292,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["getframes(whosay",{"_index":2395,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["getfridg",{"_index":1646,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridge(adminid",{"_index":1656,"title":{},"body":{"injectables/StudentService.html":{}}}],["getfridge(req",{"_index":2165,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo",{"_index":2063,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo(fridg",{"_index":2203,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getnewspot",{"_index":2288,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["getpossibleinstructor",{"_index":2048,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getpossibleinstructors(req",{"_index":2136,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenario",{"_index":949,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenario(scenid",{"_index":953,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenariostatu",{"_index":2050,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getscenariostatus(req",{"_index":2146,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenstatu",{"_index":1519,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scenario.scencod",{"_index":1585,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scencod",{"_index":1529,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstud",{"_index":1647,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getstudent(adminid",{"_index":1658,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentcours",{"_index":1520,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstudentfridg",{"_index":2053,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudentfridge(req",{"_index":2168,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudents(req",{"_index":2128,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getus",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuser(req",{"_index":2083,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo",{"_index":2071,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo(us",{"_index":2276,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["give",{"_index":1317,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["given",{"_index":936,"title":{},"body":{"components/LandingRoomComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["global",{"_index":1195,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["global]{@link",{"_index":1206,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["go",{"_index":188,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseCreateComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["goal",{"_index":933,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["goe",{"_index":1117,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["googl",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["gotofridg",{"_index":721,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["gotofridge(studentid",{"_index":730,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["govern",{"_index":1991,"title":{},"body":{"license.html":{}}}],["grace",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["grade",{"_index":792,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["grant",{"_index":716,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["grantaccess",{"_index":722,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(req",{"_index":2262,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(scencod",{"_index":1534,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["grantaccess(studentindex",{"_index":734,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["grantscenaccess",{"_index":1648,"title":{},"body":{"injectables/StudentService.html":{}}}],["grantscenaccess(adminid",{"_index":1660,"title":{},"body":{"injectables/StudentService.html":{}}}],["greater",{"_index":1553,"title":{},"body":{"components/StudentIndivComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["group",{"_index":1188,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["gt",{"_index":1543,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{}}}],["guard",{"_index":151,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["guess",{"_index":813,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["guesses.pip",{"_index":1610,"title":{},"body":{"modules/StudentModule.html":{}}}],["guesses.pipe.t",{"_index":1193,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"coverage.html":{}}}],["guesses.pipe.ts:22",{"_index":1204,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[i",{"_index":1208,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[strain.strainnum",{"_index":1495,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["guesslist",{"_index":1198,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesss",{"_index":1194,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["handl",{"_index":1128,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["handleplex",{"_index":2064,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["handleplexer(req",{"_index":2213,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["happen",{"_index":1324,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["hasauthor",{"_index":2041,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["hasauthorization(req",{"_index":2095,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["hasfridg",{"_index":1460,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["hasfridgeauthor",{"_index":2061,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasfridgeauthorization(req",{"_index":2201,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["hashlocationstrategi",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["hasphageauthor",{"_index":2062,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasphageauthorization(req",{"_index":2202,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["have",{"_index":211,"title":{},"body":{"modules/AdminModule.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["header",{"_index":445,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["helmet",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":893,"title":{},"body":{"components/HelpComponent.html":{},"components/NavComponent.html":{},"todo.html":{}}}],["help'},{'nam",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["help.compon",{"_index":906,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.rout",{"_index":905,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.style.css",{"_index":894,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.template.html",{"_index":895,"title":{},"body":{"components/HelpComponent.html":{}}}],["help/help.modul",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["helpcompon",{"_index":99,"title":{"components/HelpComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helper",{"_index":547,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["helpinform",{"_index":899,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpmodul",{"_index":274,"title":{"modules/HelpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelpModule.html":{},"modules.html":{},"overview.html":{}}}],["helprout",{"_index":904,"title":{},"body":{"modules/HelpModule.html":{}}}],["hidden",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["hofmeist",{"_index":1970,"title":{},"body":{"license.html":{}}}],["home",{"_index":190,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["home'},{'nam",{"_index":76,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.compon",{"_index":220,"title":{},"body":{"modules/AdminModule.html":{}}}],["home.component.t",{"_index":185,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["home.style.css",{"_index":911,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.template.html",{"_index":191,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home/admin",{"_index":184,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["home/home.compon",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["homecompon",{"_index":101,"title":{"components/HomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hopefulli",{"_index":1767,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":973,"title":{},"body":{"components/LocationComponent.html":{}}}],["hour",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":1533,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["html5",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["http",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1978,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["httpclientmodul",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":437,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["https://github.com/iconic/open",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["human",{"_index":1344,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/models/scenario-model.html":{}}}],["i.",{"_index":326,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"injectables/ExperimentService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["icon",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["iconic.git",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":711,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["id'",{"_index":2447,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["id')if",{"_index":2156,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["id1",{"_index":1230,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id2",{"_index":1233,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id3",{"_index":1235,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id=\"model",{"_index":1096,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["id=\"viewpar",{"_index":1187,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["ident",{"_index":2463,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identicalbooleanar",{"_index":2470,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identif",{"_index":2499,"title":{},"body":{"additional-documentation/models/course-model.html":{}}}],["identifi",{"_index":935,"title":{},"body":{"components/LandingRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["iderr",{"_index":1706,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["idstringcours",{"_index":2152,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["idstringmongodb",{"_index":2195,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["idstringscenario",{"_index":2229,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["idstringuser'",{"_index":2269,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["if(c",{"_index":1339,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(error",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(error.error",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isloggedin",{"_index":1009,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["if(n",{"_index":1714,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(numpar",{"_index":1241,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(out",{"_index":1153,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageGuessesPipe.html":{}}}],["if(p",{"_index":1338,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(parents.length",{"_index":1242,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(r",{"_index":763,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["if(result",{"_index":624,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["if(revers",{"_index":1154,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["if(rol",{"_index":179,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["if(sorted.length",{"_index":1250,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(strain.phagetyp",{"_index":1505,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this._admin",{"_index":1577,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.coursedetails.coursenum",{"_index":510,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["if(this.credentials.token",{"_index":1331,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.errormessag",{"_index":1334,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.getus",{"_index":442,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["if(this.hasfridg",{"_index":1492,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this.keys.length",{"_index":1073,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["if(this.passwordmessag",{"_index":1709,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(this.phag",{"_index":1627,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.phage.phagetyp",{"_index":1630,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.selectedadd",{"_index":608,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["if(this.ssubscript",{"_index":969,"title":{},"body":{"components/ListComponent.html":{}}}],["if(this.student.rol",{"_index":1579,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.student.userid",{"_index":1578,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.subscript",{"_index":523,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["if(this.user.cours",{"_index":1450,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.user.password",{"_index":1451,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.viewstrain",{"_index":1502,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(x",{"_index":1207,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["if(x.length",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["ignor",{"_index":1257,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["implement",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["impli",{"_index":1989,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["in.guard.servic",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["in.guard.service.t",{"_index":995,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["in.guard.service.ts:28",{"_index":1000,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:49",{"_index":1005,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:9",{"_index":998,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in/out",{"_index":327,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["inact",{"_index":1076,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["includ",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["incorrect",{"_index":1301,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["increment",{"_index":2552,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["indic",{"_index":797,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["indiv",{"_index":640,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv'},{'nam",{"_index":89,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["indiv.compon",{"_index":693,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["indiv.component.t",{"_index":639,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{}}}],["indiv.component.ts:113",{"_index":1530,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:131",{"_index":1532,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:147",{"_index":1535,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:167",{"_index":1552,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:194",{"_index":1539,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:210",{"_index":1526,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:226",{"_index":1528,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:245",{"_index":1524,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:263",{"_index":1523,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:278",{"_index":1536,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:30",{"_index":654,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:34",{"_index":648,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:36",{"_index":1561,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:38",{"_index":652,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:40",{"_index":1560,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:42",{"_index":650,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:43",{"_index":651,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:45",{"_index":1555,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:48",{"_index":644,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:49",{"_index":1557,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:53",{"_index":1554,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:57",{"_index":1559,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:61",{"_index":1556,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:66",{"_index":646,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:84",{"_index":1537,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:93",{"_index":645,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.style.css",{"_index":641,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.template.html",{"_index":642,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv/cours",{"_index":638,"title":{},"body":{"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["indiv/stud",{"_index":1511,"title":{},"body":{"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["individu",{"_index":656,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/SharedModule.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["inform",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["init",{"_index":566,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["initi",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["inject",{"_index":148,"title":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["inlist.length+1",{"_index":2422,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraymut",{"_index":2419,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraystrain",{"_index":2483,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["input",{"_index":458,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["input/par",{"_index":2485,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["insensit",{"_index":253,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["insert",{"_index":2361,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["instr",{"_index":153,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["instr'",{"_index":2082,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["instrctor",{"_index":2139,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrcutor",{"_index":2138,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrs.sort(sortstud",{"_index":602,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["instructor",{"_index":71,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Course.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["instuctor",{"_index":2142,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["integ",{"_index":2528,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["interest",{"_index":1485,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["interfac",{"_index":170,"title":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/models/phage-model.html":{}}}],["interfaces/course.interfac",{"_index":582,"title":{},"body":{"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/phage.interfac",{"_index":1185,"title":{},"body":{"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["interfaces/scenario.interfac",{"_index":966,"title":{},"body":{"components/ListComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/student.interfac",{"_index":583,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["interfaces/user.interfac",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["intermutedist",{"_index":2322,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["intern",{"_index":2079,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["intial",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{}}}],["intramutedist",{"_index":2321,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["invalid",{"_index":398,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["isadmin",{"_index":2042,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["isadmin(req",{"_index":2102,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["isdestroy",{"_index":532,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["isdis",{"_index":1307,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isgrant",{"_index":729,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["isinstructor",{"_index":2043,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["isinstructor(req",{"_index":2104,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["isloggedin",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{}}}],["isn't",{"_index":1670,"title":{},"body":{"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["issu",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1432,"title":{},"body":{"components/SignupComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["itself",{"_index":2134,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["jqueri",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["jsdoc2md",{"_index":2103,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["json",{"_index":2077,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["json.parse(dat",{"_index":1085,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.parse(this.fridge.guess",{"_index":1493,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["json.stringify(credenti",{"_index":444,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(this.guess",{"_index":1080,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.stringify(us",{"_index":448,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["k",{"_index":1260,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["karma",{"_index":1966,"title":{},"body":{"index.html":{}}}],["keep",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdatePasswordComponent.html":{}}}],["key",{"_index":1016,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["keymutesarraydelet",{"_index":2384,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["keymutesarraymut",{"_index":2368,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["kind",{"_index":1988,"title":{},"body":{"license.html":{}}}],["know",{"_index":2172,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["known",{"_index":785,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["lab",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["label",{"_index":891,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["labroomcompon",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["land",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["landingroomcompon",{"_index":105,"title":{"components/LandingRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["languag",{"_index":1990,"title":{},"body":{"license.html":{}}}],["larg",{"_index":837,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["largeplaqu",{"_index":1270,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["last",{"_index":245,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["lastlogin",{"_index":2539,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["lastmadenumberth",{"_index":2370,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["lastnam",{"_index":235,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["later",{"_index":2326,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["law",{"_index":1980,"title":{},"body":{"license.html":{}}}],["lawn",{"_index":830,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["lawntyp",{"_index":1261,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestring",{"_index":2442,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestrstring",{"_index":2493,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["lead",{"_index":1304,"title":{},"body":{"injectables/ProfileService.html":{}}}],["leak",{"_index":564,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["learn",{"_index":939,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["left",{"_index":1764,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":197,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["length",{"_index":1049,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{}}}],["licens",{"_index":1967,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1786,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["link",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/CourseIndivComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["list",{"_index":475,"title":{},"body":{"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["list'},{'nam",{"_index":91,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["list(req",{"_index":2217,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["list.compon",{"_index":695,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["list.component.t",{"_index":671,"title":{},"body":{"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{}}}],["list.component.ts:22",{"_index":678,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:23",{"_index":1594,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:26",{"_index":673,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:27",{"_index":1593,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:31",{"_index":1590,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:36",{"_index":676,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:46",{"_index":1592,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:47",{"_index":674,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:60",{"_index":1591,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.template.html",{"_index":672,"title":{},"body":{"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/StudentListComponent.html":{}}}],["list/cours",{"_index":670,"title":{},"body":{"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["list/list.compon",{"_index":1360,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["list/stud",{"_index":1586,"title":{},"body":{"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["listcompon",{"_index":107,"title":{"components/ListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listcours",{"_index":2044,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum",{"_index":2045,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum(req",{"_index":2115,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["liststud",{"_index":1649,"title":{},"body":{"injectables/StudentService.html":{}}}],["liststudents(adminid",{"_index":1664,"title":{},"body":{"injectables/StudentService.html":{}}}],["listus",{"_index":2038,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["listusers(req",{"_index":2072,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["liter",{"_index":1454,"title":{},"body":{"interfaces/StudentFridge.html":{}}}],["lname",{"_index":1151,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["load",{"_index":1356,"title":{},"body":{"modules/ScenarioModule.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["local",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["locat",{"_index":776,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LocationComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["location'},{'nam",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["location.compon",{"_index":988,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.rout",{"_index":984,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.style.css",{"_index":975,"title":{},"body":{"components/LocationComponent.html":{}}}],["location.template.html",{"_index":976,"title":{},"body":{"components/LocationComponent.html":{}}}],["locationcompon",{"_index":109,"title":{"components/LocationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locationmodul",{"_index":977,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules/ScenarioModule.html":{},"modules.html":{},"overview.html":{}}}],["locationrout",{"_index":983,"title":{},"body":{"modules/LocationModule.html":{}}}],["locationstrategi",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["lodash",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["loggedinguard",{"_index":278,"title":{"injectables/LoggedInGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggedInGuard.html":{},"coverage.html":{},"overview.html":{}}}],["logic",{"_index":922,"title":{"additional-documentation/genetics/phage-logic.html":{}},"body":{"components/HomeComponent.html":{},"changelog.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["login",{"_index":1409,"title":{},"body":{"components/SigninComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["long",{"_index":402,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{}}}],["longer",{"_index":790,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/models/user-model.html":{}}}],["look",{"_index":1531,"title":{},"body":{"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["lot",{"_index":2170,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["lowercas",{"_index":249,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2371,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mail",{"_index":1716,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["main",{"_index":189,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/UserProfileComponent.html":{}}}],["mainli",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"modules/ScenarioModule.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["maintain",{"_index":1732,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["make",{"_index":248,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["makedeletionphag",{"_index":2285,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makedeletionphage(phag",{"_index":2355,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphag",{"_index":2284,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphage(phag",{"_index":2353,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makegen",{"_index":2281,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makegene(gcprob",{"_index":2327,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makephag",{"_index":2282,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makephage(phagedetail",{"_index":2342,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphag",{"_index":2283,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphage(phag",{"_index":2349,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mani",{"_index":2414,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["manner",{"_index":2278,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["match",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["math.abs(x",{"_index":1220,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["math.ceil(scenarioglobals.genelength/this.steps",{"_index":1066,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["maximum",{"_index":1262,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"miscellaneous/variables.html":{}}}],["mb",{"_index":1189,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["mcbreadcrumbsconfig",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["mcbreadcrumbsmodul",{"_index":1382,"title":{},"body":{"modules/SharedModule.html":{}}}],["mcbreadcrumbsmodule.forroot",{"_index":1396,"title":{},"body":{"modules/SharedModule.html":{}}}],["md",{"_index":1091,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["memcach",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["memori",{"_index":563,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["messag",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["met",{"_index":1690,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["mickey",{"_index":1135,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["middl",{"_index":2519,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["middlewar",{"_index":2097,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["minim",{"_index":1768,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":2318,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstop",{"_index":2317,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstopsnumberminimum",{"_index":2333,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["minu",{"_index":2511,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["minumum",{"_index":2531,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["miscellan",{"_index":2003,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1141,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["mlength",{"_index":1177,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["modal",{"_index":621,"title":{},"body":{"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["model",{"_index":112,"title":{"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["modelref",{"_index":616,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.componentinstance.messag",{"_index":622,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.result.then((result",{"_index":623,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelroomcompon",{"_index":111,"title":{"components/ModelRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modul",{"_index":194,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":168,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/StudentResolver.html":{}}}],["mongo",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":778,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{}}}],["mongoos",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":802,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["morgan",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["mous",{"_index":1136,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["multipl",{"_index":1055,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["mut",{"_index":2324,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutagen",{"_index":2293,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["mutagenize(inlist",{"_index":2415,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["mutant",{"_index":1789,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["mutantlist",{"_index":2396,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymut",{"_index":2391,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymutat",{"_index":2399,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutants/recombin",{"_index":2481,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutat",{"_index":784,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutation(",{"_index":2365,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutationfreq",{"_index":2310,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutationlist",{"_index":811,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["mutations.pip",{"_index":1611,"title":{},"body":{"modules/StudentModule.html":{}}}],["mutations.pipe.t",{"_index":1212,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"coverage.html":{}}}],["mutations.pipe.ts:18",{"_index":1219,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["mutations/delet",{"_index":2535,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["mutatnt",{"_index":1269,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["mutfreq",{"_index":2461,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutfreqnumbermut",{"_index":2467,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n",{"_index":1712,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["n1.strainnum",{"_index":1245,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n1numbernumb",{"_index":2464,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2",{"_index":2459,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2)=>{return",{"_index":1244,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2.strainnum",{"_index":1246,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2numbernumb",{"_index":2465,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["na",{"_index":1431,"title":{},"body":{"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{}}}],["na.concat(oth",{"_index":1446,"title":{},"body":{"components/SignupComponent.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["name.pip",{"_index":1389,"title":{},"body":{"modules/SharedModule.html":{}}}],["name.pipe.t",{"_index":1157,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["name.pipe.ts:20",{"_index":1160,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["names.pip",{"_index":1391,"title":{},"body":{"modules/SharedModule.html":{}}}],["names.pipe.t",{"_index":1125,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["names.pipe.ts:20",{"_index":1144,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["nav",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["nav'},{'nam",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["nav.style.css",{"_index":1101,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.template.html",{"_index":1102,"title":{},"body":{"components/NavComponent.html":{}}}],["nav/nav.compon",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["navcompon",{"_index":113,"title":{"components/NavComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LocationComponent.html":{},"components/NavComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["nblock",{"_index":1065,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["necessari",{"_index":500,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["necessarili",{"_index":2085,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["need",{"_index":169,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"modules/SharedModule.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["neg",{"_index":796,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{}}}],["new",{"_index":420,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["newli",{"_index":834,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["newpassword",{"_index":1300,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["newpasswordstringth",{"_index":2550,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["newrol",{"_index":1514,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["next",{"_index":2096,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next('fail",{"_index":2155,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["next('invalid",{"_index":2270,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next('phag",{"_index":2196,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["next('us",{"_index":2272,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()abl",{"_index":2273,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()go",{"_index":2101,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["next()if",{"_index":2109,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next()on",{"_index":2255,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next(error)if",{"_index":2153,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next(error)on",{"_index":2230,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["nextfunctionnext",{"_index":2106,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["nextfunctionth",{"_index":2098,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["nextobjectnext",{"_index":2268,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["nfridgeshelf",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nfridgespot",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":468,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":1379,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":460,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["ngbmodal",{"_index":467,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["ngbmodul",{"_index":1381,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngbmodule.forroot",{"_index":1395,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngmodul",{"_index":214,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["ngondestori",{"_index":1020,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["ngondestroy",{"_index":487,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngx",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nme",{"_index":1293,"title":{},"body":{"injectables/ProfileService.html":{}}}],["nnumbertot",{"_index":2455,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nodemail",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":432,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["none",{"_index":1202,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["normal",{"_index":1133,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["notauthcompon",{"_index":115,"title":{"components/NotAuthComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["note",{"_index":1225,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["noth",{"_index":559,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["nr",{"_index":2460,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nrnumberratio",{"_index":2466,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nshift",{"_index":2359,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nshiftsnumbernumb",{"_index":2362,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleic",{"_index":2336,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleotid",{"_index":2334,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["null",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["nullsecond",{"_index":2441,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["num",{"_index":1247,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"changelog.html":{}}}],["number",{"_index":237,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["number.parseint(k",{"_index":1072,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["numbers/typ",{"_index":2471,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numdesir",{"_index":2416,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numdesirednumbernumb",{"_index":2420,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numer",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numgeno",{"_index":2474,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinput",{"_index":2480,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinputnumbernumb",{"_index":2484,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nummber",{"_index":1033,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["nummut",{"_index":2476,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numoffspr",{"_index":2472,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numpar",{"_index":791,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["numphag",{"_index":774,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["numphage:1000000",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numrecomb",{"_index":2477,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nums[0",{"_index":1251,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["nums[1",{"_index":1252,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["numtodo",{"_index":2407,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numtodonumberhow",{"_index":2413,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxov",{"_index":2406,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxovernumbernumb",{"_index":2412,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["nxm",{"_index":2215,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["o",{"_index":1688,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["oauth",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":779,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["object.keys(dels).map((k",{"_index":1071,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["observ",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["obtain",{"_index":1976,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2341,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["odd",{"_index":2516,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["offspr",{"_index":2409,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["okclean",{"_index":2087,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["okif",{"_index":2081,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okinform",{"_index":2127,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["oklist",{"_index":2114,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oknewli",{"_index":2121,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["okon",{"_index":2236,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okreturn",{"_index":2182,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["oksend",{"_index":2261,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["oksuccessfulli",{"_index":2212,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okth",{"_index":2124,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oktrim",{"_index":2233,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okupd",{"_index":2092,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["okuser'",{"_index":2167,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["old",{"_index":1299,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["oldpassword",{"_index":2548,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["oldpasswordstringus",{"_index":2549,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["on",{"_index":781,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["onc",{"_index":1298,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["oncancel",{"_index":541,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["ondestroy",{"_index":480,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["oninit",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["open",{"_index":557,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["opposit",{"_index":2513,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["option",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["order",{"_index":1430,"title":{},"body":{"components/SignupComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["origin",{"_index":2448,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["otherphag",{"_index":2325,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["otherwis",{"_index":440,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["ouput",{"_index":1140,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["out",{"_index":208,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SignoutComponent.html":{},"modules/StudentModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["outlin",{"_index":1036,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["outline&#39",{"_index":1548,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["output",{"_index":1134,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"changelog.html":{}}}],["over",{"_index":1264,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["overflow",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["overload",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["overrid",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["overview",{"_index":1995,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["own",{"_index":2500,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["owner",{"_index":888,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["owner/scenario",{"_index":2174,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["p",{"_index":1035,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["packag",{"_index":1875,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":70,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/models/scenario-model.html":{}}}],["page'",{"_index":436,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pagenotfoundcompon",{"_index":117,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pair",{"_index":805,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["param",{"_index":176,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["parameet",{"_index":704,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["paramet",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["paramobserv",{"_index":533,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["params['coursenum",{"_index":594,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["params['scenid",{"_index":751,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["params['studentid",{"_index":1487,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["parent",{"_index":789,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["parent(",{"_index":2524,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["parents.length",{"_index":1224,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.pip",{"_index":1393,"title":{},"body":{"modules/SharedModule.html":{}}}],["parents.pipe.t",{"_index":1222,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["parents.pipe.ts:26",{"_index":1240,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.sort((n1",{"_index":1243,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parentslist",{"_index":1228,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parser",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2553,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["particular",{"_index":2131,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["pass",{"_index":2154,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["passport",{"_index":1943,"title":{},"body":{"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["passsword",{"_index":1442,"title":{},"body":{"components/SignupComponent.html":{}}}],["password",{"_index":329,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["password'},{'nam",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["password,confirmpassword",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["password.compon",{"_index":339,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{},"todo.html":{}}}],["password.component.t",{"_index":860,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:106",{"_index":1683,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:111",{"_index":1315,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:129",{"_index":1692,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1323,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1327,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:27",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1321,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:35",{"_index":865,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":1325,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:40",{"_index":1697,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:41",{"_index":1310,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1682,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:45",{"_index":867,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:58",{"_index":1316,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:63",{"_index":866,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:64",{"_index":1694,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:73",{"_index":1319,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:81",{"_index":1695,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:94",{"_index":1311,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.template.html",{"_index":862,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password/forget",{"_index":338,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":340,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password/upd",{"_index":1282,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["passwordmessag",{"_index":1680,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["path",{"_index":152,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["peoplelist",{"_index":1130,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnam",{"_index":668,"title":{},"body":{"components/CourseIndivComponent.html":{},"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnames:isrevers",{"_index":1131,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnamespip",{"_index":1123,"title":{"pipes/PeopleListNamesPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["per",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["percent",{"_index":2315,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["perform",{"_index":816,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{}}}],["performplex",{"_index":821,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["performplexer(data",{"_index":839,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["permiss",{"_index":1992,"title":{},"body":{"license.html":{}}}],["person",{"_index":1148,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["person.firstnam",{"_index":1150,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["person.lastnam",{"_index":1152,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["personlist",{"_index":1145,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["personnam",{"_index":636,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"pipes/PersonNamePipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["personname:isrevers",{"_index":1158,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["personname:tru",{"_index":637,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["personnamepip",{"_index":1155,"title":{"pipes/PersonNamePipe.html":{}},"body":{"pipes/PersonNamePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phage",{"_index":120,"title":{"interfaces/Phage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["phage'",{"_index":1458,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["phage'},{'nam",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["phage(1|2",{"_index":2211,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["phage+1",{"_index":1097,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["phage.com",{"_index":1633,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.compon",{"_index":1608,"title":{},"body":{"modules/StudentModule.html":{}}}],["phage.component.t",{"_index":1614,"title":{},"body":{"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["phage.component.ts:19",{"_index":1618,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.component.ts:35",{"_index":1619,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.delet",{"_index":1635,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.guess",{"_index":1636,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.interfac",{"_index":889,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{}}}],["phage.mutationlist",{"_index":1634,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.par",{"_index":1190,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phage.strainnum",{"_index":1186,"title":{},"body":{"components/PhageDialogComponent.html":{},"components/StudentPhageComponent.html":{}}}],["phage.strainnum+1).tostr",{"_index":1249,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phage.template.html",{"_index":1616,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage1",{"_index":1255,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage1objectfirst",{"_index":2439,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2",{"_index":1256,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2object",{"_index":2440,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phagebyid",{"_index":2059,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["phagebyid(req",{"_index":2194,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagedelet",{"_index":1168,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagedeletionspip",{"_index":1161,"title":{"pipes/PhageDeletionsPipe.html":{}},"body":{"pipes/PhageDeletionsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagedetailsobjectphag",{"_index":2344,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagedialogcompon",{"_index":119,"title":{"components/PhageDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phagegeno1objectgenotyp",{"_index":2410,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2",{"_index":2405,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2objectgenotyp",{"_index":2411,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phageguess",{"_index":1199,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phageguessespip",{"_index":1192,"title":{"pipes/PhageGuessesPipe.html":{}},"body":{"pipes/PhageGuessesPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageid",{"_index":2192,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagemut",{"_index":1213,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagemutationspip",{"_index":1211,"title":{"pipes/PhageMutationsPipe.html":{}},"body":{"pipes/PhageMutationsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageobjectconfigur",{"_index":2356,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phageobjectphag",{"_index":2350,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagepar",{"_index":1238,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phageparents:numpar",{"_index":1229,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phageparents:phage.numpar",{"_index":1191,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phageparentspip",{"_index":1221,"title":{"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PhageParentsPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagetyp",{"_index":786,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["phagetypestringrefer",{"_index":2347,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phenotyp",{"_index":1266,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["pipe",{"_index":1122,"title":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/SharedModule.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({nam",{"_index":1147,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["pipes/modules/compon",{"_index":1377,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/peopl",{"_index":1390,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/person",{"_index":1388,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/phag",{"_index":1392,"title":{},"body":{"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["pipetransform",{"_index":1146,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["plaqu",{"_index":838,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plate",{"_index":773,"title":{"additional-documentation/genetics/plate-experiment.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["platecapac",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plateinput",{"_index":826,"title":{"interfaces/PlateInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plateresult",{"_index":852,"title":{"interfaces/PlateResults.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["play",{"_index":2386,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["plexer",{"_index":124,"title":{"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plexercapac",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plexerinput",{"_index":840,"title":{"interfaces/PlexerInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plexerroomcompon",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plu",{"_index":2509,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["plus/minu",{"_index":2508,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["pnumberrecombin",{"_index":2454,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["po",{"_index":1025,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["point",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"components/LandingRoomComponent.html":{}}}],["popper.j",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["posguess",{"_index":1074,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["posit",{"_index":737,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["positive/neg",{"_index":2507,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["possibl",{"_index":555,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["possibleinstr",{"_index":534,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["post",{"_index":2090,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1674,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1678,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/pl",{"_index":854,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["post(`${this._baseurl}/plex",{"_index":858,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["potenti",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["present",{"_index":1165,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["preset",{"_index":2375,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["press",{"_index":569,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["prevent",{"_index":562,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["previou",{"_index":2199,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["primari",{"_index":1089,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["privat",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["probabl",{"_index":2329,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["problem",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UserProfileComponent.html":{}}}],["proce",{"_index":2105,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["produc",{"_index":1620,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["profil",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["profile.compon",{"_index":1281,"title":{},"body":{"modules/ProfileModule.html":{},"todo.html":{}}}],["profile.component.t",{"_index":1721,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:24",{"_index":1734,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1735,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1731,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1727,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1729,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:77",{"_index":1730,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":1728,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.rout",{"_index":1278,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.servic",{"_index":1279,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.template.html",{"_index":1723,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/profile.modul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["profile/upd",{"_index":2000,"title":{},"body":{"todo.html":{}}}],["profile/us",{"_index":1280,"title":{},"body":{"modules/ProfileModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"todo.html":{}}}],["profilemodul",{"_index":275,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerout",{"_index":1277,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profileservic",{"_index":1275,"title":{"injectables/ProfileService.html":{}},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["prominantli",{"_index":1698,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["properti",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["protect",{"_index":719,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["provid",{"_index":200,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["pswd",{"_index":861,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pswd'},{'name",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["public",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"injectables/CourseResolver.html":{},"components/PhageDialogComponent.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["public/.../read",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../scenario.globals.t",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.interface.t",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.roles.t",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/app/admin/admin",{"_index":183,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.t",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.ts:23",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:24",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:33",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.guard.service.t",{"_index":150,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["public/app/admin/admin.guard.service.ts:10",{"_index":159,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.guard.service.ts:23",{"_index":164,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.module.t",{"_index":209,"title":{},"body":{"modules/AdminModule.html":{}}}],["public/app/admin/course/cours",{"_index":477,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["public/app/admin/course/course.module.t",{"_index":689,"title":{},"body":{"modules/CourseModule.html":{}}}],["public/app/admin/course/course.resolver.t",{"_index":702,"title":{},"body":{"injectables/CourseResolver.html":{},"coverage.html":{}}}],["public/app/admin/course/course.resolver.ts:13",{"_index":705,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.resolver.ts:28",{"_index":707,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.service.t",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["public/app/admin/not",{"_index":1110,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/stud",{"_index":1455,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/student.module.t",{"_index":1602,"title":{},"body":{"modules/StudentModule.html":{}}}],["public/app/admin/student/student.resolver.t",{"_index":1637,"title":{},"body":{"injectables/StudentResolver.html":{},"coverage.html":{}}}],["public/app/admin/student/student.resolver.ts:13",{"_index":1638,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.resolver.ts:28",{"_index":1639,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.roles.t",{"_index":1836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/admin/student/student.service.t",{"_index":1644,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["public/app/admin/student/student.service.ts:105",{"_index":1662,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:14",{"_index":1651,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:29",{"_index":1665,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:43",{"_index":1659,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:59",{"_index":1668,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:74",{"_index":1653,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:90",{"_index":1657,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/app.component.t",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["public/app/app.component.ts:11",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["public/app/app.module.t",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["public/app/authentication/authentication.module.t",{"_index":323,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["public/app/authentication/authentication.service.t",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["public/app/authentication/authentication.service.ts:110",{"_index":416,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:128",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:14",{"_index":429,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:142",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:15",{"_index":431,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:17",{"_index":426,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:23",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:34",{"_index":404,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:45",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:55",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:65",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:82",{"_index":410,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:98",{"_index":418,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/forget",{"_index":859,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/log",{"_index":994,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["public/app/authentication/reset",{"_index":1305,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.t",{"_index":1398,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.ts:20",{"_index":1410,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:24",{"_index":1408,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:28",{"_index":1401,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:42",{"_index":1404,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:59",{"_index":1402,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signout/signout.component.t",{"_index":1414,"title":{},"body":{"components/SignoutComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signout/signout.component.ts:18",{"_index":1416,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signout/signout.component.ts:31",{"_index":1418,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signout/signout.component.ts:42",{"_index":1417,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signup/signup.component.t",{"_index":1423,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signup/signup.component.ts:114",{"_index":1433,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:26",{"_index":1440,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:31",{"_index":1436,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:40",{"_index":1441,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:44",{"_index":1438,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:48",{"_index":1427,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:63",{"_index":1429,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:74",{"_index":1434,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:92",{"_index":1435,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/help/help.component.t",{"_index":892,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["public/app/help/help.component.ts:9",{"_index":896,"title":{},"body":{"components/HelpComponent.html":{}}}],["public/app/help/help.module.t",{"_index":903,"title":{},"body":{"modules/HelpModule.html":{}}}],["public/app/home/home.component.t",{"_index":908,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["public/app/home/home.component.ts:23",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:30",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:37",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/interfaces/course.interface.t",{"_index":473,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["public/app/interfaces/experiment.interface.t",{"_index":1253,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["public/app/interfaces/fridge.interface.t",{"_index":883,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"coverage.html":{}}}],["public/app/interfaces/phage.interface.t",{"_index":772,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["public/app/interfaces/scenario.interface.t",{"_index":1342,"title":{},"body":{"interfaces/Scenario.html":{},"coverage.html":{}}}],["public/app/interfaces/student.interface.t",{"_index":227,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/interfaces/user.interface.t",{"_index":1715,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.t",{"_index":1098,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.ts:20",{"_index":1109,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:24",{"_index":1104,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:32",{"_index":1106,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:42",{"_index":1105,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/pag",{"_index":1115,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["public/app/pipes/peopl",{"_index":1124,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["public/app/pipes/person",{"_index":1156,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["public/app/pipes/phag",{"_index":1162,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["public/app/profile/profile.module.t",{"_index":1276,"title":{},"body":{"modules/ProfileModule.html":{}}}],["public/app/profile/profile.service.t",{"_index":1284,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["public/app/profile/profile.service.ts:16",{"_index":1290,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:33",{"_index":1292,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:49",{"_index":1297,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/upd",{"_index":1679,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["public/app/profile/us",{"_index":1720,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["public/app/scenario/fridge/fridge.component.t",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/fridge/phag",{"_index":1181,"title":{},"body":{"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.t",{"_index":957,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.ts:20",{"_index":965,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:24",{"_index":964,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:25",{"_index":963,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:26",{"_index":959,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:36",{"_index":961,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:48",{"_index":960,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/location/experiment.service.t",{"_index":815,"title":{},"body":{"injectables/ExperimentService.html":{},"coverage.html":{}}}],["public/app/scenario/location/experiment.service.ts:14",{"_index":823,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:28",{"_index":827,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:47",{"_index":841,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/lab",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/location/land",{"_index":928,"title":{},"body":{"components/LandingRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.component.t",{"_index":972,"title":{},"body":{"components/LocationComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.module.t",{"_index":982,"title":{},"body":{"modules/LocationModule.html":{}}}],["public/app/scenario/location/model",{"_index":1012,"title":{},"body":{"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/plex",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/scenario.component.t",{"_index":1350,"title":{},"body":{"components/ScenarioComponent.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.globals.t",{"_index":1868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/scenario/scenario.module.t",{"_index":1354,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["public/app/scenario/scenario.resolver.t",{"_index":1362,"title":{},"body":{"injectables/ScenarioResolver.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.resolver.ts:14",{"_index":1364,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.resolver.ts:28",{"_index":1365,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.service.t",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["public/app/shared/confirm",{"_index":451,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"coverage.html":{}}}],["public/app/shared/read",{"_index":1872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/shared/shared.module.t",{"_index":1374,"title":{},"body":{"modules/SharedModule.html":{}}}],["pupros",{"_index":2537,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["purpos",{"_index":932,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["push",{"_index":1527,"title":{},"body":{"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["quot;reference&quot",{"_index":1621,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;student&quot",{"_index":1541,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["quot;submission&quot",{"_index":1625,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;unkown&quot",{"_index":1622,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;user&quot",{"_index":1624,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["random",{"_index":1951,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["rang",{"_index":1197,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["rare",{"_index":1719,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["rate",{"_index":1785,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":755,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/NavComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["react",{"_index":1386,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["read",{"_index":2065,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["read(req",{"_index":2222,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["readabl",{"_index":1345,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["readablestringshould",{"_index":2364,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["readerrormessag",{"_index":506,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["readerrormessage(err",{"_index":522,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["readerrormessage(err2",{"_index":604,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["readerrormessage(error",{"_index":605,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["readerrormessage(iderr",{"_index":1707,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["realstop",{"_index":2339,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["reason",{"_index":1347,"title":{},"body":{"interfaces/Scenario.html":{}}}],["recfreq",{"_index":2462,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recfreqnumberfrequ",{"_index":2469,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recomb",{"_index":2478,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recombin",{"_index":1790,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombinationfreq",{"_index":2313,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombine(phagegeno1",{"_index":2404,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["redirect",{"_index":1002,"title":{},"body":{"injectables/LoggedInGuard.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["redirecturl",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refer",{"_index":782,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["referencephag",{"_index":2323,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reflect",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["regul",{"_index":1603,"title":{},"body":{"modules/StudentModule.html":{}}}],["regular",{"_index":213,"title":{},"body":{"modules/AdminModule.html":{}}}],["rel",{"_index":2527,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["relat",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/ScenarioModule.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["relativeto",{"_index":519,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["relev",{"_index":938,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reliv",{"_index":921,"title":{},"body":{"components/HomeComponent.html":{}}}],["rememb",{"_index":579,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["remov",{"_index":615,"title":{},"body":{"components/CourseEditComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["render",{"_index":2175,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["repres",{"_index":848,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/StudentResolver.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["represent",{"_index":2449,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["req",{"_index":2231,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["req.curus",{"_index":2274,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["reqobjectexpress",{"_index":2074,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["request",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["requesterror",{"_index":2161,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["requestif",{"_index":2251,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["requestnumb",{"_index":2209,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["requeston",{"_index":2145,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requir",{"_index":434,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"license.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["requireslogin",{"_index":2069,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requireslogin(req",{"_index":2265,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["res.accessgranted[scenid",{"_index":766,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["res.email",{"_index":1705,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["res.firstnam",{"_index":1738,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.id",{"_index":1736,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.lastnam",{"_index":1739,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["reset",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["resetpassword",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(credenti",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword(req",{"_index":2248,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(this.credenti",{"_index":1335,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcompon",{"_index":125,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpasswordemail",{"_index":2068,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordemail(req",{"_index":2242,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordexpir",{"_index":2541,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resetpasswordtoken",{"_index":2540,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resobjectexpress",{"_index":2075,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resolv",{"_index":703,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["resolve(rout",{"_index":706,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["respons",{"_index":870,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["rest",{"_index":1782,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["result.coursenum",{"_index":518,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["result.messag",{"_index":882,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ret",{"_index":1326,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["retreiv",{"_index":2227,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["return",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["returns{observ",{"_index":1676,"title":{},"body":{"injectables/StudentService.html":{}}}],["revers",{"_index":1127,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["revok",{"_index":1663,"title":{},"body":{"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["role",{"_index":154,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["role.label",{"_index":1584,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass",{"_index":1521,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;admin&#39",{"_index":1549,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;student&#39",{"_index":1542,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass('admin",{"_index":1575,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(src",{"_index":1538,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledis",{"_index":1522,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledisabled(src",{"_index":1551,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolesenum",{"_index":2542,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["rolesenum]{@link",{"_index":2557,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["room",{"_index":793,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["room'},{'nam",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["room.compon",{"_index":989,"title":{},"body":{"modules/LocationModule.html":{}}}],["room.component.t",{"_index":930,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:107",{"_index":1040,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:123",{"_index":1026,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:140",{"_index":1045,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:150",{"_index":1042,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:23",{"_index":948,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:26",{"_index":1054,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:27",{"_index":942,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:30",{"_index":1056,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:34",{"_index":1053,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:38",{"_index":1058,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:42",{"_index":1057,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:46",{"_index":1059,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:47",{"_index":946,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:50",{"_index":1052,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:54",{"_index":1047,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:59",{"_index":1023,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:63",{"_index":945,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:82",{"_index":1041,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.style.css",{"_index":1013,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.template.html",{"_index":941,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["room/lab",{"_index":990,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["room/land",{"_index":929,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["room/model",{"_index":992,"title":{},"body":{"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room/plex",{"_index":991,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["root",{"_index":1367,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["rout",{"_index":156,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"changelog.html":{}}}],["route.params['coursenum",{"_index":712,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["route.params['scenid",{"_index":1370,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["route.params['studentid",{"_index":1642,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["router",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{}}}],["routermodul",{"_index":215,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/StudentModule.html":{}}}],["routermodule.forchild(adminrout",{"_index":225,"title":{},"body":{"modules/AdminModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":341,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["routermodule.forchild(courserout",{"_index":701,"title":{},"body":{"modules/CourseModule.html":{}}}],["routermodule.forchild(helprout",{"_index":907,"title":{},"body":{"modules/HelpModule.html":{}}}],["routermodule.forchild(locationrout",{"_index":993,"title":{},"body":{"modules/LocationModule.html":{}}}],["routermodule.forchild(profilerout",{"_index":1283,"title":{},"body":{"modules/ProfileModule.html":{}}}],["routermodule.forchild(scenariorout",{"_index":1361,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["routermodule.forchild(studentrout",{"_index":1613,"title":{},"body":{"modules/StudentModule.html":{}}}],["routermodule.forroot(approut",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesanpshot",{"_index":1368,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["routerstatesnapshot",{"_index":163,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["row",{"_index":842,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["rowphag",{"_index":855,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["rowphagearraylist",{"_index":2487,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["run",{"_index":1965,"title":{},"body":{"index.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["rxj",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1567,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["s.cours",{"_index":1568,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["s.course.coursenum",{"_index":1569,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["same",{"_index":807,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["save",{"_index":435,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedata",{"_index":1021,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["savedelet",{"_index":2054,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(req",{"_index":2176,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(this.guess",{"_index":1081,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["sceanrio",{"_index":2218,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scen",{"_index":665,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scen'},{'nam",{"_index":93,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scen.label",{"_index":669,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["scen1",{"_index":2554,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen2",{"_index":2555,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen3",{"_index":2556,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scenario",{"_index":108,"title":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["scenario'},{'nam",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scenario.compon",{"_index":697,"title":{},"body":{"modules/CourseModule.html":{},"modules/ScenarioModule.html":{}}}],["scenario.component.t",{"_index":713,"title":{},"body":{"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario.component.ts:110",{"_index":726,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:122",{"_index":735,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:144",{"_index":731,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:151",{"_index":738,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:32",{"_index":747,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:36",{"_index":743,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:40",{"_index":746,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:44",{"_index":744,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:48",{"_index":745,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:52",{"_index":742,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:56",{"_index":724,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:75",{"_index":740,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.glob",{"_index":1061,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["scenario.label",{"_index":769,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenario.purpos",{"_index":954,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.relev",{"_index":955,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.resolv",{"_index":2001,"title":{},"body":{"todo.html":{}}}],["scenario.rout",{"_index":1359,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenario.scencod",{"_index":768,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.servic",{"_index":950,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["scenario.startingpoint",{"_index":956,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.style.css",{"_index":717,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.template.html",{"_index":718,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ScenarioComponent.html":{}}}],["scenario/cours",{"_index":696,"title":{},"body":{"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario/experi",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scenario/location/experiment.servic",{"_index":2002,"title":{},"body":{"todo.html":{}}}],["scenario/scenario.glob",{"_index":1205,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenario/scenario.modul",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.resolv",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.servic",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenariobycod",{"_index":2066,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariobycode(req",{"_index":2226,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scenariocompon",{"_index":127,"title":{"components/ScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scenariodata",{"_index":857,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["scenariodetail",{"_index":885,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["scenarioexternal:scneariocurr",{"_index":2184,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["scenarioglob",{"_index":1060,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenarioglobals.deletionguesslength",{"_index":1063,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["scenarioglobals.genelength",{"_index":1210,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenarioid",{"_index":1017,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariomodul",{"_index":276,"title":{"modules/ScenarioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScenarioModule.html":{},"modules.html":{},"overview.html":{}}}],["scenarioobjectparamet",{"_index":2309,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scenarioorigin",{"_index":2505,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["scenarioresolv",{"_index":279,"title":{"injectables/ScenarioResolver.html":{}},"body":{"modules/AppModule.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"overview.html":{}}}],["scenariorout",{"_index":1358,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenarios/fridg",{"_index":1399,"title":{},"body":{"components/SigninComponent.html":{}}}],["scenarioscenariocurr",{"_index":2160,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["scenarioscenarioscenario",{"_index":2149,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenarioservic",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scencod",{"_index":750,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["scendata",{"_index":2343,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectcomput",{"_index":2351,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectconfigur",{"_index":2357,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectcurr",{"_index":2354,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectscenario",{"_index":2348,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["scenid",{"_index":759,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{}}}],["schema",{"_index":2497,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["second",{"_index":2250,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["secondari",{"_index":1037,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["secondary&#39",{"_index":1547,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["section",{"_index":1031,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["see",{"_index":971,"title":{},"body":{"components/ListComponent.html":{},"components/StudentFridgeComponent.html":{},"license.html":{}}}],["select",{"_index":192,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseEditComponent.html":{},"components/LocationComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["selectedadd",{"_index":535,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["selector",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["semest",{"_index":2133,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["send",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["sendforget",{"_index":864,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendreset",{"_index":1309,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sensit",{"_index":454,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["sent",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/ForgetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["separ",{"_index":806,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{}}}],["sequenc",{"_index":1932,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["server",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["server/databas",{"_index":1295,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["server/database/authent",{"_index":415,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["servic",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["services/stream",{"_index":1693,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["session",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":405,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"modules/StudentModule.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["setinstructor",{"_index":2049,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["setinstructor(req",{"_index":2140,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["setphag",{"_index":1464,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setphage(src",{"_index":1475,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setrol",{"_index":2040,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["setrole(req",{"_index":2089,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["setstudentrol",{"_index":1650,"title":{},"body":{"injectables/StudentService.html":{}}}],["setstudentrole(adminid",{"_index":1667,"title":{},"body":{"injectables/StudentService.html":{}}}],["setus",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setuser(us",{"_index":403,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sever",{"_index":647,"title":{},"body":{"components/CourseIndivComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/SignupComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["share",{"_index":1375,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/confirm",{"_index":580,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["shared/read",{"_index":507,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/shared.modul",{"_index":216,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["sharedmodul",{"_index":205,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":1999,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["shelv",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":798,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["shifttypenumbershould",{"_index":2360,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["short",{"_index":1348,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["show",{"_index":931,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["shuffl",{"_index":1787,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["shuffleplaquelist",{"_index":2300,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["sign",{"_index":411,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SigninComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin'},{'nam",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signin(credenti",{"_index":409,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signin(req",{"_index":2253,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signin(this.credenti",{"_index":1411,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.template.html",{"_index":1400,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin/signin.compon",{"_index":335,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signincompon",{"_index":129,"title":{"components/SigninComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signout",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignoutComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signout'},{'nam",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signout(req",{"_index":2259,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signout/signout.compon",{"_index":337,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signoutcompon",{"_index":131,"title":{"components/SignoutComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signup",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signup'},{'nam",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signup(req",{"_index":2256,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signup(this.us",{"_index":1453,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup(us",{"_index":417,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signup.template.html",{"_index":1424,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":336,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signupcompon",{"_index":133,"title":{"components/SignupComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpl",{"_index":727,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["singl",{"_index":1512,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["site",{"_index":1100,"title":{},"body":{"components/NavComponent.html":{}}}],["size",{"_index":618,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["skyhook",{"_index":1384,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["skyhookdndmodul",{"_index":1383,"title":{},"body":{"modules/SharedModule.html":{}}}],["skyhookdndmodule.forroot",{"_index":1397,"title":{},"body":{"modules/SharedModule.html":{}}}],["sm",{"_index":619,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["small",{"_index":836,"title":{},"body":{"injectables/ExperimentService.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["small&#39",{"_index":1545,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["small/larg",{"_index":850,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{}}}],["smaller",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["smallplaqu",{"_index":1268,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["snapshot",{"_index":1369,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["softwar",{"_index":1983,"title":{},"body":{"license.html":{}}}],["someth",{"_index":453,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["soon",{"_index":898,"title":{},"body":{"components/HelpComponent.html":{}}}],["sort",{"_index":243,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"miscellaneous/variables.html":{}}}],["sorted.map((phage)=>{return",{"_index":1248,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["sortstud",{"_index":255,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/Student.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["special",{"_index":831,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialobjectoth",{"_index":2489,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialsobjectoth",{"_index":2443,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["specif",{"_index":887,"title":{},"body":{"interfaces/Fridge.html":{},"modules/ScenarioModule.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"license.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["specifc",{"_index":2224,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["specifi",{"_index":1314,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["spinner",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["sposnumberstart",{"_index":2430,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["spot",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["spots/length",{"_index":2376,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["src",{"_index":809,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{}}}],["ssl",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["ssubscript",{"_index":958,"title":{},"body":{"components/ListComponent.html":{}}}],["start",{"_index":799,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentPhage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["start/stop",{"_index":804,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["startingpoint",{"_index":1343,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stat",{"_index":758,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["state",{"_index":162,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["state.url",{"_index":177,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["statement",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":242,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["statusdescript",{"_index":2078,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["step",{"_index":1051,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["stepsiz",{"_index":1018,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["stock",{"_index":2159,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridg",{"_index":2052,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridge(req",{"_index":2157,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stop",{"_index":800,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stoplist",{"_index":2390,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["stoplistarrayloc",{"_index":2392,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["store",{"_index":407,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/models/user-model.html":{}}}],["strain",{"_index":818,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Scenario.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["strain'",{"_index":1166,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["strain.guess",{"_index":1496,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strain.submit",{"_index":1506,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strainlist",{"_index":1461,"title":{},"body":{"components/StudentFridgeComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainlistarraylist",{"_index":2495,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainnum",{"_index":777,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["strainnumnumberstrain",{"_index":2346,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["strainphagephag",{"_index":2191,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stream",{"_index":1107,"title":{},"body":{"components/NavComponent.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["stringifi",{"_index":2178,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["student",{"_index":18,"title":{"interfaces/Student.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["student'",{"_index":732,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{}}}],["student.course.coursenum",{"_index":1583,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.email",{"_index":1582,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["student.interfac",{"_index":476,"title":{},"body":{"interfaces/Course.html":{}}}],["student.resolv",{"_index":1609,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.rol",{"_index":1562,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.rout",{"_index":1606,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.servic",{"_index":1486,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["student/student.servic",{"_index":224,"title":{},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{}}}],["student/us",{"_index":1654,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentfridg",{"_index":890,"title":{"interfaces/StudentFridge.html":{}},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["studentfridgecompon",{"_index":135,"title":{"components/StudentFridgeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentid",{"_index":733,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentindex",{"_index":736,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["studentindivcompon",{"_index":136,"title":{"components/StudentIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentlistcompon",{"_index":137,"title":{"components/StudentListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentmodul",{"_index":1596,"title":{"modules/StudentModule.html":{}},"body":{"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["studentnum",{"_index":1641,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["studentphag",{"_index":810,"title":{"interfaces/StudentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["studentphagecompon",{"_index":138,"title":{"components/StudentPhageComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentresolv",{"_index":1601,"title":{"injectables/StudentResolver.html":{}},"body":{"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"coverage.html":{},"overview.html":{}}}],["studentrolesarray",{"_index":1558,"title":{},"body":{"components/StudentIndivComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentrout",{"_index":1605,"title":{},"body":{"modules/StudentModule.html":{}}}],["students.sort(sortstud",{"_index":661,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["students/us",{"_index":1666,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservic",{"_index":206,"title":{"injectables/StudentService.html":{}},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["studentuserstud",{"_index":2173,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentuserth",{"_index":2086,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["studentuserus",{"_index":2143,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["styleurl",{"_index":481,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{}}}],["subject",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["submiss",{"_index":1406,"title":{},"body":{"components/SigninComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{}}}],["submit",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["subscrib",{"_index":516,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{}}}],["subscribe((cours",{"_index":680,"title":{},"body":{"components/CourseListComponent.html":{}}}],["subscribe((dat",{"_index":1084,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["subscribe((fridg",{"_index":1489,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["subscribe((info",{"_index":597,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((instr",{"_index":600,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["subscribe((r",{"_index":628,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe((result",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe((scen",{"_index":663,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((scenario",{"_index":968,"title":{},"body":{"components/ListComponent.html":{}}}],["subscribe((stat",{"_index":757,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscribe((stud",{"_index":659,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["subscribe((upd",{"_index":611,"title":{},"body":{"components/CourseEditComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe(param",{"_index":749,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscript",{"_index":485,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["successfulli",{"_index":414,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["successlist",{"_index":2135,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["successmessag",{"_index":863,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":584,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/StudentService.html":{}}}],["sumit",{"_index":1623,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["support",{"_index":1802,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sure",{"_index":464,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["svg",{"_index":1993,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["synchron",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["system",{"_index":1587,"title":{},"body":{"components/StudentListComponent.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["systemj",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":1628,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["tab",{"_index":974,"title":{},"body":{"components/LocationComponent.html":{}}}],["tabl",{"_index":1765,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1003,"title":{},"body":{"injectables/LoggedInGuard.html":{},"miscellaneous/variables.html":{}}}],["taken",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["takeuntil(this.isdestroy",{"_index":596,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["task",{"_index":690,"title":{},"body":{"modules/CourseModule.html":{}}}],["teach",{"_index":1588,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["teacher",{"_index":2111,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["tell",{"_index":548,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":413,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["text",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/models/course-model.html":{}}}],["textual",{"_index":1164,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["there'",{"_index":1696,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["thing",{"_index":1604,"title":{},"body":{"modules/StudentModule.html":{}}}],["think",{"_index":1030,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._admin",{"_index":591,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._admin.id",{"_index":1572,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._admin.rol",{"_index":1573,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._authenticationservic",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authenticationservice.canaccessadmin",{"_index":178,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._authenticationservice.getus",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{}}}],["this._authenticationservice.isloggedin",{"_index":1008,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._authenticationservice.redirecturl",{"_index":180,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/SigninComponent.html":{}}}],["this._authenticationservice.setuser(result",{"_index":1412,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authservice.getus",{"_index":509,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this._authservice.setuser(nul",{"_index":1422,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._authservice.setuser(upd",{"_index":1744,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._authservice.signout",{"_index":1421,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._calldelet",{"_index":1580,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._calldeletecours",{"_index":625,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._calldeletecoursestud",{"_index":630,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._checkpassword",{"_index":1333,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this._courseservic",{"_index":513,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._courseservice.deletecourse(this._admin.id",{"_index":627,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.deletestudents(this._admin.id",{"_index":631,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourse(admin.id",{"_index":657,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{}}}],["this._courseservice.getcourse(this._admin.id",{"_index":595,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourselist",{"_index":1447,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._courseservice.getpossibleinstructors(this._admin.id",{"_index":599,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getscenariostatus(this.admin.id",{"_index":756,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._courseservice.getstudents(admin.id",{"_index":658,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["this._courseservice.listcourses(admin.id",{"_index":679,"title":{},"body":{"components/CourseListComponent.html":{}}}],["this._http",{"_index":853,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["this._modalservice.open(confirmdeletedialogcompon",{"_index":617,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._profileservice.editprofile(this.userid",{"_index":1740,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._profileservice.updatepassword(this.user.id",{"_index":1710,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._reordercourses(r",{"_index":1449,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._rout",{"_index":520,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._route.param",{"_index":748,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._route.params.subscribe(param",{"_index":593,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._route.parent.snapshot.parammap.get('scenid",{"_index":951,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["this._route.snapshot.parammap.get('token",{"_index":1330,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._router.navig",{"_index":517,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["this._router.navigate(['/admin/cours",{"_index":629,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._router.navigate(['/admin/not",{"_index":181,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._router.navigate(['/admin/stud",{"_index":767,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._router.navigate(['/profil",{"_index":1711,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._router.navigate(['authentication/signin",{"_index":1010,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._router.navigate([redirect",{"_index":1413,"title":{},"body":{"components/SigninComponent.html":{}}}],["this._scenarioservic",{"_index":952,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["this._scenarioservice.getscenario(scencod",{"_index":754,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["this._scenarioservice.listscenario",{"_index":662,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._scenarioservice.setscenario(nul",{"_index":1086,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._studentservice.deletestudent(this._admin.id",{"_index":1581,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.getfridge(admin.id",{"_index":1488,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this._studentservice.getstudent(admin.id",{"_index":1643,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["this._studentservice.getstudent(this._admin.id",{"_index":1563,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this._admin.id",{"_index":1570,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this.admin.id",{"_index":762,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._studentservice.liststudents(admin.id",{"_index":1595,"title":{},"body":{"components/StudentListComponent.html":{}}}],["this._studentservice.setstudentrole(this._admin.id",{"_index":1576,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._user.asobserv",{"_index":430,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.getvalu",{"_index":439,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.next(us",{"_index":438,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.admin",{"_index":508,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["this.adminus",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.canactivate(rout",{"_index":1011,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this.cours",{"_index":681,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["this.coursedetail",{"_index":515,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["this.courseinfo",{"_index":598,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["this.courseinfo.coursenum",{"_index":607,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.coursenum",{"_index":752,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.cpassword",{"_index":1452,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.credenti",{"_index":1328,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.confirmpassword",{"_index":1337,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.newpassword",{"_index":1713,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.credentials.password",{"_index":1336,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.token",{"_index":1329,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.credentials['usernam",{"_index":1704,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.email",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errormessag",{"_index":511,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fridg",{"_index":1480,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strain",{"_index":1494,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.filter((strain",{"_index":1504,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.sort((a,b)=>{return",{"_index":1497,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.genear",{"_index":1064,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.getus",{"_index":441,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuser().rol",{"_index":443,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.guess",{"_index":1068,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.guesses[strain][po",{"_index":1075,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.hasfridg",{"_index":1490,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.http.get(this._baseurl",{"_index":449,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(this._baseurl",{"_index":447,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["this.isdestroy",{"_index":586,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.next(tru",{"_index":633,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.unsubscrib",{"_index":634,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdis",{"_index":1332,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.key",{"_index":1070,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.newrol",{"_index":1564,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.paramobserv",{"_index":592,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.paramobserver.unsubscrib",{"_index":632,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.passwordmessag",{"_index":1708,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.phage.phagetyp",{"_index":1629,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.phagetype.touppercas",{"_index":1632,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.submit",{"_index":1631,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.possibleinstr",{"_index":601,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.possibleinstr.filter((elm",{"_index":612,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.scenario",{"_index":664,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.scenario.scencod",{"_index":760,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.scenarioid",{"_index":1083,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.selectedadd",{"_index":610,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.setphage('al",{"_index":1500,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.ssubscript",{"_index":967,"title":{},"body":{"components/ListComponent.html":{}}}],["this.ssubscription.unsubscrib",{"_index":970,"title":{},"body":{"components/ListComponent.html":{}}}],["this.steps",{"_index":1062,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.strainlist",{"_index":1503,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.stud",{"_index":660,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["this.student.accessgranted[scencod",{"_index":1566,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.rol",{"_index":1565,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.userid",{"_index":1571,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.students[studentindex].statu",{"_index":765,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.students[studentindex].userid",{"_index":761,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.subscript",{"_index":512,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.subscription.unsubscrib",{"_index":524,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.successmessag",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.us",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.userid",{"_index":1082,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.userinfo",{"_index":1737,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.viewstrain",{"_index":1501,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["through",{"_index":1772,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":2378,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["ti",{"_index":247,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":471,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["tmp",{"_index":1448,"title":{},"body":{"components/SignupComponent.html":{}}}],["todo",{"_index":614,"title":{"todo.html":{}},"body":{"components/CourseEditComponent.html":{},"components/SigninComponent.html":{}}}],["togeth",{"_index":2418,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["toggl",{"_index":1046,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["toggleblock",{"_index":1022,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["toggleblock(strain",{"_index":1044,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["token",{"_index":399,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["told",{"_index":2536,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["took",{"_index":401,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["top",{"_index":1099,"title":{},"body":{"components/NavComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{}}}],["total",{"_index":2363,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["touch",{"_index":1387,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["touchbackend",{"_index":1385,"title":{},"body":{"modules/SharedModule.html":{}}}],["toward",{"_index":2482,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["track",{"_index":1699,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"changelog.html":{}}}],["transfer",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["transform",{"_index":1142,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["transform(delet",{"_index":1175,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["transform(guess",{"_index":1203,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["transform(mut",{"_index":1218,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["transform(par",{"_index":1239,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["transform(person",{"_index":1159,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["transform(personlist",{"_index":1143,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["transport",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["tri",{"_index":433,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NotAuthComponent.html":{},"components/SigninComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["trim",{"_index":2277,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["tripl",{"_index":2457,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["true",{"_index":172,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["true/fals",{"_index":1550,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["tslib",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["tube/pl",{"_index":775,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["two",{"_index":1232,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["ui",{"_index":1226,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["unabl",{"_index":2162,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["unauthorizederror",{"_index":2241,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unauthorizedif",{"_index":2266,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["undefin",{"_index":764,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageParentsPipe.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["under",{"_index":1793,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["uneven",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniqu",{"_index":2498,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["unit",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":783,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["unkown",{"_index":1626,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["unless",{"_index":1979,"title":{},"body":{"license.html":{}}}],["unprocess",{"_index":2246,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unreleas",{"_index":1746,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":408,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/SignoutComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["unsubscrib",{"_index":499,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["unsuccess",{"_index":1407,"title":{},"body":{"components/SigninComponent.html":{}}}],["until",{"_index":1733,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["up",{"_index":927,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updat",{"_index":542,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["updated.email",{"_index":1743,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.firstnam",{"_index":1741,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.lastnam",{"_index":1742,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatedst",{"_index":1661,"title":{},"body":{"injectables/StudentService.html":{}}}],["updatepassword",{"_index":1289,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(req",{"_index":2237,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(userid",{"_index":1296,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatepasswordcompon",{"_index":140,"title":{"components/UpdatePasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updatephag",{"_index":2057,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updatephage(req",{"_index":2189,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["updateprofil",{"_index":1725,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["upon",{"_index":1405,"title":{},"body":{"components/SigninComponent.html":{}}}],["url",{"_index":167,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["us",{"_index":238,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["usag",{"_index":1129,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["useddeletespot",{"_index":2380,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["useddeletespotsarraydelet",{"_index":2385,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["useddeletespotsarraylist",{"_index":2377,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["usedshiftspot",{"_index":2503,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["user",{"_index":54,"title":{"interfaces/User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user'",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user')if",{"_index":2271,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["user.interfac",{"_index":233,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{}}}],["user.password",{"_index":1439,"title":{},"body":{"components/SignupComponent.html":{}}}],["user/scenario",{"_index":884,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["user/stud",{"_index":229,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["userbyid",{"_index":2070,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["userbyid(req",{"_index":2267,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["userid",{"_index":236,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["userinfo",{"_index":1724,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["usernam",{"_index":412,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["userprofilecompon",{"_index":142,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users'",{"_index":2180,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["useruserus",{"_index":2279,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["usual",{"_index":934,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["v1.0.10",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["v1.0.2",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":1804,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":1797,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":1795,"title":{},"body":{"changelog.html":{}}}],["v1.0.6",{"_index":1791,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":1753,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["valu",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["var",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["vari",{"_index":2393,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["variabl",{"_index":406,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":1684,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["version",{"_index":1972,"title":{},"body":{"license.html":{}}}],["via",{"_index":1357,"title":{},"body":{"modules/ScenarioModule.html":{},"additional-documentation/models/scenario-model.html":{}}}],["view",{"_index":186,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/LocationComponent.html":{},"components/NotAuthComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{}}}],["view/templ",{"_index":1415,"title":{},"body":{"components/SignoutComponent.html":{}}}],["viewstrain",{"_index":1462,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["virtual",{"_index":819,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["visibl",{"_index":187,"title":{},"body":{"components/AdminHomeComponent.html":{},"interfaces/Scenario.html":{},"components/StudentFridgeComponent.html":{}}}],["visit",{"_index":1001,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["visual",{"_index":1118,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["vs",{"_index":2331,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["w",{"_index":1094,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["wait",{"_index":869,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["want",{"_index":465,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["warranti",{"_index":1987,"title":{},"body":{"license.html":{}}}],["way",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["webpag",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["websit",{"_index":909,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["welcom",{"_index":917,"title":{},"body":{"components/HomeComponent.html":{}}}],["went",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["weren't",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["wheater",{"_index":1029,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["whocal",{"_index":2438,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringloc",{"_index":2491,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringlocation/room",{"_index":2445,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["whole",{"_index":2401,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["whosaysstringwho",{"_index":2397,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["width",{"_index":1048,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["window",{"_index":463,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["windowclass",{"_index":620,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["within",{"_index":714,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["without",{"_index":1986,"title":{},"body":{"license.html":{}}}],["word",{"_index":925,"title":{},"body":{"components/HomeComponent.html":{}}}],["work",{"_index":1702,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["write",{"_index":1982,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1302,"title":{},"body":{"injectables/ProfileService.html":{}}}],["wt",{"_index":1265,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["wtgene",{"_index":2335,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["x",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["x[0].text",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["y",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["z",{"_index":1209,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["zone.j",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":207,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Entrance component for admin features\nMainly, it is a card that allows navigation between course-related\ninfo and student-related info\nContent of the card is determined by router\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin\n            \n\n\n\n\n            \n                templateUrl\n                ./admin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adminUser\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the currently logged in user's information\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            adminUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adminUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Entrance component for admin features\n * Mainly, it is a card that allows navigation between course-related\n * info and student-related info\n * Content of the card is determined by router\n */\n@Component({\n  selector: 'admin',\n  templateUrl: './admin.template.html'\n})\n\nexport class AdminComponent implements OnInit {\n  /**\n   * Logged in user\n   */\n  private adminUser: User;\n  private errorMessage: string = '';\n\n  constructor(\n    private _authenticationService: AuthenticationService\n  ){}\n\n  /**\n   * When initializing the component, get the currently logged in user's information\n   */\n  ngOnInit(){\n    this.adminUser = this._authenticationService.getUser();\n  }\n\n}\n\n    \n\n    \n        \n\n  Administrator Page\n  Instructor Page\n  \n    \n      \n        \n          \n             \n            Courses\n            \n            \n            \n              \n            Students\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Administrator Page  Instructor Page                                                       Courses                                                              Students                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/admin.guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Guard the admin paths so only users with admin or instr\nrole can access the route\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.guard.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.guard.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            Determine if user can activate the route based on their role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is admin or instr\nfalse if user is only a student\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n/**\n * Guard the admin paths so only users with `admin` or `instr`\n * role can access the route\n */\n@Injectable()\nexport class AdminGuard implements CanActivateChild {\n\n  constructor(private _authenticationService: AuthenticationService, private _router: Router) {}\n\n  /**\n   * Determine if user can activate the route based on their role\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {boolean} - `true` if user is `admin` or `instr`\n   * - `false` if user is only a `student`\n   */\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    let role: boolean = this._authenticationService.canAccessAdmin();\n    if(role)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['/admin/not-auth']);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminHomeComponent.html":{"url":"components/AdminHomeComponent.html","title":"component - AdminHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin-home/admin-home.component.ts\n\n\n    \n        Description\n    \n    \n        A view component that is visible when going to the main admin page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin-home\n            \n\n\n\n\n            \n                templateUrl\n                ./admin-home.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A view component that is visible when going to the main admin page\n */\n@Component({\n  selector: 'admin-home',\n  templateUrl: './admin-home.template.html'\n})\n\nexport class AdminHomeComponent{}\n\n    \n\n    \n        \n  Select Courses or Students above.\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Select Courses or Students above.'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/admin.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for admin functions having to deal with students and courses that should not be accessed by a regular user\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminComponent\n                            \n                            \n                                AdminHomeComponent\n                            \n                            \n                                NotAuthComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AdminGuard\n                            \n                            \n                                     StudentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AdminRoutes } from './admin.routes';\nimport { AdminComponent } from './admin.component';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { NotAuthComponent } from './not-auth/not-auth.component';\n\nimport { AdminGuard } from './admin.guard.service';\n\nimport { StudentService } from './student/student.service';\n\n/**\n * Module for admin functions having to deal with students and courses that should not be accessed by a regular user\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(AdminRoutes)\n  ],\n  declarations: [\n    AdminComponent,\n    AdminHomeComponent,\n    NotAuthComponent\n  ],\n  providers: [\n    AdminGuard,\n    StudentService\n  ]\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminStudent.html":{"url":"interfaces/AdminStudent.html","title":"interface - AdminStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AdminStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information needed for admin pages about a user/student\n\n            \n\n            \n                Extends\n            \n            \n                    Student\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:     Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component;\nLinks the nav bar to the content needed based on the url\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-app\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/app.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The main application component;\n * Links the nav bar to the content needed based on the url\n */\n@Component({\n    selector: 'cricket-app',\n    template: ''\n})\nexport class AppComponent {\n    constructor() { }\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The main bootstrapped module\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                NavComponent\n                            \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthenticationService\n                            \n                            \n                                     CourseService\n                            \n                            \n                                     LoggedInGuard\n                            \n                            \n                                     ScenarioResolver\n                            \n                            \n                                     ScenarioService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AdminModule\n                            \n                            \n                                    AuthenticationModule\n                            \n                            \n                                    HelpModule\n                            \n                            \n                                    ProfileModule\n                            \n                            \n                                    ScenarioModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { McBreadcrumbsConfig } from 'ngx-breadcrumbs';\n\nimport { AppRoutes } from './app.routes';\n\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { LoggedInGuard } from './authentication/logged-in.guard.service';\nimport { ScenarioService } from './scenario/scenario.service';\nimport { CourseService } from './admin/course/course.service';\nimport { ScenarioResolver } from './scenario/scenario.resolver';\n\nimport { SharedModule } from './shared/shared.module';\nimport { AdminModule } from './admin/admin.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { HelpModule } from './help/help.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { ScenarioModule } from './scenario/scenario.module';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { HomeComponent } from './home/home.component';\n\n/**\n * The main bootstrapped module\n */\n@NgModule({\n    imports: [\n        BrowserModule,\n      SharedModule,\n        HttpClientModule,\n      HelpModule,\n      AdminModule,\n      ProfileModule,\n        AuthenticationModule,\n      ScenarioModule,\n      RouterModule.forRoot(AppRoutes)\n    ],\n    declarations: [\n        AppComponent,\n        NavComponent,\n      HomeComponent,\n      PageNotFoundComponent\n    ],\n    providers: [\n      AuthenticationService,\n      LoggedInGuard,\n      ScenarioService,\n      CourseService,\n      ScenarioResolver\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\nconstructor(breadcrumbsConfig: McBreadcrumbsConfig) {\n\n    breadcrumbsConfig.postProcess = (x) => {\n\n      // Ensure that the first breadcrumb always points to home\n\n      let y = x;\n\n      if(x.length && x[0].text !== 'Home') {\n        y = [\n          {\n            text: 'Home',\n            path: ''\n          }\n        ].concat(x);\n      }\n\n      return y;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/authentication/authentication.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module which deals with anything related to authenticating users,\ni.e. logging in/out users and resetting forgotten passwords\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ForgetPasswordComponent\n                            \n                            \n                                ResetPasswordComponent\n                            \n                            \n                                SigninComponent\n                            \n                            \n                                SignoutComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticationRoutes } from './authentication.routes';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SignoutComponent } from './signout/signout.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n/**\n * Module which deals with anything related to authenticating users,\n * i.e. logging in/out users and resetting forgotten passwords\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(AuthenticationRoutes)\n    ],\n    declarations: [\n        SigninComponent,\n        SignupComponent,\n      SignoutComponent,\n      ForgetPasswordComponent,\n      ResetPasswordComponent\n    ]\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that deals with validating and logging in/out users and\nresetting forgotten passwords\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                            \n                                    Private\n                                _user\n                            \n                            \n                                getUser$\n                            \n                            \n                                    Public\n                                redirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAccessAdmin\n                            \n                            \n                                forgetPassword\n                            \n                            \n                                getUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setUser\n                            \n                            \n                                signin\n                            \n                            \n                                signout\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/authentication.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAccessAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAccessAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Checks if the current user can access the admin pages\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is instr or admin\nfalse if user is only a student\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nforgetPassword(body: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:128\n                            \n                        \n\n\n                \n                    \n                            Submit email address of potential user to allow that user\nto reset their password if the user exists\nThe backend then sends a password reset email to the\nemail address\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrequest body that includes email of user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nSuccess message if password reset email sent\nerror message Error with server email service if problem with email transporter\nerror message No account with that email. if email address doesn't correspond to an existing user\nerror 422 for other server errors\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Get the current user information not as an observable\nso it is synchronous and keeps the app components' ngOnInit\nfunctions cleaner\n\n\n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    the current user or null if no user logged in\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Checks if a user is logged in\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:142\n                            \n                        \n\n\n                \n                    \n                            Attempts to reset a user's password using the credentials\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninfo needed to reset password: password,confirmPassword, andtoken`\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nIf successful, sends success message Passwords has been reset.\nerror message Invalid token if token doesn't match a user\nerror message Token has expired for valid tokens but user took too long to attempt to reset\nerror message for all other errors\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Sets the services user variable which is stored after user logs in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ncurrent user who logged in\nor null to unset the user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Attempts to sign a user in using the provided credentials\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nusername (as email) and password to be tested for logging in\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe successfully logged in user\nor error message for server/database/authentication error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signout\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            Signs out the user\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    returns true if successfully signed out\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:98\n                            \n                        \n\n\n                \n                    \n                            Attempts to create a new user using the provided user details\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuser details including firstName, lastName, username (email), course, and password\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe new logged-in user when successfully create new user\nor error 400 if errror logging in\nor error 500 if error creating user\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/auth/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._user.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:23\n                            \n                        \n\n                \n                    \n                        When a non-logged in user tries to access a page which requires logging in,\nsave that page's url and direct user there after they log in\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable ,  BehaviorSubject } from 'rxjs';\n\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Service that deals with validating and logging in/out users and\n * resetting forgotten passwords\n */\n@Injectable()\nexport class AuthenticationService {\n    private _user: BehaviorSubject = new BehaviorSubject(null);\n    getUser$ = this._user.asObservable();\n\n    private _baseUrl = '/api/auth/'\n\n  /**\n   * When a non-logged in user tries to access a page which requires logging in,\n   * save that page's url and direct user there after they log in\n   */\n    public redirectUrl: string = '/';\n\n    constructor(private http: HttpClient) {\n    }\n\n  /**\n   * Sets the services `user` variable which is stored after user logs in\n   *\n   * @param {User} user - current user who logged in\n   * - or `null` to unset the user\n   */\n  setUser(user: User){\n    this._user.next(user);\n  }\n\n  /**\n   * Get the current user information not as an observable\n   * so it is synchronous and keeps the app components' `ngOnInit`\n   * functions cleaner\n   *\n   * @returns {User} the current user or `null` if no user logged in\n   */\n  getUser(): User{\n    return this._user.getValue();\n  }\n\n  /**\n   * Checks if a user is logged in\n   *\n   * @requires {boolean} - `true` if a user is logged in\n   * - `false` otherwise\n   */\n  isLoggedIn(): boolean{\n    return (!!this.getUser());\n  }\n\n  /**\n   * Checks if the current user can access the admin pages\n   *\n   * @returns {boolean} - `true` if user is instr or admin\n   * - `false` if user is only a student\n   */\n  canAccessAdmin(): boolean{\n    if(this.getUser()){\n      return this.getUser().role > 0\n    }\n    else{\n      return false;\n    }\n  }\n\n  /**\n   * Attempts to sign a user in using the provided credentials\n   *\n   * @param {any} credentials - `username` (as email) and `password` to be tested for logging in\n   *\n   * @returns {Observable} - the successfully logged in user\n   * - or error message for server/database/authentication error\n   */\n  signin(credentials: any): Observable {\n      let body = JSON.stringify(credentials);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signin', body, { headers: headers });\n  }\n\n  /**\n   * Attempts to create a new user using the provided user details\n   *\n   * @param {any} user - user details including `firstName`, `lastName`, `username` (email), `course`, and `password`\n   *\n   * @returns {Observable} - The new logged-in user when successfully create new user\n   * - or error 400 if errror logging in\n   * - or error 500 if error creating user\n   */\n  signup(user: any): Observable {\n      let body = JSON.stringify(user);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signup', body, { headers: headers });\n  }\n\n  /**\n   * Signs out the user\n   *\n   * @returns {Observable} returns `true` if successfully signed out\n   */\n  signout(): Observable{\n    return this.http.get(this._baseUrl + 'signout');\n  }\n\n  /**\n   * Submit email address of potential user to allow that user\n   * to reset their password if the user exists\n   *\n   * The backend then sends a password reset email to the\n   * email address\n   *\n   * @param {any} body - request body that includes `email` of user\n   *\n   * @returns {Observable} - Success message if password reset email sent\n   * - error message `Error with server email service` if problem with email transporter\n   * - error message `No account with that email.` if email address doesn't correspond to an existing user\n   * - error 422 for other server errors\n   */\n  forgetPassword(body: any): Observable{\n    return this.http.post(this._baseUrl + 'forget-password', body);\n  }\n\n  /**\n   * Attempts to reset a user's password using the credentials\n   *\n   * @param {any} credentials - info needed to reset password: `password, `confirmPassword`, and `token`\n   *\n   * @returns {Observable} - If successful, sends success message `Passwords has been reset`.\n   * - error message `Invalid token` if token doesn't match a user\n   * - error message `Token has expired` for valid tokens but user took too long to attempt to reset\n   * - error message for all other errors\n   */\n  resetPassword(credentials: any): Observable{\n    return this.http.post(this._baseUrl + 'reset-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDeleteDialogComponent.html":{"url":"components/ConfirmDeleteDialogComponent.html","title":"component - ConfirmDeleteDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDeleteDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/shared/confirm-delete-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This is a confirmation dialog when user wants to delete\nsomething sensitive, i.e. another user\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-delete-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-delete-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/shared/confirm-delete-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                        Message to be displayed in the dialog window\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Are you sure you want to delete?'\n                        \n                    \n                \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * This is a confirmation dialog when user wants to delete\n * something sensitive, i.e. another user\n */\n@Component({\n  selector: 'confirm-delete-dialog',\n  templateUrl: './confirm-delete-dialog.template.html'\n})\n\nexport class ConfirmDeleteDialogComponent{\n\n  /**\n   * Message to be displayed in the dialog window\n   */\n  @Input() message: string = 'Are you sure you want to delete?'\n\n  constructor(public activeModal: NgbActiveModal){\n\n  }\n}\n\n    \n\n    \n        \n  \n      &times;\n    \n\n\n\n  \n    {{ message }}\n  \n\n\n\n  \n    Cancel\n  \n  \n    Confirm\n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        ×          {{ message }}        Cancel        Confirm  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDeleteDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/course.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information about a course\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courseNum\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        instructors\n                                \n                                \n                                            Optional\n                                        students\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseNum\n                                    \n                                \n                                \n                                    \n                                        courseNum:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the course\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructors\n                                    \n                                \n                                \n                                    \n                                        instructors:     _User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Instructors of the course, if any\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                    \n                                \n                                \n                                    \n                                        students:     Student[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Student[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of students in the course, if any\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Student } from './student.interface';\nimport { _User } from './user.interface';\n\n/**\n * Information about a course\n */\nexport interface Course {\n  /**\n   * Course number\n   */\n  courseNum: string;\n  /**\n   * Description of the course\n   */\n  description: string;\n  /**\n   * List of students in the course, if any\n   */\n  students?: Student[];\n  /**\n   * Instructors of the course, if any\n   */\n  instructors?: _User[]\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseCreateComponent.html":{"url":"components/CourseCreateComponent.html","title":"component - CourseCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-create/course-create.component.ts\n\n\n    \n        Description\n    \n    \n        Component to create a new course\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-create\n            \n\n            \n                styleUrls\n                course-create.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-create.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseDetails\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _router: Router, _route: ActivatedRoute, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-create/course-create.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Check that a course number has been entered then\nsubmit course details to backend\nIf course successfully created, go back to list of courses\nIf error, display error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            On component destory, unsubscribe from services if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the currently logged\nin user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:34\n                            \n                        \n\n                \n                    \n                        Logged in admin user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseDetails:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:30\n                            \n                        \n\n                \n                    \n                        \nCourse details to be sent to the backend server\nIncludes courseNum and description\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:24\n                            \n                        \n\n                \n                    \n                        Potential error message from the backend server when trying to\ncreate the course\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { User } from '../../../interfaces';\nimport { readErrorMessage } from '../../../shared/read-error'\n\n/**\n * Component to create a new course\n */\n@Component({\n  selector: 'course-create',\n  templateUrl: './course-create.template.html',\n  styleUrls: ['./course-create.style.css']\n})\n\nexport class CourseCreateComponent implements OnInit, OnDestroy {\n  /**\n   * Potential error message from the backend server when trying to\n   * create the course\n   */\n  private errorMessage: string = '';\n  private subscription: Subscription;\n  /**\n   * - Course details to be sent to the backend server\n   * - Includes `courseNum` and `description`\n   */\n  private courseDetails: any = {};\n  /**\n   * Logged in admin user\n   */\n  private admin: User;\n\n  constructor(\n    private _courseService: CourseService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n     private _authService: AuthenticationService\n  ){}\n\n  /**\n   * When initializing the component, get the currently logged\n   * in user\n   */\n  ngOnInit(){\n    this.admin = this._authService.getUser();\n  }\n\n  /**\n   * Check that a course number has been entered then\n   * submit course details to backend\n   *\n   * If course successfully created, go back to list of courses\n   * If error, display error message\n   */\n  createCourse(){\n    if(this.courseDetails.courseNum===''){\n      this.errorMessage = 'Course number is required'\n    } else {\n      this.subscription = this._courseService\n      .createCourse(this.admin.id, this.courseDetails)\n    .subscribe( (result)=>{\n      this._router.navigate(['../', result.courseNum], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n    }\n  }\n\n  /**\n   * On component destory, unsubscribe from services if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Create Course\n  \n  \n    Course Number\n  \n  \n\n  \n    Course Description\n  \n  \n\n  \n    Submit\n  \n  \n    {{errorMessage}}\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create Course        Course Number          Course Description          Submit        {{errorMessage}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseEditComponent.html":{"url":"components/CourseEditComponent.html","title":"component - CourseEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-edit/course-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-edit\n            \n\n            \n                styleUrls\n                course-edit.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-edit.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                possibleInstr\n                            \n                            \n                                selectedAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _callDeleteCourse\n                            \n                            \n                                _callDeleteCourseStudents\n                            \n                            \n                                addInstructor\n                            \n                            \n                                deleteCourse\n                            \n                            \n                                deleteCourseStudents\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-edit/course-edit.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Helper method which uses service to tell server to delete the course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Helper method with tells service to delete all of the\nstudents in this course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addInstructor\n                            \n                            \n                        \n                    \n                \n                \n                    \naddInstructor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            \nWhen add instructor button is clicked, send the selected\ninstructor (by userId) to the backend to be added as an instructor\nIf successful, update list of possible instructors\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            \nWhen clicking delete course button, open a dialog\nto confirm deletion\nIf confirmed, call helper method\nIf cancel, do nothing\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:178\n                            \n                        \n\n\n                \n                    \n                            \nWhen delete students button is click,\nopen a dialog to confirm deletion\nIf confirm, call helper method\nIf cancel, do nothing\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:209\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from services to prevent a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            On init\n\nget the logged in user\nUse the url param to get course number\nGet course details (using coureNum)\nGet possible instructors (using courseNum)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            When the cancel button is pressed, navigate back to course view page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            When submit button is clicked, submit the updates to be\nsaved in the backend\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:45\n                            \n                        \n\n                \n                    \n                        The logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:33\n                            \n                        \n\n                \n                    \n                        Course being edited\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:54\n                            \n                        \n\n                \n                    \n                        Potential error messages from the backend server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:50\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            possibleInstr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        possibleInstr:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:37\n                            \n                        \n\n                \n                    \n                        List of possible instructors who could be added\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAdd:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:41\n                            \n                        \n\n                \n                    \n                        Variable used to remember instr selected when adding\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subject } from 'rxjs';\n\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { User } from '../../../interfaces/user.interface';\nimport { Student, AdminStudent, sortStudents } from '../../../interfaces/student.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n@Component({\n  selector: 'course-edit',\n  templateUrl: './course-edit.template.html',\n  styleUrls: ['./course-edit.style.css']\n})\n\n/**\n * Component for editting course details such as\n * adding/removing instructors, updating course description\n */\nexport class CourseEditComponent implements OnInit, OnDestroy{\n\n  /**\n   * Course being edited\n   */\n  courseInfo: Course;\n  /**\n   * List of possible instructors who could be added\n   */\n  private possibleInstr: AdminStudent[];\n  /**\n   * Variable used to remember instr selected when adding\n   */\n  selectedAdd: number;\n  /**\n   * The logged in user\n   */\n  private _admin: User;\n  private paramObserver: any;\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential error messages from the backend server\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _courseService: CourseService,\n    private _authService: AuthenticationService,\n    private _modalService: NgbModal){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * On init\n   * 1. get the logged in user\n   * 2. Use the url param to get course number\n   * 3. Get course details (using coureNum)\n   * 4. Get possible instructors (using courseNum)\n   */\n  ngOnInit(){\n    this._admin = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n\n            this._courseService.getCourse(this._admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n                this.courseInfo = info;\n                this._courseService.getPossibleInstructors(this._admin.id, course)\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((instrs)=>{\n                    this.possibleInstr = instrs.sort(sortStudents);\n                }, (err2)=>{\n                  this.errorMessage = readErrorMessage(err2);\n                  this.possibleInstr = [];\n                });\n              },(error) => {\n                this.errorMessage = readErrorMessage(error);\n              });\n        });\n  }\n\n  /**\n   * When the cancel button is pressed, navigate back to course view page\n   */\n  onCancel(){\n    this._router.navigate(['../'], {relativeTo: this._route});\n  }\n\n  /**\n   * When submit button is clicked, submit the updates to be\n   * saved in the backend\n   */\n  update(){\n    this._courseService\n      .editCourse(this._admin.id, this.courseInfo.courseNum, this.courseInfo)\n    .takeUntil(this.isDestroyed$)\n    .subscribe( (result)=>{\n      // success\n      this._router.navigate(['../'], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * - When add instructor button is clicked, send the selected\n   * instructor (by userId) to the backend to be added as an instructor\n   * - If successful, update list of possible instructors\n   */\n  addInstructor(){\n    if(this.selectedAdd){\n    this._courseService\n      .addInstructor(this._admin.id, this.courseInfo.courseNum, this.selectedAdd)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.courseInfo = updated;\n      this.possibleInstr = this.possibleInstr.filter((elm)=>{\n        return elm.userId != this.selectedAdd\n      });\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n    }\n  }\n  // TODO: remove instructor\n\n  /**\n   * - When clicking delete course button, open a dialog\n   * to confirm deletion\n   * - If confirmed, call helper method\n   * - If cancel, do nothing\n   */\n  deleteCourse(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm', windowClass: 'delete-modal'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourse()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method which uses service to tell server to delete the course\n   */\n  _callDeleteCourse(){\n    this._courseService.deleteCourse(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * - When delete students button is click,\n   * open a dialog to confirm deletion\n   * - If confirm, call helper method\n   * - If cancel, do nothing\n   */\n  deleteCourseStudents(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete all students in course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourseStudents()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method with tells service to delete all of the\n   * students in this course\n   */\n  _callDeleteCourseStudents(){\n    this._courseService.deleteStudents(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses/', this.courseInfo.courseNum]);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * Unsubscribe from services to prevent a memory leak\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    {{ courseInfo.courseNum }}\n\n    \n      \n        Instructors\n      \n      \n        {{ instr | personName }}\n      \n    \n\n    \n      \n        Add Instructor\n      \n      \n        \n        Instructor to add\n        {{instr | personName:true }}\n      \n        \n          Add\n        \n      \n    \n    \n      Description\n    \n    \n    \n      \n        Submit\n        Cancel\n      \n    \n    \n      Delete course\n      Delete students in course\n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}        {{ courseInfo.courseNum }}                  Instructors                    {{ instr | personName }}                            Add Instructor                            Instructor to add        {{instr | personName:true }}                        Add                            Description                          Submit        Cancel                    Delete course      Delete students in course        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseIndivComponent.html":{"url":"components/CourseIndivComponent.html","title":"component - CourseIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-indiv/course-indiv.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-indiv\n            \n\n            \n                styleUrls\n                course-indiv.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from subscriptions to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Initialize all content on the page using several services\n\nGet the logged in user\nGet the course information (description, instructors)\nGet the list of students in the course\nGet the list of scenarios\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:34\n                            \n                        \n\n                \n                    \n                        Course info including courseNum, description, instructors\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:48\n                            \n                        \n\n                \n                    \n                        Potential error message that could arise\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:42\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:38\n                            \n                        \n\n                \n                    \n                        list of available scenarios (used for linking)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:30\n                            \n                        \n\n                \n                    \n                        List of students enrolled in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { Course, Student, sortStudents, Scenario, User } from '../../../interfaces';\n\n@Component({\n  selector: 'course-indiv',\n  templateUrl: './course-indiv.template.html',\n  styleUrls: ['./course-indiv.style.css']\n})\n\n\n/**\n * Component to view an individual course\n * Includes information such as course number, description, instructors, and students\n */\nexport class CourseIndivComponent implements OnInit, OnDestroy{\n\n  /**\n   * List of students enrolled in the course\n   */\n  private students: Student[] = [];\n  /**\n   * Course info including `courseNum`, `description`, `instructors`\n   */\n  courseInfo: Course;\n  /**\n   * list of available scenarios (used for linking)\n   */\n  private scenarios: Scenario[];\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  private paramObserver: any;\n\n  /**\n   * Potential error message that could arise\n   */\n  private errorMessage: string = '';\n\n  constructor(\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _courseService: CourseService,\n    private _authService: AuthenticationService,\n    private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize all content on the page using several services\n   * 1. Get the logged in user\n   * 2. Get the course information (description, instructors)\n   * 3. Get the list of students in the course\n   * 4. Get the list of scenarios\n   */\n  ngOnInit(){\n    let admin: User = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n            this._courseService.getCourse(admin.id, course)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n              this.courseInfo = info;\n              this._courseService.getStudents(admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((students)=>{\n                this.students = students.sort(sortStudents);\n                this._scenarioService.listScenarios()\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((scens)=>{\n                    this.scenarios = scens;\n                });\n              });\n            },(error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Unsubscribe from subscriptions to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          {{ courseInfo.courseNum }}\n        \n      \n      Edit\n    \n\n    \n      \n          Description\n        \n        {{ courseInfo.description }}\n     \n    \n      \n          Instructors\n        \n        {{ courseInfo.instructors | peopleListNames }}\n     \n  \n  \n  \n      View Scenario Status \n    \n      \n        By Student\n        \n          {{ student | personName:true }}\n        \n        \n      \n      \n      \n        By Scenario\n        \n          {{ scen.label }}\n        \n      \n      \n    \n    \n     \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                {{ courseInfo.courseNum }}                    Edit                        Description                {{ courseInfo.description }}                         Instructors                {{ courseInfo.instructors | peopleListNames }}                 View Scenario Status                   By Student                  {{ student | personName:true }}                                          By Scenario                  {{ scen.label }}                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseListComponent.html":{"url":"components/CourseListComponent.html","title":"component - CourseListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-list/course-list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists available courses based on logged-in user role\n\nIf admin, lists all available courses\nIf instr, list courses which instructor of\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-list\n            \n\n\n\n\n            \n                templateUrl\n                ./course-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-list/course-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from services if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initialize component by getting list of courses\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:22\n                            \n                        \n\n                \n                    \n                        List of courses\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:26\n                            \n                        \n\n                \n                    \n                        Subscription to course service\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\n\nimport { Course, User } from '../../../interfaces';\n\n/**\n * Component which lists available courses based on logged-in user role\n * - If admin, lists all available courses\n * - If instr, list courses which instructor of\n */\n@Component({\n    selector: 'course-list',\n    templateUrl: './course-list.template.html'\n})\nexport class CourseListComponent implements OnInit, OnDestroy{\n  /**\n   * List of courses\n   */\n    private courses: Course[];\n  /**\n   * Subscription to course service\n   */\n  private subscription: Subscription;\n\n    constructor(\n      private _courseService: CourseService,\n      private _authService: AuthenticationService\n    ) {}\n\n    /**\n     * Initialize component by getting list of courses\n     */\n    ngOnInit() {\n      let admin: User = this._authService.getUser();\n      this.subscription = this._courseService.listCourses(admin.id)\n        .subscribe((courses) => {\n        this.courses = courses\n      });\n    }\n\n  /**\n   * On component destruction, unsubscribe from services if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \nCourses\n\n  Create new course\n  \n      {{course.courseNum}}\n   \n \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Courses  Create new course        {{course.courseNum}}    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CourseModule.html":{"url":"modules/CourseModule.html","title":"module - CourseModule","body":"\n                   \n\n\n\n\n  Modules\n  CourseModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_imports\n\n\n\ncluster_CourseModule_providers\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/course/course.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for course-related tasks like adding, editing, \ndeleting, and viewing a course and the students in a course\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseCreateComponent\n                            \n                            \n                                CourseEditComponent\n                            \n                            \n                                CourseIndivComponent\n                            \n                            \n                                CourseListComponent\n                            \n                            \n                                CourseScenarioComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CourseResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CourseCreateComponent } from './course-create/course-create.component';\nimport { CourseIndivComponent } from './course-indiv/course-indiv.component';\nimport { CourseEditComponent } from './course-edit/course-edit.component';\nimport { CourseListComponent } from './course-list/course-list.component';\nimport { CourseScenarioComponent } from './course-scenario/course-scenario.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { CourseRoutes } from './course.routes';\nimport { CourseResolver } from './course.resolver';\n\n/**\n * Module for course-related tasks like adding, editing, \n * deleting, and viewing a course and the students in a course\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(CourseRoutes)\n  ],\n  declarations: [\n    CourseCreateComponent,\n    CourseIndivComponent,\n    CourseEditComponent,\n    CourseListComponent,\n    CourseScenarioComponent\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    CourseResolver\n  ]\n})\nexport class CourseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseResolver.html":{"url":"injectables/CourseResolver.html","title":"injectable - CourseResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/course/course.resolver.ts\n        \n\n            \n                Description\n            \n            \n                For the navigation breadcrumb, resolves a URL courseNum parameeter\nto the course number\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Based on the URL courseNum parameter, find the course\nit belongs to\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The course info for the courseNum\nor an empty observable if the id doesn't belong to any course\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CourseService } from './course.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { Course } from '../../interfaces/course.interface';\n\n/**\n * For the navigation breadcrumb, resolves a URL courseNum parameeter\n * to the course number\n */\n@Injectable()\nexport class CourseResolver implements Resolve {\n\n  constructor(private _courseService: CourseService,\n              private _authService: AuthenticationService\n              ) { }\n  /**\n   * Based on the URL `courseNum` parameter, find the course\n   * it belongs to\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {Observable} The course info for the courseNum\n   * or an empty observable if the id doesn't belong to any course\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n    const courseNum = route.params['courseNum'];\n\n    if (courseNum) {\n      return this._courseService.getCourse(admin.id, courseNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseScenarioComponent.html":{"url":"components/CourseScenarioComponent.html","title":"component - CourseScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-scenario/course-scenario.component.ts\n\n\n    \n        Description\n    \n    \n        This component displays the scenario status of all students\nwithin the course and allows for navigation to student fridges\nand grant access for a student\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-scen\n            \n\n            \n                styleUrls\n                course-scenario.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-scenario.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseNum\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Protected\n                                scenario\n                            \n                            \n                                    Protected\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatAccess\n                            \n                            \n                                goToFridge\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _courseService: CourseService, _studentService: StudentService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatAccess(isGranted: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Simple formatting function which returns formatted string\ndepending on if student has access granted or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isGranted\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nhas access been granted\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \nformatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToFridge(studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            On \"View Fridge\" button, navigates to that student's fridge\nfor this scenario\nCalled on (click) of \"View Fridge\" button of a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe student's userID\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(studentIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Calls service to grant the student access to the scenario\nCalled on (click) of \"Grant access\" button for a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npositional index of student in the list of students; \nThis is NOT the student's userId\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from services to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Initalize the component\n\nGet the logged in user\nBased on the URL, get the course number and scenario code\nGet the scenario information\nGet the scenario status of students in the course\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:52\n                            \n                        \n\n                \n                    \n                        The logged in admin user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseNum:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:36\n                            \n                        \n\n                \n                    \n                        The course number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:56\n                            \n                        \n\n                \n                    \n                        Potential backend error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:44\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:48\n                            \n                        \n\n                \n                    \n                        Subscription to observe url courseNum parameter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:40\n                            \n                        \n\n                \n                    \n                        Information about the scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:32\n                            \n                        \n\n                \n                    \n                        List of students in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../../student/student.service';\n\nimport { Course, Student, Scenario, User } from '../../../interfaces/';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * This component displays the scenario status of all students\n * within the course and allows for navigation to student fridges\n * and grant access for a student\n */\n@Component({\n  selector: 'course-scen',\n  templateUrl: './course-scenario.template.html',\n  styleUrls: ['./course-scenario.style.css']\n})\n\nexport class CourseScenarioComponent implements OnInit, OnDestroy {\n\n  /**\n   * List of students in the course\n   */\n  protected students: Student[] = [];\n  /**\n   * The course number\n   */\n  private courseNum: string;\n  /**\n   * Information about the scenario\n   */\n  protected scenario: Scenario;\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Subscription to observe url `courseNum` parameter\n   */\n  private paramObserver: any;\n  /**\n  * The logged in admin user\n  */\n  private admin: User;\n  /**\n   * Potential backend error messages\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _authService: AuthenticationService,\n    private _courseService: CourseService,\n    private _studentService: StudentService,\n    private _scenarioService: ScenarioService\n              ){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initalize the component\n   * 1. Get the logged in user\n   * 2. Based on the URL, get the course number and scenario code\n   * 3. Get the scenario information\n   * 4. Get the scenario status of students in the course\n   */\n  ngOnInit() {\n    this.admin = this._authService.getUser();\n    this.paramObserver = this._route.params\n      .subscribe(params => {\n          let course = params['courseNum'];\n          let scenCode = params['scenId'];\n      this.courseNum = course.toUpperCase();\n      this._scenarioService.getScenario(scenCode)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n          // success\n          this.scenario = res;\n        this._courseService.getScenarioStatus(this.admin.id, course, scenCode)\n          .takeUntil(this.isDestroyed$)\n          .subscribe((stats)=>{\n\n            this.students = stats;\n        }, (err2)=>{\n          this.errorMessage = readErrorMessage(err2);\n        });\n\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n        });\n  }\n\n  /**\n   * Simple formatting function which returns formatted string\n   * depending on if student has access granted or not\n   *\n   * @param {boolean} isGranted - has access been granted\n   *\n   * @returns {string} - formatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n   */\n  formatAccess(isGranted: boolean): string{\n    return (isGranted ? 'Access granted' : 'Access not granted');\n  }\n\n  /**\n   * Calls service to grant the student access to the scenario\n   *\n   * Called on `(click)` of \"Grant access\" button for a student\n   * \n   * @param {number} studentIndex - positional index of student in the list of students; \n   * This is **NOT** the student's userId\n   */\n  grantAccess(studentIndex: number){\n    let scenId = this.scenario.scenCode;\n    let studentId = this.students[studentIndex].userId;\n    this._studentService.grantScenAccess(this.admin.id, studentId, scenId, true)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        if(res !== undefined && res !== null){\n          this.students[studentIndex].status = res.accessGranted[scenId];\n        }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * On \"View Fridge\" button, navigates to that student's fridge\n   * for this scenario\n   *\n   * Called on `(click)` of \"View Fridge\" button of a student\n   *\n   * @param {number} studentId - the student's userID\n   */\n  goToFridge(studentId: number){\n    this._router.navigate(['/admin/students/', studentId, this.scenario.scenCode]);\n  }\n\n  /**\n   * When destroying component, unsubscribe from services to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      {{ courseNum }} \n    \n\n    \n      {{scenario.scenCode}}\n      {{ scenario.label }}\n    \n\n    \n      \n        \n        {{student | personName}}: {{ formatAccess(student.status) }}\n        \n        \n          Grant access\n          View fridge\n        \n         \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}              {{ courseNum }}               {{scenario.scenCode}}      {{ scenario.label }}                              {{student | personName}}: {{ formatAccess(student.status) }}                          Grant access          View fridge                             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExperimentPhage.html":{"url":"interfaces/ExperimentPhage.html","title":"interface - ExperimentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExperimentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage interface used for plating and plexer\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        numPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numPhage\n                                    \n                                \n                                \n                                    \n                                        numPhage:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of this phage in the tube/plate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExperimentService.html":{"url":"injectables/ExperimentService.html","title":"injectable - ExperimentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ExperimentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/location/experiment.service.ts\n        \n\n            \n                Description\n            \n            \n                This service performs the plate and plexer experiments used\nwhen crossing or mutating phage strains, i.e. performing a\nvirtual experiment\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPlate\n                            \n                            \n                                performPlexer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/experiment.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPlate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatePlate(plate: PlateInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            With valid input for the plate, calls the backend to generate\na new plate that is displayed in the lab room\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        plate\n                                                        \n                                                                    PlateInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninformation needed to generate the new plate\nIncludes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nnewly generate plate with info about parents and (is plate full or list of small and large plaques)\nor error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            performPlexer\n                            \n                            \n                        \n                    \n                \n                \n                    \nperformPlexer(data: PlexerInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            With valid input, call the backend to generate valid results for the plexer\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    PlexerInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninformation needed to generate the\nplexer results\nInputs a list of phage IDs for the rows and columns, E. coli\nlawn type, location, specials, individual plexer plate capacity\nand scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    the results of the plexer as a 2D array\nwere each cell in the array represents a plate and has\nis plate full or counts of small/large plaques\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/cricket'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PlateInput, PlateResults, PlexerInput } from '../../interfaces';\n\n/**\n * This service performs the plate and plexer experiments used\n * when crossing or mutating phage strains, i.e. performing a\n * virtual experiment\n */\n@Injectable()\nexport class ExperimentService {\n\n  private _baseURL = 'api/cricket';\n\n  constructor(private _http: HttpClient) { }\n\n  /**\n   * With valid input for the plate, calls the backend to generate\n   * a new plate that is displayed in the lab room\n   *\n   * @param {PlateInput} plate - information needed to generate the new plate\n   * - Includes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n   *\n   * @returns {Observable} - newly generate plate with info about parents and (is plate full or list of small and large plaques)\n   * - or error\n   */\n  createPlate(plate: PlateInput): Observable{\n    var res = this._http\n    .post(`${this._baseURL}/plate`, plate)\n    return res;\n  }\n\n  /**\n   * With valid input, call the backend to generate valid results for the plexer\n   *\n   * @param {PlexerInput} data - information needed to generate the\n   * plexer results\n   * - Inputs a list of phage IDs for the rows and columns, E. coli\n   * lawn type, location, specials, individual plexer plate capacity\n   * and scenario data\n   *\n   * @returns {Observable} the results of the plexer as a 2D array\n   * were each cell in the array represents a plate and has\n   * is plate full or counts of small/large plaques\n   */\n  performPlexer(data: PlexerInput): Observable{\n    // data will have rowPhage, colPhage, lawn type, location, specials, capacity, scenarioData\n    var res = this._http\n    .post(`${this._baseURL}/plexer`, data);\n    return res;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/forget-password/forget-password.component.ts\n\n\n    \n        Description\n    \n    \n        If user forgets their password, they can enter\nthere email address. If there is an account with the email address,\nan email is sent with a link that allows user to reset their password\nThis component is for entering email address and\ninforming if email address was valid and reset * password email was successfully sent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                forget-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./forget-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                email\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                sendForget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/forget-password/forget-password.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from authentication service to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendForget\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendForget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            After submitting form, reset success and error messages, send email to the server, and wait for response\n\nIf password reset email successfully set, success message is updated\nIf there was an error (server error, email doesn't below to any user), error message is set with description of the error\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:31\n                            \n                        \n\n                \n                    \n                        User's email to check if an account exists\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:23\n                            \n                        \n\n                \n                    \n                        Possible error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:35\n                            \n                        \n\n                \n                    \n                        Authentication service subscription\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:27\n                            \n                        \n\n                \n                    \n                        Message when reset password email was successfully sent\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * If user forgets their password, they can enter\n * there email address. If there is an account with the email address,\n * an email is sent with a link that allows user to reset their password\n *\n * This component is for entering email address and\n * informing if email address was valid and reset * password email was successfully sent\n */\n@Component({\n    selector: 'forget-pswd',\n    templateUrl: './forget-password.template.html'\n})\nexport class ForgetPasswordComponent implements OnDestroy{\n  /**\n   * Possible error messages\n   */\n  private errorMessage: string = '';\n  /**\n   * Message when reset password email was successfully sent\n   */\n  private successMessage: string = '';\n  /**\n   * User's email to check if an account exists\n   */\n  private email: string;\n  /**\n   * Authentication service subscription\n   */\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService) { }\n\n  /**\n   * After submitting form, reset _success_ and _error_ messages, send email to the server, and wait for response\n   *\n   * - If password reset email successfully set, _success_ message is updated\n   * - If there was an error (server error, email doesn't below to any user), _error_ message is set with description of the error\n   */\n    sendForget() {\n      this.successMessage = '';\n      this.errorMessage = '';\n      let body = {email: this.email};\n        this.subscription = this._authenticationService\n          .forgetPassword(body)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  /**\n   * When destroying component, unsubscribe from authentication service to prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Forget Password?\n    \n    Email\n    \n      \n    Submit\n  {{ successMessage }}\n  {{ errorMessage }}\n      \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forget Password?        Email              Submit  {{ successMessage }}  {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fridge.html":{"url":"interfaces/Fridge.html","title":"interface - Fridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Fridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                A user/scenario fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessGranted\n                                \n                                \n                                        guesses\n                                \n                                \n                                        scenarioDetails\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        strains\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Has access already been granted for this user/scenario;\nFridges for each scenario are the same when access not granted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Deletion guesses\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioDetails\n                                    \n                                \n                                \n                                    \n                                        scenarioDetails:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information for this specific user/scenario needed when\nsubmitting the plexer or generating a new plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario id this fridge belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     FridgePhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FridgePhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id for owner of this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FridgePhage.html":{"url":"interfaces/FridgePhage.html","title":"interface - FridgePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FridgePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage stored in the fridge\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                            Optional\n                                        numParents\n                                \n                                \n                                            Optional\n                                        parents\n                                \n                                \n                                        phageType\n                                \n                                \n                                            Optional\n                                        submitted\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description for this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numParents\n                                    \n                                \n                                \n                                    \n                                        numParents:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If user phage, number of parents in the cross to create this phage;\nused to check if one of the parents no longer exists\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If a user phage, the phage used in the cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phageType\n                                    \n                                \n                                \n                                    \n                                        phageType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage type; one of \"reference\", \"unknown\", and \"user\" depending\non who created it and if mutation state is known\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                    \n                                \n                                \n                                    \n                                        submitted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For user phage, should this phage be graded\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenotypePhage.html":{"url":"interfaces/GenotypePhage.html","title":"interface - GenotypePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GenotypePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage on the lab room plate that will be saved to\nthe fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                        parents\n                                \n                                \n                                        shifts\n                                \n                                \n                                            Optional\n                                        src\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop locations of deletion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage used in cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shifts\n                                    \n                                \n                                \n                                    \n                                        shifts:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                    \n                                \n                                \n                                    \n                                        src:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Where the phage is being dragged from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/help/help.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                help\n            \n\n            \n                styleUrls\n                help.style.css\n            \n\n\n\n            \n                templateUrl\n                ./help.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/help/help.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'help',\n  templateUrl: './help.template.html',\n  styleUrls: ['./help.style.css']\n})\n\nexport class HelpComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n\n  Help\nInformation coming soon\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  HelpInformation coming soon'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelpModule.html":{"url":"modules/HelpModule.html","title":"module - HelpModule","body":"\n                   \n\n\n\n\n  Modules\n  HelpModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_HelpModule_imports\n\n\n\n\nHelpComponent\n\nHelpComponent\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/help/help.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HelpComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HelpRoutes } from './help.routes';\nimport { HelpComponent } from './help.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(HelpRoutes)\n  ],\n  declarations: [\n    HelpComponent\n  ]\n})\nexport class HelpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        The home landing page when going to the website\nMainly a view component, but some aspects are dependent\non if a user is logged in and the user role\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                styleUrls\n                home.style.css\n            \n\n\n\n            \n                templateUrl\n                ./home.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/home/home.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            When destroying the component, unset the user variable\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            When intializing component, get the logged in user, if any\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/home/home.component.ts:23\n                            \n                        \n\n                \n                    \n                        The logged in user, if any\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\n\nimport { User } from '../interfaces/user.interface';\n\n/**\n * The home landing page when going to the website\n *\n * Mainly a view component, but some aspects are dependent\n * on if a user is logged in and the user role\n */\n@Component({\n  selector: 'home',\n  templateUrl: './home.template.html',\n  styleUrls: ['./home.style.css']\n})\n\nexport class HomeComponent implements OnInit, OnDestroy{\n  /**\n   * The logged in user, if any\n   */\n  private user: User;\n\n  constructor(private _authenticationService: AuthenticationService){}\n\n  /**\n   * When intializing component, get the logged in user, if any\n   */\n  ngOnInit(){\n    this.user = this._authenticationService.getUser();\n  }\n\n  /**\n   * When destroying the component, unset the user variable\n   */\n  ngOnDestroy(){\n    this.user = undefined;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Welcome to Crick et al.\n\n    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.\n    \n    \n      \n        Instructor Page\n        Administrator Page\n      \n      \n        Sign out\n      \n    \n    \n    \n      \n        Sign in\n        \n      \n        Sign up\n      \n    \n    \n\n  \n    \n  \n\n\n  Go to Scenarios\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome to Crick et al.    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.                      Instructor Page        Administrator Page                    Sign out                                Sign in                      Sign up                        Go to Scenarios'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingRoomComponent.html":{"url":"components/LandingRoomComponent.html","title":"component - LandingRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/landing-room/landing-room.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows the scenario details including\n\npurpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\nrelevance - why the scenario is relevant for learning and future scenarios\nstarting point - description of the phage students start the scenario with\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                landing-room\n            \n\n\n\n\n            \n                templateUrl\n                ./landing-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scenario\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                            Component contructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular router\n\n                                                        \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The current URL route to get scenario id\n\n                                                        \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get scenario information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            When destroying the component, unsubscribe if necessary to\nprevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\nGet the details for scenarios\nIf error, go back to home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:23\n                            \n                        \n\n                \n                    \n                        The current scenario we are viewing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                        Subscription to the getScenario method of scenario service\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ScenarioService } from '../../scenario.service';\nimport { Scenario } from '../../../interfaces';\n\n/**\n * This component shows the scenario details including\n * 1. purpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\n * 2. relevance - why the scenario is relevant for learning and future scenarios\n * 3. starting point - description of the phage students start the scenario with\n */\n@Component({\n  selector: 'landing-room',\n  templateUrl: './landing-room.template.html'\n})\n\nexport class LandingRoomComponent implements OnInit, OnDestroy {\n\n  /**\n   * The current scenario we are viewing\n   */\n  scenario: Scenario;\n  /**\n   * Subscription to the getScenario method of scenario service\n   */\n  private subscription: any;\n\n  /**\n   * Component contructor\n   * @param {Router} _router Angular router\n   * @param {ActivatedRoute} _route The current URL route to get scenario id\n   * @param {ScenarioService} _scenarioService Service to get scenario information\n   */\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _scenarioService: ScenarioService){\n\n  }\n\n  /**\n   * Initialize the component\n   * 1. Get scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\n   * 2. Get the details for scenarios\n   * If error, go back to home page\n   */\n  ngOnInit(){\n    let scenId = this._route.parent.snapshot.paramMap.get('scenId');\n    this.subscription = this._scenarioService\n      .getScenario(scenId)\n      .subscribe(\n      scenario => {\n        this.scenario = scenario;\n      },\n      error => this._router.navigate(['/'])\n    );\n  }\n\n  /**\n   * When destroying the component, unsubscribe if necessary to\n   * prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{scenario.label}} \n  Purpose\n  {{scenario.purpose}}\n\n  Relevance\n  {{scenario.relevance}}\n\n  Starting Point\n  {{scenario.startingPoint}}\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{scenario.label}}   Purpose  {{scenario.purpose}}  Relevance  {{scenario.relevance}}  Starting Point  {{scenario.startingPoint}}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists all available scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario-list\n            \n\n\n\n\n            \n                templateUrl\n                ./list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                scenarios\n                            \n                            \n                                    Private\n                                sSubscription\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from service if necessary\nto prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initialize the component by using the service to fetch the\nlist of scenarios\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:24\n                            \n                        \n\n                \n                    \n                        list of available scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object of logged in user, if available\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { ScenarioService } from '../scenario.service';\n\nimport { User } from '../../interfaces/user.interface';\nimport { Scenario } from '../../interfaces/scenario.interface';\n\n/**\n * Component which lists all available scenarios\n */\n@Component({\n    selector: 'scenario-list',\n    templateUrl: './list.template.html'\n})\nexport class ListComponent implements OnInit, OnDestroy{\n  /**\n   * User object of logged in user, if available\n   */\n    user: User;\n  /**\n  * list of available scenarios\n  */\n    scenarios: Scenario[];\n    errorMessage: string;\n  private sSubscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService, private _scenarioService: ScenarioService) {\n\n    }\n\n  /**\n   * Initialize the component by using the service to fetch the\n   * list of scenarios\n   */\n    ngOnInit() {\n      this.user = this._authenticationService.getUser();\n      this.sSubscription = this._scenarioService.listScenarios()\n        .subscribe((scenarios) => {\n        this.scenarios = scenarios\n      });\n    }\n\n  /**\n   * When destroying component, unsubscribe from service if necessary\n   * to prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.sSubscription)\n    this.sSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  Available Scenarios\n  \n    \n      {{scenario.label}}\n    \n    \n  \n  \n    \n      Sign in or Sign up to see scenarios.\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Available Scenarios            {{scenario.label}}                      Sign in or Sign up to see scenarios.  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationComponent.html":{"url":"components/LocationComponent.html","title":"component - LocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/location.component.ts\n\n\n    \n        Description\n    \n    \n        This is a view component which hosts the location\ntab selection navigator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                location\n            \n\n            \n                styleUrls\n                location.style.css\n            \n\n\n\n            \n                templateUrl\n                ./location.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * This is a view component which hosts the location\n * tab selection navigator\n */\n@Component({\n  selector: 'location',\n  templateUrl: './location.template.html',\n  styleUrls: ['./location.style.css']\n})\n\nexport class LocationComponent {\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n        \n          \n             \n            Info\n            \n            \n            \n              \n            Lab\n          \n            \n            \n              \n            Plexer\n          \n            \n            \n              \n            Model\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                               Info                                                              Lab                                                            Plexer                                                            Model                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FridgeComponent\n                            \n                            \n                                LabRoomComponent\n                            \n                            \n                                LandingRoomComponent\n                            \n                            \n                                LocationComponent\n                            \n                            \n                                ModelRoomComponent\n                            \n                            \n                                PhageDialogComponent\n                            \n                            \n                                PlexerRoomComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                PhageDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ExperimentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { LocationRoutes } from './location.routes';\n\nimport { ExperimentService } from './experiment.service';\n\nimport { FridgeComponent } from '../fridge/fridge.component';\nimport { PhageDialogComponent } from '../fridge/phage-dialog.component';\n\nimport { LocationComponent } from './location.component';\nimport { LandingRoomComponent } from './landing-room/landing-room.component';\nimport { LabRoomComponent } from './lab-room/lab-room.component';\nimport { PlexerRoomComponent } from './plexer-room/plexer-room.component';\nimport { ModelRoomComponent } from './model-room/model-room.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(LocationRoutes)\n  ],\n  declarations: [\n    FridgeComponent,\n    PhageDialogComponent,\n    LocationComponent,\n    LabRoomComponent,\n    PlexerRoomComponent,\n    ModelRoomComponent,\n    LandingRoomComponent\n  ],\n   entryComponents: [\n    PhageDialogComponent\n  ],\n  providers: [\n    ExperimentService\n  ]\n})\nexport class LocationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggedInGuard.html":{"url":"injectables/LoggedInGuard.html","title":"injectable - LoggedInGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoggedInGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/logged-in.guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Router guard that makes sure only logged in users can access the page and all child pages\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/logged-in.guard.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Determines if user can activate (visit) a page\nbased on if a user is logged in\nIf not logged in, sets the redirect url to take user back to this page after logging in and\nsends the user to the sign in page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ncurrent URL\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state including the url trying to acess\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is logged in\nfalse if user is not logged in\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Determines if user can activate all child/sub pages depending if user is logged in\nOnly logged in users can activate the pages\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Router guard that makes sure only logged in users can access the page and all child pages\n */\n@Injectable()\nexport class LoggedInGuard implements CanActivate, CanActivateChild {\n\n  constructor(\n    private _authenticationService: AuthenticationService,\n    private _router: Router) {}\n\n  /**\n   * Determines if user can activate (visit) a page\n   * based on if a user is logged in\n   *\n   * If not logged in, sets the redirect url to take user back to this page _after_ logging in and\n   * sends the user to the sign in page\n   *\n   * @param {ActivatedRouteSnapshot} route - current URL\n   * @param {RouterStatesnapshot} state - router state including the url trying to acess\n   *\n   * @returns {boolean} - `true` if user is logged in\n   * - `false` if user is not logged in\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n     state: RouterStateSnapshot\n  ): boolean {\n    let url: string = state.url;\n\n    let isLoggedIn: boolean = this._authenticationService.isLoggedIn();\n    if(isLoggedIn)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['authentication/signin']);\n      return false;\n    }\n  }\n\n  /**\n   * Determines if user can activate all child/sub pages depending if user is logged in\n   *\n   * Only logged in users can activate the pages\n   */\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelRoomComponent.html":{"url":"components/ModelRoomComponent.html","title":"component - ModelRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/model-room/model-room.component.ts\n\n\n    \n        Description\n    \n    \n        This room is used for students to submit their deletion guesses\nfor phage\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                model-room\n            \n\n            \n                styleUrls\n                model-room.style.css\n            \n\n\n\n            \n                templateUrl\n                ./model-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                geneAr\n                            \n                            \n                                    Private\n                                guesses\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                keys\n                            \n                            \n                                    Private\n                                scenarioId\n                            \n                            \n                                    Private\n                                stepSize\n                            \n                            \n                                    Private\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockClass\n                            \n                            \n                                ngOnDestory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveData\n                            \n                            \n                                toggleBlock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/model-room/model-room.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBlockClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBlockClass(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Get the CSS classes for a strain guess block\nBlock indicates wheater user thinks that section of the chromosome\nis deleted in the strain\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'guess-block btn p-0': boolean; 'btn-outline-secondary': boolean; 'bg-dark': any; }\n\n                            \n                                \n                                    applicable CSS classes in the form\n{'class': boolean, ...}\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestory\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet user id\nGet the scenario id from parent URL\nGet user guesses from scenario service (set by fridge)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveData\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Saves the guesses to the backend/database using the service\nCalled on (click) of Save Button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlock\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleBlock(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Toggle block guess from true to false OR false to true\nCalled on (click) of the block\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _width:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:54\n                            \n                        \n\n                \n                    \n                        CSS width of each block dependent on length of gene and step size\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:50\n                            \n                        \n\n                \n                    \n                        Potential backend error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geneAr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geneAr:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            guesses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guesses:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:26\n                            \n                        \n\n                \n                    \n                        Current user guesses as object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:59\n                            \n                        \n\n                \n                    \n                        Boolean state variable used to make unsubscribing from\nmultiple services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keys:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of strain numbers included\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarioId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarioId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:42\n                            \n                        \n\n                \n                    \n                        Scenario code\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stepSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:38\n                            \n                        \n\n                \n                    \n                        Size of each block\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:46\n                            \n                        \n\n                \n                    \n                        User id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\n\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../scenario.service';\nimport { ScenarioGlobals } from '../../scenario.globals';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * This room is used for students to submit their deletion guesses\n * for phage\n */\n@Component({\n    selector: 'model-room',\n    templateUrl: './model-room.template.html',\n  styleUrls: ['./model-room.style.css']\n})\n\nexport class ModelRoomComponent {\n\n  /**\n   * Current user guesses as object\n   */\n  private guesses: any;\n  /**\n   * Array of strain numbers included\n   */\n  private keys: number[];\n  /**\n   *\n   */\n  private geneAr: number[];\n  /**\n   * Size of each block\n   */\n  private stepSize: number;\n  /**\n   * Scenario code\n   */\n  private scenarioId: string;\n  /**\n   * User id\n   */\n  private userId: number;\n  /**\n   * Potential backend error messages\n   */\n  private errorMessage: string = '';\n  /**\n   * CSS width of each block dependent on length of gene and step size\n   */\n  private _width: string;\n  /**\n   * Boolean state variable used to make unsubscribing from\n   * multiple services easier\n   */\n  private isDestroyed$: Subject;\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _authenticationService: AuthenticationService,\n              private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n\n    this.stepSize = ScenarioGlobals.deletionGuessLength;\n    this.geneAr = [];\n    let nBlocks: number = Math.ceil(ScenarioGlobals.geneLength/this.stepSize);\n    for(let i = 0; i  {\n      this.guesses = dels;\n\n      this.keys = Object.keys(dels).map((k)=> {return Number.parseInt(k);});\n      if(this.keys.length === 0){\n        this.errorMessage = 'No phage available for modelling'\n      } else {\n        this.errorMessage = '';\n      }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * Destroy the component by unsubscribing\n   */\n  ngOnDestory(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  /**\n   * Get the CSS classes for a strain guess block\n   * Block indicates wheater user thinks that section of the chromosome\n   * is deleted in the strain\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   *\n   * @returns {Object} applicable CSS classes in the form\n   * `{'class': boolean, ...}`\n   */\n  getBlockClass(strain: number, pos: number){\n    let posGuess = this.guesses[strain][pos];\n    return {\n      'guess-block btn p-0': true,\n      'btn-outline-secondary': !posGuess, // inactive\n      'bg-dark': posGuess // active\n    }\n  }\n\n  /**\n   * Toggle block guess from true to false OR false to true\n   *\n   * Called on `(click)` of the block\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   */\n  toggleBlock(strain: number, pos: number){\n    let c = this.guesses[strain][pos];\n    this.guesses[strain][pos] = !c;\n  }\n\n  /**\n   * Saves the guesses to the backend/database using the service\n   *\n   * Called on `(click)` of Save Button\n   */\n  saveData(){\n    // clear error message beforehand\n    this.errorMessage = '';\n    // use service and save data (as a string)\n    let out = JSON.stringify(this.guesses)\n    this._scenarioService\n      .saveDeletions(this.guesses, this.userId, this.scenarioId)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((dat)=>{\n      this.guesses = JSON.parse(dat);\n      this._scenarioService.setScenario(null, dat);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{errorMessage}}\n   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">\n      Save\n  \n \n 0\" class=\"row w-100\" id=\"modeller\">\n  \n    \n      {{phage+1}}\n    \n  \n  \n    \n      \n         \n      \n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{errorMessage}}   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">      Save    0\" class=\"row w-100\" id=\"modeller\">            {{phage+1}}                                         '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/nav/nav.component.ts\n\n\n    \n        Description\n    \n    \n        Navigation bar at the top of the site\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-nav\n            \n\n            \n                styleUrls\n                nav.style.css\n            \n\n\n\n            \n                templateUrl\n                ./nav.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing, if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Initiate the component by getting the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription stream for the authetnication service\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object used to determine if profile link should be\nincluded in the nav bar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Navigation bar at the top of the site\n */\n@Component({\n    selector: 'cricket-nav',\n    templateUrl: './nav.template.html',\n    styleUrls: ['./nav.style.css']\n})\nexport class NavComponent implements OnInit, OnDestroy {\n\n  /**\n   * User object used to determine if profile link should be\n   * included in the nav bar\n   */\n  private user: User;\n  /**\n   * Subscription stream for the authetnication service\n   */\n  private subscription: any;\n\n  constructor(private _authService: AuthenticationService) {\n    }\n\n  /**\n   * Initiate the component by getting the current user\n   */\n  ngOnInit(){\n    this.subscription = this._authService.getUser$\n    .subscribe((res)=>{\n      this.user = res\n    });\n  }\n\n  /**\n   * Destory the component by unsubscribing, if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n    \n  \n-->\n\n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n      \n        Help\n      \n      \n        Profile\n        \n          Sign out\n        \n      \n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Cricket                              Scenarios            -->          Cricket                              Scenarios                    Help                    Profile                  Sign out                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotAuthComponent.html":{"url":"components/NotAuthComponent.html","title":"component - NotAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/not-auth/not-auth.component.ts\n\n\n    \n        Description\n    \n    \n        A basic view component when user tries to access an admin\npage but does not have admin access\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-auth\n            \n\n\n\n\n            \n                templateUrl\n                ./not-auth.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A basic view component when user tries to access an admin\n * page but does not have admin access\n */\n@Component({\n  selector: 'not-auth',\n  templateUrl: './not-auth.template.html'\n})\n\nexport class NotAuthComponent{\n\n}\n\n    \n\n    \n        \n  \n    NOT AUTHORIZED\n    Return\n      Home\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NOT AUTHORIZED    Return      Home      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        When URL goes to a page that doesn't exist;\nThis is simple, visual component needed to get the template\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/page-not-found/page-not-found.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * When URL goes to a page that doesn't exist;\n * This is simple, visual component needed to get the template\n */\n@Component({\n  selector: 'page-not-found',\n  templateUrl: './page-not-found.template.html',\n})\n\nexport class PageNotFoundComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n  Page Not Found\n\n  Go Back Home\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Page Not Found  Go Back Home'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PeopleListNamesPipe.html":{"url":"pipes/PeopleListNamesPipe.html","title":"pipe - PeopleListNamesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PeopleListNamesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/people-list-names.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format a list of user's or students frist and last name as \"firstName lastName\"\n\nWhen reverse is true, format as \"lastName, firstName\"\nAble to handle when only first or last name is set\n\nUsage: {{ peopleList | peopleListNames:isReverse }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            Normal output :  \n[{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mickey Mouse, Donald Duck\"\n                        \n                        \n                            Reverse ouput :  \n[{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mouse, Mickey; Duck, Donald\"\n                        \n                        \n                            Missing names :  \n[{firstName: undefined, lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: undefined}] becomes \"Mouse, Donald\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        peopleListNames\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(personList: any[], reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/people-list-names.pipe.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personList\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format a list of user's or students frist and last name as \"firstName lastName\"\n * - When reverse is true, format as \"lastName, firstName\"\n * - Able to handle when only first or last name is set\n *\n * **Usage:** `{{ peopleList | peopleListNames:isReverse }}`\n *\n * @example Normal output :  \n * [{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mickey Mouse, Donald Duck\"\n * @example Reverse ouput :  \n * [{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mouse, Mickey; Duck, Donald\"\n * @example Missing names :  \n * [{firstName: undefined, lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: undefined}] becomes \"Mouse, Donald\"\n */\n@Pipe({name: 'peopleListNames'})\nexport class PeopleListNamesPipe implements PipeTransform {\n\n  transform(personList: any[], reverse: boolean): string {\n    let out = '';\n    for(let person of personList){\n      let fName: string = person.firstName || '';\n      let lName: string = person.lastName || '';\n      if(out !== '' && (fName !== '' || lName !== '')){\n        out += (reverse ? '; ' : ', ');\n      }\n    if(reverse){\n      out += lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n      } else {\n    out += fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n      }\n    }// end for\n    return out\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PersonNamePipe.html":{"url":"pipes/PersonNamePipe.html","title":"pipe - PersonNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PersonNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/person-name.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format a user's or students frist and last name as \"firstName lastName\"\n\nWhen reverse is true, format as \"lastName, firstName\"\nAble to handle when only first or last name is set\n\nUsage: {{ person | personName:isReverse }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            Normal output :  \n{firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mickey Mouse\"\n                        \n                        \n                            Reverse output :  \n{firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mouse, Mickey\"\n                        \n                        \n                            First name only :  \n{firstName: \"Mickey\", lastName: undefined} becomes \"Mickey\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        personName\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(person: any, reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/person-name.pipe.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format a user's or students frist and last name as \"firstName lastName\"\n * - When reverse is true, format as \"lastName, firstName\"\n * - Able to handle when only first or last name is set\n *\n * **Usage:** `{{ person | personName:isReverse }}`\n *\n * @example Normal output :  \n * {firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mickey Mouse\"\n * @example Reverse output :  \n * {firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mouse, Mickey\"\n * @example First name only :  \n * {firstName: \"Mickey\", lastName: undefined} becomes \"Mickey\"\n*/\n@Pipe({name: 'personName'})\nexport class PersonNamePipe implements PipeTransform {\n\n  transform(person: any, reverse: boolean): string {\n    let fName: string = person.firstName || '';\n    let lName: string = person.lastName || '';\n  if(reverse){\n    return lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n  } else {\n    return fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n  }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Phage.html":{"url":"interfaces/Phage.html","title":"interface - Phage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Phage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Base phage interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        strainNum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MongoDB object ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strainNum\n                                    \n                                \n                                \n                                    \n                                        strainNum:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Location in fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageDeletionsPipe.html":{"url":"pipes/PhageDeletionsPipe.html","title":"pipe - PhageDeletionsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageDeletionsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-deletions.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's deletions (if any)\nUsage: {{ deletionlist | phageDeletions }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One deletion:  \n[50,145] becomes \"50 - 145\"\n                        \n                        \n                            Multiple deletions:  \n[50, 140, 190, 260] becomes \"50 - 140, 190 - 260\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageDeletions\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(deletion: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-deletions.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deletion\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format the textual presentation of a phage strain's deletions (if any)\n *\n * **Usage:** `{{ deletionlist | phageDeletions }}`\n *\n * @example One deletion:  \n * [50,145] becomes \"50 - 145\"\n * @example Multiple deletions:  \n * [50, 140, 190, 260] becomes \"50 - 140, 190 - 260\"\n */\n@Pipe({name: 'phageDeletions'})\nexport class PhageDeletionsPipe implements PipeTransform {\n\n  transform(deletion: number[]): string {\n    let out = '';\n    let mLength = (deletion.length % 2 === 0 ? deletion.length : deletion.length -1);\n\n    for(let i = 0; i  1 ? ', ' : '');\n      out += deletion[i] + ' - ' + deletion[i+1];\n    }\n\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhageDialogComponent.html":{"url":"components/PhageDialogComponent.html","title":"component - PhageDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhageDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/fridge/phage-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Modal dialog box for individual phage strains\nUsed to edit phage comment, view phage parents, or delete phage\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                phage-dialog-content\n            \n\n\n\n\n            \n                templateUrl\n                ./phage-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/fridge/phage-dialog.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                        The phage we are viewing\n\n                            \n                            Type:    FridgePhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\nimport { FridgePhage } from '../../interfaces/phage.interface';\n\n/**\n * Modal dialog box for individual phage strains\n * Used to edit phage comment, view phage parents, or delete phage\n */\n@Component({\n  selector: 'phage-dialog-content',\n  templateUrl: './phage-dialog.template.html'\n})\nexport class PhageDialogComponent {\n  /**\n   * The phage we are viewing\n   */\n  @Input() phage: FridgePhage;\n\n  constructor(public activeModal: NgbActiveModal) {\n  }\n\n}\n\n    \n\n    \n        \n  Strain {{phage.strainNum + 1}}\n  \n        &times;\n      \n\n\n  \n    \n      Type\n      \n        \n      \n    \n    \n    \n      Comment\n      \n        \n      \n    \n    \n    \n      Submitted\n      \n        \n      \n    \n    \n\n     0\" id=\"viewParents\" class=\"row form-group mb-1\">\n      Parents\n      \n        {{phage.parents | phageParents:phage.numParents}}\n      \n    \n    \n  \n\n\n\n  Delete\n  Cancel\n  Save\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Strain {{phage.strainNum + 1}}          ×                  Type                                      Comment                                      Submitted                                 0\" id=\"viewParents\" class=\"row form-group mb-1\">      Parents              {{phage.parents | phageParents:phage.numParents}}                  Delete  Cancel  Save'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhageDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageGuessesPipe.html":{"url":"pipes/PhageGuessesPipe.html","title":"pipe - PhageGuessesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageGuessesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-guesses.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of the deletion guessses for\na user's phage strain; uses a scenario global variable deletionGuessLength to determine\nthe ranges\nUsage: {{ guessList | phageGuesses }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One deletion guess:  \n[false, true, true, true, false, ...] becomes \"10-40\"\n                        \n                        \n                            No deletion guesses:  \n[false, ..., false] becomes \"None\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageGuesses\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(guesses: boolean[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-guesses.pipe.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        guesses\n                                                        \n                                                                    boolean[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ScenarioGlobals } from '../scenario/scenario.globals';\n\n/**\n * Format the textual presentation of the deletion guessses for\n * a user's phage strain; uses a [scenario global]{@link\n * ScenarioGlobals} variable `deletionGuessLength` to determine\n * the ranges\n *\n * **Usage:** `{{ guessList | phageGuesses }}`\n *\n * @example One deletion guess:  \n * [false, true, true, true, false, ...] becomes \"10-40\"\n * @example No deletion guesses:  \n * [false, ..., false] becomes \"None\"\n */\n\n@Pipe({name: 'phageGuesses'})\nexport class PhageGuessesPipe implements PipeTransform {\n\n  transform(guesses: boolean[]): string {\n    let stepSize = ScenarioGlobals.deletionGuessLength;\n    let out = '';\n    let x=-1;\n    for(let i in guesses){\n      let y: number = +i;\n      // start new deletion\n      if(x = 0 && guesses[y] === false){\n        let z = (stepSize * y);\n        out += (out === '' ? '' : ', ');\n        out += x + ' - ' + z;\n        x = -1;\n      }\n    }\n    // check for the last possible deletion\n    if(x != -1){\n      out += (out === '' ? '' : ', ');\n      out += x + ' - ' + ScenarioGlobals.geneLength;\n    }\n    if(out === ''){\n      return 'None';\n    } else {\n    return out;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageMutationsPipe.html":{"url":"pipes/PhageMutationsPipe.html","title":"pipe - PhageMutationsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageMutationsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-mutations.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's frameshift mutations (if any)\nUsage: {{ mutationList | phageMutations }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One negative frameshift mutation:  \n[-87] becomes \"-1 at 87\"\n                        \n                        \n                            One positive frameshift mutation:  \n[163] becomes \"+1 at 163\"\n                        \n                        \n                            Multiple frameshift mutations:  \n[32, -208] becomes \"+1 at 32, -1 at 208\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageMutations\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(mutations: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-mutations.pipe.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mutations\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format the textual presentation of a phage strain's frameshift mutations (if any)\n *\n * **Usage:** `{{ mutationList | phageMutations }}`\n *\n * @example One negative frameshift mutation:  \n * [-87] becomes \"-1 at 87\"\n * @example One positive frameshift mutation:  \n * [163] becomes \"+1 at 163\"\n * @example Multiple frameshift mutations:  \n * [32, -208] becomes \"+1 at 32, -1 at 208\"\n */\n@Pipe({name: 'phageMutations'})\nexport class PhageMutationsPipe implements PipeTransform {\n\n  transform(mutations: number[]): string {\n    let out = '';\n    for(let x of mutations){\n      out += (out === '' ? '' : ', ');\n      let y = (x > 0 ? '+1' : '-1');\n      let z = Math.abs(x);\n      out += y + ' at ' + z;\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageParentsPipe.html":{"url":"pipes/PhageParentsPipe.html","title":"pipe - PhageParentsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageParentsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-parents.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's parents\n(if any) when viewing the dialog box for a phage\nThe numParents variable is used to determine if one of the\nparents had been deleted from the database when parents.length != numParents\nNote: the phage strainNum are 0-based but UI is 1-based so\nthe strain number is adjusted\nUsage: {{parentsList | phageParents:numParents}}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One parent :  \n{parents: [{id: 'id1', strainNum: '4'}], numParents: 1} becomes \"Strain 5\"\n                        \n                        \n                            Two parents:  \n{parents: [{id: 'id1', strainNum: 4}, {id: 'id2', strainNum: 10}], numParents: 2} becomes \"Strains 5 and 11\"\n                        \n                        \n                            Two parents but missing one:  \n{parents: [{id: 'id3', strainNum: 8}], numParents: 2} becomes \"Strains 9 and ?\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageParents\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(parents: Phage[], numParents: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-parents.pipe.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parents\n                                                        \n                                                                    Phage[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        numParents\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Phage } from '../interfaces/phage.interface';\n\n/**\n * Format the textual presentation of a phage strain's parents\n * (if any) when viewing the dialog box for a phage\n *\n * The `numParents` variable is used to determine if one of the\n * parents had been deleted from the database when `parents.length != numParents`\n *\n * Note: the phage `strainNum` are 0-based but UI is 1-based so\n * the strain number is adjusted\n *\n * **Usage:** `{{parentsList | phageParents:numParents}}`\n *\n * @example One parent :  \n * {parents: [{id: 'id1', strainNum: '4'}], numParents: 1} becomes \"Strain 5\"\n * @example Two parents:  \n * {parents: [{id: 'id1', strainNum: 4}, {id: 'id2', strainNum: 10}], numParents: 2} becomes \"Strains 5 and 11\"\n * @example Two parents but missing one:  \n * {parents: [{id: 'id3', strainNum: 8}], numParents: 2} becomes \"Strains 9 and ?\"\n */\n@Pipe({name: 'phageParents'})\nexport class PhageParentsPipe implements PipeTransform {\n\n  transform(parents: Phage[], numParents: number): string {\n    let out = '';\n    if(numParents === undefined){\n      numParents = parents.length\n    }\n    if(parents.length === 0){\n      return out;\n    }\n    let sorted: Phage[] = parents.sort((n1, n2)=>{return n1.strainNum - n2.strainNum});\n    let nums = sorted.map((phage)=>{return (phage.strainNum+1).toString()});\n\n    if(sorted.length === 1 && numParents === 1){\n      out = 'Strain ' + nums[0];\n    } else if(sorted.length === 1 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ?';\n    } else if(sorted.length === 2 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ' + nums[1];\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateInput.html":{"url":"interfaces/PlateInput.html","title":"interface - PlateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to create a new plate\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        phage1\n                                \n                                \n                                        phage2\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phage1\n                                    \n                                \n                                \n                                    \n                                        phage1:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phage2\n                                    \n                                \n                                \n                                    \n                                        phage2:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateResults.html":{"url":"interfaces/PlateResults.html","title":"interface - PlateResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Data from server representing the lab room plate\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        full\n                                \n                                \n                                        genotypes\n                                \n                                \n                                        largePlaque\n                                \n                                \n                                        parents\n                                \n                                \n                                        smallPlaque\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        full\n                                    \n                                \n                                \n                                    \n                                        full:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is the plate over capacity?\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genotypes\n                                    \n                                \n                                \n                                    \n                                        genotypes:     _genotype[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _genotype[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of genotypes of the phage of the plate; several individual\nphage from \"smallPlaque\" and \"largePlaque\" can correspond to the\nsame genotype\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        largePlaque\n                                    \n                                \n                                \n                                    \n                                        largePlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    mutatnt phenotype phage on the plate; each number indicates\nthe index of the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage used to create this plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smallPlaque\n                                    \n                                \n                                \n                                    \n                                        smallPlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    WT-phenotype phage on the plate; each number indicates the index\nof the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlexerInput.html":{"url":"interfaces/PlexerInput.html","title":"interface - PlexerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlexerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to submit the plexer\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colPhage\n                                \n                                \n                                        rowPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colPhage\n                                    \n                                \n                                \n                                    \n                                        colPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the columns of the plexer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowPhage\n                                    \n                                \n                                \n                                    \n                                        rowPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the rows of the plexer\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  ProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/profile/profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                UpdatePasswordComponent\n                            \n                            \n                                UserProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProfileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ProfileRoutes } from './profile.routes';\nimport { ProfileService } from './profile.service';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ProfileRoutes)\n  ],\n  declarations: [\n    UserProfileComponent,\n    UpdatePasswordComponent\n  ],\n  providers: [\n    ProfileService\n  ]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Functions which communicate to backend to allow\nusers to update their profile and/or change the password\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editProfile\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \neditProfile(userId: number, details: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Edit details about the user profile including\n\nNme\nEmail address\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of the logged in user\n\n                                                        \n                                                \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                user details to update with\nexisiting information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe updated user information\nor error \"User does not exist\" if non-existant user\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword(userId: number, credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Update the user's password once already signed in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of logged in user\n\n                                                        \n                                                \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npassword information\nincludes: \"password\" (old password) and \"newPassword\"  (password to update to)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about the user just updated\nor error \"User does not exist\" if non-existant user\nor error \"Incorrect password\" if wrong old password\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/users/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                        Leading backend url path\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Functions which communicate to backend to allow\n * users to update their profile and/or change the password\n */\n@Injectable()\nexport class ProfileService {\n\n  /**\n   * Leading backend url path\n   */\n  private _baseUrl: string = '/api/users/';\n\n  constructor(private http: HttpClient){}\n\n  /**\n   * Edit details about the user profile including\n   * 1. Nme\n   * 2. Email address\n   *\n   * @param {number} userId userID of the logged in user\n   * @param {any} details user details to update with\n   * exisiting information\n   *\n   * @returns {Observable} - The updated user information\n   * - or error \"User does not exist\" if non-existant user\n   * - or other server/database error\n   */\n  editProfile(userId: number, details: any): Observable{\n    return this.http.post(this._baseUrl + userId, details);\n  }\n\n  /**\n   * Update the user's password once already signed in\n   *\n   * @param {number} userId userID of logged in user\n   * @param {any} credentials - password information\n   * - includes: \"password\" (old password) and \"newPassword\"  (password to update to)\n   *\n   * @returns {Observable} - information about the user just updated\n   * - or error \"User does not exist\" if non-existant user\n   * - or error \"Incorrect password\" if wrong old password\n   * - or other server/database error\n   */\n  updatePassword(userId: number, credentials: any): Observable{\n    return this.http.post(this._baseUrl + userId + '/update-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/reset-password/reset-password.component.ts\n\n\n    \n        Description\n    \n    \n        After user requests to reset password and they have a token,\nthis component allows them to set the password to a new password\n(assuming token is valid)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                reset-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDisabled\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/reset-password/reset-password.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n_checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Compares the input passwords to make sure they are both specified and that they match each other\n\n\n                            \n                                Returns :     \"Enter new password\" | \"Confirm new password\" | \"Confirm password does not match\" | \"\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from authentication service if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the token from the URL\nIf there is no token, give error message and disable submit button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendReset\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendReset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Attempts to reset the new password\n\nCheck the input passwords for errors\nIf no errors, send credentials to server\nPassword correctly reset, displays the success message\nIf error reseting the password, displays error message\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        Email and new passwords to be able to update the database\n\npassword - the new password to set\nconfirmPassword - confirm password typed correctly\ntoken - password reset token to confirm user had access to the email and didn't wait too long\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                        Potential error message from server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:41\n                            \n                        \n\n                \n                    \n                        Is the submit button disabled; this would happen when\nthere is no token\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:36\n                            \n                        \n\n                \n                    \n                        Subscription to AuthenticationService when retting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        Message when new password successfully saved\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * After user requests to reset password and they have a token,\n * this component allows them to set the password to a new password\n * (assuming token is valid)\n */\n@Component({\n    selector: 'reset-pswd',\n    templateUrl: './reset-password.template.html'\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  /**\n   * Potential error message from server\n   */\n    private errorMessage: string = '';\n  /**\n   * Message when new password successfully saved\n   */\n  private successMessage: string = '';\n  /**\n   * Email and new passwords to be able to update the database\n   * - `password` - the new password to set\n   * - `confirmPassword` - confirm password typed correctly\n   * - `token` - password reset token to confirm user had access to the email and didn't wait too long\n   */\n    private credentials: any;\n  /**\n   * Subscription to {@link AuthenticationService} when retting\n   */\n  private subscription: Subscription;\n  /**\n   * Is the submit button disabled; this would happen when\n   * there is no token\n   */\n  private isDisabled: boolean = false;\n\n    constructor(\n      private _authenticationService: AuthenticationService,\n      private _route: ActivatedRoute\n    ) {\n      this.credentials = {\n        password: '',\n        confirmPassword: '',\n        token: null\n      }\n    }\n  /**\n   * When initializing the component, get the token from the URL\n   *\n   * If there is no token, give error message and disable submit button\n   */\n  ngOnInit(){\n    this.credentials.token = this._route.snapshot.paramMap.get('token');\n    if(this.credentials.token === ''){\n      this.errorMessage = 'No token specified';\n      this.isDisabled = true;\n    }\n  }\n\n  /**\n   * Attempts to reset the new password\n   * 1. Check the input passwords for errors\n   * 2. If no errors, send credentials to server\n   * 3. Password correctly reset, displays the success message\n   * 4. If error reseting the password, displays error message\n   */\n    sendReset() {\n      this.successMessage = '';\n       this.errorMessage = this._checkPasswords();\n      if(this.errorMessage === ''){ // able to submit\n        this.subscription = this._authenticationService\n          .resetPassword(this.credentials)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.credentials.password = '';\n          this.credentials.confirmPassword = '';\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n      }\n    }\n\n  /**\n   * Compares the input passwords to make sure they are both specified and that they match each other\n   */\n  _checkPasswords(){\n    let p = this.credentials.password;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * On component destruction, unsubscribe from authentication service if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Reset Password\n    \n      New Password\n      \n        \n        \n        Must have at least 6 characters\n        \n      \n    \n    \n    \n      Confirm\n      \n        \n\n      \n    \n    \n    Submit\n\n    \n      {{ successMessage }} Go sign in.\n    \n    \n      {{ errorMessage }}\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Reset Password          New Password                              Must have at least 6 characters                                Confirm                                Submit          {{ successMessage }} Go sign in.              {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenario.html":{"url":"interfaces/Scenario.html","title":"interface - Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/scenario.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed about each scenario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        purpose\n                                \n                                \n                                        relevance\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        startingPoint\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human-readable visible label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purpose\n                                    \n                                \n                                \n                                    \n                                        purpose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Goal for completing the scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relevance\n                                    \n                                \n                                \n                                    \n                                        relevance:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The reason this scenario is important for learning\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Short string ID for the scenario; used in the URL and for linking\nscenario to other objects\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startingPoint\n                                    \n                                \n                                \n                                    \n                                        startingPoint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of phage strains to begin the scenario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Scenario{\n  /**\n   * Human-readable visible label\n   */\n  label: string;\n  /**\n   * Short string ID for the scenario; used in the URL and for linking\n   * scenario to other objects\n   */\n  scenCode: string;\n  /**\n   * Goal for completing the scenario\n   */\n  purpose: string;\n  /**\n   * Description of phage strains to begin the scenario\n   */\n  startingPoint: string;\n  /**\n   * The reason this scenario is important for learning\n   */\n  relevance: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScenarioComponent.html":{"url":"components/ScenarioComponent.html","title":"component - ScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/scenario.component.ts\n\n\n    \n        Description\n    \n    \n        View component used to link the breadcrumb with the location\nmodule components or scenario list\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario\n            \n\n\n\n\n            \n                templateUrl\n                ./scenario.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * View component used to link the breadcrumb with the location\n * module components or scenario list\n */\n@Component({\n  selector: 'scenario',\n  templateUrl: './scenario.template.html'\n})\n\nexport class ScenarioComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScenarioModule.html":{"url":"modules/ScenarioModule.html","title":"module - ScenarioModule","body":"\n                   \n\n\n\n\n  Modules\n  ScenarioModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_ScenarioModule_imports\n\n\n\n\nListComponent\n\nListComponent\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/scenario.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for scenario-related components and modules\nMainly used to be able to async load the specific scenarios via the LocationModule\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ListComponent\n                            \n                            \n                                ScenarioComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ScenarioRoutes } from './scenario.routes';\nimport { ScenarioComponent } from './scenario.component';\nimport { ListComponent } from './list/list.component';\n\n/**\n * Module for scenario-related components and modules\n *\n * Mainly used to be able to async load the specific scenarios via the {@link LocationModule}\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ScenarioRoutes)\n  ],\n  declarations: [\n    ScenarioComponent,\n    ListComponent\n  ]\n})\nexport class ScenarioModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScenarioResolver.html":{"url":"injectables/ScenarioResolver.html","title":"injectable - ScenarioResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ScenarioResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/scenario.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Resolves a route URL to get the scenario id (from the url)\nthen uses that to get the scenario label using scenario service\nThis is used to generate human-readable breadcrumb labels\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/scenario.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/scenario.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method required by implementation\nBased on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                current root URL\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe scenario object corresponding to do the url param ID if it exists\nor empty scenario if it does not exist\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ScenarioService } from './scenario.service';\nimport { Scenario } from '../interfaces/scenario.interface';\n\n/**\n * Resolves a route URL to get the scenario id (from the url)\n * then uses that to get the scenario label using scenario service\n *\n * This is used to generate human-readable breadcrumb labels\n */\n@Injectable()\nexport class ScenarioResolver implements Resolve {\n\n  constructor(private _scenarioService: ScenarioService) { }\n\n  /**\n   * Method required by implementation\n   * Based on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n   *\n   * @param {ActivatedRouteSnapshot} route current root URL\n   * @param {RouterStateSanpshot} current route snapshot\n   *\n   * @returns {Scenario} - The scenario object corresponding to do the url param ID if it exists\n   - or empty scenario if it does not exist\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\n    const scenCode = route.params['scenId'];\n\n    if (scenCode) {\n      return this._scenarioService.getScenario(scenCode);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Shared Module contains modules, pipes, and components\nthat are needed across the application\nSaves time by importing this module rather than the\npipes/modules/components individually\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                            \n                                PeopleListNamesPipe\n                            \n                            \n                                PersonNamePipe\n                            \n                            \n                                PhageParentsPipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfirmDeleteDialogComponent\n                            \n                            \n                                    PeopleListNamesPipe\n                            \n                            \n                                    PersonNamePipe\n                            \n                            \n                                    PhageParentsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DndModule } from 'ng2-dnd';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { McBreadcrumbsModule } from 'ngx-breadcrumbs';\nimport { SkyhookDndModule } from 'angular-skyhook';\nimport { default as TouchBackend } from 'react-dnd-touch-backend';\n\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog.component';\n\nimport { PersonNamePipe } from '../pipes/person-name.pipe';\nimport { PeopleListNamesPipe } from '../pipes/people-list-names.pipe';\nimport { PhageParentsPipe } from '../pipes/phage-parents.pipe';\n\n/**\n * The Shared Module contains modules, pipes, and components\n * that are needed across the application\n *\n * Saves time by importing this module rather than the\n * pipes/modules/components individually\n */\n@NgModule({\n    imports: [\n      CommonModule,\n      FormsModule,\n      DndModule.forRoot(),\n      NgbModule.forRoot(),\n      McBreadcrumbsModule.forRoot(),\n      SkyhookDndModule.forRoot({ backend: TouchBackend })\n    ],\n  declarations: [\n    PersonNamePipe,\n    PeopleListNamesPipe,\n    PhageParentsPipe,\n    ConfirmDeleteDialogComponent\n  ],\n    exports: [\n      CommonModule,\n      FormsModule,\n      DndModule,\n      NgbModule,\n      McBreadcrumbsModule,\n      PersonNamePipe,\n      PeopleListNamesPipe,\n      PhageParentsPipe,\n      SkyhookDndModule,\n      ConfirmDeleteDialogComponent\n    ],\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signin/signin.component.ts\n\n\n    \n        Description\n    \n    \n        Component for existing users to sign in and be able\nto access their scenarios/fridges\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signin\n            \n\n\n\n\n            \n                templateUrl\n                ./signin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signin/signin.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            On component desctruction, unsubscribe from the authentication service if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Upon form submission, attempts to sign in the user with credentials (using the service)\nWhen successful, navigate to\n\nthe redirect URL if set (when non-logged in user tries to access a page that required logging in)\nthe home page if redirect URL is not set\n\nWhen unsuccessful, display error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:24\n                            \n                        \n\n                \n                    \n                        Login credentials for user including username (email) and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:20\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:28\n                            \n                        \n\n                \n                    \n                        Authetnication service subscription from when trying to login the user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Component for existing users to sign in and be able\n * to access their scenarios/fridges\n */\n@Component({\n    selector: 'signin',\n    templateUrl: './signin.template.html'\n})\nexport class SigninComponent implements OnDestroy {\n  /**\n   * Potential error message\n   */\n  errorMessage: string;\n  /**\n   * Login credentials for user including `username` (email) and `password`\n   */\n    credentials: any = {};\n  /**\n   * Authetnication service subscription from when trying to login the user\n   */\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService,\n        private _router: Router) { }\n\n  /**\n   * Upon form submission, attempts to sign in the user with `credentials` (using the service)\n   *\n   * When successful, navigate to\n   * - the redirect URL if set (when non-logged in user tries to access a page that required logging in)\n   * - the home page if redirect URL is not set\n   *\n   * When unsuccessful, display error message\n   */\n    signin() {\n        this.subscription = this._authenticationService\n          .signin(this.credentials)\n          .subscribe((result) => {\n          // TODO: update\n          this._authenticationService.setUser(result);\n          let redirect = this._authenticationService.redirectUrl ? this._authenticationService.redirectUrl : '/';\n          this._router.navigate([redirect]);\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  /**\n   * On component desctruction, unsubscribe from the authentication service if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign in\n    \n      Email\n      \n        \n      \n    \n    \n    \n      Password\n      \n        \n      \n     \n    {{errorMessage}}\n    \n      \n        Sign in \n      \n      \n        Forget password?\n      \n     \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign in          Email                                      Password                             {{errorMessage}}                  Sign in                     Forget password?             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignoutComponent.html":{"url":"components/SignoutComponent.html","title":"component - SignoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signout/signout.component.ts\n\n\n    \n        Description\n    \n    \n        Component that a user signs out. Has no view/template--resets\nvariables and navigate to home page\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signout\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signout/signout.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from authentication service if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            On component creation\n\nSign out user on server\nUnset AuthenticationService user\nRedirect to home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AuthenticationService } from '../authentication.service';\n\n/**\n * Component that a user signs out. Has no view/template--resets\n * variables and navigate to home page\n */\n@Component({\n  selector: 'signout',\n  template: ''\n})\n\nexport class SignoutComponent implements OnInit, OnDestroy{\n\n  private subscription: Subscription;\n\n  constructor(\n    private _authService: AuthenticationService,\n    private _router: Router\n  ){}\n\n  /**\n   * On component creation\n   * 1. Sign out user on server\n   * 2. Unset [AuthenticationService]{@link AuthenticationService} user\n   * 3. Redirect to home page\n   */\n  ngOnInit(){\n    this.subscription = this._authService.signout()\n      .subscribe((res)=>{\n        this._authService.setUser(null);\n        this._router.navigate(['/']);\n    })\n  }\n\n  /**\n   * On component destruction, unsubscribe from authentication service if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        This component allows new users to sign up to use Cricket.\nUses email as username and includes several error\nchecks\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signup\n            \n\n\n\n\n            \n                templateUrl\n                ./signup.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                cPassword\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _reorderCourses\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _courseService: CourseService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signup/signup.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _reorderCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _reorderCourses(courses: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Order the courses so the \"NA\" course is at the top\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of currently available courses; each item in list has courseNum and id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    the list ordered so the \"NA\" course is at the top\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            On component desctruction, unsubscribe from services to prevent a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            On component creation, get the list of available courses and order them\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            \nAttempts to sign the user up when they submit the form\nIncludes error checks for selecting a course and passwords match\nWhen sign-up is successful, sets the [logged in user]\n{@link authentication.service} and navigates to the home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:31\n                            \n                        \n\n                \n                    \n                        List of courses available to sign up for;\nAll users must select a course, even if the course is \"NA\"\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:44\n                            \n                        \n\n                \n                    \n                        Confirmation password; must match user.password to submit the signup form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:26\n                            \n                        \n\n                \n                    \n                        Potential backend error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:48\n                            \n                        \n\n                \n                    \n                        Boolean state object to make unsubscribing from multiple services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:40\n                            \n                        \n\n                \n                    \n                        User details used for signup\n\nfirstName\nlastName\nusername (email address)\ncourse (database course ID not course name)\npasssword\n\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\n\n\n\nimport { AuthenticationService } from '../authentication.service';\nimport { CourseService } from '../../admin/course/course.service';\nimport { readErrorMessage } from '../../shared/read-error'\n\n/**\n * This component allows new users to sign up to use Cricket.\n * Uses email as username and includes several error\n * checks\n */\n@Component({\n    selector: 'signup',\n    templateUrl: './signup.template.html'\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  /**\n   * Potential backend error message\n   */\n  errorMessage: string = '';\n  /**\n   * List of courses available to sign up for;\n   * All users must select a course, even if the course is \"NA\"\n   */\n  private courses: string[] = [];\n  /**\n   * User details used for signup\n   * - `firstName`\n   * - `lastName`\n   * - `username` (email address)\n   * - `course` (database course ID not course name)\n   * - `passsword`\n   */\n  user: any = {};\n  /**\n   * Confirmation password; must match `user.password` to submit the signup form\n   */\n  private cPassword: string;\n  /**\n   * Boolean state object to make unsubscribing from multiple services easier\n   */\n  private isDestroyed$: Subject;\n\n  constructor(private _authenticationService: AuthenticationService,\n        private _courseService: CourseService,\n        private _router: Router) {\n      this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Order the courses so the \"NA\" course is at the top\n   *\n   * @param {any[]} courses list of currently available courses; each item in list has `courseNum` and `id`\n   *\n   * @returns {any[]} the list ordered so the \"NA\" course is at the top\n   */\n  private _reorderCourses(courses: any[]): any[]{\n    let na = courses.filter((c)=>{return c.courseNum === 'NA'});\n    let other = courses.filter((c)=>{\n      return c.courseNum !== 'NA'\n    });\n    return na.concat(other);\n  }\n\n  /**\n   * On component creation, get the list of available courses and order them\n   */\n  ngOnInit(){\n    this._courseService.getCourseList()\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        let tmp = this._reorderCourses(res);\n        this.courses = tmp;\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n      this.courses = [];\n    });\n  }\n\n  /**\n   * - Attempts to sign the user up when they submit the form\n   * - Includes error checks for selecting a course and passwords match\n   * - When sign-up is successful, sets the [logged in user]\n   * {@link authentication.service} and navigates to the home page\n   */\n  signup() {\n      if(this.user.course === undefined){\n        this.errorMessage = 'Select a course'\n      } else if(this.user.password !== this.cPassword){\n        this.errorMessage = 'Passwords must match'\n      } else {\n          this._authenticationService\n          .signup(this.user)\n      .takeUntil(this.isDestroyed$)\n          .subscribe((result) => {\n          this._authenticationService.setUser(result);\n          this._router.navigate(['/'])\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n      }\n    }\n\n  /**\n   * On component desctruction, unsubscribe from services to prevent a memory leak\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign up \n\n    \n      \n        First name\n        \n      \n\n      \n        Last name\n        \n      \n    \n    \n\n    \n      Email address\n      \n    \n    \n\n    \n      Course\n      \n        Select course\n        {{ course.courseNum }}\n      \n    \n    \n\n    \n      \n        Password\n        \n        \n        Must have at least 6 characters\n        \n      \n      \n          \n        \n      \n     \n    {{errorMessage}}\n    Sign up\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign up                   First name                            Last name                                Email address                        Course              Select course        {{ course.courseNum }}                                Password                        Must have at least 6 characters                                                     {{errorMessage}}    Sign up  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Student.html":{"url":"interfaces/Student.html","title":"interface - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed as a user using the app in scenarios\n\n            \n\n            \n                Extends\n            \n            \n                    _User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentFridge.html":{"url":"interfaces/StudentFridge.html","title":"interface - StudentFridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentFridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                Fridge information used by admin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        owner\n                                \n                                \n                                        scenario\n                                \n                                \n                                            Optional\n                                        strains\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, has access been granted for this user/scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, the deletion guesses by the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:     _User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Owner of the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenario\n                                    \n                                \n                                \n                                    \n                                        scenario:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario this fridge is for\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     StudentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StudentPhage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If fridge exists, the list of phage that are in this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentFridgeComponent.html":{"url":"components/StudentFridgeComponent.html","title":"component - StudentFridgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentFridgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-fridge.component.ts\n\n\n    \n        Description\n    \n    \n        Component to view the phage strains for a specific student\nand scenario\nAdmin is able to see each phage's mutations, deletions, comments, and possibly mutation guesses\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-fridge\n            \n\n\n\n\n            \n                templateUrl\n                ./student-fridge.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Protected\n                                fridge\n                            \n                            \n                                    Protected\n                                hasFridge\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                strainList\n                            \n                            \n                                    Private\n                                viewStrains\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonClass\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setPhage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Determine the CSS class for the view strains button depending on selected option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton determining classes for\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            View strains is \"all\"\ngetButtonClass('all') -> {'btn btn-small': true, 'btn-primary': true, 'btn-primary-outline': false}\ngetButtonClass('graded') -> {'btn btn-small': true, 'btn-primary': false, 'btn-primary-outline': true}\n\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    classes which appy to this button in the form {\"class\": boolean, ...}\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            When destorying the component, unsubscribe from services and\nobservables to prevent memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nGet studentId, scenarioId, and admin\nGet the fridge\nIf the fridge exists\n3a. add the \"guesses\" to each strain\n3b. sort the strains by strain number\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPhage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPhage(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            update the list of visible phage appropriately\nCalled on (click) of \"View Strain\" button\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton which was clicked;\nShould be one of [\"all\", \"graded\"]\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:59\n                            \n                        \n\n                \n                    \n                        Error message from the server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fridge:     StudentFridge\n\n                    \n                \n                    \n                        \n                            Type :     StudentFridge\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:30\n                            \n                        \n\n                \n                    \n                        Fridge object (if it exists)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            hasFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasFridge:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:34\n                            \n                        \n\n                \n                    \n                        If fridge exists determine by if this.fridge has strains\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:38\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:42\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            strainList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        strainList:     StudentPhage[]\n\n                    \n                \n                    \n                        \n                            Type :     StudentPhage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:55\n                            \n                        \n\n                \n                    \n                        List of phage currently being viewed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewStrains\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewStrains:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:51\n                            \n                        \n\n                \n                    \n                        Option to show all strains in fridge or\nonly strains of interest for grading (unknown\nand submitted)\nShould be \"all\" or \"graded\"\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs';\n\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\n\nimport { Course, AdminStudent, Scenario, StudentPhage, StudentFridge } from '../../../interfaces';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * Component to view the phage strains for a specific student\n * and scenario\n *\n * Admin is able to see each phage's mutations, deletions, comments, and possibly mutation guesses\n */\n@Component({\n  selector: 'student-fridge',\n  templateUrl: './student-fridge.template.html'\n})\n\nexport class StudentFridgeComponent implements OnInit, OnDestroy {\n  /**\n   * Fridge object (if it exists)\n   */\n  protected fridge: StudentFridge;\n  /**\n   * If fridge exists determine by if this.fridge has strains\n   */\n  protected hasFridge: boolean = false;\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n  private isDestroyed$: Subject;\n   /**\n   * Subscription for URL parameters\n   */\n  private paramObserver: any;\n\n  /**\n   * Option to show all strains in fridge or\n   * only strains of interest for grading (unknown\n   * and submitted)\n   *\n   * Should be `\"all\"` or `\"graded\"`\n   */\n  private viewStrains: string = 'all';\n  /**\n   * List of phage currently being viewed\n   */\n  private strainList: StudentPhage[];\n  /**\n   * Error message from the server\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _studentService: StudentService,\n    private _authService: AuthenticationService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize the view\n   * 1. Get studentId, scenarioId, and admin\n   * 2. Get the fridge\n   * 3. If the fridge exists\n   * 3a. add the \"guesses\" to each strain\n   * 3b. sort the strains by strain number\n   */\n  ngOnInit(){\n    this.paramObserver = this._route.params.subscribe(params => {\n      let studentId = params['studentId'];\n      let scenId = params['scenId'];\n      let admin = this._authService.getUser();\n\n      this._studentService.getFridge(admin.id, studentId, scenId)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((fridge) => {\n              this.fridge = fridge;\n              this.hasFridge = (fridge.strains !== undefined);\n              if(this.hasFridge){\n                let guesses = JSON.parse(this.fridge.guesses);\n                for(let strain of this.fridge.strains){\n                  let x = guesses[strain.strainNum];\n                  if(x){\n                    strain.guesses = x;\n                  } else{\n                    strain.guesses = [];\n                  }\n                }\n                this.fridge.strains.sort((a,b)=>{return a.strainNum - b.strainNum});\n              }\n              this.setPhage('all');\n            },\n                (error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Determine the CSS class for the view strains button depending on selected option\n   *\n   * @param {string} src - button determining classes for\n   *\n   * @returns {Object} classes which appy to this button in the form {\"class\": boolean, ...}\n   *\n   * @example View strains is \"all\"\n   * getButtonClass('all') -> {'btn btn-small': true, 'btn-primary': true, 'btn-primary-outline': false}\n   * getButtonClass('graded') -> {'btn btn-small': true, 'btn-primary': false, 'btn-primary-outline': true}\n   */\n  getButtonClass(src: string): Object{\n    return {\n      'btn btn-sm': true,\n      'btn-primary': (src === this.viewStrains),\n      'btn-outline-primary': (src !== this.viewStrains)\n    }\n  }\n\n  /**\n   * update the list of visible phage appropriately\n   *\n   * Called on `(click)` of \"View Strain\" button\n   * @param {string} src - button which was clicked;\n   * Should be one of `[\"all\", \"graded\"]`\n   */\n  setPhage(src: string){\n    this.viewStrains = src;\n    if(this.viewStrains === 'all'){\n      this.strainList = this.fridge.strains;\n    } else {\n      this.strainList = this.fridge.strains.filter((strain)=>{\n        if(strain.phageType === 'unknown'){\n          return true;\n        } else if(strain.phageType === 'user' && strain.submitted){\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n\n  /**\n   * When destorying the component, unsubscribe from services and\n   * observables to prevent memory leak\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        {{ fridge.owner | personName }}\n      \n    \n\n    \n      {{ fridge.scenario.scenCode }}\n      {{ fridge.scenario.label }}\n      \n        Access granted: {{ fridge.accessGranted }}\n      \n    \n\n    \n      Fridge does not exist yet\n    \n    \n    \n      \n        \n          All Strains\n          Graded Strains\n        \n      \n      \n        \n          \n        \n       \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                      {{ fridge.owner | personName }}                    {{ fridge.scenario.scenCode }}      {{ fridge.scenario.label }}              Access granted: {{ fridge.accessGranted }}                    Fridge does not exist yet                                    All Strains          Graded Strains                                                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentFridgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentIndivComponent.html":{"url":"components/StudentIndivComponent.html","title":"component - StudentIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-indiv/student-indiv.component.ts\n\n\n    \n        Description\n    \n    \n        Component to view information for a single student\nThis includes email/name/role information and access status\nfor all scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-indiv\n            \n\n\n\n\n            \n                templateUrl\n                ./student-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                newRole\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                roles\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Protected\n                                student\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _callDelete\n                            \n                            \n                                checkDelete\n                            \n                            \n                                clickButton\n                            \n                            \n                                deleteDisabled\n                            \n                            \n                                getScenStatus\n                            \n                            \n                                getStudentCourse\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                roleButtonClass\n                            \n                            \n                                roleDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _studentService: StudentService, _scenarioService: ScenarioService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _callDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _callDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:263\n                            \n                        \n\n\n                \n                    \n                            Helper function which implements delete student after user\nconfirmed deletion\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:245\n                            \n                        \n\n\n                \n                    \n                            \nwhen clicking delete button, open a modal dialog to confirm delete\nif confirm, delete and redirect to students\notherwise, do nothing\n\nCalled on (click) of the \"Delete\" button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickButton\n                            \n                            \n                        \n                    \n                \n                \n                    \nclickButton(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:210\n                            \n                        \n\n\n                \n                    \n                            When clicking a role button, update the student role\nby calling student service\nCalled on (click) of one of the role buttons\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrole of button pushed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:226\n                            \n                        \n\n\n                \n                    \n                            Determine if delete button should be disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if viewing page of logged in user or if student is an admin\nfalse otherwise\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScenStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScenStatus(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Return formatted string based on if access granted for scenario\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario to look up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \"Access granted\", \"Access not granted\", or \"NA\"\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudentCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudentCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            \nGet a formatted HTML string based on the student\nIf student has a course, returns link to the course page\nIf student doesn't have a course, returns 'No course'\n\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    formatted HTML\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:147\n                            \n                        \n\n\n                \n                    \n                            Grant access for a specific scenario by calling student service\nCalled on (click) of one of the scenario buttons\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                scenario to grant access for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:278\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing to the services\nThis prevents a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Initialize component\n\nGet logged in user\nGet id of student of interest from URL\nGet the student's info\nGet list of all scenarios\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:194\n                            \n                        \n\n\n                \n                    \n                            Determine CSS classes for each role button based on the\nstudent's current role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Current student has role &quot;student&quot;\nroleButtonClass(&#39;student&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: true, &#39;btn-secondary-outline&#39;: false}\nroleButtonClass(&#39;admin&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: false, &#39;btn-secondary-outline&#39;: true}\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    possible classes with true/false as applicable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleDisabled(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:167\n                            \n                        \n\n\n                \n                    \n                            Determine if a role toggle button should be disabled\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    disable for roles greater than current user\nand if viewing page of current user\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:53\n                            \n                        \n\n                \n                    \n                        Logged in user who must be an admin or instructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:66\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:45\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple\nobservables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:61\n                            \n                        \n\n                \n                    \n                        New role to change to if allowed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:49\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roles:     \n\n                    \n                \n                    \n                        \n                            Default value : StudentRolesArray\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:57\n                            \n                        \n\n                \n                    \n                        List of possible roles\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:40\n                            \n                        \n\n                \n                    \n                        List of all scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            student\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        student:     AdminStudent\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:36\n                            \n                        \n\n                \n                    \n                        Student we are viewing\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subscription ,  Subject } from 'rxjs';\n\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../student.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { StudentRolesArray } from '../student.roles';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { User } from '../../../interfaces/user.interface';\nimport { Course } from '../../../interfaces/course.interface';\nimport { AdminStudent } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * Component to view information for a single student\n * This includes email/name/role information and access status\n * for all scenarios\n */\n@Component({\n    selector: 'student-indiv',\n    templateUrl: './student-indiv.template.html'\n})\n\nexport class StudentIndivComponent implements OnInit, OnDestroy {\n\n  /**\n   * Student we are viewing\n   */\n    protected student: AdminStudent;\n  /**\n   * List of all scenarios\n   */\n    private scenarios: Scenario[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple\n   * observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Subscription for URL parameters\n   */\n    private paramObserver: any;\n  /**\n   * Logged in user who must be an admin or instructor\n   */\n    private _admin: User;\n  /**\n   * List of possible roles\n   */\n    private roles = StudentRolesArray;\n  /**\n   * New role to change to if allowed\n   */\n    private newRole: string;\n\n  /**\n   * Potential error message\n   */\n    private errorMessage: string = '';\n\n    constructor(private _router: Router,\n        private _route: ActivatedRoute,\n        private _authService: AuthenticationService,\n        private _studentService: StudentService,\n        private _scenarioService: ScenarioService,\n        private _modalService: NgbModal) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize component\n   * 1. Get logged in user\n   * 2. Get id of student of interest from URL\n   * 3. Get the student's info\n   * 4. Get list of all scenarios\n   */\n    ngOnInit() {\n        this._admin = this._authService.getUser();\n        this.paramObserver = this._route.params.subscribe(params => {\n            let studentId = params['studentId'];\n            this._studentService.getStudent(this._admin.id, studentId)\n                .takeUntil(this.isDestroyed$)\n                .subscribe((info) => {\n                    this.student = info;\n                    this.newRole = this.student.role;\n                    this._scenarioService.listScenarios()\n                        .takeUntil(this.isDestroyed$)\n                        .subscribe((scens) => {\n                            this.scenarios = scens;\n                        });\n                },\n                (error) => {\n                    this.errorMessage = readErrorMessage(error);\n                });\n\n        });\n    }\n\n  /**\n   * Return formatted string based on if access granted for scenario\n   *\n   * @param {string} scenCode - scenario to look up\n   *\n   * @returns {string} `\"Access granted\"`, `\"Access not granted\"`, or `\"NA\"`\n   */\n    getScenStatus(scenCode: string): string {\n        let isGranted = this.student.accessGranted[scenCode];\n        if (isGranted === true) {\n            return 'Access granted'\n        } else if (isGranted === false) {\n            return 'Access not granted'\n        } else {\n            return 'NA'\n        }\n    }\n\n  /**\n   * - Get a formatted HTML string based on the student\n   * - If student has a course, returns link to the course page\n   * - If student doesn't have a course, returns 'No course'\n   *\n   * @returns {string} formatted HTML\n   */\n    getStudentCourse(): string {\n        let s: AdminStudent = this.student;\n        if (s.course) {\n            return 's.course.courseNum';\n        } else {\n            return 'No course';\n        }\n    }\n\n  /**\n   * Grant access for a specific scenario by calling student service\n   *\n   * Called on `(click)` of one of the scenario buttons\n   *\n   * @param {string} scenCode scenario to grant access for\n   */\n    grantAccess(scenCode: string) {\n        this._studentService.grantScenAccess(this._admin.id, this.student.userId, scenCode, true)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                if (res !== undefined && res !== null) {\n                  this.student = res;\n                }\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if a role toggle button should be disabled\n   *\n   * @param {string} src - name of button/role\n   *\n   * @returns {boolean} disable for roles greater than current user\n   * and if viewing page of current user\n   */\n    roleDisabled(src: string): boolean {\n        if (this._admin === undefined) {\n            return false\n        } else if (this.student.userId === this._admin.id) {\n            return true;\n        } else if (src === 'admin' && this._admin.role  {'btn btn-small': true, 'bth-secondary': true, 'btn-secondary-outline': false}\n   * roleButtonClass('admin') -> {'btn btn-small': true, 'bth-secondary': false, 'btn-secondary-outline': true}\n   */\n    roleButtonClass(src: string): Object {\n        return {\n            'btn btn-sm': true,\n            'btn-outline-secondary': src !== this.student.role,\n            'btn-secondary': src === this.student.role\n        }\n    }\n\n  /**\n   * When clicking a role button, update the student role\n   * by calling student service\n   *\n   * Called on `(click)` of one of the role buttons\n   *\n   * @param {string} src - role of button pushed\n   */\n    clickButton(src: string) {\n        this._studentService.setStudentRole(this._admin.id, this.student.userId, src)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                this.student = res;\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if delete button should be disabled\n   *\n   * @returns {boolean} - `true` if viewing page of logged in user or if student is an admin\n   * `false` otherwise\n   */\n  deleteDisabled(){\n    if(this._admin === undefined){\n      return true;\n    } else if(this.student.userId === this._admin.id){\n      return false;\n    } else if(this.student.role === 'admin'){\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * - when clicking delete button, open a modal dialog to confirm delete\n   * - if confirm, delete and redirect to students\n   * - otherwise, do nothing\n   *\n   * Called on `(click)` of the \"Delete\" button\n   */\n  checkDelete(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDelete();\n      }\n    }, (dismiss)=>{\n      // do nothing\n      return;\n    });\n  }\n\n  /**\n   * Helper function which implements delete student after user\n   * confirmed deletion\n   */\n  protected _callDelete(){\n    this._studentService.deleteStudent(this._admin.id, this.student.userId)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/students']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * Destroy the component by unsubscribing to the services\n   * This prevents a memory leak\n   */\n    ngOnDestroy() {\n        this.paramObserver.unsubscribe();\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n\n    }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          \n            {{ student | personName }}\n          \n        \n        \n          Delete\n        \n      \n\n      \n        \n          Email\n        \n        {{ student.email }}\n      \n\n      \n        \n          Course\n        \n        \n          {{ student.course.courseNum }}\n          No course\n        \n      \n\n      \n        Role\n        \n          \n          {{ role.label }}\n        \n        \n      \n      \n\n    \n    \n\n    \n      Scenarios\n      \n        \n          \n            {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}\n          \n          \n            Grant access\n            View fridge\n          \n        \n        \n      \n      \n    \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                            {{ student | personName }}                                    Delete                                      Email                {{ student.email }}                              Course                          {{ student.course.courseNum }}          No course                            Role                            {{ role.label }}                                              Scenarios                                    {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}                                Grant access            View fridge                                                  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentListComponent.html":{"url":"components/StudentListComponent.html","title":"component - StudentListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-list/student-list.component.ts\n\n\n    \n        Description\n    \n    \n        \nComponent which lists students dependent on the role of logged in user;\nif \"admin\", all users in the system\nif \"instr\", all users in courses instr teaches\n\n\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-list\n            \n\n\n\n\n            \n                templateUrl\n                ./student-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing from all observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nget logged in user id\nget the list of students\norder the list of students\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error message from server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        List of students\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { AdminStudent, sortStudents } from '../../../interfaces/student.interface';\n\n/**\n * - Component which lists students dependent on the role of logged in user;\n  * - if `\"admin\"`, all users in the system\n  * - if `\"instr\"`, all users in courses instr teaches\n */\n@Component({\n    selector: 'student-list',\n    templateUrl: './student-list.template.html'\n})\nexport class StudentListComponent implements OnInit, OnDestroy {\n  /**\n   * List of students\n   */\n    private students: AdminStudent[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Error message from server\n   */\n    private errorMessage: string = '';\n\n    constructor(\n        private _studentService: StudentService,\n        private _authService: AuthenticationService\n    ) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the view\n   * 1. get logged in user id\n   * 2. get the list of students\n   * 3. order the list of students\n   */\n    ngOnInit() {\n        let admin = this._authService.getUser();\n        this._studentService.listStudents(admin.id)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((students) => {\n                this.students = students.sort(sortStudents);\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Destory the component by unsubscribing from all observables\n   */\n    ngOnDestroy() {\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n    }\n}\n\n    \n\n    \n        \nStudents\n\n  {{ errorMessage }}\n  \n      \n      \n        {{student | personName:true}}\n        {{student.course.courseNum}}\n        {{student.role}}\n      \n    \n   \n \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Students  {{ errorMessage }}                      {{student | personName:true}}        {{student.course.courseNum}}        {{student.role}}              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n  Modules\n  StudentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_imports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/student/student.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for admin-regulated student things like setting the\nrole, viewing fridges for grading, and listing all students\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PhageDeletionsPipe\n                            \n                            \n                                PhageGuessesPipe\n                            \n                            \n                                PhageMutationsPipe\n                            \n                            \n                                StudentFridgeComponent\n                            \n                            \n                                StudentIndivComponent\n                            \n                            \n                                StudentListComponent\n                            \n                            \n                                StudentPhageComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     StudentResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { StudentRoutes } from './student.routes';\n\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { StudentIndivComponent } from './student-indiv/student-indiv.component';\nimport { StudentFridgeComponent } from './student-fridge/student-fridge.component';\nimport { StudentPhageComponent } from './student-fridge/student-phage.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { StudentResolver } from './student.resolver';\nimport { PhageGuessesPipe } from '../../pipes/phage-guesses.pipe';\nimport { PhageMutationsPipe } from '../../pipes/phage-mutations.pipe';\nimport { PhageDeletionsPipe } from '../../pipes/phage-deletions.pipe';\n\n/**\n * Module for admin-regulated student things like setting the\n * role, viewing fridges for grading, and listing all students\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(StudentRoutes)\n  ],\n  declarations: [\n    StudentListComponent,\n    StudentIndivComponent,\n    StudentFridgeComponent,\n    StudentPhageComponent,\n    PhageGuessesPipe,\n    PhageMutationsPipe,\n    PhageDeletionsPipe\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    StudentResolver\n  ]\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentPhage.html":{"url":"interfaces/StudentPhage.html","title":"interface - StudentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information about the phage used for admin\nand grading\n\n            \n\n            \n                Extends\n            \n            \n                    FridgePhage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        mutationList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop location of deleetion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     boolean[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deletion guesses from the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutationList\n                                    \n                                \n                                \n                                    \n                                        mutationList:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentPhageComponent.html":{"url":"components/StudentPhageComponent.html","title":"component - StudentPhageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentPhageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-phage.component.ts\n\n\n    \n        Description\n    \n    \n        Small component which encompasses a single phage strain being viewed\nwithin a student's fridge\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-phage\n            \n\n\n\n\n            \n                templateUrl\n                ./student-phage.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatPhageType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-phage.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                        The phage which the component is created for\n\n                            \n                            Type:    StudentPhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatPhageType\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatPhageType()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Produces formatted string based on phage type and if phage is\nsubmitted to be graded\n\n\n                            \n                                    Example :\n                                        \n                                            reference phage -&gt; &quot;REFERENCE&quot;\nscenario unknown phage -&gt; &quot;UNKOWN&quot;\nuser phage, not sumitted -&gt; &quot;USER&quot;\nsubmitted phage -&gt; &quot;SUBMISSION&quot;\n                                        \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    formatted string\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input} from '@angular/core';\n\nimport { StudentPhage } from '../../../interfaces/phage.interface';\n\n/**\n * Small component which encompasses a single phage strain being viewed\n * within a student's fridge\n */\n@Component({\n  selector: 'student-phage',\n  templateUrl: './student-phage.template.html'\n})\n\nexport class StudentPhageComponent{\n\n  /**\n   * The phage which the component is created for\n   */\n  @Input() phage: StudentPhage;\n\n  constructor(){}\n\n  /**\n   * Produces formatted string based on phage type and if phage is\n   * submitted to be graded\n   *\n   * @returns {string} formatted string\n   *\n   * @example\n   * reference phage -> \"REFERENCE\"\n   * scenario unknown phage -> \"UNKOWN\"\n   * user phage, not sumitted -> \"USER\"\n   * submitted phage -> \"SUBMISSION\"\n   */\n  formatPhageType(): string{\n    if(this.phage){\n      let t = this.phage.phageType;\n      if(this.phage.phageType === 'user' && this.phage.submitted){\n        return 'SUBMISSION'\n      } else {\n        return this.phage.phageType.toUpperCase();\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n    \n        \n\n  {{ phage.strainNum + 1 }}\n\n\n\n    \n      {{ formatPhageType() }}\n    \n  \n    \n  \n \n\n  \n    Comment\n    {{ phage.comment }}\n  \n   0\">\n    Mutations\n    \n      {{ phage.mutationList | phageMutations }}\n    \n  \n  \n   0\">\n    Deletion\n    \n      {{phage.deletion | phageDeletions}}\n    \n  \n  \n   0\">\n    Guess\n    \n      {{ phage.guesses | phageGuesses }}\n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ phage.strainNum + 1 }}          {{ formatPhageType() }}                   Comment    {{ phage.comment }}     0\">    Mutations          {{ phage.mutationList | phageMutations }}           0\">    Deletion          {{phage.deletion | phageDeletions}}           0\">    Guess          {{ phage.guesses | phageGuesses }}        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentPhageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentResolver.html":{"url":"injectables/StudentResolver.html","title":"injectable - StudentResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.resolver.ts\n        \n\n            \n                Description\n            \n            \n                \nNeeded for breadcrumbs\nResolves the studentId in the URL to the student it represents\n\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Based on the URL studentId parameter, find the user\nit belongs to\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The student the id belongs to\nor an empty observable if the id doesn't belong to anyone\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { StudentService } from './student.service';\nimport { AdminStudent } from '../../interfaces/student.interface';\n\n/**\n * - Needed for breadcrumbs\n * - Resolves the studentId in the URL to the student it represents\n */\n@Injectable()\nexport class StudentResolver implements Resolve {\n\n  constructor(private _studentService: StudentService,\n              private _authService: AuthenticationService) { }\n\n  /**\n   * Based on the URL `studentId` parameter, find the user\n   * it belongs to\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {Observable} The student the id belongs to\n   * or an empty observable if the id doesn't belong to anyone\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n\n    const studentNum = route.params['studentId'];\n\n    if (studentNum) {\n      return this._studentService.getStudent(admin.id, studentNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.service.ts\n        \n\n            \n                Description\n            \n            \n                Service which deals with all student-related backend calls\nfrom an admin\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteStudent\n                            \n                            \n                                getFridge\n                            \n                            \n                                getStudent\n                            \n                            \n                                grantScenAccess\n                            \n                            \n                                listStudents\n                            \n                            \n                                setStudentRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Delete a student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student to delete\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nstudent who was just deleted\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFridge(adminId: number, studentId: number, scenId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Get scenario fridge for a student; includes fridge details such as\nfridge strains and guesses\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario Id for fridge to find\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe student's fridge\nan empty fridge if the fridge doesn't exist yet\nor other server error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Get details about a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to be looked up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ndetails about specified student\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantScenAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:105\n                            \n                        \n\n\n                \n                    \n                            Update scenario access for a student; this deletes the existing\nfridge\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        updatedState\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ntrue to grant access, false to revoke access\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    updated student\n\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistStudents(adminId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            List of students, content is dependent of logged in user role\nIf admin, return all students/users\nIf instr, returns students of courses instr teachs\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nlist of students\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStudentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStudentRole(adminId: number, studentId: number, role: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Update the role (admin, instr, student) of another student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to update\n\n\n                                                        \n                                                \n                                                \n                                                        role\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nnew role to be assigned; one of: \"admin\", \"instr\", \"student\"\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe updated student\nerror Value \"role\" is not a valid role if role isn't one of admin, instr, student\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/admin'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AdminStudent, StudentFridge } from '../../interfaces';\n\n/**\n * Service which deals with all student-related backend calls\n * from an admin\n */\n@Injectable()\nexport class StudentService {\n  \n  private _baseURL = '/api/admin';\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * List of students, content is dependent of logged in user role\n   *\n   * If `admin`, return all students/users\n   * \n   * If `instr`, returns students of courses instr teachs\n   *\n   * @param {number} adminId - userId of logged in user\n   *\n   * @returns {AdminStudent[]} - list of students\n   */\n  listStudents(adminId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students`);\n  }\n\n  /**\n   * Get details about a student\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to be looked up\n   *\n   * @returns {Observable} - details about specified student\n   * - or other server/database error\n   */\n  getStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Update the role (admin, instr, student) of another student/user\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to update\n   * @param {string} role - new role to be assigned; one of: `\"admin\", \"instr\", \"student\"`\n   *\n   * @returns {Observable} - the updated student\n   * - error `Value \"role\" is not a valid role` if role isn't one of `admin`, `instr`, `student`\n   * - or other server/database error\n   */\n  setStudentRole(adminId: number, studentId: number, role: string): Observable{\n    let body = {role: role};\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}`, body);\n  }\n\n  /**\n   * Delete a student/user\n   *\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student to delete\n   *\n   * @returns {Observable} - student who was just deleted\n   * - or other server/database error\n   */\n  deleteStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .delete(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Get scenario fridge for a student; includes fridge details such as\n   * fridge strains and guesses\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {string} scenId - scenario Id for fridge to find\n   *\n   * @returns{Observable} - the student's fridge\n   * - an empty fridge if the fridge doesn't exist yet\n   * - or other server error\n   */\n  getFridge(adminId: number, studentId: number, scenId: string): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`);\n  }\n\n  /**\n   * Update scenario access for a student; this deletes the existing\n   * fridge\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {boolean} updatedState - true to grant access, false to revoke access\n   *\n   * @returns {Observable} updated student\n   * - or other server/database error\n   */\n  grantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean): Observable{\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`, {access: updatedState});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdatePasswordComponent.html":{"url":"components/UpdatePasswordComponent.html","title":"component - UpdatePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UpdatePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/update-password/update-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a logged in user to update their password\nby entering their current password then the new password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-password\n            \n\n\n\n\n            \n                templateUrl\n                ./update-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                passwordMessage\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/update-password/update-password.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Does various checks to ensure the password fields are valid\n\nAll fields are filled in\nNew password is different from old password\nConfirm password matches new password\n\n\n\n                            \n                            \n                            \n                                Returns :     \"Enter new password\" | \"Confirm new password\" | \"Confirm password does not match\" | \"\" | \"Enter o...\n\n                            \n                                \n                                    error message if at least one condition isn't met or '' if everything is valid\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe to services/streams\nto prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet the logged in user info\nSet up the credentials with email address\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Attempt to update the password\n\nIf successful, redirects to profile page\nIf there's an error, displays error message\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        \nPassword information to send to server to update password\nHas fields password (current password), newPassword (password to change to), \nconfirmPassword (confirms typing of new password), and \nusername (user's email)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:40\n                            \n                        \n\n                \n                    \n                        Potential backend error message displayed prominantly\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:36\n                            \n                        \n\n                \n                    \n                        State to keep track of compoenent alive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            passwordMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:44\n                            \n                        \n\n                \n                    \n                        Error message about submission and why the submission didn't work as expected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        The logged in user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\n\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Component for a logged in user to update their password\n * by entering their current password then the new password\n */\n@Component({\n  selector: 'user-password',\n  templateUrl: './update-password.template.html'\n})\n\nexport class UpdatePasswordComponent{\n\n  /**\n   * The logged in user\n   */\n  private user: User;\n  /**\n   * - Password information to send to server to update password\n   * - Has fields `password` (current password), `newPassword` (password to change to), \n   * `confirmPassword` (confirms typing of new password), and \n   * `username` (user's email)\n   */\n  private credentials: any;\n  /**\n   * State to keep track of compoenent alive\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential backend error message displayed prominantly\n   */\n  private errorMessage: string = '';\n  /**\n   * Error message about submission and why the submission didn't work as expected\n   */\n  private passwordMessage: string = '';\n\n  constructor(\n    private _router: Router,\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n      this.credentials = {\n        password: '',\n        newPassword: '',\n        confirmPassword: ''\n      };\n    }\n\n  /**\n   * Initialize the component\n   * 1. Get the logged in user info\n   * 2. Set up the credentials with email address\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.user = res;\n      this.credentials['username'] = res.email;\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempt to update the password\n   * - If successful, redirects to profile page\n   * - If there's an error, displays error message\n   */\n  updatePassword(){\n    // do checks\n    this.passwordMessage = this._checkPasswords();\n    if(this.passwordMessage === ''){\n      // can update\n      this._profileService.updatePassword(this.user.id, this.credentials)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n        this._router.navigate(['/profile']);\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n    } else {\n      this.errorMessage = '';\n    }\n  }\n\n  /**\n   * Does various checks to ensure the password fields are valid\n   * 1. All fields are filled in\n   * 2. New password is different from old password\n   * 3. Confirm password matches new password\n   *\n   * @returns {string} error message if at least one condition isn't met or `''` if everything is valid\n   */\n  protected _checkPasswords(){\n    let p = this.credentials.password;\n    let n = this.credentials.newPassword;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter old password';\n    } else if(n === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p === n){\n      return 'New password cannot the same as the old password';\n    } else if(n !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * On component destruction, unsubscribe to services/streams\n   * to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Update Password\n  \n  {{ errorMessage }}\n  \n    \n      Email\n      \n        \n      \n     \n    \n      Old Password\n      \n        \n      \n     \n    \n      New Password\n      \n        \n      \n     \n    \n      Confirm Password\n      \n        \n      \n     \n    {{passwordMessage}}\n    Submit\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Password    {{ errorMessage }}            Email                                   Old Password                                   New Password                                   Confirm Password                             {{passwordMessage}}    Submit  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdatePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                The logged in user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User e-mail; also used for logging in\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to indicate user when making calls to\nthe server\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role to indicate what areas of the app are accesible to the user;\n0 = student, 1 = instr, 2 = admin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/user-profile/user-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Main user profile component; aimed for use to edit name and\nemail address. Also access update password link to update password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                            Class constructor; includes services to fetch info\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service for updating the information\n\n                                                        \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get the current user information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from services to prevent\nmemory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Initialize the component on creation\n\nGet the logged in user\nSave the user's details to object to be able to edit\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Attempts to update the profile if possible or set error\nmessage if there's a problem\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                        State to maintain open subscriptions until component is destoryed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:24\n                            \n                        \n\n                \n                    \n                        Database user id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                        User details (as an object)\nCurrently includes: firstName, lastName, and email\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Main user profile component; aimed for use to edit name and\n * email address. Also access update password link to update password\n */\n@Component({\n  selector: 'user-profile',\n  templateUrl: './user-profile.template.html'\n})\n\nexport class UserProfileComponent{\n\n  /**\n   * Database user id\n   */\n  private userId: number;\n  /**\n   * User details (as an object)\n   * Currently includes: firstName, lastName, and email\n   */\n  private userInfo: any;\n  /**\n   * State to maintain open subscriptions until component is destoryed\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential error message\n   */\n  private errorMessage: string = '';\n\n  /**\n   * Class constructor; includes services to fetch info\n   *\n   * @param {ProfileService} _profileService Service for updating the information\n   * @param {AuthenticationService} _authService Service to get the current user information\n   */\n  constructor(\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the component on creation\n   * 1. Get the logged in user\n   * 2. Save the user's details to object to be able to edit\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.userId = res.id;\n      this.userInfo = {\n        firstName: res.firstName,\n        lastName: res.lastName,\n        email: res.email\n      }\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempts to update the profile if possible or set error\n   * message if there's a problem\n   */\n  updateProfile(){\n    this._profileService.editProfile(this.userId, this.userInfo)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.userInfo = {firstName: updated.firstName,\n                      lastName: updated.lastName,\n                      email: updated.email};\n      this._authService.setUser(updated);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * On component destruction, unsubscribe from services to prevent\n   * memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Profile\n  \n    {{ errorMessage }}\n  \n  \n  Update Password\n    \n  \n    \n      \n        First Name\n        \n       \n\n      \n        Last Name\n        \n       \n     \n    \n      \n        Email\n        \n       \n     \n    Submit\n   \n\n\n \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Profile      {{ errorMessage }}      Update Password                        First Name                             Last Name                                      Email                        Submit    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_User.html":{"url":"interfaces/_User.html","title":"interface - _User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  _User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                base user class which is extended by other interfaces\nand rarely used on its own\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User first name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User last name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to index users\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n[unreleased]\n[v1.0.10]\n\nUPDATED responses on error in app controllers\nADDED check for null phage from DB when trying to create a plate\nFIXED testing error with deleting fridge\nADDED unit testing and documentation for most of the application\n\n[v1.0.9] - 2018-04-16\n\nFIXED issue with potential incorrect error dropping bact tube to plate directly\nUPDATED plexer submission\nwhen submit button is pushed, a spinner appears in the top left of the results table and the submit button is disabled\nspinner is hidden and button is active once the results come back from the server\nthis will hopefully minimize students sending the same plexer request several times bc they weren't sure if it went through--this causes server overload\n\n\n\n[v1.0.8] - 2018-02-26\n\nADDED track new phage strains parent info\nSave parent id of phage from plate to fridge\nGet parent info about phage when getting fridge\nDisplay phage parent strain number in dialog\n\n\n\n[v1.0.7] - 2018-02-23\n\nUPDATED the way phage mutations are stored to save memory\nUpdated all genetics components\nUpdated model\nUpdated front end interface and pipe\n\n\nUPDATED on rest bacteria, only WT-like genotypes sent to client so smaller data transfer\nREMOVED rate limiting (causing server errors)\nFIXED over capacity for plexer\nADDED \"Page not found\" component for invalid URL\nADDED shuffle plaque lists to force mutants and recombinants to the front\nWhen small/large plaques 100-400\nHandle and shuffle each separately\n\n\n\n[v1.0.6] - 2018-02-20\n\nFIXED recombination error which was under-generating recombinants\nADDED ability to delete non-admin users\nADDED ability to delete course\nREMOVED revoke access option on user fridges\n\n[v1.0.5]\n\nADDED rate limiting\ngenetics routes\nuser auth/update routes\n\n\nUPDATED backend genetics testing\n\n[v1.0.4] - 2018-01-24\n\nADDED Ability to reset password\nsends email to user if user exists\npassword reset token expires after an hour\n\n\nADDED SSL support\nFIXED bugs\ngrant scenario access\nSign out blocking issue\n\n\n\n[v1.0.3] - 2018-01-23\n\nADDED User profile and update password pages\nADDED user controller tests\n\n[v1.0.2] - 2018-01-10\n\nFIXED issues with genetics logic\noverflow on REST bact\nnum phage generated with uneven input phage numbers\nupdated corresponding tests\n\n\nswitched console output to debug\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    public/app/admin/admin-home/admin-home.component.ts\n            \n            \n                component\n            \n            \n                AdminHomeComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.guard.service.ts\n            \n            \n                injectable\n            \n            \n                AdminGuard\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-create/course-create.component.ts\n            \n            \n                component\n            \n            \n                CourseCreateComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-edit/course-edit.component.ts\n            \n            \n                component\n            \n            \n                CourseEditComponent\n            \n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-indiv/course-indiv.component.ts\n            \n            \n                component\n            \n            \n                CourseIndivComponent\n            \n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-list/course-list.component.ts\n            \n            \n                component\n            \n            \n                CourseListComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-scenario/course-scenario.component.ts\n            \n            \n                component\n            \n            \n                CourseScenarioComponent\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.resolver.ts\n            \n            \n                injectable\n            \n            \n                CourseResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                    public/app/admin/not-auth/not-auth.component.ts\n            \n            \n                component\n            \n            \n                NotAuthComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-fridge.component.ts\n            \n            \n                component\n            \n            \n                StudentFridgeComponent\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-phage.component.ts\n            \n            \n                component\n            \n            \n                StudentPhageComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-indiv/student-indiv.component.ts\n            \n            \n                component\n            \n            \n                StudentIndivComponent\n            \n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-list/student-list.component.ts\n            \n            \n                component\n            \n            \n                StudentListComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.resolver.ts\n            \n            \n                injectable\n            \n            \n                StudentResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.roles.ts\n            \n            \n                variable\n            \n            \n                StudentRolesArray\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.service.ts\n            \n            \n                injectable\n            \n            \n                StudentService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    public/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/authentication/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    public/app/authentication/forget-password/forget-password.component.ts\n            \n            \n                component\n            \n            \n                ForgetPasswordComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    public/app/authentication/logged-in.guard.service.ts\n            \n            \n                injectable\n            \n            \n                LoggedInGuard\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    public/app/authentication/reset-password/reset-password.component.ts\n            \n            \n                component\n            \n            \n                ResetPasswordComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    public/app/authentication/signin/signin.component.ts\n            \n            \n                component\n            \n            \n                SigninComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    public/app/authentication/signout/signout.component.ts\n            \n            \n                component\n            \n            \n                SignoutComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/authentication/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    public/app/help/help.component.ts\n            \n            \n                component\n            \n            \n                HelpComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    public/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/course.interface.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateInput\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateResults\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlexerInput\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                Fridge\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                StudentFridge\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                ExperimentPhage\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                FridgePhage\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                GenotypePhage\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                Phage\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                StudentPhage\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/scenario.interface.ts\n            \n            \n                interface\n            \n            \n                Scenario\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                AdminStudent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                Student\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                variable\n            \n            \n                sortStudents\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                _User\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/nav/nav.component.ts\n            \n            \n                component\n            \n            \n                NavComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    public/app/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/pipes/people-list-names.pipe.ts\n            \n            \n                pipe\n            \n            \n                PeopleListNamesPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/person-name.pipe.ts\n            \n            \n                pipe\n            \n            \n                PersonNamePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-deletions.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageDeletionsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-guesses.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageGuessesPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-mutations.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageMutationsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-parents.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageParentsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/profile/profile.service.ts\n            \n            \n                injectable\n            \n            \n                ProfileService\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    public/app/profile/update-password/update-password.component.ts\n            \n            \n                component\n            \n            \n                UpdatePasswordComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    public/app/profile/user-profile/user-profile.component.ts\n            \n            \n                component\n            \n            \n                UserProfileComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/fridge.component.ts\n            \n            \n                component\n            \n            \n                FridgeComponent\n            \n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/phage-dialog.component.ts\n            \n            \n                component\n            \n            \n                PhageDialogComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    public/app/scenario/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/experiment.service.ts\n            \n            \n                injectable\n            \n            \n                ExperimentService\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/lab-room/lab-room.component.ts\n            \n            \n                component\n            \n            \n                LabRoomComponent\n            \n            \n                90 %\n                (37/41)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/landing-room/landing-room.component.ts\n            \n            \n                component\n            \n            \n                LandingRoomComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/location.component.ts\n            \n            \n                component\n            \n            \n                LocationComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/model-room/model-room.component.ts\n            \n            \n                component\n            \n            \n                ModelRoomComponent\n            \n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/plexer-room/plexer-room.component.ts\n            \n            \n                component\n            \n            \n                PlexerRoomComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.component.ts\n            \n            \n                component\n            \n            \n                ScenarioComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.globals.ts\n            \n            \n                variable\n            \n            \n                ScenarioGlobals\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.resolver.ts\n            \n            \n                injectable\n            \n            \n                ScenarioResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.service.ts\n            \n            \n                injectable\n            \n            \n                ScenarioService\n            \n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                    public/app/shared/confirm-delete-dialog.component.ts\n            \n            \n                component\n            \n            \n                ConfirmDeleteDialogComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    public/app/shared/read-error.ts\n            \n            \n                variable\n            \n            \n                readErrorMessage\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/compiler-cli : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/platform-server : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^1.0.0-beta.6\n        \n            angular-skyhook : ^1.0.0-beta.2\n        \n            async : ^2.6.0\n        \n            bcrypt : ^2.0.1\n        \n            body-parser : ^1.15.2\n        \n            bootstrap : ^4.0.0-beta.3\n        \n            clone : ^2.1.1\n        \n            compression : ^1.6.0\n        \n            connect-flash : ^0.1.1\n        \n            connect-mongo : ^1.3.2\n        \n            cookie-parser : ^1.4.3\n        \n            core-js : 2.4.1\n        \n            debug : ^3.1.0\n        \n            ejs : ^2.5.2\n        \n            eslint : ^4.1.1\n        \n            express : ^4.14.0\n        \n            express-brute : ^1.0.1\n        \n            express-brute-memcached : ^0.0.1\n        \n            express-graceful-exit : ^0.4.0\n        \n            express-session : ^1.14.1\n        \n            helmet : ^3.10.0\n        \n            https : ^1.0.0\n        \n            jquery : ^3.2.1\n        \n            lodash : ^4.17.10\n        \n            method-override : ^2.3.6\n        \n            mongoose : ^5.0.7\n        \n            mongoose-sequence : ^4.0.1\n        \n            morgan : ^1.7.0\n        \n            ng2-dnd : ^5.0.2\n        \n            ngx-breadcrumbs : ^0.0.3\n        \n            nodemailer : ^4.4.2\n        \n            open-iconic : https://github.com/iconic/open-iconic.git\n        \n            passport : ^0.3.2\n        \n            passport-facebook : ^2.1.1\n        \n            passport-google-oauth : ^1.0.0\n        \n            passport-local : ^1.0.0\n        \n            popper.js : ^1.12.9\n        \n            random-js : ^1.0.8\n        \n            react-dnd-html5-backend : ^2.5.4\n        \n            react-dnd-touch-backend : ^0.3.20\n        \n            reflect-metadata : ^0.1.8\n        \n            rxjs : ^5.5.2\n        \n            systemjs : ^0.19.39\n        \n            tslib : ^1.8.0\n        \n            zone.js : ^0.8.18\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncricket\nRun angular tests with : karma start\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n   Copyright 2018 Brigitte Hofmeister\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CourseModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelpModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScenarioModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_providers\n\n\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            10 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        34 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTO DO\n\nAbility to remove instructor from a course\nBulk delete phage as an entire shelf\nBulk save phage to the fridge\nAllow user to delete account\nHelp pages\nClear error messages in lab room\nTesting\nprofile/update-password.component\nprofile/user-profile.component\nauthentication\nstudent-course-scenario.resolver\nscenario/location/experiment.service\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            readErrorMessage   (public/.../read-error.ts)\n                        \n                        \n                            ScenarioGlobals   (public/.../scenario.globals.ts)\n                        \n                        \n                            sortStudents   (public/.../student.interface.ts)\n                        \n                        \n                            StudentRolesArray   (public/.../student.roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    public/app/shared/read-error.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            readErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        readErrorMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : function(error: any): string {\n  console.log(JSON.stringify(error));\n  let errorMessage = 'Unknown error';\n  if(error.error && error.error.message){\n   return error.error.message\n  } else if(error.error && error.error.text){\n   return error.error.text\n  } else if (error && error.message){\n   return error.message;\n  } else if(error){\n    return error;\n  }\n  return errorMessage;\n}\n                        \n                    \n\n                \n                    \n                        This function takes an error object and looks for\nthe error message; it checks several properties because\nerrors are not always uniform\n\n                    \n                \n\n            \n        \n\n    public/app/scenario/scenario.globals.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ScenarioGlobals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ScenarioGlobals:     miscellaneou\n\n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /**\n   * Number of starting phage when taken from fridge\n   */\n  numPhage:1000000,\n  /**\n   * Maximum number of plaques allowed on lab room plate\n   */\n  plateCapacity: 1500,\n  /**\n   * Maximum number of plaques allowed on each plexer room plate\n   */\n  plexerCapacity: 200,\n  /**\n   * Number of shelves in the fridge\n   */\n  nFridgeShelf: 32,\n  /**\n   * Number of spots on each shelf of the fridge\n   */\n  nFridgeSpots: 16,\n  /**\n   * Default dilution value for lab room; can be changed by user\n   */\n  defaultLabDilution: 10,\n  /**\n   * Default dilution value for plexer room; can be changed by user\n   */\n  defaultPlexerDilution: 5,\n  /**\n   * Length of the gene in number of basepairs\n   */\n  geneLength: 350,\n  /**\n   * Number of basepairs per \"block\" when guessing deletion location\n   */\n  deletionGuessLength: 10\n}\n                        \n                    \n\n                \n                    \n                        Scenario/experiement-related values used to\n\nSend the correct parameters to backend calls\nMatch some backend parameters\nHave consistent defaults\n\n\n                    \n                \n\n            \n        \n\n    public/app/interfaces/student.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortStudents:     \n\n                    \n                \n                    \n                        \n                            Default value : function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n                        \n                    \n\n                \n                    \n                        Function to sort students alphabetically by last name;\nUses first name for ties\nMakes the name lowercase before sorting to ensure sort is\ncase insensitive\n\n                    \n                \n\n            \n        \n\n    public/app/admin/student/student.roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StudentRolesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        StudentRolesArray:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    key: 'student',\n    label: 'Student',\n    value: 0\n  }, {\n    key: 'instr',\n    label: 'Instructor',\n    value: 1\n  }, {\n    key: 'admin',\n    label: 'Administrator',\n    value: 2\n  }\n]\n                        \n                    \n\n                \n                    \n                        List of user roles with their numeric value (value), string value\nused by MongoDB (key), and string displayed on webpage (label)\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers.html":{"url":"additional-documentation/controllers.html","title":"additional-page - Controllers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Controllers\n\n\n\n  \n    \n      Admin Controller\n    \n    \n      listUsers\n      getUser\n      deleteUser\n      setRole\n      hasAuthorization\n      isAdmin\n    \n  \n  \n  \n    \n      Course Controller\n    \n    \n      isInstructor\n      listCourses\n      listCourseNum\n      createCourse\n      getCourse\n      editCourse\n      deleteCourse\n      getStudents\n      deleteCourseStudents\n      getPossibleInstructors\n      setInstructor\n      getScenarioStatus\n      courseByNum\n    \n  \n  \n  \n    \n      Fridge Controller\n    \n    \n      stockFridge\n      getFridge\n      getStudentFridge\n      saveDeletions\n      deleteStudentFridge\n      addPhageToFridge\n      updatePhage\n      deletePhage\n      phageById\n      findFridgeByScenOwner\n      hasFridgeAuthorization\n      hasPhageAuthorization\n      getFridgeInfo\n    \n  \n  \n  \n    \n      Genetics Controller\n    \n    \n      createPlate\n      handlePlexer\n    \n  \n  \n  \n    \n      Scenario Controller\n    \n    \n      list\n      read\n      scenarioByCode\n    \n  \n  \n  \n    \n      User Controller\n    \n    \n      getUser\n      editUser\n      resetPasswordEmail\n      resetPassword\n      signin\n      signup\n      signout\n      grantAccess\n      requiresLogin\n      userById\n      getUserInfo\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/admin-controller.html":{"url":"additional-documentation/controllers/admin-controller.html","title":"additional-page - Admin Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Admin Controller\n\n  \n    Description\n  \n  \n    The Admin-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                listUsers\n              \n\n                getUser\n              \n\n                deleteUser\n              \n\n                setRole\n              \n\n                hasAuthorization\n              \n\n                isAdmin\n              \n          \n        \n      \n    \n  \n\n  \n  \n    listUsers\n  \n    \n      \n        listUsers(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/students\n\n        \n        \n          \n            list all users in the system for admin OR\nlist all students for instructor courses for instructor\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error\n\n    \n    200 OKIf user is admin, returns list of all users\nIf user is instr, returns list of students in instr's courses\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getUser\n  \n    \n      \n        getUser(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/students/:studentId\n\n        \n        \n          \n            Get information about a secondary user (not necessarily the user currently logged in)\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteUser\n  \n    \n      \n        deleteUser(req, res) ⇒ Object\n      \n        \n              DELETE\n\n    /api/admin/:userId/students/:studentId\n\n        \n        \n          \n            Delete a secondary user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    setRole\n  \n    \n      \n        setRole(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/students/:studentId\n\n        \n        \n          \n            Update a user's role to \"student\", \"instructor\", or \"admin\"\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n      \n      bodyObjectnew role; one of \"student\", \"instr\", \"admin\"\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated user information\n\n      \n\n\n\n          \n        \n        \n          \n            \n    Request Example :\n    /api/admin/1/students/67Make user 67 an instructor \n  {\n  role: \"instr\"\n}\n \n  \n          \n        \n    \n  \n\n  \n  \n    hasAuthorization\n  \n    \n      \n        hasAuthorization(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user is instructor or admin\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionthe next middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object to response if not authorized otherwise go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin or instructor, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to the next middleware if user is admin or instructor\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    isAdmin\n  \n    \n      \n        isAdmin(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user is admin\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionthe next middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object to response if not authorized otherwise next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to next middleware if user is an admin\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/course-controller.html":{"url":"additional-documentation/controllers/course-controller.html","title":"additional-page - Course Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Course Controller\n\n  \n    Description\n  \n  \n    The Course-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                isInstructor\n              \n\n                listCourses\n              \n\n                listCourseNum\n              \n\n                createCourse\n              \n\n                getCourse\n              \n\n                editCourse\n              \n\n                deleteCourse\n              \n\n                getStudents\n              \n\n                deleteCourseStudents\n              \n\n                getPossibleInstructors\n              \n\n                setInstructor\n              \n\n                getScenarioStatus\n              \n\n                courseByNum\n              \n          \n        \n      \n    \n  \n\n  \n  \n    isInstructor\n  \n    \n      \n        isInstructor(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to allow only admin and the instructor of the course to proceed\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n      \n      courseCOURSEcourse details from courseByNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object to response not allowed or next middleware if allowed\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 Forbiddencurrent user not authorized, send error as {message: 'Not instructor of this course'}\n\n    \n    next()If user authorized, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    listCourses\n  \n    \n      \n        listCourses() ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses\n\n        \n        \n          \n            get list of courses\nis user is admin, list all\nif user is instructor, list courses for teacher\n          \n        \n        \n          \n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUser is admin and there are no courses OR user is instr role but not the instructor of any courses; sends message as {message: 'No courses found'}\n\n    \n    200 OKList of courses; courses in the list depend on user role\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    listCourseNum\n  \n    \n      \n        listCourseNum(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/courses\n\n        \n        \n          \n            Return the list of course numbers that currently exist\n\nThis is used during sign-up and does not require a user to be logged in\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not Foundthere are no courses; sends message as {message: \"No courses found\"}\n\n    \n    200 OKList of courses with properties courseNum and id (DB id)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    createCourse\n  \n    \n      \n        createCourse(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/courses\n\n        \n        \n          \n            Create a new course and set current user as instructor\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectdetails about new course: courseNum and description\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKNewly created course\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getCourse\n  \n    \n      \n        getCourse(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum\n\n        \n        \n          \n            Get information about an existing course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKthe course information including courseNum, description, and list of instructors\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    editCourse\n  \n    \n      \n        editCourse(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/courses/:courseNum\n\n        \n        \n          \n            Update the description of an existing course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      bodyObjectcourse information to update - the description\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated course information\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteCourse\n  \n    \n      \n        deleteCourse() ⇒ Object\n      \n        \n              DELETE\n\n    /api/admin/:userId/courses/:courseNum\n\n        \n        \n          \n            Delete a course\n          \n        \n        \n          \n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about course just deleted\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getStudents\n  \n    \n      \n        getStudents(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum/students\n\n        \n        \n          \n            get list of students for a course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in the course; each student has properties firstName, lastName, userId, accessGranted, and email\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteCourseStudents\n  \n    \n      \n        deleteCourseStudents(req, res) ⇒ Object\n      \n        \n              DELETE\n\n    /api/admin/:userId/courses/:courseNum/students\n\n        \n        \n          \n            Bulk delete all students in a particular course\nMost useful when finished with semester and course is over\nDoes not remove the course itself\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 SuccessList of students just deleted\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getPossibleInstructors\n  \n    \n      \n        getPossibleInstructors(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum/instructors\n\n        \n        \n          \n            Get list of all possible instructors for a specific course (not including the instrcutors currently teaching the course)\nAdmin can add current instructors or students in the course\nInstructors can add other instrctors\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of possible instrcutors; each person has properties firstName, lastName, userId, and role\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    setInstructor\n  \n    \n      \n        setInstructor(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/courses/:courseNum/instructors/:studentId'\n\n        \n        \n          \n            Add an instuctor to the course and make user \"instructor\" role if user is a student\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      studentUSERuser to make instructor; identified with userById with id studentId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error updating the course, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error updating the user, sends description of error as {message: error-message}\n\n    \n    200 OKThe updated course\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getScenarioStatus\n  \n    \n      \n        getScenarioStatus(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum/:scenarioId\n\n        \n        \n          \n            Get scenario status (aka access granted) for a scenario for all\nstudents in a course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum\n\n      \n      scenarioSCENARIOscenario of interested; identified with scenarioByCode with id scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    404 Not FoundThere are no students in the course, sends error as {message: \"no students found\"}\n\n    \n    500 Internal Server ErrorDatabase error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in course with scenario access; each object in list has firstName, lastName, userId, and status\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    courseByNum\n  \n    \n      \n        courseByNum(req, res, next, id) ⇒ function\n      \n        \n          \n    :courseNum\n\n        \n        \n          \n            Middleware to find course by course number\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n      \n        idstringcourse number from URL\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass the error to the next middleware\n\n    \n    next('Failed to load course id')If course doesn't exist, pass message to middleware\n\n    \n    next()If success, set request course and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/fridge-controller.html":{"url":"additional-documentation/controllers/fridge-controller.html","title":"additional-page - Fridge Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Fridge Controller\n\n  \n    Description\n  \n  \n    The Fridge-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                stockFridge\n              \n\n                getFridge\n              \n\n                getStudentFridge\n              \n\n                saveDeletions\n              \n\n                deleteStudentFridge\n              \n\n                addPhageToFridge\n              \n\n                updatePhage\n              \n\n                deletePhage\n              \n\n                phageById\n              \n\n                findFridgeByScenOwner\n              \n\n                hasFridgeAuthorization\n              \n\n                hasPhageAuthorization\n              \n\n                getFridgeInfo\n              \n          \n        \n      \n    \n  \n\n  \n  \n    stockFridge\n  \n    \n      \n        stockFridge(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket/:userId/:scenarioId/new-fridge\n\n        \n        \n          \n            Create a new fridge stocked with the scenario phage\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestError creating phage for this fridge, sends error as {message: 'Unable to create new phage for scenario'}\n\n    \n    500 Internal Server ErrorError saving the new fridge, sends error as {message: 'Unable to save new fridge'}\n\n    \n    200 OKNewly created fridge cleaned by getFridgeInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getFridge\n  \n    \n      \n        getFridge(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket/:userId/:scenarioId\n\n        \n        \n          \n            Get the current user's fridge\nOnly include info needed to be known for lab room, plexer room, and model room of scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKUser's fridge for this scenario cleaned by getFridgeInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getStudentFridge\n  \n    \n      \n        getStudentFridge(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/students/:studentId/:scenarioId\n\n        \n        \n          \n            Get a user's fridge and include lots of details only\nadmin/instrs should know\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKIf fridge doesn't exist, return owner/scenario as if the fridge exists (information needed for front-end rendering)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    saveDeletions\n  \n    \n      \n        saveDeletions(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/:userId/:scenarioId/deletions\n\n        \n        \n          \n            Update the deletion guesses for the fridge\nguesses come in as object and are stringified when saving\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectupdated guesses to save\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKreturns stringified updated guesses to response\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteStudentFridge\n  \n    \n      \n        deleteStudentFridge(req, res, next) ⇒ function\n      \n        \n          \n    /api/admin/:userId/students/:studentId/:scenarioId\n\n        \n        \n          \n            Middleware which deletes a fridge and all phage within the fridge\nCalled after granting access because new fridge\nneeds to be created for the user/scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext function to go to\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioexternal:SCNEARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next()If successful, delete the fridge and all phage in the fridge, then go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    addPhageToFridge\n  \n    \n      \n        addPhageToFridge(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/:userId/:scenarioId/fridge-phage\n\n        \n        \n          \n            Create new phage with phage type \"user\", save that to DB, and add to the current fridge\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectinformation about new strain; has properties\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bade RequestOn error creating new phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error adding phage to fridge, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about the newly added strain, including info about phage parents (fetch from DB)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    updatePhage\n  \n    \n      \n        updatePhage(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/:userId/:scenarioId/:phageId\n\n        \n        \n          \n            Update the comment or submitted state of a phage\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectupdated strain info; has comment, strainNum, and submitted\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, sends description of error as {message: error-message}\n\n    \n    200 OKreturn updated phage with information about phage parents (from DB)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deletePhage\n  \n    \n      \n        deletePhage(req, res) ⇒ Object\n      \n        \n              DELETE\n\n    /api/cricket/:userId/:scenarioId/:phageId\n\n        \n        \n          \n            Delete a phage strain and remove it from the fridge\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error deleting phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error removing phage from fridge, sends error as {message: \"Unable to remove strain from fridge\"}\n\n    \n    200 OKreturn the newly deleted phage strain\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    phageById\n  \n    \n      \n        phageById(req, res, next, id) ⇒ function\n      \n        \n          \n    :phageId\n\n        \n        \n          \n            Middleware which identifies a phage strain based on the\nid\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n      \n        idstringmongoDB id of phage strain to look for\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to the next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Phage not found')If phage doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request strain and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    findFridgeByScenOwner\n  \n    \n      \n        findFridgeByScenOwner(req, next) ⇒ function\n      \n        \n          \n\n        \n        \n          \n            Middleware to find a fridge by the current user and current scenario\nuser and scenario were set in previous middleware\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Failed to find fridge')If fridge doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request fridge and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    hasFridgeAuthorization\n  \n    \n      \n        hasFridgeAuthorization(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user is fridge owner\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    hasPhageAuthorization\n  \n    \n      \n        hasPhageAuthorization(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to determine if current user has authorization to\nupdate a phage strain\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress responses object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      strainPHAGEphage strain from phageById with id phageId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getFridgeInfo\n  \n    \n      \n        getFridgeInfo(fridge) ⇒ Object\n      \n        \n          \n            Helper method to return fridge details in consistent\nformat\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        fridgeFRIDGEfridge object from DB\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \ncleaned up fridge object with properties\nscenarioDetails, guesses, accessGranted, userId, scenCode, and strains\nEach strain of strains has comment, id, parents, strainNum, phageType, submitted, and numParents\n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/genetics-controller.html":{"url":"additional-documentation/controllers/genetics-controller.html","title":"additional-page - Genetics Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Genetics Controller\n\n  \n    Description\n  \n  \n    The controller which performs genetic crosses/manipulations in\nthe lab and plexer rooms\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                handlePlexer\n              \n          \n        \n      \n    \n  \n\n  \n  \n    createPlate\n  \n    \n      \n        createPlate(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/plate\n\n        \n        \n          \n            Creates a plate for the lab room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to create the plate; has properties phage1 (numPhage and id), (optional) phage2, lawnType, location, capacity, and scenarioData\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \njson object to response\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestNumber of phage is not set for one of the phage, send error as {message: 'numPhage not set'}\n\n    \n    404 Not foundPhage 1 is not found in DB, send error as {message: Error finding the specified phage(1|2)'}\n\n    \n    500 Internal Server ErrorOn error, sends error message as {message: error-message}\n\n    \n    200 OKsuccessfully generated plate; has properties full, smallPlaque, largePlaque, genotypes, and parents\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    handlePlexer\n  \n    \n      \n        handlePlexer(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/plexer\n\n        \n        \n          \n            Generates the NxM plates for the plexer\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to generate plexer;\nhas rowPhage (list with each having id and numPhage),\ncolPhage(list with each having id and numPhage),\nscenarioData, lawnType, location, capacity\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \njson object to response\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Service ErrorOn error finding phage in DB, send error as {message: error-message}\n\n    \n    200 OKsuccessfully generated plexer result as 2D array where each cell has full, smallPlaque, and largePlaque\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/scenario-controller.html":{"url":"additional-documentation/controllers/scenario-controller.html","title":"additional-page - Scenario Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Scenario Controller\n\n  \n    Description\n  \n  \n    The Scenario-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                list\n              \n\n                read\n              \n\n                scenarioByCode\n              \n          \n        \n      \n    \n  \n\n  \n  \n    list\n  \n    \n      \n        list(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket\n\n        \n        \n          \n            List all of the sceanrios in order of degree of difficulty\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKReturn list of scenarios\neach scenario has properties label, scenCode, purpose, startingPoint, relevance, and degOfDifficulty\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    read\n  \n    \n      \n        read(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket/:scenarioId\n\n        \n        \n          \n            Get the details about a specifc scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    returns json object of scenario to response with properties label, scenCode, purpose, startingPoint, relevance, and degOfDiff\n\n\n          \n        \n    \n  \n\n  \n  \n    scenarioByCode\n  \n    \n      \n        scenarioByCode(req, res, next, id) ⇒ function\n      \n        \n          \n    :scenarioId\n\n        \n        \n          \n            Retreives a scenario from a scenario code\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware to follow\n\n      \n        idStringscenario code from URL\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    \nnext middleware\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)On error, pass the error to next middleware\n\n    \n    next('Failed to load scenario id')\nIf scenario doesn't exist, pass message to next middleware\n\n\n    \n    next()\nif successful, set request scenario and go to next middleware\n\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/user-controller.html":{"url":"additional-documentation/controllers/user-controller.html","title":"additional-page - User Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  User Controller\n\n  \n    Description\n  \n  \n    The User-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                getUser\n              \n\n                editUser\n              \n\n                updatePassword\n              \n\n                resetPasswordEmail\n              \n\n                resetPassword\n              \n\n                signin\n              \n\n                signup\n              \n\n                signout\n              \n\n                grantAccess\n              \n\n                requiresLogin\n              \n\n                userById\n              \n\n                getUserInfo\n              \n          \n        \n      \n    \n  \n\n  \n  \n    getUser\n  \n    \n      \n        getUser(req, req) ⇒ Object\n      \n        \n              GET\n\n    /api/users/:userId\n\n        \n        \n          \n            Get information about a user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        reqObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKTrimmed user information from getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    editUser\n  \n    \n      \n        editUser(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/users/:userId\n\n        \n        \n          \n            Update user info - name and/or email\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectupdated information about user, specifically firstName, lastName, and email\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    updatePassword\n  \n    \n      \n        updatePassword(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/users/:userId/update-password\n\n        \n        \n          \n            Update a user password\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectrequest body with password (old password) and newPassword (new password)\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error finding user, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    401 UnauthorizedError changing password, i.e. old password isn't correct, sends error as {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    resetPasswordEmail\n  \n    \n      \n        resetPasswordEmail(req, res, next) ⇒ Object\n      \n        \n              POST\n\n    /api/auth/forget-password\n\n        \n        \n          \n            Sends an email to a user to allow user to reset password\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with email\nincludes \"body\" which has user email\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf error with email transporter, send error as {message: 'Error with server email service'}\n\n    \n    404 Not FoundIf email doesn't belong to a current user send message as {message: 'No account with that email.'}\n\n    \n    422 Unprocessable EntityIf error trying to send reset email, send error to response as {message: error-message}\n\n    \n    200 OKSuccessfully sends the email and sends success message to response\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    resetPassword\n  \n    \n      \n        resetPassword(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/auth/reset-password\n\n        \n        \n          \n            Allows user to reset the password using a token (sent by email)\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with password (new password),\nconfirmPassword (password entered second time) and token (token sent to email to allow password reset)\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf database error, send {message: error-message}\n\n    \n    404 Not FoundIf token is invalid, send error as {message: 'Invalid token.'}\n\n    \n    403 ForbiddenIf token is expired, send error as {message: 'Token has expired'}\n\n    \n    400 Bad RequestIf password and confirm password don't match, send error as {message: 'Confirm password does not match.'}\n\n    \n    200 OKIf successfully update password, send {message: 'Password has been reset.'}\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    signin\n  \n    \n      \n        signin(req, res, next) ⇒ Object | function\n      \n        \n              POST\n\n    /api/auth/signin\n\n        \n        \n          \n            Using passport authenticate and request login in, attempts to sign users in\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email) and password\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object on error or go to next middleware on success\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, send error as {message: error-message}\n\n    \n    next()On success, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    signup\n  \n    \n      \n        signup(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/auth/signup\n\n        \n        \n          \n            Create a new user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email), password,\nfirstName, lastName, and courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error creating/saving user, sends {message: error-message}\n\n    \n    400 Bad RequestOn error logging in, sends {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    signout\n  \n    \n      \n        signout(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/auth/signout\n\n        \n        \n          \n            Sign out a logged in user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKSends true\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    grantAccess\n  \n    \n      \n        grantAccess(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/students/:studentId/:scenarioId\n\n        \n        \n          \n            grant access to student for specific scenario\nNote: this function is called after [deleteStudentFridge]{@link fridge-controller.html#deleteStudentFridge} middleware\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent to grant access for from userById with id studentId\n\n      \n      scenarioSCENARIOscenario to grant access for from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectrequest body with access indicating to grant (true) or revoke (false) access\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKIf user doesn't have accessGranted property, send 200 response as if it was successful\n\n    \n    200 OKIf successfully update user, send updated user\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    requiresLogin\n  \n    \n      \n        requiresLogin(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user can access the path depending if they are logged in\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware to follow\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    \njson response when not logged in otherwise go to next middleware\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    401 UnauthorizedIf not currently logged in, send error as {message: 'User is not logged in'}\n\n    \n    next()If logged in, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    userById\n  \n    \n      \n        userById(req, res, next, id) ⇒ function\n      \n        \n          \n    :userId | :studentId\n\n        \n        \n          \n            Find user (if they exist) by the user id\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextObjectNext function to go to\n\n      \n        idstringuser's id as a string from URL\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    \nnext middleware\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next('Invalid user')If id is invalid, pass message to next middleware\n\n    \n    next(error)If some error, pass error to next middleware\n\n    \n    next('User not found')If id doesn't belong to a user, pass message to next middleware\n\n    \n    next()Able to find user\nIf req.curUser isn't set, set request curUser as the logged in user and go to next middleware;\nIf req.curUser is set, set request student as the secondary user and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getUserInfo\n  \n    \n      \n        getUserInfo(user) ⇒ Object\n      \n        \n          \n            Returns trimmed user info in a consistent manner\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        userUSERuser object from DB\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    trimmed user object to have properties id, firstName,\nlastName, email, and role\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics.html":{"url":"additional-documentation/genetics.html","title":"additional-page - Genetics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Genetics\n\nPhage\n\n  \n    \n      Phage Scenario\n    \n    \n      generateScenario\n      makeGene\n      makePhage\n      makeWTPhage\n      makeFrameshiftPhage\n      makeDeletionPhage\n      generateFrameshift\n      checkPhageFrameshift\n      getNewSpot\n      generateDeletion\n      checkPhageDeletion\n    \n  \n  \n  \n    \n      Phage Logic\n    \n    \n      doPheno\n      getFrames\n    \n  \n  \n  \n    \n      Phage Experiment\n    \n    \n      recombine\n      mutagenize\n      _validRecombDel\n      _copyDeletion\n    \n  \n  \n \nPlates\n\n  \n    \n      Plate Experiment\n    \n    \n      createPlate\n      createPlatePhage\n      generatePlate\n      computeRecombParameters\n      computeNumOffspring\n      shufflePlaqueList\n    \n  \n  \n  \n    \n      Plexer Experiment\n    \n    \n      createPlexerPlate\n      generatePlexerPlate\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-scenario.html":{"url":"additional-documentation/genetics/phage-scenario.html","title":"additional-page - Phage Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Scenario\n\n  \n    Description\n  \n  \n    Functions which handle creating  phage for different scenarios\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                generateScenario\n              \n\n                makeGene\n              \n\n                makePhage\n              \n\n                makeWTPhage\n              \n\n                makeFrameshiftPhage\n              \n\n                makeDeletionPhage\n              \n\n                _generateFrameshift\n              \n\n                _checkPhageFrameshift\n              \n\n                _getNewSpot\n              \n\n                _generateDeletion\n              \n\n                _checkPhageDeletion\n              \n          \n        \n      \n    \n  \n\n  \n  \n    generateScenario\n  \n    \n      \n        generateScenario(scenario) ⇒ Object\n      \n        \n          \n            Generates all of the phage and other necessary info for a given scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        scenarioObjectparameters for the scenario; includes:\n\nmutationFreq (number): chance of mutation as decimal\nrecombinationFreq (number): chance of single recombination as decimal\ngcProb (number): percent of G/C's to use in gene\nminStops (number): minimum number of stop codons when out of frame\nintraMuteDist (number[])\ninterMuteDist (number)\nreferencePhage (string[]): descriptions of reference phage; known WT or mut\notherPhage (string[]): descriptions of non-reference phage; unknown WT or mut\n\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    all info needed for a new scenario\n\nstrains (Object[]): list of strains\nscenarioDetails (Object): scenario info needed for experiments later\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeGene\n  \n    \n      \n        makeGene(gcProb, minStops) ⇒ Object\n      \n        \n          \n            Make a WT gene - has no stop codons normally but has at least\nminStops with frameshifts\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        gcProbnumberGC probability (percent G/C vs A/T)\n\n      \n        minStopsnumberminimum number of stops for frameshifted gene\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    the nucleotide sequence to be used; includes:\n\nwtGene (string): nucleic acids that consitute this gene\nrealStops (number[]): location of stop codons\nframeStopList (number[][]): location and which frameshift the stop occurs\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makePhage\n  \n    \n      \n        makePhage(phageDetails, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Create a phage strain\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageDetailsObjectphage config info (from scenario config)\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectscenario parameters\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly created strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeWTPhage\n  \n    \n      \n        makeWTPhage(phage, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Create a WT phage - no mutations\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageObjectphage config info (from scenario config)\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectcomputed scenario info\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeFrameshiftPhage\n  \n    \n      \n        makeFrameshiftPhage(phage, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Generate a mutant phage strain that has at least 1 frameshift mutation\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageObjectphage config info (from scenario config)\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectcurrent scenario information; used to generate new, valid strain\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeDeletionPhage\n  \n    \n      \n        makeDeletionPhage(phage, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Create a phage strain with a large deletion\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageObjectconfiguration for phage to generate from scenario\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectconfiguration for current scenario\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _generateFrameshift\n  \n    \n      \n        _generateFrameshift(shiftType, nShifts, readable, scenData) ⇒ Array\n      \n        \n          \n            Attempt to generate a single frameshift mutation\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        shiftTypenumbershould it be insertion, deletion, or random\n\n      \n        nShiftsnumbernumber of shifts total for this phage\n\n      \n        readablestringshould be gene be in frame or not\n\n      \n        scenDataObjectcurrent scenario data to ensure valid phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    valid mutation(s) for this new phage or empty list if no valid mutation found\n\n\n          \n        \n    \n  \n\n  \n  \n    _checkPhageFrameshift\n  \n    \n      \n        _checkPhageFrameshift(keyMutes, scenData) ⇒ boolean\n      \n        \n          \n            Check that the potential frameshift(s) are valid given the\nmutations in other phage in the scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        keyMutesArraymutations to check\n\n      \n        scenDataObjectcurrent scenario data\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  boolean    \n    is the frameshift valid?\n\n\n          \n        \n    \n  \n\n  \n  \n    _getNewSpot\n  \n    \n      \n        _getNewSpot(lastMade, scenData) ⇒ number\n      \n        \n          \n            Attempt to create a new mutation\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        lastMadenumberthe last mutation made\n\n      \n        scenDataObjectcurrent scenario configuration info\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  number    \n    location of new frameshift mutation that isn't too close to other mutations\n\n\n          \n        \n    \n  \n\n  \n  \n    _generateDeletion\n  \n    \n      \n        _generateDeletion(usedDeleteSpots) ⇒ Array\n      \n        \n          \n            Attempt to generate a deletion if we run out of preset deletion spots/lengths\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        usedDeleteSpotsArraylist of deletion spots already used\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    new valid deletion if found or throws error\n\n\n          \n        \n    \n  \n\n  \n  \n    _checkPhageDeletion\n  \n    \n      \n        _checkPhageDeletion(keyMutes, usedDeleteSpots) ⇒ boolean\n      \n        \n          \n            Check that deletion is valid; far enough away from other deletions\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        keyMutesArraydeletion to check\n\n      \n        usedDeleteSpotsArraydeletions already in play for scenario\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  boolean    \n    is the deletion valid?\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-logic.html":{"url":"additional-documentation/genetics/phage-logic.html","title":"additional-page - Phage Logic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Logic\n\n  \n    Description\n  \n  \n    Functions which compute frameshift/phenotype type\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                doPheno\n              \n\n                getFrames\n              \n          \n        \n      \n    \n  \n\n  \n  \n    doPheno\n  \n    \n      \n        doPheno(mutantList, stopList) ⇒ string\n      \n        \n          \n            Determine the phenotype of a phage based on the list of mutations\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        mutantListArraymutations for this phage strain\n\n      \n        stopListArraylocations of stop codons for varying frameshifts\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  string    \n    phenotype; one of \"allTranslated\", \"frameShifted\", \"deleted\", or \"stopped\"\n\n\n          \n        \n    \n  \n\n  \n  \n    getFrames\n  \n    \n      \n        getFrames(whoSays, mutantList, stopList) ⇒ Object\n      \n        \n          \n            Get the frame shift for a mutant\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        whoSaysstringwho is asking; not used\n\n      \n        mutantListArraymutatations in this phage\n\n      \n        stopListArraylocations of stop codons depending on framshift\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    includes frame (frameshift number of gene as a whole) and frameList (frameshift cummulatively for each frame)\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-experiment.html":{"url":"additional-documentation/genetics/phage-experiment.html","title":"additional-page - Phage Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Experiments\n\n  \n    Description\n  \n  \n    Functions which perform experiments on the phage strains\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                recombine\n              \n\n                mutagenize\n              \n\n                _validRecombDel\n              \n\n                _copyDeletion\n              \n          \n        \n      \n    \n  \n\n  \n  \n    recombine\n  \n    \n      \n        recombine(phageGeno1, phageGeno2, numXOver, numToDo) ⇒ Array\n      \n        \n          \n            Recombine 2 strains with specified number of crossovers and number of offspring\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageGeno1Objectgenotype of phage 1 (shifts and deletion)\n\n      \n        phageGeno2Objectgenotype of phage 2 (shifts and deletion)\n\n      \n        numXOvernumbernumber of crossovers\n\n      \n        numToDonumberhow many offspring to create\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    list of recombined offspring genotypes (shifts and deletion)\n\n\n          \n        \n    \n  \n\n  \n  \n    mutagenize\n  \n    \n      \n        mutagenize(inList, numDesired) ⇒ Array>\n      \n        \n          \n            Create N number of mutants\n\nchecks that mutations aren't too close together on the chromosome\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        inListArraymutations (shifts) of phage to mutagenize\n\n      \n        numDesirednumbernumber of new mutants to generate\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array>    \n    2D array of new mutants;\nDimensions: numDesired x inList.length+1\n\n\n          \n        \n    \n  \n\n  \n  \n    _validRecombDel\n  \n    \n      \n        _validRecombDel(checkPos, delList) ⇒ boolean\n      \n        \n          \n            check if recombination position is within a deletion\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        checkPosnumberposition to check\n\n      \n        delListArraylist of deletions for phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  boolean    \n    true if recombination is valid (not in a deletion); false otherwise\n\n\n          \n        \n    \n  \n\n  \n  \n    _copyDeletion\n  \n    \n      \n        _copyDeletion(sPos, ePos, delList) ⇒ Array\n      \n        \n          \n            Create a copy of deletions within the start and end positions of\nchromosome chunk to be copied\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        sPosnumberstart position of chrosomome chunk to copy\n\n      \n        ePosnumberend position of chromosome chunk to copy\n\n      \n        delListArraylist of deletions for this phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    copy of the deletions\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plate-experiment.html":{"url":"additional-documentation/genetics/plate-experiment.html","title":"additional-page - Plate Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plate Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plates of phage crosses\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                createPlatePhage\n              \n\n                generatePlate\n              \n\n                _computeRecombParameters\n              \n\n                _computeNumOffspring\n              \n\n                _shufflePlaqueList\n              \n          \n        \n      \n    \n  \n\n  \n  \n    createPlate\n  \n    \n      \n        createPlate(phage1, phage2, lawnType, specials, capacity, whoCalled, scenData) ⇒ Object\n      \n        \n          \n            Creates the lab room plate\n\nOnly used in the lab room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phage1Objectfirst phage in the cross\n\n      \n        phage2Object | nullsecond phage in the cross or null if not crossing\n\n      \n        lawnTypestringE. coli bacteria type \"B\" or \"K\"\n\n      \n        specialsObjectother special parameters (not used)\n\n      \n        capacitynumbermax number of plaques allowed on the plate\n\n      \n        whoCalledstringlocation/room asking to generate the plate\n\n      \n        scenDataObjectscenario information\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    new plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques, number is index of genotype in genotypes list\ngenotypes (number[][]): list of genotypes for this plate\nparents (string[]): ids of input phage\n\n\n\n          \n        \n    \n  \n\n  \n  \n    createPlatePhage\n  \n    \n      \n        createPlatePhage() ⇒ Object\n      \n        \n          \n            Create the genotypes and strains for this plate\n\nUsed by both the lab room and plexer room\n          \n        \n        \n          \n              Returns :  Object    \n    phage for this plate\n\ngenoList (): list of genotypes\nstrainList (number[]): list of indices corresponding to genoList\nparents (string): ID's for original phage used to create plate\n\n\n\n          \n        \n    \n  \n\n  \n  \n    generatePlate\n  \n    \n      \n        generatePlate() ⇒ object\n      \n        \n          \n            Phenotypes the plate phage and ensures not too many phage on the plate\n\nThis function is only used in the lab room\n          \n        \n        \n          \n              Returns :  object    \n    representation of plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques; number is index of genotype in genotypes list\ngenotypes\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _computeRecombParameters\n  \n    \n      \n        _computeRecombParameters(f1, f2, p, n) ⇒ Array\n      \n        \n          \n            Compute the recombination parameters\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        f1numberfraction of phage1\n\n      \n        f2numberfraction of phage2\n\n      \n        pnumberrecombination probability\n\n      \n        nnumbertotal number of offspring expected\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    \nnumber of single, double, and triple recombinants to create\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _computeNumOffspring\n  \n    \n      \n        _computeNumOffspring(n1, n2, nR, mutFreq, recFreq, identical) ⇒ Object\n      \n        \n          \n            Compute the expected number of offspring\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        n1numbernumber of input for phage1\n\n      \n        n2numbernumber of input for phage2\n\n      \n        nRnumberratio of phage1 to phage2\n\n      \n        mutFreqnumbermutation frequency for the scenario\n\n      \n        recFreqnumberfrequency of recombination for scenario\n\n      \n        identicalbooleanare the two phage identical\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    numbers/types of offspring to create\n\nnumOffspring (number): number of offspring aiming for\ntotal (number): actual number of offspring to be generated\nnumGeno (number[]): number of each parental geonotype\nnumMuts (number[]): number of mutants for each parental genotype\nnumRecomb (number[]): number of single, double, and triple recomb\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _shufflePlaqueList\n  \n    \n      \n        _shufflePlaqueList(inList, numInput) ⇒ Array\n      \n        \n          \n            shuffle strains; force mutants/recombinants to be towards the front of the list\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        inListArraystrain list to shuffle\n\n      \n        numInputnumbernumber of input/parent phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    shuffled strain list\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plexer-experiment.html":{"url":"additional-documentation/genetics/plexer-experiment.html","title":"additional-page - Plexer Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plexer Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plexer plates\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlexerPlate\n              \n\n                generatePlexerPlate\n              \n          \n        \n      \n    \n  \n\n  \n  \n    createPlexerPlate\n  \n    \n      \n        createPlexerPlate(rowPhage, colPhage, lawnType, special, capacity, whoCalled, scenData) ⇒ Object\n      \n        \n          \n            Creates the plexer results\n\nOnly used in the plexer room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        rowPhageArraylist of input phage representing the rows\n\n      \n        colPhageArraylist of input phage representing the columns\n\n      \n        lawnTypestringE. coli bacteria type; \"B\" or \"K\"\n\n      \n        specialObjectother parameters; not used\n\n      \n        capacitynumbermaximum number of phage per plate\n\n      \n        whoCalledstringlocation asking to create the plexer\n\n      \n        scenDataObjectcurrent scenario data\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    plexer results; 2D array (but as an object) where each cell is a \"plate\" that has\n\nfull (boolean): plate over capacity?\nsmallPlaque (number): number of small plaque on the plate\nlargePlaque (number): number of large plaque on the plate\n\n\n\n          \n        \n    \n  \n\n  \n  \n    generatePlexerPlate\n  \n    \n      \n        generatePlexerPlate(lawnTypeStr, genoList, strainList, capacity, scenData) ⇒ Object\n      \n        \n          \n            Phenotype the phage and format results for front-end\n\nOnly used by the plexer room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        lawnTypeStrstringE. coli bacteria type; \"B\" or \"K\"\n\n      \n        genoListArraylist of genotypes on the plate\n\n      \n        strainListArraylist of strains which is the index to the genotype\n\n      \n        capacitynumbercapacity of each plexer plate\n\n      \n        scenDataObjectcurrent scenario data\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \nresults for this single plexer plate\nfull (boolean): is plate over capacity\nsmallPlaque (number): number of small plaque on plate\nlargePlaque (number): number of large plaque on plate\n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models.html":{"url":"additional-documentation/models.html","title":"additional-page - Models","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Models\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/course-model.html":{"url":"additional-documentation/models/course-model.html","title":"additional-page - Course Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Course Model\n\n  \n    Description\n  \n  \n    Database schema for course\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                courseNum\n              \n\n                description\n              \n\n                instructors\n              \n          \n        \n      \n    \n  \n\n  \n  \n    courseNum\n  \n    \n      \n        courseNum : string\n      \n        \n          \n\n        \n        \n          \n            uniquely identifable course ID\n          \n        \n    \n  \n\n  \n  \n    description\n  \n    \n      \n        description : string\n      \n        \n          \n            basic text description of the course\n          \n        \n    \n  \n\n  \n  \n    instructors\n  \n    \n      \n        instructors : Array\n      \n        \n          \n            list of instructors for the course\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/fridge-model.html":{"url":"additional-documentation/models/fridge-model.html","title":"additional-page - Fridge Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Fridge Model\n\n  \n    Description\n  \n  \n    Database schema for fridge\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                owner\n              \n\n                scenario\n              \n\n                accessGranted\n              \n\n                strains\n              \n\n                scenarioDetails\n              \n\n                guesses\n              \n          \n        \n      \n    \n  \n\n  \n  \n    owner\n  \n    \n      \n        owner : USER\n      \n        \n          \n            user who owns the fridge\n          \n        \n    \n  \n\n  \n  \n    scenario\n  \n    \n      \n        scenario : SCENARIO\n      \n        \n          \n            scenario the fridge is for\n          \n        \n    \n  \n\n  \n  \n    accessGranted\n  \n    \n      \n        accessGranted : boolean\n      \n        \n          \n            has access been granted by instructor\n- when false, phage strains are the same for all users\n- when true, phage are generated using random numbers\n          \n        \n    \n  \n\n  \n  \n    strains\n  \n    \n      \n        strains : Array\n      \n        \n          \n            list of phage strains\nin the fridge\n          \n        \n    \n  \n\n  \n  \n    scenarioDetails\n  \n    \n      \n        scenarioDetails : String\n      \n        \n          \n            - stringified object of the scenario details generated when\nthe fridge was created and is needed for performing\nexperiments\n- includes interMuteDist, intraMuteDist, mutationFreq, recombinationFreq,\ndeleteSizes, deleteSpots, usedDeleteSpots,\nusedShiftSpots, wtGene, realStops, framesStopList\n          \n        \n    \n  \n\n  \n  \n    guesses\n  \n    \n      \n        guesses : String\n      \n        \n          \n            stringified object of user's\nguesses for locations of deletions where the key is the\nstrain number of the guess and the value is an array of\nboolean values indicating if guessed a deletion\n          \n        \n        \n          \n            \n    Example : \n  \"{'1': [false, false, false, false, true, true, ...],\n  '2': [true, true, true, false, false, false, ...],\n  '3': [false, false, false, false, false, false, ...]\n }\"\n \n  \n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/phage-model.html":{"url":"additional-documentation/models/phage-model.html","title":"additional-page - Phage Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Phage Model\n\n  \n    Description\n  \n  \n    Database schema for phage strains\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                strainNum\n              \n\n                owner\n              \n\n                scenarioOrigin\n              \n\n                phageType\n              \n\n                mutationList\n              \n\n                deletion\n              \n\n                comment\n              \n\n                submitted\n              \n\n                parents\n              \n\n                numParents\n              \n          \n        \n      \n    \n  \n\n  \n  \n    strainNum\n  \n    \n      \n        strainNum : number\n      \n        \n          \n\n        \n        \n          \n            location of the phage in the fridge; note this is 0-based but fridge interface is 1-based\n          \n        \n    \n  \n\n  \n  \n    owner\n  \n    \n      \n        owner : USER\n      \n        \n          \n            user who this phage belongs to\n          \n        \n    \n  \n\n  \n  \n    scenarioOrigin\n  \n    \n      \n        scenarioOrigin : SCENARIO\n      \n        \n          \n            scenario that\nthis phage was created for\n          \n        \n    \n  \n\n  \n  \n    phageType\n  \n    \n      \n        phageType : String\n      \n        \n          \n            description of who created phage; must be one of reference, unknown or user\n          \n        \n    \n  \n\n  \n  \n    mutationList\n  \n    \n      \n        mutationList : Array\n      \n        \n          \n            list of frameshift mutations\n- for each mutation, absolute value of number indicates position in the gene\n- positive/negative number indicates plus/minus frameshift\n          \n        \n        \n          \n            \n    Example : \n    One plus frameshift mutation \n  [43]\n \n  \n\n    Example : \n    One minus frameshift mutation \n  [-178]\n \n  \n\n    Example : \n    Two frameshifts of opposite type  \n  [106, -213]\n \n  \n          \n        \n    \n  \n\n  \n  \n    deletion\n  \n    \n      \n        deletion : Array\n      \n        \n          \n            list of deletions in the strain;\n- if length 2, [0] is start of deletion and [1] is end\n- if length greater than 2, there are multiple deletions that start on even index positions and end on odd index position\n          \n        \n        \n          \n            \n    Example : \n    80 bp deletion at the beginning of gene \n  [0, 80]\n \n  \n\n    Example : \n    150 bp deletion in the middle of the gene \n  [125, 275]\n \n  \n\n    Example : \n    Multiple deletions: 40 bp-90 bp and 200 bp-280 bp \n  [40, 90, 200, 280]\n \n  \n          \n        \n    \n  \n\n  \n  \n    comment\n  \n    \n      \n        comment : String\n      \n        \n          \n            User/scenario comment that describes this phage strain; makes it easier to remember details about each phage\n          \n        \n    \n  \n\n  \n  \n    submitted\n  \n    \n      \n        submitted : boolean\n      \n        \n          \n            for user phage, is this a phage that should be graded by instructor\n- used when scenario asks users to create a phage with a specific mutation and makes it easier for the instr to phage\n          \n        \n    \n  \n\n  \n  \n    parents\n  \n    \n      \n        parents : Array\n      \n        \n          \n            when phage created in the lab room on the plate, these are the parent(s) used during the experiment\n          \n        \n    \n  \n\n  \n  \n    numParents\n  \n    \n      \n        numParents : number\n      \n        \n          \n            when phage created in lab room on the lab, number of parents used during the experiment\n   - used to know if a phage has a parent that was deleted from the DB\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/scenario-model.html":{"url":"additional-documentation/models/scenario-model.html","title":"additional-page - Scenario Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Scenario Model\n\n  \n    Description\n  \n  \n    Database schema for scenarios (scenarios are created when the application runs the first time)\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                label\n              \n\n                fileCode\n              \n\n                scenCode\n              \n\n                defOfDiff\n              \n\n                mutationFreq\n              \n\n                recombinationFreq\n              \n\n                gcProb\n              \n\n                minStops\n              \n\n                intraMuteDist\n              \n\n                interMuteDist\n              \n\n                purpose\n              \n\n                relevance\n              \n\n                startingPoint\n              \n\n                referencePhage\n              \n\n                otherPhage\n              \n          \n        \n      \n    \n  \n\n  \n  \n    label\n  \n    \n      \n        label : string\n      \n        \n          \n            human-readable label describing the scenario\n          \n        \n    \n  \n\n  \n  \n    fileCode\n  \n    \n      \n        fileCode : string\n      \n    \n  \n\n  \n  \n    scenCode\n  \n    \n      \n        scenCode : string\n      \n        \n          \n\n        \n        \n          \n            short string used to uniquely\nidentify each scenario via URL\n          \n        \n    \n  \n\n  \n  \n    defOfDiff\n  \n    \n      \n        defOfDiff : number\n      \n        \n          \n            relative degree of difficulty used to order the scenarios on the scenario page\n          \n        \n    \n  \n\n  \n  \n    mutationFreq\n  \n    \n      \n        mutationFreq : number\n      \n        \n          \n            chance creating a new frameshift mutation during an experiment\n          \n        \n    \n  \n\n  \n  \n    recombinationFreq\n  \n    \n      \n        recombinationFreq : number\n      \n        \n          \n            chance of single recombination when crossing two phage in an experiment\n          \n        \n    \n  \n\n  \n  \n    gcProb\n  \n    \n      \n        gcProb : number\n      \n        \n          \n            integer number for percent G and C's when creating the WT gene\n          \n        \n    \n  \n\n  \n  \n    minStops\n  \n    \n      \n        minStops : number\n      \n        \n          \n            minumum number of possible stop codons that would be created during frameshifts of a gene\n          \n        \n    \n  \n\n  \n  \n    intraMuteDist\n  \n    \n      \n        intraMuteDist : Array\n      \n        \n          \n            mutations on the same phage are\nbetween [0] and [1] distance apart when interMuteDist isn't set\n          \n        \n    \n  \n\n  \n  \n    interMuteDist\n  \n    \n      \n        interMuteDist : number\n      \n        \n          \n            minimum distance apart that\nmutations should be for different phage of the same scenario; equals -1 when unset\n          \n        \n    \n  \n\n  \n  \n    purpose\n  \n    \n      \n        purpose : string\n      \n        \n          \n            description of the goal of the scenario for users\n          \n        \n    \n  \n\n  \n  \n    relevance\n  \n    \n      \n        relevance : String\n      \n        \n          \n            description of why this scenario is important for learning\n          \n        \n    \n  \n\n  \n  \n    startingPoint\n  \n    \n      \n        startingPoint : String\n      \n        \n          \n            description of the phage\nstrains in the fridge when first created\n          \n        \n    \n  \n\n  \n  \n    referencePhage\n  \n    \n      \n        referencePhage : Array\n      \n        \n          \n            each item is a phage to be created for the scenario when fridge created\n- each item includes details about what mutations/deletions, if any, to include in the phage\n- as a reference phage, mutation type is told to user\n          \n        \n    \n  \n\n  \n  \n    otherPhage\n  \n    \n      \n        otherPhage : Array\n      \n        \n          \n            each item is a phage to be created for the scenario when fridge created\n- each item includes details about what mutations/deletions, if any, to include in the phage\n- as an other phage, mutation type is not told to user and discovering the mutation is often the puprose for the scenario\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/user-model.html":{"url":"additional-documentation/models/user-model.html","title":"additional-page - User Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  User Model\n\n  \n    Description\n  \n  \n    Database schema for user\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                authenticate\n              \n\n                changePassword\n              \n\n                userId\n              \n\n                firstName\n              \n\n                lastName\n              \n\n                email\n              \n\n                password\n              \n\n                course\n              \n\n                accessGranted\n              \n\n                role\n              \n\n                lastLogin\n              \n\n                resetPasswordToken\n              \n\n                resetPasswordExpires\n              \n\n                rolesEnum\n              \n          \n        \n      \n    \n  \n\n  \n  \n    authenticate\n  \n    \n      \n        authenticate(candidatePassword, callback) ⇒ function\n      \n        \n          \n            Determines if the entered password is correct\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        candidatePasswordstringuser input password to compare to database\n\n      \n        callbackfunctionCallback function to pass result to\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    Pass error message and if password is a match to the callback function\n\n\n          \n        \n    \n  \n\n  \n  \n    changePassword\n  \n    \n      \n        changePassword(oldPassword, newPassword, callback) ⇒ function\n      \n        \n          \n            Update a user password, assuming the oldPassword is correct\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        oldPasswordstringuser input for current password\n\n      \n        newPasswordstringthe new password user wants to change to\n\n      \n        callbackfunctionCallback function to pass result to\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    Pass error message or null to callback function\n\n\n          \n        \n    \n  \n\n  \n  \n    userId\n  \n    \n      \n        userId : number\n      \n        \n          \n\n        \n        \n          \n            auto-incremented user ID\n          \n        \n    \n  \n\n  \n  \n    firstName\n  \n    \n      \n        firstName : string\n      \n        \n          \n            user's first name\n          \n        \n    \n  \n\n  \n  \n    lastName\n  \n    \n      \n        lastName : string\n      \n        \n          \n            user's last name\n          \n        \n    \n  \n\n  \n  \n    email\n  \n    \n      \n        email : string\n      \n        \n          \n\n        \n        \n          \n            user's email address\n          \n        \n    \n  \n\n  \n  \n    password\n  \n    \n      \n        password : string\n      \n        \n          \n\n        \n        \n          \n            user's password; actual password is not stored in DB\n          \n        \n    \n  \n\n  \n  \n    course\n  \n    \n      \n        course : COURSE\n      \n        \n          \n            course the user is part of\n          \n        \n    \n  \n\n  \n  \n    accessGranted\n  \n    \n      \n        accessGranted : Object\n      \n        \n          \n            for each scenario (as key), has access been granted\n          \n        \n        \n          \n            \n    Example : \n  {\"scen1\": false, \"scen2\": true, \"scen3\": true}\n \n  \n          \n        \n    \n  \n\n  \n  \n    role\n  \n    \n      \n        role : string\n      \n        \n          \n            user's role which is used to determine website access; one of [rolesEnum]{@link #rolesEnum}\n          \n        \n    \n  \n\n  \n  \n    lastLogin\n  \n    \n      \n        lastLogin : Date\n      \n        \n          \n            date and time of the last time the user logged in\n          \n        \n    \n  \n\n  \n  \n    resetPasswordToken\n  \n    \n      \n        resetPasswordToken : string\n      \n        \n          \n            token generated for user when they request a password reset; necessary to be able to set the new password\n          \n        \n    \n  \n\n  \n  \n    resetPasswordExpires\n  \n    \n      \n        resetPasswordExpires : Date\n      \n        \n          \n            date and time that the password-reset token expires; token is no longer valid after this time\n          \n        \n    \n  \n\n  \n  \n    rolesEnum\n  \n    \n      \n        rolesEnum : enum\n      \n        \n          \n            List of valid roles for users and error message\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
