var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.465,1,1.124]],["body/components/AdminComponent.html",[0,0.824,1,1.754,2,0.489,3,0.325,4,1.141,5,0.298,6,3.623,7,0.311,8,5.706,9,1.086,10,5.706,11,4.217,12,7.061,13,3.204,14,3.524,15,5.014,16,1.378,17,3.965,18,1.007,19,3.718,20,3.068,21,2.301,22,1.866,23,3.128,24,0.945,25,2.478,26,1.668,27,5.706,28,0.395,29,0.836,30,2.298,31,7.061,32,2.94,33,1.239,34,2.759,35,1.38,36,2.315,37,2.064,38,1.452,39,5.706,40,0.66,41,0.011,42,0.988,43,0.537,44,0.76,45,3.068,46,4.123,47,2.832,48,2.456,49,2.675,50,2.832,51,1.623,52,0.604,53,1.471,54,0.824,55,4.123,56,0.903,57,1.31,58,1.348,59,0.736,60,0.552,61,2.128,62,2.128,63,2.217,64,1.611,65,2.217,66,0.311,67,0.535,68,4.123,69,3.293,70,4.557,71,1.054,72,2.631,73,1.754,74,1.141,75,1.141,76,1.024,77,1.579,78,1.024,79,1.537,80,1.141,81,0.97,82,1.081,83,0.502,84,1.141,85,1.024,86,1.141,87,1.024,88,1.141,89,1.024,90,1.579,91,1.024,92,1.811,93,1.024,94,1.141,95,1.024,96,1.081,97,1.579,98,1.052,99,1.579,100,1.024,101,1.141,102,1.024,103,1.052,104,0.76,105,1.954,106,1.024,107,1.111,108,1.024,109,0.47,110,1.024,111,1.141,112,1.024,113,0.76,114,1.024,115,1.141,116,1.024,117,1.141,118,1.024,119,1.141,120,1.024,121,0.395,122,1.081,123,1.141,124,1.052,125,0.66,126,1.024,127,0.76,128,1.024,129,1.141,130,1.024,131,1.141,132,1.024,133,1.141,134,1.024,135,1.141,136,1.024,137,1.024,138,1.024,139,1.024,140,1.141,141,1.024,142,1.141,143,1.024,144,1.081,145,1.141,146,1.141,147,0.007,148,0.007]],["title/injectables/AdminGuard.html",[149,1.714,150,3.128]],["body/injectables/AdminGuard.html",[2,0.335,3,0.4,5,0.367,7,0.495,9,1.193,18,0.824,20,3.526,21,3.283,22,2.375,28,0.486,30,1.484,33,1.424,35,1.227,36,2.85,37,2.245,38,1.348,40,1.049,41,0.011,42,0.99,43,0.538,44,1.208,45,3.526,52,1.125,54,0.864,56,0.7,59,0.721,60,0.679,64,1.983,66,0.383,67,0.658,147,0.008,148,0.008,149,2.752,150,4.534,151,4.46,152,6.558,153,4.534,154,3.963,155,3.422,156,2.822,157,5.186,158,6.747,159,3.35,160,5.076,161,5.762,162,5.496,163,3.181,164,5.496,165,5.076,166,5.238,167,2.822,168,2.822,169,5.238,170,2.644,171,1.175,172,2.125,173,3.235,174,3.35,175,1.526,176,1.923,177,2.027,178,4.46,179,5.076,180,5.076,181,4.054,182,5.076,183,4.46]],["title/components/AdminHomeComponent.html",[0,0.465,76,1.124]],["body/components/AdminHomeComponent.html",[0,0.833,1,1.233,2,0.328,3,0.391,4,1.374,5,0.359,7,0.375,9,1.208,16,1.396,18,1.017,24,1.138,25,2.503,26,1.89,41,0.01,42,0.976,54,0.665,59,0.493,60,0.665,66,0.375,67,0.644,71,1.022,73,1.891,74,1.374,75,1.374,76,1.891,77,1.789,78,1.233,79,1.741,80,1.374,81,1.169,82,1.302,83,0.605,84,1.374,85,1.233,86,1.374,87,1.233,88,1.374,89,1.233,90,1.789,91,1.233,92,1.99,93,1.233,94,1.374,95,1.233,96,1.302,97,1.789,98,1.267,99,1.789,100,1.233,101,1.374,102,1.233,103,1.267,104,0.915,105,2.108,106,1.233,107,1.338,108,1.233,109,0.566,110,1.233,111,1.374,112,1.233,113,0.915,114,1.233,115,1.374,116,1.233,117,1.374,118,1.233,119,1.374,120,1.233,121,0.475,122,1.302,123,1.374,124,1.267,125,0.795,126,1.233,127,0.915,128,1.233,129,1.374,130,1.233,131,1.374,132,1.233,133,1.374,134,1.233,135,1.374,136,1.233,137,1.233,138,1.233,139,1.233,140,1.374,141,1.233,142,1.374,143,1.233,144,1.302,145,1.374,146,1.374,147,0.008,148,0.008,184,4.363,185,3.966,186,4.363,187,2.692,188,5.164,189,3.209,190,4.778,191,4.213,192,5.681,193,4.47,194,6.465]],["title/modules/AdminModule.html",[195,1.522,196,3.128]],["body/modules/AdminModule.html",[1,2.043,2,0.348,3,0.416,5,0.382,7,0.399,9,1.085,16,1.139,18,0.845,41,0.011,54,0.692,59,0.86,60,0.707,66,0.508,67,0.685,76,2.043,116,2.043,127,0.973,147,0.008,148,0.008,150,5.688,156,2.894,175,1.587,185,4.217,195,2.622,196,6.115,197,1.632,198,2.725,199,3.82,200,2.272,201,3.82,202,4.639,203,4.639,204,4.639,205,4.639,206,3.663,207,4.424,208,3.471,209,1.883,210,5.28,211,2.712,212,5.909,213,5.909,214,6.725,215,3.616,216,2.965,217,2.725,218,5.28,219,5.28,220,5.28,221,5.28,222,4.217,223,5.28,224,5.28,225,4.639,226,5.28]],["title/interfaces/AdminStudent.html",[171,0.811,227,2.433]],["body/interfaces/AdminStudent.html",[2,0.362,3,0.432,5,0.397,7,0.415,9,1.01,16,1.445,18,0.994,28,0.526,29,1.01,41,0.011,42,1.138,43,0.566,51,2.144,52,1.01,54,0.565,56,1.147,59,0.684,66,0.569,71,0.981,73,1.364,109,0.626,147,0.008,148,0.008,155,3.402,170,3.039,171,1.351,172,1.52,211,2.214,227,3.707,228,4.058,229,2.191,230,6.058,231,3.741,232,4.825,233,3.707,234,3.796,235,2.953,236,2.953,237,2.287,238,1.192,239,1.497,240,3.578,241,2.445,242,3.083,243,3.578,244,5.21,245,4.386,246,2.725,247,2.725,248,4.386,249,2.445,250,4.386,251,4.386,252,3.392,253,4.386,254,4.386,255,3.392,256,3.392,257,4.386,258,6.02,259,4.386,260,2.363,261,4.386]],["title/components/AppComponent.html",[0,0.465,78,1.124]],["body/components/AppComponent.html",[0,0.832,1,1.23,2,0.327,3,0.39,4,1.786,5,0.358,7,0.374,9,0.726,16,1.336,18,0.956,19,4.205,24,1.134,25,2.503,35,1.736,38,1.018,41,0.01,42,0.974,54,0.664,59,0.492,60,0.663,66,0.374,67,0.642,71,0.704,73,1.889,74,1.37,75,1.37,76,1.23,77,1.786,78,1.889,79,2.049,80,1.37,81,1.165,82,1.298,83,0.603,84,1.37,85,1.23,86,1.37,87,1.23,88,1.37,89,1.23,90,1.786,91,1.23,92,1.987,93,1.23,94,1.37,95,1.23,96,1.298,97,1.786,98,1.263,99,1.786,100,1.23,101,1.37,102,1.23,103,1.263,104,0.912,105,2.105,106,1.23,107,1.334,108,1.23,109,0.565,110,1.23,111,1.37,112,1.23,113,0.912,114,1.23,115,1.37,116,1.23,117,1.37,118,1.23,119,1.37,120,1.23,121,0.474,122,1.298,123,1.37,124,1.263,125,0.792,126,1.23,127,0.912,128,1.23,129,1.37,130,1.23,131,1.37,132,1.23,133,1.37,134,1.23,135,1.37,136,1.23,137,1.23,138,1.23,139,1.23,140,1.37,141,1.23,142,1.37,143,1.23,144,1.298,145,1.37,146,1.37,147,0.008,148,0.008,167,2.777,168,2.371,170,2.602,190,4.769,240,4.205,262,4.351,263,4.461,264,3.986,265,5.67,266,5.67,267,4.951]],["title/modules/AppModule.html",[195,1.522,268,3.344]],["body/modules/AppModule.html",[2,0.273,3,0.326,5,0.299,7,0.312,37,2.244,41,0.011,52,0.606,59,0.874,60,0.554,64,1.617,66,0.432,67,0.537,71,0.589,78,2.085,102,1.907,114,1.907,118,1.907,127,0.762,147,0.007,148,0.007,153,2.861,175,1.244,190,4.227,191,4.272,195,2.38,196,5.308,197,1.279,198,2.136,199,3.384,200,3.195,201,3.384,206,3.418,208,2.952,209,1.476,215,3.076,216,2.324,217,2.136,247,2.054,252,2.556,268,6.61,269,3.636,270,3.636,271,3.636,272,3.636,273,3.636,274,5.308,275,5.308,276,5.308,277,5.308,278,4.128,279,5.308,280,5.308,281,3.962,282,4.138,283,5.72,284,3.636,285,3.058,286,5.72,287,2.861,288,4.138,289,4.138,290,3.058,291,5.72,292,3.305,293,3.533,294,4.138,295,4.138,296,4.138,297,4.138,298,2.861,299,3.636,300,4.138,301,4.138,302,4.138,303,4.138,304,4.138,305,4.138,306,4.138,307,4.138,308,3.305,309,4.138,310,4.138,311,4.138,312,4.138,313,4.138,314,3.955,315,4.138,316,3.636,317,5.236,318,4.138,319,4.138,320,3.636,321,4.138]],["title/modules/AuthenticationModule.html",[195,1.522,274,3.128]],["body/modules/AuthenticationModule.html",[2,0.365,3,0.436,5,0.4,41,0.011,59,0.866,60,0.741,66,0.523,67,0.718,95,2.068,96,1.451,126,2.068,127,1.277,130,2.068,132,2.068,134,2.068,147,0.008,148,0.008,175,1.664,195,2.332,197,1.711,198,2.857,199,3.904,200,2.382,201,2.857,208,3.576,209,1.975,215,3.726,216,3.108,274,6.109,290,4.091,322,4.864,323,4.864,324,5.535,325,6.088,326,4.421,327,6.088,328,5.535,329,5.535,330,5.535,331,5.535,332,5.535,333,4.421,334,6.088,335,4.421,336,5.535]],["title/injectables/AuthenticationService.html",[37,1.323,149,1.714]],["body/injectables/AuthenticationService.html",[2,0.274,3,0.327,5,0.3,19,3.734,28,0.397,29,0.84,30,2.302,33,1.244,35,1.003,37,1.675,38,1.75,40,1.229,41,0.011,42,1.16,43,0.683,44,1.416,52,1.27,53,1.48,54,0.838,56,1.025,57,2.25,58,2.315,59,0.738,60,0.555,65,2.231,66,0.313,67,0.538,96,1.087,127,0.764,147,0.007,148,0.007,149,2.487,172,1.959,174,1.913,176,1.571,233,3.807,260,1.785,287,2.868,337,3.645,338,5.232,339,5.93,340,4.278,341,7.08,342,7.08,343,5.73,344,6.22,345,4.576,346,5.73,347,4.851,348,5.491,349,4.851,350,3.645,351,5.232,352,5.73,353,4.576,354,4.148,355,5.034,356,4.148,357,5.312,358,4.298,359,4.148,360,4.148,361,5.73,362,4.148,363,4.538,364,5.73,365,4.148,366,5.73,367,4.148,368,4.148,369,5.73,370,4.148,371,5.73,372,4.148,373,7.08,374,1.856,375,5.73,376,4.148,377,5.73,378,4.148,379,5.768,380,2.562,381,4.148,382,4.148,383,4.148,384,4.148,385,4.148,386,4.148,387,4.148,388,4.148,389,7.683,390,5.73,391,6.22,392,4.148,393,4.148,394,2.957]],["title/components/ConfirmDeleteDialogComponent.html",[0,0.465,81,1.065]],["body/components/ConfirmDeleteDialogComponent.html",[0,0.76,1,1.141,2,0.303,3,0.362,4,1.271,5,0.332,9,0.673,16,1.304,18,0.928,24,1.052,25,2.493,26,1.795,28,0.44,29,0.9,35,1.11,38,1.422,40,0.735,41,0.01,42,1.044,43,0.568,44,0.846,54,0.632,56,0.847,57,1.46,58,1.502,59,0.61,60,0.615,66,0.347,67,0.596,71,0.653,73,1.834,74,1.271,75,1.271,76,1.141,77,1.7,78,1.141,79,1.654,80,1.271,81,1.738,82,2.12,83,1.032,84,1.271,85,1.141,86,1.271,87,1.141,88,1.271,89,1.141,90,1.7,91,1.141,92,1.915,93,1.141,94,1.271,95,1.141,96,1.204,97,1.7,98,1.172,99,1.7,100,1.141,101,1.271,102,1.141,103,1.172,104,0.846,105,2.044,106,1.141,107,1.237,108,1.141,109,0.524,110,1.141,111,1.271,112,1.141,113,0.846,114,1.141,115,1.271,116,1.141,117,1.271,118,1.141,119,1.271,120,1.141,121,0.44,122,1.813,123,1.271,124,1.172,125,0.735,126,1.141,127,0.846,128,1.141,129,1.271,130,1.141,131,1.271,132,1.141,133,1.271,134,1.141,135,1.271,136,1.141,137,1.141,138,1.141,139,1.141,140,1.271,141,1.141,142,1.271,143,1.141,144,1.204,145,1.271,146,1.271,147,0.007,148,0.007,200,1.977,340,4.002,395,6.489,396,3.668,397,5.395,398,6.763,399,4.342,400,2.916,401,4.036,402,6.959,403,6.141,404,4.538,405,4.905,406,4.593,407,3.394,408,2.993,409,2.993,410,4.036,411,2.993,412,4.905]],["title/interfaces/Course.html",[16,0.766,171,0.811]],["body/interfaces/Course.html",[2,0.384,3,0.458,5,0.421,7,0.645,16,1.495,18,1.099,28,0.557,29,1.047,41,0.011,43,0.662,44,1.486,51,2.033,56,1.163,59,0.709,66,0.439,72,3.887,147,0.008,148,0.008,171,1.281,233,4.338,234,4.022,238,1.551,413,5.112,414,4.53,415,1.469,416,5.817]],["title/components/CourseCreateComponent.html",[0,0.465,85,1.124]],["body/components/CourseCreateComponent.html",[0,0.805,1,0.813,2,0.216,3,0.258,4,0.906,5,0.237,7,0.512,9,1.076,16,1.484,18,0.799,21,2.562,22,1.581,23,2.75,24,0.75,25,2.439,26,1.414,28,0.313,29,0.709,30,2.43,32,2.955,33,1.05,34,2.483,35,1.169,37,1.858,38,1.55,40,0.524,41,0.011,42,0.868,43,0.556,44,0.603,47,2.4,48,2.081,49,2.407,52,0.843,53,2.052,54,0.805,56,0.794,57,1.537,58,1.581,59,0.729,60,0.438,64,1.279,66,0.247,67,0.425,71,0.465,73,1.578,74,0.906,75,0.906,76,0.813,77,1.338,78,0.813,79,1.303,80,0.906,81,0.77,82,0.858,83,0.398,84,0.906,85,1.578,86,0.906,87,0.813,88,0.906,89,0.813,90,1.338,91,0.813,92,1.592,93,0.813,94,0.906,95,0.813,96,0.858,97,1.338,98,0.835,99,1.338,100,0.813,101,0.906,102,0.813,103,0.835,104,0.603,105,1.759,106,0.813,107,0.881,108,0.813,109,0.373,110,0.813,111,0.906,112,0.813,113,0.603,114,0.813,115,0.906,116,0.813,117,0.906,118,0.813,119,0.906,120,0.813,121,0.313,122,0.858,123,0.906,124,0.835,125,0.524,126,0.813,127,0.603,128,0.813,129,0.906,130,0.813,131,0.906,132,0.813,133,0.906,134,0.813,135,0.906,136,0.813,137,0.813,138,0.813,139,0.813,140,0.906,141,0.813,142,0.906,143,0.813,144,0.858,145,0.906,146,0.906,147,0.007,148,0.006,159,2.652,171,0.586,175,0.984,189,2.4,238,1.472,278,3.417,374,1.268,400,2.407,414,2.716,415,0.994,417,5.015,418,6.147,419,2.875,420,2.634,421,2.75,422,2.716,423,4.836,424,4.836,425,6.354,426,3.475,427,5.075,428,2.483,429,2.614,430,3.23,431,3.568,432,2.652,433,4.836,434,2.987,435,3.272,436,2.23,437,3.343,438,2.267,439,2.735,440,3.272,441,4.249,442,3.151,443,2.207,444,2.843,445,3.272,446,3.343,447,2.312,448,2.014,449,3.151,450,3.272,451,3.272,452,3.863,453,2.562,454,1.95,455,3.272,456,2.716,457,3.574,458,3.272,459,1.924,460,2.133,461,1.457,462,1.564,463,2.875,464,1.564,465,3.272,466,2.23,467,2.021,468,1.924,469,2.875,470,3.272,471,3.272,472,2.614,473,2.262,474,3.272,475,2.875,476,2.875,477,1.838,478,1.924,479,2.021,480,1.924]],["title/components/CourseEditComponent.html",[0,0.465,87,1.124]],["body/components/CourseEditComponent.html",[0,0.576,1,0.539,2,0.232,3,0.171,4,0.601,5,0.157,7,0.335,9,0.318,14,2.173,16,1.451,18,0.915,21,2.056,22,1.15,23,2.12,24,0.497,25,2.35,26,1.028,28,0.208,29,0.515,30,2.31,32,2.497,33,1.515,34,1.992,35,0.525,37,1.491,38,1.597,40,0.347,41,0.011,42,0.669,43,0.54,44,0.4,49,1.931,52,1.023,53,2.424,54,0.718,56,0.612,57,0.69,58,0.71,59,0.735,60,0.291,61,2.892,62,1.121,63,1.168,64,0.848,65,1.168,66,0.164,67,0.282,71,0.631,72,3.671,73,1.266,74,0.601,75,0.601,76,0.539,77,0.974,78,0.539,79,0.947,80,0.601,81,0.828,82,1.781,83,0.987,84,0.601,85,0.539,86,0.601,87,1.266,88,0.601,89,0.539,90,0.974,91,0.539,92,1.227,93,0.539,94,0.601,95,0.539,96,0.569,97,0.974,98,0.554,99,0.974,100,0.539,101,0.601,102,0.539,103,0.554,104,0.4,105,1.411,106,0.539,107,0.585,108,0.539,109,0.248,110,0.539,111,0.601,112,0.539,113,0.4,114,0.539,115,0.601,116,0.539,117,0.601,118,0.539,119,0.601,120,0.539,121,0.208,122,1.469,123,0.601,124,0.554,125,0.347,126,0.539,127,0.4,128,0.539,129,0.601,130,0.539,131,0.601,132,0.539,133,0.601,134,0.539,135,0.601,136,0.539,137,0.539,138,0.539,139,0.539,140,0.601,141,0.539,142,0.601,143,0.539,144,0.569,145,0.601,146,0.601,147,0.005,148,0.004,154,3.095,159,1.622,163,1.374,168,1.293,175,0.653,176,0.822,177,1.087,187,1.465,193,3.525,200,0.934,206,0.967,217,1.121,227,2.742,237,1.465,238,1.216,239,1.515,249,1.566,255,2.173,256,1.341,278,2.742,374,0.569,400,1.333,404,2.6,405,2.81,407,3.768,408,1.415,409,1.415,412,5.253,414,1.975,415,1.048,417,5.108,421,2.12,422,1.975,428,1.992,430,2.49,431,2.863,432,2.045,434,2.739,438,2.139,439,1.908,440,2.765,442,2.292,443,1.532,447,2.437,448,2.739,453,2.056,456,1.975,460,1.415,461,0.967,462,1.038,464,1.038,466,2.765,469,3.091,472,1.734,473,2.432,475,3.091,476,3.091,477,2.863,478,2.998,481,6.261,482,1.908,483,3.651,484,3.518,485,3.518,486,4.48,487,4.48,488,2.742,489,3.525,490,5.099,491,5.099,492,5.099,493,5.099,494,5.099,495,4.072,496,4.072,497,5.099,498,3.108,499,1.276,500,3.896,501,3.518,502,2.171,503,5.253,504,5.099,505,2.171,506,2.171,507,4.86,508,4.55,509,4.547,510,1.816,511,4.432,512,3.013,513,3.704,514,2.171,515,3.768,516,2.531,517,5.269,518,2.171,519,2.171,520,2.068,521,1.975,522,2.068,523,2.171,524,3.091,525,3.518,526,2.171,527,3.518,528,2.171,529,1.746,530,2.171,531,2.171,532,2.068,533,2.171,534,2.531,535,2.173,536,2.171,537,2.171,538,2.171,539,3.091,540,1.605,541,1.415,542,1.734,543,1.605,544,1.734,545,2.171,546,1.168,547,0.601,548,0.71,549,1.168,550,1.415,551,1.908,552,1.501,553,1.605,554,1.734,555,2.171,556,3.225,557,1.734,558,3.896,559,2.171,560,2.171,561,4.434,562,2.171,563,1.908,564,1.908,565,1.341,566,2.171,567,6.315,568,2.171,569,2.171,570,3.518,571,1.908,572,2.171,573,2.171,574,1.734,575,1.501,576,3.091,577,3.091,578,2.81,579,2.6,580,2.171,581,1.734,582,3.091,583,3.091,584,3.091,585,2.171,586,3.091,587,2.171,588,2.068,589,3.518,590,2.171,591,2.171,592,1.501,593,1.168,594,1.168,595,3.091,596,2.432,597,2.81]],["title/components/CourseIndivComponent.html",[0,0.465,89,1.124]],["body/components/CourseIndivComponent.html",[0,0.67,1,0.739,2,0.4,3,0.234,4,0.824,5,0.215,7,0.537,9,0.66,16,1.459,18,1.058,19,2.936,21,2.444,22,1.473,23,2.599,24,0.682,25,2.421,26,1.317,28,0.285,29,0.66,30,2.449,32,2.853,33,0.978,34,2.368,35,1.089,37,1.772,38,1.543,40,0.476,41,0.011,42,0.821,43,0.584,44,0.548,47,2.236,49,1.707,51,1.546,52,0.66,53,1.607,54,0.705,56,0.75,57,1.432,58,1.473,59,0.745,60,0.398,61,3.361,62,1.536,63,1.601,64,1.163,66,0.225,67,0.386,71,0.773,72,3.281,73,1.506,74,0.824,75,0.824,76,0.739,77,1.247,78,0.739,79,1.214,80,0.824,81,0.701,82,0.78,83,0.362,84,0.824,85,0.739,86,0.824,87,0.739,88,0.824,89,1.506,90,1.247,91,0.739,92,1.504,93,0.739,94,0.824,95,0.739,96,0.78,97,1.247,98,0.76,99,1.247,100,0.739,101,0.824,102,0.739,103,0.76,104,0.548,105,1.678,106,0.739,107,0.802,108,0.739,109,0.939,110,0.739,111,0.824,112,0.739,113,0.548,114,0.739,115,0.824,116,0.739,117,0.824,118,0.739,119,0.824,120,0.739,121,0.285,122,0.78,123,0.824,124,0.76,125,0.476,126,0.739,127,0.548,128,0.739,129,0.824,130,0.739,131,0.824,132,0.739,133,0.824,134,0.739,135,0.824,136,0.739,137,0.739,138,0.739,139,0.739,140,0.824,141,0.739,142,0.824,143,0.739,144,0.78,145,0.824,146,0.824,147,0.005,148,0.005,159,2.077,163,1.76,171,0.533,175,0.895,187,2.263,238,0.646,239,1.316,243,2.936,249,2.006,256,1.839,264,2.783,278,3.26,281,3.129,298,2.058,374,0.78,400,1.707,414,2.53,415,1.507,417,4.983,421,2.599,422,2.53,426,2.077,428,2.368,430,3.052,431,3.404,432,2.506,434,3.358,443,1.822,447,2.898,448,2.524,454,2.192,456,2.53,460,1.94,461,1.325,462,1.423,464,1.423,466,1.372,483,2.936,487,5.326,488,3.26,489,4.191,499,1.75,520,2.649,521,2.53,522,2.649,534,2.236,535,2.783,544,2.378,546,1.601,547,0.824,548,0.973,549,1.601,550,1.94,552,2.058,553,2.2,554,2.378,556,2.923,557,2.378,558,2.615,565,1.839,592,2.058,593,1.601,594,1.601,595,3.959,597,3.598,598,6.108,599,2.378,600,3.959,601,4.505,602,3.959,603,3.358,604,4.505,605,2.977,606,2.977,607,3.115,608,2.977,609,4.505,610,2.977,611,2.977,612,2.977,613,3.33,614,2.977,615,4.505,616,1.839,617,2.615,618,2.977,619,2.615,620,2.2,621,2.615,622,2.378,623,2.615,624,2.058,625,2.378,626,4.505,627,4.505,628,3.959,629,4.505]],["title/components/CourseListComponent.html",[0,0.465,91,1.124]],["body/components/CourseListComponent.html",[0,0.837,1,0.967,2,0.257,3,0.307,4,1.078,5,0.281,7,0.294,9,1.009,16,1.504,18,0.866,22,1.793,23,3.033,24,0.892,25,2.469,26,1.603,28,0.373,29,0.803,30,2.31,33,1.19,34,2.691,35,1.325,37,2.014,38,1.493,40,0.623,41,0.011,42,0.958,43,0.521,44,0.717,47,2.721,49,2.077,52,0.803,53,1.956,54,0.775,59,0.721,60,0.521,64,1.521,66,0.294,67,0.505,71,0.554,72,2.528,73,1.711,74,1.078,75,1.078,76,0.967,77,1.517,78,0.967,79,1.477,80,1.078,81,0.916,82,1.021,83,0.474,84,1.078,85,0.967,86,1.078,87,0.967,88,1.078,89,0.967,90,1.517,91,1.711,92,1.756,93,0.967,94,1.078,95,0.967,96,1.021,97,1.517,98,0.993,99,1.517,100,0.967,101,1.078,102,0.967,103,0.993,104,0.717,105,1.906,106,0.967,107,1.049,108,0.967,109,0.444,110,0.967,111,1.078,112,0.967,113,0.717,114,0.967,115,1.078,116,0.967,117,1.078,118,0.967,119,1.078,120,0.967,121,0.373,122,1.021,123,1.078,124,0.993,125,0.623,126,0.967,127,0.717,128,0.967,129,1.078,130,0.967,131,1.078,132,0.967,133,1.078,134,0.967,135,1.078,136,0.967,137,0.967,138,0.967,139,0.967,140,1.078,141,0.967,142,1.078,143,0.967,144,1.021,145,1.078,146,1.078,147,0.006,148,0.006,154,2.83,155,2.359,167,2.359,171,0.698,278,3.704,374,1.437,415,1.708,417,4.908,420,1.845,421,3.033,426,3.642,428,2.691,429,3.11,432,2.926,434,3.386,447,2.621,448,2.283,449,3.573,459,2.289,460,2.537,464,1.861,468,2.289,479,2.405,480,2.289,613,5.09,630,6.015,631,3.11,632,4.379,633,4.817,634,3.893,635,4.379,636,3.893,637,3.386,638,3.893,639,3.893,640,3.893,641,3.421,642,4.817]],["title/modules/CourseModule.html",[195,1.522,643,3.344]],["body/modules/CourseModule.html",[2,0.33,3,0.394,5,0.362,7,0.378,16,1.456,17,3.647,18,0.816,41,0.011,59,0.863,60,0.669,66,0.49,67,0.649,81,1.698,83,0.878,85,2.014,87,2.014,89,2.014,91,2.014,93,2.014,127,0.922,147,0.008,148,0.008,175,1.503,187,2.705,195,2.569,197,1.546,198,2.582,199,3.723,200,2.153,201,3.723,206,3.611,208,3.353,209,1.784,215,3.493,216,2.809,217,2.582,418,3.995,481,3.995,483,4.233,511,4.8,540,3.697,541,3.26,598,3.995,630,3.995,643,6.535,644,4.395,645,4.395,646,5.002,647,4.395,648,5.607,649,5.002,650,6.496,651,5.188,652,5.002,653,4.395,654,5.002,655,4.395,656,3.995,657,4.395,658,5.002,659,5.002,660,5.002,661,5.002]],["title/injectables/CourseResolver.html",[149,1.714,648,3.128]],["body/injectables/CourseResolver.html",[2,0.472,3,0.387,5,0.355,7,0.485,9,0.72,14,3.967,16,1.429,21,2.59,22,2.339,28,0.471,30,1.437,33,1.394,35,1.189,37,2.218,38,1.321,40,1.214,41,0.011,42,0.969,43,0.527,44,1.183,52,1.112,59,0.801,60,0.658,64,1.921,66,0.371,67,0.638,147,0.008,148,0.008,149,2.71,157,4.685,162,5.441,163,3.154,164,5.441,167,2.764,168,2.967,169,5.13,170,2.59,171,1.151,175,1.477,176,1.862,177,1.985,238,1.394,255,3.036,278,4.079,293,3.967,340,4.662,358,4.244,374,1.289,380,3.036,414,4.735,429,3.926,432,3.298,434,3.967,460,3.204,464,2.35,542,3.926,617,4.319,648,4.44,662,4.319,663,6.447,664,6.423,665,4.916,666,5.13,667,4.916,668,3.967,669,4.943,670,3.967,671,1.778,672,3.776,673,4.916]],["title/components/CourseScenarioComponent.html",[0,0.465,93,1.124]],["body/components/CourseScenarioComponent.html",[0,0.738,1,0.589,2,0.157,3,0.187,4,0.657,5,0.172,7,0.405,9,0.959,13,2.121,14,3.315,16,1.4,18,1.077,21,2.164,22,1.235,23,2.25,24,0.544,25,2.372,26,1.104,28,0.451,29,0.554,30,2.364,32,2.599,33,0.82,34,2.097,35,0.574,37,1.569,38,1.557,40,0.999,41,0.011,42,0.942,43,0.601,44,0.989,49,2.033,51,1.526,52,1.026,53,1.914,54,0.738,56,1.045,57,1.201,58,1.235,59,0.713,60,0.318,61,3.024,62,1.225,63,1.276,64,0.927,66,0.179,67,0.308,71,0.337,73,1.333,74,0.657,75,0.657,76,0.589,77,1.046,78,0.589,79,1.017,80,0.657,81,0.558,82,0.622,83,0.289,84,0.657,85,0.589,86,0.657,87,0.589,88,0.657,89,0.589,90,1.046,91,0.589,92,1.303,93,1.333,94,0.657,95,0.589,96,0.622,97,1.046,98,0.605,99,1.046,100,0.589,101,0.657,102,0.589,103,0.605,104,0.437,105,1.485,106,0.589,107,0.639,108,0.589,109,0.938,110,0.589,111,0.657,112,0.589,113,0.437,114,0.589,115,0.657,116,0.589,117,0.657,118,0.589,119,0.657,120,0.589,121,0.227,122,0.622,123,0.657,124,0.605,125,0.38,126,0.589,127,0.437,128,0.589,129,0.657,130,0.589,131,0.657,132,0.589,133,0.657,134,0.589,135,0.657,136,0.589,137,0.589,138,0.589,139,0.589,140,0.657,141,0.589,142,0.657,143,0.589,144,0.622,145,0.657,146,0.657,147,0.004,148,0.004,156,3.481,159,1.742,163,1.476,167,1.626,168,1.972,171,0.425,172,1.485,173,1.056,175,0.713,176,0.899,177,1.454,187,2.599,197,1.167,207,2.886,211,1.523,225,2.085,237,2.235,238,1.619,243,3.497,249,1.682,278,2.886,281,2.77,298,1.64,358,1.95,374,0.622,400,1.431,414,3.816,415,1.103,417,4.999,421,2.25,422,2.121,426,1.742,428,2.097,430,2.643,431,3.013,432,2.17,434,2.907,440,1.742,443,1.415,444,2.221,447,2.565,448,2.599,456,2.121,460,1.546,461,1.056,462,1.134,463,2.085,464,1.134,466,2.17,477,2.121,478,2.221,488,2.886,489,3.71,499,1.395,508,4.067,509,3.71,512,1.276,516,3.098,520,2.221,521,2.121,522,2.221,524,3.319,534,1.875,535,2.333,546,1.276,547,0.657,548,0.776,549,1.276,550,1.546,552,1.64,554,1.895,556,2.531,563,2.085,564,2.085,588,2.221,592,1.64,593,1.276,594,1.276,596,2.612,603,2.907,620,1.753,624,1.64,625,3.017,656,6.127,674,2.085,675,2.792,676,2.218,677,4.014,678,3.777,679,3.319,680,4.612,681,3.777,682,3.777,683,2.792,684,3.254,685,3.777,686,3.777,687,2.373,688,3.319,689,3.221,690,4.135,691,2.462,692,3.777,693,2.373,694,4.612,695,3.29,696,3.777,697,2.373,698,3.777,699,2.121,700,2.373,701,2.612,702,2.373,703,2.792,704,2.373,705,2.373,706,2.373,707,2.373,708,2.373,709,2.373,710,2.373,711,2.373,712,1.95,713,2.085,714,2.373,715,2.373,716,2.085,717,1.95,718,2.373,719,2.373,720,2.373,721,2.792,722,3.777,723,2.373,724,2.373,725,2.373,726,1.395,727,1.546,728,2.373,729,2.373,730,2.085,731,3.777,732,2.792,733,3.777]],["title/interfaces/ExperimentPhage.html",[171,0.811,734,2.433]],["body/interfaces/ExperimentPhage.html",[2,0.291,3,0.347,5,0.318,7,0.451,9,0.645,18,0.554,28,0.422,29,0.875,41,0.011,43,0.49,51,1.253,54,0.747,56,1.002,66,0.573,83,0.952,104,0.811,121,0.852,125,0.955,147,0.007,148,0.007,163,1.721,171,1.459,172,1.652,197,1.361,229,1.4,231,3.603,238,1.881,239,1.698,415,1.227,420,2.443,436,2.031,438,1.571,529,2.186,532,2.589,547,2.009,548,1.952,671,1.652,676,2.093,699,3.352,734,3.21,735,2.87,736,2.646,737,4.484,738,4.127,739,3.443,740,2.473,741,2.87,742,1.324,743,2.72,744,3.21,745,2.332,746,2.473,747,2.273,748,2.914,749,2.72,750,2.589,751,2.273,752,3.981,753,2.927,754,2.87,755,1.834,756,2.589,757,3.352,758,1.834,759,2.368,760,4.207,761,3.89,762,3.232,763,2.273,764,2.752,765,3.51,766,2.569,767,4.127,768,4.127,769,4.127,770,4.127,771,3.89,772,2.752,773,3.045,774,2.72,775,2.273,776,2.589,777,3.045,778,2.658]],["title/injectables/ExperimentService.html",[149,1.714,779,3.128]],["body/injectables/ExperimentService.html",[2,0.412,3,0.298,5,0.273,7,0.513,28,0.362,29,0.786,30,1.825,33,1.165,35,0.913,38,1.397,40,0.999,41,0.011,42,0.942,43,0.654,44,1.15,51,1.933,52,1.093,56,0.74,57,1.201,58,1.235,59,0.675,60,0.506,66,0.285,67,0.49,73,1.333,104,0.989,109,0.775,121,0.714,125,1.294,147,0.009,148,0.006,149,2.364,153,3.71,168,1.972,170,2.74,171,0.677,176,1.431,177,1.929,239,1.165,249,2.389,287,2.612,338,5.022,351,5.304,358,3.959,374,1.781,380,2.333,399,4.384,415,1.397,440,3.614,443,1.613,444,3.155,448,2.83,453,2.164,454,2.164,516,3.701,547,1.485,548,1.755,616,3.315,671,1.485,717,3.507,736,3.404,737,3.315,739,3.089,748,2.31,752,3.155,753,2.164,758,2.235,766,2.925,779,3.71,780,3.319,781,4.197,782,3.248,783,1.972,784,4.715,785,5.366,786,3.71,787,5.366,788,3.319,789,5.366,790,5.366,791,5.484,792,5.366,793,5.366,794,5.366,795,4.677,796,3.778,797,5.155,798,2.972,799,2.424,800,7.177,801,4.677,802,4.22,803,4.609,804,4.286,805,4.197,806,3.497,807,3.966,808,4.698,809,5.366,810,4.677,811,3.778,812,3.71,813,3.71,814,3.497,815,3.497,816,3.966,817,4.286,818,3.497,819,5.366,820,4.715,821,4.715,822,4.715,823,2.462,824,4.715,825,3.778,826,2.612,827,2.612,828,2.612,829,3.778]],["title/components/ForgetPasswordComponent.html",[0,0.465,95,1.124]],["body/components/ForgetPasswordComponent.html",[0,0.715,1,0.987,2,0.262,3,0.313,4,1.1,5,0.287,9,0.582,16,1.239,18,0.874,24,0.911,25,2.472,26,1.626,28,0.381,29,0.815,30,2.437,32,3.157,33,1.207,35,0.961,36,2.232,37,2.032,38,1.6,40,0.636,41,0.011,42,0.969,43,0.6,44,0.732,45,2.991,52,0.815,53,1.984,54,0.572,56,1.113,57,1.768,58,1.819,59,0.69,60,0.532,66,0.3,67,0.516,71,0.565,73,1.726,74,1.1,75,1.1,76,0.987,77,1.54,78,0.987,79,1.498,80,1.1,81,0.935,82,1.042,83,0.484,84,1.1,85,0.987,86,1.1,87,0.987,88,1.1,89,0.987,90,1.54,91,0.987,92,1.776,93,0.987,94,1.1,95,1.726,96,2.04,97,1.54,98,1.014,99,1.54,100,0.987,101,1.1,102,0.987,103,1.014,104,0.732,105,1.924,106,0.987,107,1.071,108,0.987,109,0.453,110,0.987,111,1.1,112,0.987,113,0.732,114,0.987,115,1.1,116,0.987,117,1.1,118,0.987,119,1.1,120,0.987,121,0.381,122,1.042,123,1.1,124,1.014,125,0.636,126,0.987,127,0.732,128,0.987,129,1.1,130,0.987,131,1.1,132,0.987,133,1.1,134,0.987,135,1.1,136,0.987,137,0.987,138,0.987,139,0.987,140,1.1,141,0.987,142,1.1,143,0.987,144,1.042,145,1.1,146,1.1,147,0.007,148,0.007,176,1.506,241,3.465,333,6.343,355,3.492,357,2.748,394,2.871,400,1.506,426,3.661,428,2.715,438,1.984,443,1.672,459,2.337,461,1.77,462,1.9,466,2.565,468,2.337,479,2.455,480,2.337,512,2.991,565,2.455,830,6.977,831,2.937,832,4.887,833,4.443,834,6.661,835,6.95,836,4.887,837,3.975,838,3.975,839,3.492,840,3.975,841,3.492,842,2.59,843,4.887,844,3.975,845,2.937,846,2.937,847,3.492]],["title/interfaces/Fridge.html",[171,0.811,676,1.398]],["body/interfaces/Fridge.html",[2,0.315,3,0.376,5,0.345,7,0.361,9,0.7,18,0.601,28,0.457,29,0.924,41,0.011,43,0.657,51,2.007,54,0.649,56,1.185,59,0.626,66,0.476,83,0.859,109,0.913,121,0.675,125,1.009,147,0.007,148,0.007,156,3.356,170,2.542,171,1.264,172,2.076,233,3.39,234,3.304,237,3.124,238,1.532,239,1.037,242,4.379,374,1.653,415,1.451,438,2.249,669,4.108,671,2.076,676,2.727,677,3.871,712,4.025,736,2.463,744,4.034,755,2.938,772,2.907,775,3.254,778,3.691,783,2.866,798,2.317,799,2.249,848,3.817,849,6.036,850,5.187,851,4.659,852,3.707,853,5.187,854,3.304,855,3.114,856,2.952]],["title/interfaces/FridgePhage.html",[171,0.811,744,2.433]],["body/interfaces/FridgePhage.html",[2,0.268,3,0.32,5,0.293,7,0.49,9,0.595,18,0.51,28,0.389,29,0.827,41,0.011,43,0.642,44,1.406,51,1.155,54,0.821,56,1.102,66,0.557,83,0.929,104,0.748,121,0.857,125,0.65,147,0.007,148,0.007,163,2.205,171,1.403,172,1.941,197,1.744,229,1.29,231,3.481,238,1.861,239,1.699,415,1.161,420,2.634,436,2.603,438,2.502,529,2.015,532,2.387,547,1.941,548,1.846,671,1.562,676,2.168,699,3.17,734,2.183,735,2.645,736,2.205,737,2.508,738,2.807,739,3.369,740,2.28,741,2.645,742,1.22,743,3.487,744,3.49,745,2.74,746,3.17,747,2.914,748,3.019,749,3.487,750,4.124,751,3.62,752,4.334,753,3.269,754,3.679,755,2.351,756,4.124,757,3.644,758,1.69,759,2.183,760,4.104,761,3.679,762,3.123,763,2.095,764,2.603,765,3.319,766,2.429,767,3.903,768,3.903,769,3.903,770,3.903,771,3.679,772,2.603,773,2.807,774,2.508,775,2.095,776,2.387,777,2.807,778,2.513]],["title/interfaces/GenotypePhage.html",[171,0.811,759,2.433]],["body/interfaces/GenotypePhage.html",[2,0.271,3,0.324,5,0.297,7,0.43,9,0.602,18,0.516,28,0.393,29,0.834,41,0.011,43,0.608,44,1.049,51,1.169,54,0.725,56,1.057,66,0.559,83,1.012,104,1.049,121,0.852,125,0.657,147,0.007,148,0.007,163,1.605,171,1.407,172,1.575,197,1.27,229,1.306,231,3.241,238,1.886,239,1.663,415,1.343,420,2.491,436,1.894,438,1.465,529,2.825,532,3.346,547,2.12,548,2.135,671,1.575,676,2.179,699,3.667,734,2.209,735,2.677,736,2.552,737,2.538,738,2.84,739,3.542,740,2.307,741,2.677,742,1.235,743,2.538,744,3.061,745,2.224,746,2.307,747,2.12,748,3.034,749,2.538,750,2.415,751,2.12,752,4.145,753,3.167,754,2.677,755,1.711,756,2.415,757,3.196,758,2.37,759,3.061,760,4.371,761,4.256,762,3.41,763,3.639,764,3.011,765,3.84,766,2.811,767,4.515,768,4.515,769,4.515,770,4.515,771,4.256,772,3.011,773,3.935,774,4.355,775,2.12,776,2.415,777,2.84,778,2.534]],["title/components/HelpComponent.html",[0,0.465,100,1.124]],["body/components/HelpComponent.html",[0,0.79,1,1.261,2,0.335,3,0.4,4,1.405,5,0.367,9,0.744,16,1.347,18,0.965,24,1.163,25,2.506,26,1.917,35,1.756,38,1.044,41,0.01,42,0.99,51,1.444,54,0.675,59,0.504,60,0.679,66,0.383,67,0.658,71,0.722,73,1.907,74,1.405,75,1.405,76,1.261,77,1.815,78,1.261,79,1.766,80,1.405,81,1.195,82,1.331,83,0.618,84,1.405,85,1.261,86,1.405,87,1.261,88,1.405,89,1.261,90,1.815,91,1.261,92,2.011,93,1.261,94,1.405,95,1.261,96,1.331,97,1.815,98,1.295,99,1.815,100,1.907,101,1.405,102,1.261,103,1.295,104,0.935,105,2.125,106,1.261,107,1.367,108,1.261,109,0.579,110,1.261,111,1.405,112,1.261,113,0.935,114,1.261,115,1.405,116,1.261,117,1.405,118,1.261,119,1.405,120,1.261,121,0.486,122,1.331,123,1.405,124,1.295,125,0.812,126,1.261,127,0.935,128,1.261,129,1.405,130,1.261,131,1.405,132,1.261,133,1.405,134,1.261,135,1.405,136,1.261,137,1.261,138,1.261,139,1.261,140,1.405,141,1.261,142,1.405,143,1.261,144,1.331,145,1.405,146,1.405,147,0.008,148,0.008,422,3.682,857,4.46,858,6.383,859,6.558,860,6.558,861,5.076,862,5.238,863,6.558,864,5.076]],["title/modules/HelpModule.html",[195,1.522,275,3.128]],["body/modules/HelpModule.html",[2,0.4,3,0.478,5,0.438,41,0.011,59,0.855,60,0.812,66,0.553,67,0.787,100,2.115,127,1.117,147,0.009,148,0.009,175,1.823,195,2.466,197,1.874,198,3.13,199,4.066,200,2.61,201,3.13,206,3.79,208,3.783,209,2.163,215,3.941,216,3.405,217,3.13,275,6.007,865,5.329,866,5.329,867,6.065,868,6.065,869,6.065,870,6.065,871,6.065,872,6.065]],["title/components/HomeComponent.html",[0,0.465,102,1.124]],["body/components/HomeComponent.html",[0,0.843,1,0.999,2,0.265,3,0.317,4,1.113,5,0.291,7,0.304,9,0.589,11,4.144,16,1.245,18,0.878,22,1.834,23,3.087,24,0.921,25,2.474,26,1.639,28,0.385,29,0.822,30,1.888,33,1.217,34,2.729,35,0.972,36,2.258,37,2.042,38,1.436,40,0.643,41,0.011,42,0.975,43,0.46,44,0.741,45,3.016,49,2.882,52,0.822,53,2,54,0.894,59,0.641,60,0.538,64,1.571,65,2.163,66,0.304,67,0.522,69,3.212,70,4.479,71,1.111,72,2.586,73,1.735,74,1.113,75,1.113,76,0.999,77,1.552,78,0.999,79,1.51,80,1.113,81,0.946,82,1.054,83,0.49,84,1.113,85,0.999,86,1.113,87,0.999,88,1.113,89,0.999,90,1.552,91,0.999,92,1.787,93,0.999,94,1.113,95,0.999,96,1.054,97,1.552,98,1.026,99,1.552,100,0.999,101,1.113,102,1.735,103,1.026,104,0.741,105,1.933,106,0.999,107,1.739,108,0.999,109,0.736,110,0.999,111,1.113,112,0.999,113,0.741,114,0.999,115,1.113,116,0.999,117,1.113,118,0.999,119,1.113,120,0.999,121,0.385,122,1.054,123,1.113,124,1.026,125,0.643,126,0.999,127,0.741,128,0.999,129,1.113,130,0.999,131,1.113,132,0.999,133,1.113,134,0.999,135,1.113,136,0.999,137,0.999,138,0.999,139,0.999,140,1.113,141,0.999,142,1.113,143,0.999,144,1.054,145,1.113,146,1.113,147,0.007,148,0.007,155,2.414,176,1.523,187,2.335,189,3.467,191,4.552,192,4.927,197,1.733,209,2,421,3.087,422,3.149,428,2.729,534,2.783,701,3.877,703,4.144,726,2.364,873,3.533,874,4.927,875,5.608,876,5.608,877,5.608,878,4.021,879,4.927,880,4.021,881,5.608,882,4.144,883,5.608,884,6.986,885,5.608,886,5.608,887,5.608,888,3.877,889,5.608,890,4.927,891,5.608,892,2.497,893,4.092,894,3.297]],["title/components/LandingRoomComponent.html",[0,0.465,106,1.124]],["body/components/LandingRoomComponent.html",[0,0.832,1,0.841,2,0.223,3,0.267,4,0.937,5,0.245,7,0.488,9,0.496,16,1.165,18,0.903,21,2.992,22,1.621,23,2.805,24,0.776,25,2.445,26,1.45,28,0.324,29,0.727,30,2.01,33,1.402,34,2.523,35,0.819,38,1.414,40,0.939,41,0.011,42,0.886,43,0.481,44,0.624,47,2.461,48,2.78,51,1.41,52,0.727,53,1.769,54,0.51,59,0.641,60,0.453,66,0.256,67,0.439,71,0.834,73,1.604,74,0.937,75,0.937,76,0.841,77,1.372,78,0.841,79,1.336,80,0.937,81,0.797,82,0.888,83,0.412,84,0.937,85,0.841,86,0.937,87,0.841,88,0.937,89,0.841,90,1.372,91,0.841,92,1.624,93,0.841,94,0.937,95,0.841,96,0.888,97,1.372,98,0.864,99,1.372,100,0.841,101,0.937,102,0.841,103,0.864,104,0.624,105,1.788,106,1.604,107,1.999,108,0.841,109,1,110,0.841,111,0.937,112,0.841,113,0.624,114,0.841,115,0.937,116,0.841,117,0.937,118,0.841,119,0.937,120,0.841,121,0.71,122,0.888,123,0.937,124,0.864,125,0.542,126,0.841,127,0.624,128,0.841,129,0.937,130,0.841,131,0.937,132,0.841,133,0.937,134,0.841,135,0.937,136,0.841,137,0.841,138,0.841,139,0.841,140,0.937,141,0.841,142,0.937,143,0.841,144,0.888,145,0.937,146,0.937,147,0.006,148,0.006,157,4.437,159,2.705,168,2.374,171,0.607,175,1.018,176,1.283,177,1.813,187,2.065,189,2.461,191,3.231,239,1.076,281,3.548,316,5.675,420,1.668,421,2.805,426,3.312,428,2.523,430,3.627,431,3.86,439,2.78,442,3.231,443,1.763,447,2.37,448,2.69,449,3.231,454,1.999,468,1.991,472,2.704,473,2.341,479,2.091,480,1.991,499,1.991,520,2.915,521,2.784,522,2.915,547,1.372,548,1.621,549,1.821,603,3.99,624,2.341,671,1.372,701,3.428,712,2.559,721,2.502,732,3.664,747,2.559,748,2.78,753,1.999,758,2.69,764,3.312,895,6.312,896,5.738,897,2.704,898,4.357,899,4.773,900,3.96,901,4.958,902,3.231,903,4.357,904,4.958,905,5.309,906,3.96,907,4.958,908,4.357,909,4.958,910,4.958,911,3.664,912,3.386,913,2.975,914,3.063,915,3.386,916,4.958,917,2.502,918,3.386,919,2.975,920,3.386,921,4.958,922,4.958,923,4.958]],["title/components/ListComponent.html",[0,0.465,108,1.124]],["body/components/ListComponent.html",[0,0.781,1,0.993,2,0.264,3,0.315,4,1.107,5,0.289,7,0.302,9,0.586,16,1.242,18,0.876,22,1.826,23,3.077,24,0.916,25,2.473,26,1.633,28,0.383,29,0.818,30,2.037,32,2.901,33,1.212,34,2.722,35,0.967,36,2.245,37,2.037,38,1.603,40,0.64,41,0.011,42,0.972,43,0.602,44,0.737,45,3.003,49,2.116,52,0.818,53,1.992,54,0.871,56,0.888,59,0.754,60,0.535,64,1.562,65,2.15,66,0.302,67,0.519,69,3.193,71,0.569,73,1.731,74,1.107,75,1.107,76,0.993,77,1.546,78,0.993,79,1.504,80,1.107,81,0.941,82,1.048,83,0.487,84,1.107,85,0.993,86,1.107,87,0.993,88,1.107,89,0.993,90,1.546,91,0.993,92,1.782,93,0.993,94,1.107,95,0.993,96,1.048,97,1.546,98,1.02,99,1.546,100,0.993,101,1.107,102,0.993,103,1.02,104,0.737,105,1.929,106,0.993,107,1.077,108,1.731,109,0.991,110,0.993,111,1.107,112,0.993,113,0.737,114,0.993,115,1.107,116,0.993,117,1.107,118,0.993,119,1.107,120,0.993,121,0.383,122,1.048,123,1.107,124,1.02,125,0.64,126,0.993,127,0.737,128,0.993,129,1.107,130,0.993,131,1.107,132,0.993,133,1.107,134,0.993,135,1.107,136,0.993,137,0.993,138,0.993,139,0.993,140,1.107,141,0.993,142,1.107,143,0.993,144,1.048,145,1.107,146,1.107,147,0.007,148,0.007,176,1.515,281,3.596,415,1.562,421,3.077,426,3.213,428,2.722,459,2.351,603,3.976,613,5.877,622,3.193,624,2.764,632,4.461,732,4.127,742,1.679,882,2.955,893,3.747,894,3.284,917,2.955,924,3.513,925,6.968,926,5.585,927,3.998,928,3.998,929,3.998,930,3.998,931,3.998,932,3.193,933,3.998,934,3.998,935,3.998,936,3.998,937,4.461]],["title/components/LocationComponent.html",[0,0.465,110,1.124]],["body/components/LocationComponent.html",[0,0.832,1,1.23,2,0.474,3,0.39,4,1.37,5,0.358,7,0.374,9,0.726,14,3.986,16,1.336,18,0.956,24,1.134,25,2.503,26,1.887,41,0.01,42,0.974,54,0.664,59,0.492,60,0.663,66,0.374,67,0.642,71,0.704,73,1.889,74,1.37,75,1.37,76,1.23,77,1.786,78,1.23,79,1.738,80,1.37,81,1.165,82,1.298,83,0.603,84,1.37,85,1.23,86,1.37,87,1.23,88,1.37,89,1.23,90,1.786,91,1.23,92,1.987,93,1.23,94,1.37,95,1.23,96,1.298,97,1.786,98,1.263,99,1.786,100,1.23,101,1.37,102,1.23,103,1.263,104,1.323,105,2.105,106,1.23,107,1.334,108,1.23,109,0.565,110,1.889,111,1.37,112,1.23,113,1.323,114,1.23,115,1.37,116,1.23,117,1.37,118,1.23,119,1.37,120,1.23,121,0.474,122,1.298,123,1.37,124,1.263,125,1.149,126,1.23,127,0.912,128,1.23,129,1.37,130,1.23,131,1.37,132,1.23,133,1.37,134,1.23,135,1.37,136,1.23,137,1.23,138,1.23,139,1.23,140,1.37,141,1.23,142,1.37,143,1.23,144,1.298,145,1.37,146,1.37,147,0.008,148,0.008,187,2.687,193,4.461,422,3.623,739,3.274,938,4.351,939,6.453,940,6.453,941,6.453,942,6.453]],["title/modules/LocationModule.html",[195,1.522,943,3.344]],["body/modules/LocationModule.html",[2,0.334,3,0.399,5,0.366,41,0.011,59,0.868,60,0.677,66,0.494,67,0.657,98,2.076,103,2.076,104,0.933,106,2.021,107,1.363,110,2.021,112,2.021,113,0.933,120,2.084,124,2.076,125,0.81,127,0.933,147,0.008,148,0.008,175,1.521,195,2.202,197,1.564,198,2.612,199,3.744,200,2.178,201,3.744,206,3.622,208,3.378,209,1.805,215,3.52,216,2.842,217,2.612,541,3.298,651,5.228,779,5.625,896,4.042,943,6.596,944,4.447,945,4.447,946,5.061,947,4.447,948,5.061,949,5.061,950,5.061,951,5.061,952,5.061,953,5.061,954,5.061,955,7.67,956,4.447,957,4.447,958,4.042,959,5.061]],["title/injectables/LoggedInGuard.html",[149,1.714,279,3.128]],["body/injectables/LoggedInGuard.html",[2,0.359,3,0.428,5,0.393,21,3.176,22,1.778,28,0.521,30,2.004,33,1.488,35,1.657,36,3.054,37,2.303,38,1.543,40,1.201,41,0.011,42,1.133,43,0.616,44,1.383,45,3.685,52,1.19,56,0.75,59,0.745,60,0.728,66,0.411,67,0.706,147,0.008,148,0.008,149,2.842,157,4.635,158,6.921,159,3.46,161,6.021,162,5.819,163,3.288,164,5.819,168,2.519,172,2.247,173,2.422,174,2.508,175,1.635,178,4.779,181,4.344,279,4.738,344,4.779,842,3.544,960,6.921,961,4.779,962,8.12,963,5.439,964,5.439,965,5.439,966,5.439,967,5.439,968,5.439,969,5.439,970,5.439]],["title/components/ModelRoomComponent.html",[0,0.465,112,1.124]],["body/components/ModelRoomComponent.html",[0,0.683,1,0.611,2,0.162,3,0.194,4,0.681,5,0.178,7,0.294,9,0.361,16,1.011,18,0.689,21,2.209,24,0.564,25,2.381,26,1.137,28,0.571,29,0.57,30,2.479,32,2.641,33,0.844,34,1.884,35,0.595,37,1.601,38,1.608,40,0.771,41,0.011,42,0.9,43,0.618,44,0.888,45,2.593,47,1.222,48,1.674,52,1.009,53,1.954,54,0.747,56,1.001,57,0.782,58,0.805,59,0.683,60,0.329,61,3.079,62,1.27,63,1.324,64,0.962,66,0.186,67,0.861,71,0.35,73,1.361,74,0.681,75,0.681,76,0.611,77,1.076,78,0.611,79,1.048,80,0.681,81,0.579,82,0.645,83,0.587,84,0.681,85,0.611,86,0.681,87,0.611,88,0.681,89,0.611,90,1.076,91,0.611,92,1.334,93,0.611,94,0.681,95,0.611,96,0.645,97,1.076,98,0.628,99,1.076,100,0.611,101,0.681,102,0.611,103,0.628,104,0.454,105,1.516,106,0.611,107,0.663,108,0.611,109,0.68,110,0.611,111,0.681,112,1.361,113,1.268,114,0.611,115,0.681,116,0.611,117,0.681,118,0.611,119,0.681,120,0.611,121,0.372,122,0.645,123,0.681,124,0.628,125,0.394,126,0.611,127,0.454,128,0.611,129,0.681,130,0.611,131,0.681,132,0.611,133,0.681,134,0.611,135,0.681,136,0.611,137,0.611,138,0.611,139,0.611,140,0.681,141,0.611,142,0.681,143,0.611,144,0.645,145,0.681,146,0.681,147,0.005,148,0.007,159,1.793,166,1.966,168,0.905,172,1.516,173,2.656,174,2.526,175,0.74,176,0.932,177,1.693,197,1.202,209,0.878,237,2.281,238,1.863,239,1.047,260,2.963,263,2.689,281,2.827,374,0.645,400,0.932,422,2.184,430,2.707,431,3.076,443,1.169,447,1.859,448,2.281,454,1.568,461,1.096,462,1.177,466,2.75,477,2.184,478,2.287,488,2.946,499,1.447,508,2.534,509,3.787,516,2.719,529,3.296,546,1.324,548,1.272,549,2.091,550,2.534,556,1.324,578,4.375,579,2.874,593,1.324,594,1.324,603,2.978,613,1.819,671,1.516,676,1.843,701,2.689,703,2.874,742,1.449,753,0.992,758,1.619,762,1.731,766,1.674,778,3.482,783,2.843,799,1.954,803,1.447,897,1.966,908,3.417,913,2.163,917,1.819,919,2.163,958,6.308,971,6.939,972,3.889,973,5.478,974,5.478,975,4.048,976,3.57,977,4.813,978,3.889,979,5.478,980,5.478,981,3.889,982,3.889,983,3.889,984,6.884,985,2.461,986,5.065,987,6.413,988,3.889,989,3.889,990,3.889,991,3.417,992,5.478,993,5.065,994,2.874,995,3.106,996,2.874,997,3.889,998,3.889,999,3.106,1000,2.461,1001,2.461,1002,1.177,1003,2.461,1004,3.889,1005,3.889,1006,2.461,1007,3.417,1008,3.889,1009,3.106,1010,2.534,1011,3.889,1012,2.461,1013,2.461,1014,2.461,1015,2.461,1016,2.461,1017,2.461,1018,2.461,1019,1.819,1020,2.461,1021,2.461,1022,2.163,1023,2.461,1024,2.461,1025,2.461,1026,1.604,1027,3.889,1028,2.461,1029,2.461,1030,2.461,1031,2.461,1032,2.461,1033,4.821,1034,4.821,1035,2.461,1036,3.106,1037,2.461,1038,2.461,1039,2.461,1040,2.461,1041,2.163,1042,2.461,1043,2.461,1044,2.461,1045,2.461,1046,2.461,1047,3.889,1048,3.417,1049,6.341,1050,3.889,1051,3.889,1052,3.417,1053,3.889,1054,3.106,1055,3.889,1056,3.889]],["title/components/NavComponent.html",[0,0.465,114,1.124]],["body/components/NavComponent.html",[0,0.82,1,1.002,2,0.266,3,0.318,4,1.117,5,0.292,7,0.305,9,0.591,14,3.472,16,1.246,18,0.879,20,3.023,22,1.838,23,3.093,24,0.925,25,2.474,26,1.644,28,0.386,29,0.824,30,2.227,33,1.22,34,2.733,35,0.976,37,2.045,38,1.513,40,0.646,41,0.011,42,0.976,43,0.531,44,0.744,47,2.79,48,2.419,52,0.824,53,2.005,54,0.872,59,0.642,60,0.54,64,1.577,65,2.17,66,0.305,67,0.524,71,0.574,73,1.738,74,1.117,75,1.117,76,1.002,77,1.556,78,1.002,79,2.147,80,1.117,81,0.95,82,1.058,83,0.491,84,1.117,85,1.002,86,1.117,87,1.002,88,1.117,89,1.002,90,1.556,91,1.002,92,1.79,93,1.002,94,1.117,95,1.002,96,1.058,97,1.556,98,1.03,99,1.556,100,1.002,101,1.117,102,1.002,103,1.03,104,0.744,105,1.936,106,1.002,107,1.087,108,1.002,109,0.839,110,1.002,111,1.117,112,1.002,113,0.744,114,1.738,115,1.117,116,1.002,117,1.117,118,1.002,119,1.117,120,1.002,121,0.386,122,1.058,123,1.117,124,1.03,125,0.646,126,1.002,127,0.744,128,1.002,129,1.117,130,1.002,131,1.117,132,1.002,133,1.117,134,1.002,135,1.117,136,1.002,137,1.002,138,1.002,139,1.002,140,1.117,141,1.002,142,1.117,143,1.002,144,1.928,145,1.117,146,1.117,147,0.007,148,0.007,176,1.529,209,2.005,239,1.22,264,3.472,265,6.147,266,6.147,421,3.093,422,3.157,426,3.512,428,2.733,432,2.592,446,3.887,447,2.687,448,2.341,449,3.663,454,2.267,464,1.929,468,2.373,479,2.493,480,2.373,588,2.373,637,3.472,717,2.083,742,1.69,858,4.939,882,2.982,893,3.023,1057,3.546,1058,4.939,1059,5.622,1060,5.622,1061,5.622,1062,3.546,1063,5.622,1064,4.036,1065,4.036,1066,5.622,1067,5.622,1068,4.036]],["title/components/NotAuthComponent.html",[0,0.465,116,1.124]],["body/components/NotAuthComponent.html",[0,0.832,1,1.228,2,0.326,3,0.389,4,1.368,5,0.357,7,0.373,9,1.155,16,1.336,18,0.956,24,1.133,25,2.503,26,1.885,41,0.01,42,0.973,52,0.945,54,0.782,59,0.491,60,0.662,66,0.373,67,0.641,71,1.02,73,1.888,74,1.368,75,1.368,76,1.228,77,1.784,78,1.228,79,1.736,80,1.368,81,1.164,82,1.296,83,0.602,84,1.368,85,1.228,86,1.368,87,1.228,88,1.368,89,1.228,90,1.784,91,1.228,92,1.985,93,1.228,94,1.368,95,1.228,96,1.296,97,1.784,98,1.262,99,1.784,100,1.228,101,1.368,102,1.228,103,1.262,104,0.911,105,2.104,106,1.228,107,1.332,108,1.228,109,0.564,110,1.228,111,1.368,112,1.228,113,0.911,114,1.228,115,1.368,116,1.888,117,1.368,118,1.228,119,1.368,120,1.228,121,0.473,122,1.296,123,1.368,124,1.262,125,0.791,126,1.228,127,0.911,128,1.228,129,1.368,130,1.228,131,1.368,132,1.228,133,1.368,134,1.228,135,1.368,136,1.228,137,1.228,138,1.228,139,1.228,140,1.368,141,1.228,142,1.368,143,1.228,144,1.296,145,1.368,146,1.368,147,0.008,148,0.008,156,3.272,183,5.665,187,2.684,191,4.201,222,3.949,457,4.764,1069,4.344,1070,4.344,1071,5.665,1072,6.447,1073,4.764]],["title/components/PageNotFoundComponent.html",[0,0.465,118,1.124]],["body/components/PageNotFoundComponent.html",[0,0.827,1,1.204,2,0.32,3,0.382,4,1.966,5,0.35,7,0.366,9,0.71,16,1.327,18,0.948,24,1.11,25,2.5,26,1.86,35,1.718,38,0.997,41,0.01,42,0.96,54,0.655,59,0.481,60,0.649,66,0.366,67,0.629,71,1.196,73,1.874,74,1.341,75,1.341,76,1.204,77,1.761,78,1.204,79,1.714,80,1.341,81,1.141,82,1.27,83,0.59,84,1.341,85,1.204,86,1.341,87,1.204,88,1.341,89,1.204,90,1.761,91,1.204,92,1.966,93,1.204,94,1.341,95,1.204,96,1.27,97,1.761,98,1.237,99,1.761,100,1.204,101,1.341,102,1.204,103,1.237,104,0.893,105,2.088,106,1.204,107,1.305,108,1.204,109,0.553,110,1.204,111,1.341,112,1.204,113,0.893,114,1.204,115,1.341,116,1.204,117,1.341,118,1.874,119,1.341,120,1.204,121,0.464,122,1.27,123,1.341,124,1.237,125,0.775,126,1.204,127,0.893,128,1.204,129,1.341,130,1.204,131,1.341,132,1.204,133,1.341,134,1.204,135,1.341,136,1.204,137,1.204,138,1.204,139,1.204,140,1.341,141,1.204,142,1.341,143,1.204,144,1.27,145,1.341,146,1.341,147,0.008,148,0.008,168,2.338,170,2.566,189,3.158,191,4.147,308,5.082,442,4.147,672,3.741,688,5.591,755,2.65,1074,5.591,1075,4.258,1076,6.363,1077,6.363,1078,4.916,1079,6.363,1080,4.846]],["title/pipes/PeopleListNamesPipe.html",[1081,2.014,1082,3.128]],["body/pipes/PeopleListNamesPipe.html",[2,0.295,3,0.352,5,0.323,7,0.337,18,0.758,22,1.461,24,1.023,33,0.97,38,0.919,40,0.715,41,0.011,42,1.233,43,0.367,44,0.823,50,2.991,52,0.883,56,1.008,59,0.443,60,0.598,66,0.337,67,0.579,147,0.007,148,0.007,172,1.888,173,2.683,209,2.72,235,4.667,236,4.667,246,3.624,247,2.991,415,1.502,628,5.296,689,3.769,726,4.293,745,3.321,914,2.759,1002,2.881,1026,2.911,1081,2.683,1082,4.167,1083,5.296,1084,3.925,1085,5.296,1086,7.175,1087,3.723,1088,3.928,1089,6.027,1090,6.027,1091,3.491,1092,4.814,1093,4.814,1094,7.175,1095,8.501,1096,5.645,1097,5.12,1098,6.027,1099,5.296,1100,2.911,1101,6.027,1102,4.467,1103,6.027,1104,3.928,1105,2.911,1106,3.568,1107,3.925,1108,6.699,1109,3.925,1110,6.699,1111,3.925,1112,3.925]],["title/pipes/PersonNamePipe.html",[1081,2.014,1113,3.128]],["body/pipes/PersonNamePipe.html",[2,0.321,3,0.383,5,0.352,7,0.367,18,0.802,22,1.591,24,1.115,33,1.057,38,1.001,40,0.779,41,0.011,42,1.256,43,0.399,44,0.897,50,3.167,52,1.043,56,1.043,59,0.483,60,0.651,66,0.367,67,0.631,147,0.008,148,0.008,172,1.97,173,2.841,235,4.568,236,4.568,246,3.75,247,3.75,596,4.411,689,3.9,726,3.752,1002,3.05,1081,2.841,1085,5.606,1086,7.208,1087,3.941,1088,4.158,1091,3.612,1092,5.096,1093,6.035,1094,7.568,1097,5.246,1100,3.172,1104,4.158,1105,3.172,1106,5.686,1108,6.893,1109,4.276,1110,6.893,1111,4.276,1112,4.276,1113,4.411,1114,5.606,1115,4.276,1116,6.381,1117,8.322,1118,6.381,1119,4.867]],["title/interfaces/Phage.html",[121,0.433,171,0.811]],["body/interfaces/Phage.html",[2,0.289,3,0.345,5,0.316,7,0.449,9,0.641,18,0.55,28,0.419,29,0.871,41,0.011,43,0.554,51,1.245,54,0.745,56,1.077,66,0.572,83,0.951,104,0.806,121,0.85,125,0.7,147,0.007,148,0.007,163,1.71,167,1.883,171,1.456,172,1.645,197,1.352,229,1.391,231,3.35,238,1.871,239,1.643,415,1.222,420,2.436,436,2.018,438,1.561,529,2.172,532,2.573,547,2.004,548,1.943,671,2.161,676,2.238,699,3.337,734,2.353,735,2.852,736,2.322,737,2.703,738,3.025,739,3.498,740,4.066,741,3.873,742,1.786,743,2.703,744,3.196,745,2.322,746,2.457,747,2.259,748,2.905,749,2.703,750,2.573,751,2.259,752,3.968,753,2.919,754,2.852,755,1.822,756,2.573,757,3.337,758,1.822,759,2.353,760,4.199,761,3.873,762,3.224,763,2.259,764,2.74,765,3.494,766,2.558,767,4.109,768,4.109,769,4.109,770,4.109,771,3.873,772,2.74,773,3.025,774,2.703,775,2.259,776,2.573,777,3.025,778,2.646]],["title/pipes/PhageDeletionsPipe.html",[1081,2.014,1120,3.128]],["body/pipes/PhageDeletionsPipe.html",[2,0.353,3,0.421,5,0.386,7,0.404,22,1.748,24,1.225,33,1.16,38,1.099,40,0.855,41,0.011,42,1.023,43,0.439,44,0.985,52,0.993,56,0.935,59,0.531,60,0.715,66,0.404,67,0.693,83,1.021,121,0.649,147,0.008,148,0.008,209,2.655,238,1.616,260,2.917,547,1.876,548,1.748,689,3.499,745,2.648,1026,3.483,1081,3.018,1088,4.417,1091,3.558,1097,5.101,1100,3.483,1104,4.417,1105,3.483,1120,4.686,1121,4.686,1122,4.697,1123,5.009,1124,5.009,1125,5.414,1126,6.778,1127,6.878,1128,6.778,1129,7.252,1130,6.778,1131,4.417,1132,7.828,1133,7.828,1134,7.828,1135,6.778,1136,5.345,1137,5.345,1138,7.444,1139,5.345,1140,5.345]],["title/components/PhageDialogComponent.html",[0,0.465,120,1.124]],["body/components/PhageDialogComponent.html",[0,0.735,1,1.052,2,0.28,3,0.334,4,1.172,5,0.306,7,0.32,9,0.621,16,1.268,18,0.898,19,3.788,24,0.97,25,2.481,26,1.699,28,0.405,29,0.852,35,1.024,38,1.365,40,0.678,41,0.011,42,1.002,43,0.614,44,0.78,54,0.598,59,0.709,60,0.567,66,0.32,67,0.549,71,0.602,73,1.774,74,1.172,75,1.172,76,1.052,77,1.609,78,1.052,79,1.566,80,1.172,81,0.997,82,1.11,83,0.911,84,1.172,85,1.052,86,1.172,87,1.052,88,1.172,89,1.052,90,1.609,91,1.052,92,1.837,93,1.052,94,1.172,95,1.052,96,1.11,97,1.609,98,1.081,99,1.609,100,1.052,101,1.172,102,1.052,103,1.081,104,0.78,105,1.977,106,1.052,107,1.141,108,1.052,109,0.483,110,1.052,111,1.172,112,1.052,113,0.78,114,1.052,115,1.172,116,1.052,117,1.172,118,1.052,119,1.172,120,1.774,121,0.825,122,1.962,123,1.172,124,1.081,125,0.678,126,1.052,127,0.78,128,1.052,129,1.172,130,1.052,131,1.172,132,1.052,133,1.172,134,1.052,135,1.172,136,1.052,137,1.052,138,1.052,139,1.052,140,1.172,141,1.052,142,1.172,143,1.052,144,1.11,145,1.172,146,1.172,147,0.007,148,0.007,187,2.42,200,1.823,206,1.886,217,2.186,239,1.262,260,2.502,340,3.788,396,3.383,397,5.107,398,6.577,399,4.199,401,3.721,402,6.794,407,3.13,408,2.76,409,2.76,410,3.721,411,2.76,412,4.642,438,2.073,483,3.788,529,2.885,547,1.977,581,4.642,616,3.59,744,3.569,751,3.686,753,2.88,783,2.625,999,4.642,1052,5.107,1141,6.276,1142,5.107,1143,5.812,1144,4.235,1145,3.383,1146,5.107,1147,5.812,1148,5.812,1149,5.812,1150,5.812,1151,5.812]],["title/pipes/PhageGuessesPipe.html",[1081,2.014,1152,3.128]],["body/pipes/PhageGuessesPipe.html",[2,0.315,3,0.376,5,0.345,7,0.36,20,3.387,22,1.56,24,1.093,33,1.036,38,0.981,40,0.764,41,0.011,42,0.951,43,0.392,44,0.879,50,3.126,52,1.033,56,0.869,59,0.625,60,0.639,66,0.36,67,0.619,83,0.994,109,0.718,121,0.603,147,0.007,148,0.007,172,1.951,173,3.565,174,3.866,209,2.956,239,1.367,246,2.369,260,2.054,314,5.184,317,5.031,436,2.2,513,2.948,534,3.126,547,1.951,689,3.251,745,2.461,778,3.47,783,2.315,977,5.534,1019,4.655,1022,4.193,1026,3.11,1081,2.804,1088,4.105,1091,3.37,1097,4.886,1100,3.11,1104,4.105,1105,3.11,1107,4.193,1121,4.355,1123,4.655,1124,4.655,1152,4.355,1153,4.193,1154,6.299,1155,4.772,1156,5.534,1157,6.299,1158,6.299,1159,6.588,1160,4.105,1161,5.534,1162,7.05,1163,6.299,1164,4.772,1165,4.772,1166,4.772,1167,4.772,1168,4.772,1169,5.534,1170,4.193,1171,4.772]],["title/pipes/PhageMutationsPipe.html",[1081,2.014,1172,3.128]],["body/pipes/PhageMutationsPipe.html",[2,0.336,3,0.401,5,0.368,7,0.384,22,1.665,24,1.166,33,1.105,38,1.047,40,0.815,41,0.011,42,0.992,43,0.418,44,0.938,52,0.963,56,0.907,59,0.505,60,0.681,66,0.384,67,0.66,121,0.629,147,0.008,148,0.008,209,2.839,238,1.579,260,2.191,314,4.543,317,5.248,547,2.369,689,3.391,699,3.689,745,3.003,748,3.684,760,4.518,761,4.282,776,3.863,1026,3.318,1081,2.925,1088,4.282,1091,3.675,1097,5.31,1100,3.318,1104,4.282,1105,3.318,1121,4.543,1123,4.856,1124,4.856,1125,5.248,1131,4.282,1169,5.773,1172,4.543,1173,4.473,1174,6.754,1175,7.687,1176,7.687,1177,6.754,1178,7.687,1179,6.57,1180,5.091,1181,5.091]],["title/pipes/PhageParentsPipe.html",[1081,2.014,1182,3.128]],["body/pipes/PhageParentsPipe.html",[2,0.281,3,0.336,5,0.308,7,0.322,20,3.139,22,1.393,24,0.976,33,0.925,38,0.876,40,0.682,41,0.011,42,0.881,43,0.35,44,0.785,52,0.855,56,0.805,59,0.579,60,0.57,66,0.322,67,0.553,83,0.711,121,0.801,122,1.53,147,0.007,148,0.007,167,3.082,187,2.431,209,2.676,238,1.628,239,1.267,244,2.946,260,2.512,534,2.897,547,2.195,548,2.593,550,4.667,671,2.235,689,3.013,726,2.506,740,4.654,745,3.027,753,3.493,756,5.094,783,3.076,1081,2.599,1088,3.804,1091,3.423,1096,4.951,1097,5.048,1099,5.129,1100,2.777,1104,3.804,1105,2.777,1121,4.036,1123,4.314,1124,4.314,1125,4.662,1142,5.129,1145,3.404,1160,3.804,1182,4.036,1183,3.744,1184,3.432,1185,6.658,1186,4.662,1187,5.837,1188,5.837,1189,5.837,1190,5.837,1191,7.161,1192,6.292,1193,5.837,1194,5.129,1195,5.837,1196,5.837,1197,5.837,1198,5.837,1199,5.837,1200,4.262,1201,4.262,1202,4.262,1203,4.262,1204,4.262,1205,4.262,1206,3.744,1207,4.262,1208,4.262,1209,6.658,1210,6.658,1211,4.262]],["title/interfaces/PlateInput.html",[171,0.811,795,2.949]],["body/interfaces/PlateInput.html",[2,0.309,3,0.368,5,0.338,7,0.353,28,0.668,29,0.911,41,0.011,43,0.573,51,1.985,56,0.963,59,0.464,66,0.585,83,0.569,104,1.145,109,0.533,121,0.824,125,1.19,147,0.007,148,0.007,170,2.999,171,1.426,172,1.294,231,3.464,238,1.791,239,1.349,374,1.629,415,1.529,420,2.502,438,1.667,439,2.012,453,1.885,607,3.232,616,2.887,670,2.887,734,4.491,736,3.295,739,2.012,742,1.867,753,1.885,758,2.587,759,2.514,762,2.766,763,2.413,772,2.155,781,2.887,782,2.235,795,4.049,799,2.216,801,3.046,802,3.653,803,2.748,805,2.887,810,3.046,812,3.232,813,3.232,814,3.046,815,3.046,818,3.046,823,3.046,826,3.232,827,3.232,828,3.232,854,3.232,892,2.081,1212,3.455,1213,5.94,1214,5.142,1215,5.142,1216,4.962,1217,3.046,1218,3.232,1219,3.232,1220,3.046,1221,3.455,1222,4.962,1223,2.887,1224,3.046,1225,4.049,1226,4.776,1227,4.049,1228,3.734,1229,4.049,1230,3.046]],["title/interfaces/PlateResults.html",[171,0.811,823,2.949]],["body/interfaces/PlateResults.html",[2,0.284,3,0.339,5,0.312,7,0.325,28,0.721,29,0.862,41,0.011,43,0.638,51,1.673,56,0.924,59,0.428,66,0.569,83,0.525,104,1.234,109,0.491,121,0.843,125,1.151,147,0.007,148,0.007,170,2.7,171,1.393,172,1.853,231,2.92,238,1.858,239,1.454,374,1.13,415,1.598,420,2.421,438,1.537,439,1.855,453,2.372,607,4.067,616,3.633,670,2.662,734,4.05,736,3.361,739,1.855,742,1.768,753,2.901,758,2.789,759,2.318,762,3.203,763,2.224,772,2.712,781,2.662,782,2.06,795,2.809,799,2.566,801,2.809,802,3.937,803,3.458,805,4.444,810,2.809,812,2.98,813,2.98,814,2.809,815,2.809,818,3.833,823,3.833,826,2.98,827,2.98,828,2.98,854,2.98,892,1.919,1212,3.185,1213,5.349,1214,2.98,1215,2.98,1216,4.698,1217,2.809,1218,2.98,1219,2.98,1220,2.809,1221,3.185,1222,5.747,1223,3.633,1224,3.833,1225,4.689,1226,5.08,1227,5.065,1228,4.698,1229,5.065,1230,3.833]],["title/interfaces/PlexerInput.html",[171,0.811,810,2.949]],["body/interfaces/PlexerInput.html",[2,0.306,3,0.365,5,0.335,7,0.35,28,0.665,29,0.905,41,0.011,43,0.57,51,1.976,56,0.958,59,0.46,66,0.583,83,0.564,104,1.138,109,0.528,121,0.831,125,1.297,147,0.007,148,0.007,170,2.987,171,1.423,172,1.282,231,3.447,238,1.787,239,1.34,374,1.214,415,1.632,420,2.337,438,2.202,439,1.993,453,1.867,607,3.201,616,2.86,670,2.86,734,4.482,736,3.256,739,1.993,742,1.856,753,1.867,758,2.571,759,2.49,762,2.749,763,2.39,772,2.135,781,2.86,782,2.213,795,3.017,799,2.202,801,3.017,802,3.63,803,2.722,805,2.86,810,4.023,812,4.268,813,4.268,814,3.017,815,3.017,818,3.017,823,3.017,826,5.122,827,5.122,828,3.201,854,3.201,892,2.062,1212,3.422,1213,5.918,1214,3.201,1215,3.201,1216,4.931,1217,3.017,1218,3.201,1219,3.201,1220,3.017,1221,3.422,1222,4.931,1223,2.86,1224,3.017,1225,4.023,1226,4.764,1227,4.023,1228,3.698,1229,4.023,1230,3.017]],["title/modules/ProfileModule.html",[195,1.522,276,3.128]],["body/modules/ProfileModule.html",[2,0.377,3,0.45,5,0.413,41,0.011,54,0.588,59,0.86,60,0.764,66,0.533,67,0.741,127,1.052,141,2.084,143,2.084,147,0.008,148,0.008,175,1.716,195,2.377,197,1.765,198,2.948,199,3.96,200,2.458,201,3.96,206,3.736,208,3.647,209,2.037,215,3.799,216,3.207,217,2.948,276,6.087,334,5.018,498,2.543,1231,5.018,1232,5.018,1233,5.711,1234,5.018,1235,5.183,1236,5.711,1237,5.711,1238,5.711,1239,4.561,1240,4.561,1241,5.711,1242,4.561,1243,5.711]],["title/injectables/ProfileService.html",[149,1.714,1235,2.795]],["body/injectables/ProfileService.html",[2,0.275,3,0.328,5,0.301,7,0.497,13,3.228,28,0.399,29,0.843,30,1.924,33,1.248,35,1.008,38,1.459,40,1.053,41,0.011,42,0.993,43,0.582,44,1.213,49,2.687,50,2.853,51,2.285,52,1.128,54,0.905,56,0.908,57,1.325,58,1.363,59,0.704,60,0.558,65,2.241,66,0.315,67,0.541,144,1.86,147,0.007,148,0.007,149,2.493,153,3.975,168,2.113,176,1.579,177,2.192,211,2.318,237,3.437,238,1.744,241,2.56,287,2.882,338,5.243,350,3.662,351,5.243,353,4.592,358,4.07,363,5.145,379,3.662,380,2.575,391,5.051,394,4.46,439,3.509,440,3.271,443,2.48,454,2.86,483,3.746,498,3.769,547,1.154,548,1.363,755,3.345,822,5.051,851,4.249,893,3.092,1235,3.551,1244,3.662,1245,5.749,1246,5.051,1247,3.975,1248,5.749,1249,4.592,1250,5.749,1251,5.749,1252,4.168,1253,5.749,1254,3.975,1255,5.749,1256,5.666,1257,5.666,1258,5.749,1259,4.168,1260,5.051,1261,5.666,1262,4.249,1263,5.051,1264,5.749,1265,5.749]],["title/components/ResetPasswordComponent.html",[0,0.465,126,1.124]],["body/components/ResetPasswordComponent.html",[0,0.665,1,0.843,2,0.224,3,0.267,4,0.939,5,0.245,9,0.497,16,1.166,18,0.813,21,1.368,24,0.777,25,2.446,26,1.452,28,0.325,29,0.728,30,2.458,32,2.993,33,1.078,34,2.526,35,1.201,36,1.905,37,1.89,38,1.623,40,0.543,41,0.011,42,0.887,43,0.59,44,0.625,45,2.67,52,1.116,53,2.095,54,0.511,56,0.992,57,1.867,58,1.921,59,0.683,60,0.454,66,0.256,67,0.44,71,0.482,73,1.606,74,0.939,75,0.939,76,0.843,77,1.374,78,0.843,79,1.338,80,0.939,81,0.798,82,1.947,83,0.413,84,0.939,85,0.843,86,0.939,87,0.843,88,0.939,89,0.843,90,1.374,91,0.843,92,1.626,93,0.843,94,0.939,95,0.843,96,0.889,97,1.374,98,0.866,99,1.374,100,0.843,101,0.939,102,0.843,103,0.866,104,0.625,105,1.789,106,0.843,107,0.914,108,0.843,109,0.387,110,0.843,111,0.939,112,0.843,113,0.625,114,0.843,115,0.939,116,0.843,117,0.939,118,0.843,119,0.939,120,0.843,121,0.325,122,0.889,123,0.939,124,0.866,125,0.543,126,1.606,127,1.368,128,0.843,129,0.939,130,0.843,131,0.939,132,0.843,133,0.939,134,0.843,135,0.939,136,0.843,137,0.843,138,0.843,139,0.843,140,0.939,141,0.843,142,0.939,143,0.843,144,0.889,145,0.939,146,0.939,147,0.006,148,0.008,172,1.626,173,1.51,174,2.29,175,1.02,189,2.465,335,6.392,363,4.47,374,1.884,394,4.13,400,1.285,426,3.511,428,2.526,430,3.298,431,3.63,437,3.433,438,2.095,443,1.492,459,1.994,461,1.51,462,1.622,466,2.708,468,1.994,479,2.095,480,1.994,512,2.67,565,2.095,727,2.211,831,2.507,832,4.363,833,3.966,834,6.316,836,2.981,839,2.981,841,2.981,842,2.211,843,4.363,845,2.507,846,2.507,847,2.981,893,2.67,994,2.507,1036,3.966,1266,7.031,1267,6.465,1268,5.68,1269,6.465,1270,4.966,1271,3.392,1272,3.392,1273,3.392,1274,3.392,1275,3.392,1276,2.981,1277,2.709,1278,3.67,1279,3.392,1280,3.392,1281,3.392,1282,2.507,1283,3.392,1284,2.981,1285,3.392,1286,3.392,1287,4.363,1288,4.363,1289,4.363,1290,2.981,1291,3.966,1292,4.363]],["title/interfaces/Scenario.html",[109,0.516,171,0.811]],["body/interfaces/Scenario.html",[2,0.367,3,0.438,5,0.402,7,0.572,28,0.532,29,1.019,41,0.011,43,0.671,51,1.582,56,1.23,59,0.69,66,0.42,109,1.005,121,0.665,147,0.008,148,0.008,168,2.554,170,2.243,171,1.246,188,5.551,239,1.509,264,4.293,671,1.924,712,4.099,742,2.089,783,2.554,799,1.984,856,5.15,899,5.869,900,5.551,905,5.869,906,5.551,1293,4.887,1294,6.343,1295,5.551,1296,5.137,1297,6.95,1298,6.95,1299,6.107,1300,6.107]],["title/components/ScenarioComponent.html",[0,0.465,128,1.124]],["body/components/ScenarioComponent.html",[0,0.861,1,1.242,2,0.33,3,0.394,4,1.384,5,0.362,7,0.378,9,0.733,16,1.341,18,0.96,24,1.146,25,2.504,26,1.899,41,0.01,42,0.981,54,0.668,59,0.497,60,0.669,66,0.378,67,0.649,71,0.711,73,1.897,74,1.384,75,1.384,76,1.242,77,1.798,78,1.242,79,1.75,80,1.384,81,1.177,82,1.311,83,0.609,84,1.384,85,1.242,86,1.384,87,1.242,88,1.384,89,1.242,90,1.798,91,1.242,92,1.997,93,1.242,94,1.384,95,1.242,96,1.311,97,1.798,98,1.276,99,1.798,100,1.242,101,1.384,102,1.242,103,1.276,104,0.922,105,2.113,106,1.242,107,1.347,108,1.242,109,0.902,110,1.242,111,1.384,112,1.242,113,0.922,114,1.242,115,1.384,116,1.242,117,1.384,118,1.242,119,1.384,120,1.242,121,0.479,122,1.311,123,1.384,124,1.276,125,0.8,126,1.242,127,0.922,128,1.897,129,1.384,130,1.242,131,1.384,132,1.242,133,1.384,134,1.242,135,1.384,136,1.242,137,1.242,138,1.242,139,1.242,140,1.384,141,1.242,142,1.384,143,1.242,144,1.311,145,1.384,146,1.384,147,0.008,148,0.008,187,2.705,195,2.186,239,1.41,264,4.012,293,4.012,415,1.336,679,5.707,739,2.796,1301,4.395]],["title/modules/ScenarioModule.html",[195,1.522,277,3.128]],["body/modules/ScenarioModule.html",[2,0.391,3,0.466,5,0.428,41,0.011,59,0.859,60,0.792,66,0.545,67,0.768,108,2.102,127,1.09,128,2.102,147,0.009,148,0.009,175,1.779,195,2.43,197,1.829,198,3.055,199,4.023,200,2.547,201,3.055,206,3.769,208,3.727,209,2.111,215,3.883,216,3.323,217,3.055,277,6.06,657,5.2,1302,5.2,1303,5.2,1304,5.918,1305,5.918,1306,5.918,1307,5.918,1308,5.918,1309,5.918]],["title/injectables/ScenarioResolver.html",[149,1.714,280,3.128]],["body/injectables/ScenarioResolver.html",[2,0.318,3,0.38,5,0.348,7,0.479,22,2.316,28,0.461,33,1.634,35,1.165,38,1.304,40,1.014,41,0.011,42,0.957,43,0.52,44,1.168,48,3.049,52,1.103,59,0.776,60,0.645,66,0.364,67,0.625,109,0.991,147,0.007,148,0.007,149,2.684,157,4.83,162,5.406,163,2.768,164,5.204,167,2.728,168,3.116,175,1.448,176,1.826,177,2.326,189,3.146,239,1.803,255,2.977,280,4.383,281,3.885,293,3.916,340,4.617,358,3.885,374,1.263,380,2.977,439,2.728,442,4.131,448,3.134,467,3.916,510,3.272,603,3.916,663,6.412,666,5.063,670,3.916,671,2.083,712,3.885,716,4.234,742,1.905,755,3.134,798,2.33,856,4.649,902,4.131,917,3.561,932,3.849,1230,4.131,1295,5.063,1296,4.685,1310,4.234,1311,4.819,1312,4.819,1313,4.819,1314,5.57,1315,6.339,1316,4.819,1317,4.819,1318,4.819]],["title/modules/SharedModule.html",[195,1.522,206,2.014]],["body/modules/SharedModule.html",[2,0.332,3,0.396,5,0.364,41,0.011,57,1.599,59,0.864,60,0.673,66,0.578,67,0.653,81,2.037,82,1.319,83,0.613,127,0.927,147,0.008,148,0.008,195,2.194,197,1.555,198,2.597,199,3.734,200,2.806,201,2.597,206,3.918,208,3.365,209,1.795,215,3.506,290,3.718,292,4.019,293,3.108,325,6.356,326,4.019,327,6.356,408,3.279,409,3.279,415,1.035,440,3.006,541,3.279,911,3.718,1082,5.984,1113,5.984,1182,5.984,1319,4.421,1320,4.421,1321,4.421,1322,5.031,1323,6.52,1324,4.421,1325,5.729,1326,6.52,1327,6.52,1328,6.52,1329,4.421,1330,6.52,1331,4.421,1332,4.421,1333,5.031,1334,5.031,1335,5.031,1336,5.031,1337,4.421,1338,5.031,1339,5.031,1340,5.031,1341,5.031,1342,5.031]],["title/components/SigninComponent.html",[0,0.465,130,1.124]],["body/components/SigninComponent.html",[0,0.733,1,1.045,2,0.278,3,0.331,4,1.165,5,0.304,9,0.617,16,1.265,18,0.895,21,2.872,24,0.964,25,2.481,26,1.692,28,0.403,29,0.848,30,2.083,32,3.214,33,1.256,35,1.018,36,2.364,37,2.083,38,1.587,40,0.673,41,0.011,42,0.998,43,0.585,44,0.776,45,3.112,52,0.848,53,2.065,54,0.595,56,0.913,57,1.338,58,1.376,59,0.741,60,0.563,66,0.318,67,0.546,71,0.599,73,1.769,74,1.165,75,1.165,76,1.045,77,1.602,78,1.045,79,1.559,80,1.165,81,0.991,82,1.103,83,0.512,84,1.165,85,1.045,86,1.165,87,1.045,88,1.165,89,1.045,90,1.602,91,1.045,92,1.831,93,1.045,94,1.165,95,1.045,96,1.734,97,1.602,98,1.074,99,1.602,100,1.045,101,1.165,102,1.045,103,1.074,104,0.776,105,1.972,106,1.045,107,1.134,108,1.045,109,0.48,110,1.045,111,1.165,112,1.045,113,0.776,114,1.045,115,1.165,116,1.045,117,1.165,118,1.045,119,1.165,120,1.045,121,0.403,122,1.103,123,1.165,124,1.074,125,0.673,126,1.045,127,0.776,128,1.045,129,1.165,130,1.769,131,1.165,132,1.045,133,1.165,134,1.045,135,1.165,136,1.045,137,1.045,138,1.045,139,1.045,140,1.165,141,1.045,142,1.165,143,1.045,144,1.103,145,1.165,146,1.165,147,0.007,148,0.007,159,3.05,175,1.265,176,1.595,181,4.623,241,2.577,347,5.703,363,4.925,394,3.677,426,3.713,428,2.783,443,1.74,459,2.475,461,1.874,462,2.012,466,1.941,468,2.475,479,2.6,480,2.475,498,1.874,565,2.6,574,3.362,842,2.743,845,3.111,846,3.111,893,3.831,1343,3.698,1344,5.788,1345,5.788,1346,4.209,1347,4.209,1348,4.209,1349,4.209,1350,4.209,1351,3.698,1352,3.362,1353,4.209]],["title/components/SignoutComponent.html",[0,0.465,132,1.124]],["body/components/SignoutComponent.html",[0,0.765,1,1.159,2,0.308,3,0.368,4,1.292,5,0.337,9,0.684,16,1.311,18,0.934,21,2.997,24,1.069,25,2.495,28,0.447,29,0.91,30,2.262,33,1.347,34,2.904,35,1.501,37,2.173,38,1.434,40,0.747,41,0.011,42,1.053,43,0.509,44,0.86,52,0.684,53,1.665,54,0.639,59,0.738,60,0.625,66,0.352,67,0.606,71,0.664,73,1.846,74,1.292,75,1.292,76,1.159,77,1.718,78,1.159,79,1.672,80,1.292,81,1.099,82,1.224,83,0.568,84,1.292,85,1.159,86,1.292,87,1.159,88,1.292,89,1.159,90,1.718,91,1.159,92,1.93,93,1.159,94,1.292,95,1.159,96,1.224,97,1.718,98,1.191,99,1.718,100,1.159,101,1.292,102,1.159,103,1.191,104,0.86,105,2.057,106,1.159,107,1.257,108,1.159,109,0.532,110,1.159,111,1.292,112,1.159,113,0.86,114,1.159,115,1.292,116,1.159,117,1.292,118,1.159,119,1.292,120,1.159,121,0.447,122,1.224,123,1.292,124,1.191,125,0.747,126,1.159,127,0.86,128,1.159,129,1.292,130,1.159,131,1.292,132,1.846,133,1.292,134,1.159,135,1.292,136,1.159,137,1.159,138,1.159,139,1.159,140,1.292,141,1.159,142,1.292,143,1.159,144,1.224,145,1.292,146,1.292,147,0.007,148,0.007,159,3.215,175,1.403,348,4.587,426,3.802,428,1.824,432,2.862,459,2.745,468,2.745,473,3.227,480,2.745,588,2.745,842,3.042,1062,4.102,1354,4.102,1355,6.207,1356,4.668,1357,4.668,1358,4.668]],["title/components/SignupComponent.html",[0,0.465,134,1.124]],["body/components/SignupComponent.html",[0,0.68,1,0.884,2,0.235,3,0.28,4,0.985,5,0.257,9,0.521,16,1.417,18,0.831,21,2.666,22,1.681,24,0.815,25,2.454,26,1.503,28,0.341,29,0.753,30,2.363,32,3.043,33,1.116,34,2.583,35,0.86,36,1.998,37,1.933,38,1.641,40,0.823,41,0.011,42,1.165,43,0.618,44,0.947,45,2.764,52,1.071,53,2.153,54,0.752,56,1.085,57,1.918,58,1.974,59,0.766,60,0.476,61,3.62,62,1.836,63,1.913,66,0.269,67,0.462,71,0.506,73,1.642,74,0.985,75,0.985,76,0.884,77,1.423,78,0.884,79,1.385,80,0.985,81,0.837,82,0.933,83,0.433,84,0.985,85,0.884,86,0.985,87,0.884,88,0.985,89,0.884,90,1.423,91,0.884,92,1.671,93,0.884,94,0.985,95,0.884,96,0.933,97,1.423,98,0.908,99,1.423,100,0.884,101,0.985,102,0.884,103,0.908,104,0.656,105,1.83,106,0.884,107,0.958,108,0.884,109,0.406,110,0.884,111,0.985,112,0.884,113,0.656,114,0.884,115,0.985,116,0.884,117,0.985,118,0.884,119,0.985,120,0.884,121,0.341,122,0.933,123,0.985,124,0.908,125,0.569,126,0.884,127,0.656,128,0.884,129,0.985,130,0.884,131,0.985,132,0.884,133,0.985,134,1.642,135,0.985,136,0.884,137,0.884,138,0.884,139,0.884,140,0.985,141,0.884,142,0.985,143,0.884,144,0.933,145,0.985,146,0.985,147,0.006,148,0.007,159,2.783,175,1.069,176,1.348,193,4.173,241,2.289,246,2.552,247,2.552,278,3.555,299,3.126,349,5.401,374,0.933,394,3.115,421,2.885,428,2.583,434,3.728,443,1.069,466,2.783,473,2.46,477,1.998,488,3.555,546,1.913,556,2.764,588,2.092,593,1.913,594,1.913,641,4.517,642,4.517,726,2.092,842,2.319,845,2.629,846,2.629,893,3.555,894,3.887,1254,3.554,1291,4.106,1292,4.517,1351,3.126,1359,3.126,1360,5.141,1361,6.612,1362,5.141,1363,5.141,1364,5.141,1365,3.558,1366,3.558,1367,3.558,1368,3.558,1369,3.558,1370,3.558,1371,3.558,1372,3.558,1373,3.558,1374,3.558,1375,5.303,1376,3.558,1377,5.141,1378,3.558,1379,3.558,1380,3.558,1381,5.141,1382,3.558,1383,3.558,1384,3.558,1385,3.558,1386,3.558,1387,3.126]],["title/interfaces/Student.html",[18,0.569,171,0.811]],["body/interfaces/Student.html",[2,0.356,3,0.425,5,0.39,7,0.407,9,0.791,16,1.267,18,0.987,28,0.517,29,0.999,41,0.011,42,1.129,43,0.613,44,1.524,51,2.127,52,0.999,54,0.702,56,1.142,59,0.677,66,0.564,71,0.767,73,1.34,109,0.777,147,0.008,148,0.008,155,2.322,170,3.014,171,1.34,172,2.069,211,2.176,227,2.902,228,3.988,229,1.715,230,4.741,231,3.711,232,4.741,233,4.02,234,3.731,235,2.902,236,2.902,237,2.247,238,1.171,239,1.623,240,4.444,241,3.497,242,4.411,243,5.119,244,5.169,245,4.31,246,2.678,247,2.678,248,4.31,249,2.402,250,4.31,251,4.31,252,3.333,253,4.31,254,4.31,255,3.333,256,3.333,257,4.31,258,5.971,259,4.31,260,2.322,261,4.31]],["title/interfaces/StudentFridge.html",[171,0.811,855,2.949]],["body/interfaces/StudentFridge.html",[2,0.32,3,0.382,5,0.35,7,0.366,9,0.932,18,0.8,28,0.464,29,0.932,41,0.011,43,0.672,44,1.482,51,2.021,54,0.499,56,1.147,59,0.632,66,0.48,83,0.865,109,0.948,121,0.68,125,0.775,147,0.008,148,0.008,156,3.247,170,1.954,171,1.273,172,2.088,233,4.056,234,3.351,237,2.018,238,1.052,239,1.381,242,4.399,374,1.27,415,1.461,438,1.729,669,3.158,671,1.761,676,2.737,677,3.744,712,3.284,736,1.893,744,3.422,755,3.348,772,2.235,775,3.893,778,3.702,783,2.879,798,1.781,799,1.729,848,3.871,849,5.789,850,3.351,851,3.582,852,2.849,853,5.666,854,3.351,855,4.147,856,2.993,1388,6.363]],["title/components/StudentFridgeComponent.html",[0,0.465,136,1.124]],["body/components/StudentFridgeComponent.html",[0,0.692,1,0.574,2,0.152,3,0.182,4,0.639,5,0.167,7,0.349,9,0.904,16,1.045,18,0.895,20,3.317,21,2.131,22,1.209,23,2.21,24,0.529,25,2.366,26,1.081,28,0.221,29,0.542,30,2.32,32,2.568,33,0.803,34,2.065,35,0.559,37,1.545,38,1.523,40,0.925,41,0.011,42,0.873,43,0.584,44,1.193,47,1.835,48,1.592,52,1.017,53,1.649,54,0.476,56,1.052,57,1.47,58,1.512,59,0.689,60,0.309,61,2.984,62,1.192,63,1.242,64,0.903,66,0.174,67,0.9,71,0.329,73,1.313,74,0.639,75,0.639,76,0.574,77,1.024,78,0.574,79,0.996,80,0.639,81,0.544,82,0.606,83,0.563,84,0.639,85,0.574,86,0.639,87,0.574,88,0.639,89,0.574,90,1.024,91,0.574,92,1.28,93,0.574,94,0.639,95,0.574,96,0.606,97,1.024,98,0.589,99,1.024,100,0.574,101,0.639,102,0.574,103,0.589,104,0.426,105,1.463,106,0.574,107,0.622,108,0.574,109,0.603,110,0.574,111,0.639,112,0.574,113,0.426,114,0.574,115,0.639,116,0.574,117,0.639,118,0.574,119,0.639,120,0.574,121,0.62,122,0.606,123,0.639,124,0.589,125,0.37,126,0.574,127,0.426,128,0.574,129,0.639,130,0.574,131,0.639,132,0.574,133,0.639,134,0.574,135,0.639,136,1.313,137,0.574,138,0.574,139,0.574,140,0.639,141,0.574,142,0.639,143,0.574,144,0.606,145,0.639,146,0.639,147,0.004,148,0.004,156,1.592,159,1.705,163,1.445,168,1.359,171,0.414,172,1.793,173,3.238,174,2.986,175,0.694,176,0.875,177,1.143,187,3.083,188,2.954,193,2.557,197,1.143,207,2.842,227,1.242,238,0.803,244,2.557,249,1.646,281,1.192,298,1.597,314,2.557,358,2.728,374,0.606,400,1.401,415,1.087,421,2.21,426,1.705,428,2.065,430,2.596,431,2.968,432,2.132,438,1.319,443,1.589,446,2.557,447,2.527,448,1.54,453,1.491,461,1.029,462,1.104,464,1.104,466,1.065,488,2.842,489,3.654,498,1.646,499,1.358,507,2.733,508,4.639,509,3.654,513,2.284,516,1.835,520,2.174,521,2.076,522,2.174,532,2.174,534,1.835,535,2.284,546,1.242,547,0.639,548,0.755,549,1.242,552,1.597,553,1.707,556,1.242,565,1.427,579,1.707,592,1.597,593,1.242,594,1.242,596,2.557,676,2.471,677,1.835,680,4.558,684,3.197,695,2.968,713,2.03,721,2.733,726,1.358,742,1.738,745,1.445,747,2.387,748,2.275,751,1.909,755,2.802,757,3.779,774,4.001,775,2.728,778,2.574,783,3.038,799,1.885,806,3.444,852,2.174,855,3.444,898,3.249,937,2.954,976,2.41,986,2.954,993,6.43,995,4.618,999,2.954,1026,1.505,1048,6.255,1091,1.768,1131,2.41,1170,2.03,1389,5.199,1390,5.558,1391,2.03,1392,3.698,1393,3.698,1394,5.285,1395,4.222,1396,5.285,1397,3.698,1398,3.698,1399,3.698,1400,3.698,1401,2.31,1402,3.698,1403,3.698,1404,3.698,1405,2.31,1406,2.31,1407,3.698,1408,3.698,1409,3.698,1410,2.31,1411,3.698,1412,2.31,1413,2.31,1414,4.624,1415,2.31,1416,2.31,1417,2.31,1418,2.31,1419,2.733,1420,1.707,1421,2.03,1422,2.31,1423,2.31,1424,2.31,1425,2.31,1426,2.31,1427,2.31,1428,3.698,1429,2.31,1430,3.698,1431,2.31,1432,2.31,1433,2.31,1434,2.31,1435,4.624,1436,2.31,1437,3.698,1438,2.31,1439,3.698,1440,2.31,1441,3.698,1442,3.698,1443,3.698,1444,3.698]],["title/components/StudentIndivComponent.html",[0,0.465,137,1.124]],["body/components/StudentIndivComponent.html",[0,0.663,1,0.429,2,0.292,3,0.136,4,0.478,5,0.125,7,0.405,9,0.836,13,1.635,16,1.276,18,1.047,20,2.659,21,1.786,22,1.448,23,1.804,24,0.396,25,2.286,26,0.851,28,0.165,29,0.427,30,2.319,32,2.233,33,0.632,34,1.731,35,0.418,37,1.295,38,1.563,40,0.959,41,0.011,42,1.001,43,0.569,44,0.988,47,1.445,48,2.308,49,2.031,51,1.26,52,1.203,53,1.913,54,0.767,56,1.136,57,0.925,58,0.952,59,0.732,60,0.231,61,2.553,62,0.891,63,0.929,64,0.675,65,0.929,66,0.13,67,0.489,71,0.811,72,1.342,73,1.1,74,0.478,75,0.478,76,0.429,77,0.806,78,0.429,79,0.784,80,0.478,81,0.685,82,1.496,83,0.926,84,0.478,85,0.429,86,0.478,87,0.429,88,0.478,89,0.429,90,0.806,91,0.429,92,1.044,93,0.429,94,0.478,95,0.429,96,0.453,97,0.806,98,0.441,99,0.806,100,0.429,101,0.478,102,0.429,103,0.441,104,0.318,105,1.226,106,0.429,107,0.465,108,0.429,109,0.909,110,0.429,111,0.478,112,0.429,113,0.318,114,0.429,115,0.478,116,0.429,117,0.478,118,0.429,119,0.478,120,0.429,121,0.165,122,0.989,123,0.478,124,0.441,125,0.276,126,0.429,127,0.318,128,0.429,129,0.478,130,0.429,131,0.478,132,0.429,133,0.478,134,0.429,135,0.478,136,0.429,137,1.1,138,0.429,139,0.429,140,0.478,141,0.429,142,0.478,143,0.429,144,0.453,145,0.478,146,0.478,147,0.003,148,0.003,155,3.394,156,3.132,159,1.342,163,1.137,167,2.128,168,1.628,172,1.579,173,3.24,174,2.973,175,0.519,176,0.654,177,1.369,187,2.685,200,0.743,206,0.769,207,2.382,211,1.174,217,0.891,227,2.659,241,1.296,243,1.897,249,1.296,255,1.067,263,1.194,264,1.798,281,2.286,298,1.194,358,1.502,374,0.989,400,1.103,404,1.276,405,1.379,407,3.274,408,1.125,409,1.125,415,1.103,421,1.804,426,1.74,428,1.731,430,2.119,431,2.487,432,1.74,443,1.331,447,2.118,448,2.233,454,1.174,456,1.635,459,1.015,461,0.769,462,0.825,464,0.825,466,2.042,477,2.119,478,2.218,486,3.892,488,2.382,489,3.062,498,1.296,499,1.015,500,3.315,503,2.325,508,4.803,509,4.458,512,0.929,513,2.331,515,2.151,516,3.2,517,3.315,520,1.711,521,1.635,522,1.711,534,1.445,535,1.798,540,1.276,541,1.125,542,1.379,543,1.276,546,0.929,547,0.478,548,0.565,549,0.929,550,1.125,551,2.558,552,1.194,553,1.276,556,2.659,557,1.379,565,1.067,576,1.517,577,1.517,578,1.379,579,2.151,581,2.325,582,1.517,583,1.517,584,1.517,586,1.517,588,2.218,592,1.194,593,0.929,594,0.929,596,2.012,599,1.379,600,2.558,602,2.558,603,2.331,620,3.274,622,1.379,623,1.517,624,1.194,625,1.379,671,0.806,672,1.711,676,0.9,677,3.504,680,3.963,683,2.151,684,2.609,689,2.768,690,3.315,691,2.887,694,2.789,695,1.635,701,2.012,712,2.553,717,2.286,726,2.218,727,1.125,730,1.517,732,2.151,742,0.875,745,1.731,774,3.853,799,0.616,806,1.897,852,1.711,894,1.711,932,1.379,986,1.379,993,5.425,995,3.014,996,4.429,1007,2.558,1091,0.825,1131,1.897,1247,2.012,1352,2.325,1375,3.315,1389,5.301,1419,2.151,1420,1.276,1421,1.517,1445,6.125,1446,1.897,1447,2.911,1448,4.429,1449,4.429,1450,4.429,1451,2.911,1452,4.429,1453,2.911,1454,4.429,1455,2.911,1456,2.911,1457,2.911,1458,1.727,1459,1.727,1460,2.911,1461,1.727,1462,2.558,1463,1.727,1464,4.711,1465,2.911,1466,1.727,1467,2.325,1468,1.727,1469,4.429,1470,2.911,1471,1.727,1472,1.727,1473,1.727,1474,2.911,1475,1.727,1476,3.773,1477,1.727,1478,1.727,1479,2.558,1480,4.429,1481,2.911,1482,2.911,1483,2.911,1484,2.911,1485,1.727,1486,1.727,1487,2.911,1488,1.727,1489,2.558,1490,1.727,1491,1.727,1492,1.727,1493,1.727,1494,3.014,1495,1.727,1496,1.727,1497,1.727,1498,1.517,1499,1.727,1500,1.727,1501,3.773,1502,1.727,1503,1.517,1504,1.727,1505,1.727,1506,1.727,1507,4.429,1508,2.911,1509,1.727,1510,2.911,1511,1.727,1512,1.727,1513,1.727,1514,1.727,1515,1.727,1516,1.727,1517,1.727,1518,2.911,1519,2.558,1520,2.911,1521,2.911]],["title/components/StudentListComponent.html",[0,0.465,138,1.124]],["body/components/StudentListComponent.html",[0,0.793,1,0.879,2,0.234,3,0.279,4,0.98,5,0.256,7,0.267,9,0.967,16,1.275,18,1.091,22,1.675,23,2.877,24,0.811,25,2.453,26,1.497,28,0.339,29,0.751,30,2.361,32,3.038,33,1.112,34,2.577,35,1.238,37,1.928,38,1.5,40,0.566,41,0.011,42,0.908,43,0.541,44,0.652,47,2.542,49,2.499,52,0.751,53,1.827,54,0.82,56,0.83,57,1.125,58,1.157,59,0.724,60,0.474,61,3.612,62,1.827,64,1.383,66,0.267,67,0.459,71,0.503,73,1.638,74,0.98,75,0.98,76,0.879,77,1.418,78,0.879,79,1.38,80,0.98,81,0.833,82,0.928,83,0.431,84,0.98,85,0.879,86,0.98,87,0.879,88,0.98,89,0.879,90,1.418,91,0.879,92,1.666,93,0.879,94,0.98,95,0.879,96,0.928,97,1.418,98,0.903,99,1.418,100,0.879,101,0.98,102,0.879,103,0.903,104,0.652,105,1.826,106,0.879,107,0.953,108,0.879,109,0.404,110,0.879,111,0.98,112,0.879,113,0.652,114,0.879,115,0.98,116,0.879,117,0.98,118,0.879,119,0.98,120,0.879,121,0.339,122,0.928,123,0.98,124,0.903,125,0.566,126,0.879,127,0.652,128,0.879,129,0.98,130,0.879,131,0.98,132,0.879,133,0.98,134,0.879,135,0.98,136,0.879,137,0.879,138,1.638,139,0.879,140,0.98,141,0.879,142,0.98,143,0.879,144,0.928,145,0.98,146,0.98,147,0.006,148,0.006,154,3.404,155,2.204,163,2.001,172,1.418,187,2.133,197,1.583,207,3.547,227,3.547,249,2.28,256,2.186,358,3.404,374,0.928,400,1.94,415,1.639,421,2.877,428,2.577,432,2.775,443,1.809,446,3.541,447,3.153,453,2.065,461,1.576,462,1.692,464,1.692,466,1.632,477,1.987,478,2.081,488,3.547,534,2.542,535,3.163,543,2.616,546,1.903,547,0.98,548,1.157,549,1.903,556,1.903,593,1.903,594,1.903,597,4.091,619,3.11,620,2.616,621,3.11,631,2.827,632,4.091,633,3.11,671,1.418,684,3.541,1131,3.338,1389,5.202,1420,2.616,1498,4.5,1519,4.5,1522,6.009,1523,4.5,1524,4.091,1525,3.11,1526,5.122,1527,3.539,1528,3.539,1529,4.091,1530,3.539,1531,3.539]],["title/modules/StudentModule.html",[195,1.522,1532,3.344]],["body/modules/StudentModule.html",[2,0.317,3,0.378,5,0.347,7,0.362,9,0.926,18,1.043,41,0.011,59,0.866,60,0.642,66,0.477,67,0.623,81,1.664,83,0.584,127,0.884,136,1.992,137,1.992,138,1.992,139,1.992,147,0.007,148,0.007,155,2.721,175,1.442,187,2.632,195,2.528,197,1.483,198,2.477,199,3.649,200,2.065,201,3.649,206,3.57,208,3.263,209,1.712,215,3.4,216,2.695,217,2.477,415,1.3,540,3.546,541,3.127,651,5.049,653,4.217,655,4.217,676,1.954,757,3.55,1002,3.022,1120,5.544,1152,5.544,1172,5.544,1337,6.212,1390,4.672,1445,3.833,1522,3.833,1532,6.567,1533,4.217,1534,4.217,1535,4.799,1536,4.217,1537,5.544,1538,4.799,1539,6.322,1540,6.322,1541,4.799,1542,4.799,1543,4.799,1544,4.799,1545,4.799,1546,4.799,1547,4.799,1548,4.799,1549,4.799]],["title/interfaces/StudentPhage.html",[171,0.811,775,2.335]],["body/interfaces/StudentPhage.html",[2,0.274,3,0.327,5,0.301,7,0.433,9,0.841,18,0.721,28,0.398,29,0.841,41,0.011,43,0.582,44,1.058,51,1.633,54,0.729,56,0.978,66,0.561,83,1.014,104,0.766,121,0.847,125,0.665,147,0.007,148,0.007,163,1.625,171,1.412,172,1.961,197,1.285,229,1.824,231,3.517,238,1.888,239,1.669,415,1.351,420,2.385,436,1.917,438,1.483,529,2.064,532,2.445,547,2.128,548,2.149,671,1.589,676,2.031,699,3.691,734,2.236,735,2.71,736,2.242,737,2.568,738,2.875,739,3.55,740,2.335,741,2.71,742,1.25,743,2.568,744,3.534,745,2.242,746,2.335,747,2.146,748,3.05,749,2.568,750,2.445,751,2.146,752,3.864,753,2.857,754,2.71,755,1.731,756,2.445,757,3.691,758,1.731,759,2.236,760,4.383,761,4.283,762,3.423,763,2.146,764,3.03,765,3.864,766,2.829,767,4.544,768,4.544,769,4.544,770,4.544,771,4.283,772,3.03,773,2.875,774,2.568,775,2.962,776,4.167,777,3.968,778,3.423]],["title/components/StudentPhageComponent.html",[0,0.465,139,1.124]],["body/components/StudentPhageComponent.html",[0,0.808,1,0.945,2,0.251,3,0.299,4,1.052,5,0.275,7,0.287,9,0.557,16,1.219,18,0.987,24,0.871,25,2.465,26,1.576,28,0.364,33,1.17,35,1.515,38,1.288,41,0.011,42,0.814,43,0.514,52,1.054,54,0.769,56,1.06,59,0.535,60,0.509,66,0.287,67,0.493,71,0.541,73,1.693,74,1.052,75,1.052,76,0.945,77,1.492,78,0.945,79,1.452,80,1.052,81,0.895,82,0.997,83,0.763,84,1.052,85,0.945,86,1.052,87,0.945,88,1.052,89,0.945,90,1.492,91,0.945,92,1.734,93,0.945,94,1.052,95,0.945,96,0.997,97,1.492,98,0.97,99,1.492,100,0.945,101,1.052,102,0.945,103,0.97,104,0.701,105,1.886,106,0.945,107,1.024,108,0.945,109,0.714,110,0.945,111,1.052,112,0.945,113,0.701,114,0.945,115,1.052,116,0.945,117,1.052,118,0.945,119,1.052,120,0.945,121,0.832,122,0.997,123,1.052,124,0.97,125,0.608,126,0.945,127,0.701,128,0.945,129,1.052,130,0.945,131,1.052,132,0.945,133,1.052,134,0.945,135,1.052,136,0.945,137,0.945,138,0.945,139,1.693,140,1.052,141,0.945,142,1.052,143,0.945,144,0.997,145,1.052,146,1.052,147,0.006,148,0.006,167,2.32,187,2.245,260,3.216,399,4.007,420,1.814,438,2.431,532,3.17,547,1.492,675,3.985,676,1.666,689,3.518,694,3.985,746,3.517,747,2.783,748,2.32,751,2.783,757,3.028,775,3.233,778,2.401,783,1.981,806,3.514,1091,2.577,1127,4.737,1145,3.037,1146,4.737,1159,4.737,1174,4.737,1389,4.712,1390,5.037,1446,3.514,1479,5.988,1550,3.341,1551,5.392,1552,5.392,1553,7.473,1554,5.392,1555,3.803,1556,5.392,1557,3.803,1558,3.803,1559,5.392,1560,3.803,1561,3.803,1562,3.803,1563,4.306,1564,3.803,1565,3.803,1566,3.803,1567,3.803,1568,3.803,1569,3.803,1570,5.392,1571,5.392,1572,5.392,1573,5.392]],["title/injectables/StudentResolver.html",[149,1.714,1537,3.128]],["body/injectables/StudentResolver.html",[2,0.326,3,0.389,5,0.357,7,0.486,9,0.724,18,0.955,21,2.597,22,2.344,28,0.473,30,1.443,33,1.398,35,1.194,37,2.221,38,1.324,40,1.216,41,0.011,42,0.972,43,0.528,44,1.187,52,1.113,54,0.663,59,0.802,60,0.661,64,1.929,66,0.373,67,0.64,147,0.008,148,0.008,149,2.716,157,4.693,162,5.448,163,3.157,164,5.448,167,2.772,168,2.97,169,5.144,170,3.063,171,1.154,175,1.484,176,1.87,177,1.99,207,4.086,227,2.655,255,3.05,293,3.978,340,4.671,358,4.249,374,1.294,380,3.05,432,3.305,464,2.36,543,3.649,663,6.455,666,5.144,668,3.978,669,5.267,670,3.978,671,2.103,672,3.787,684,4.453,695,4.266,818,4.197,1420,3.649,1525,4.338,1537,4.453,1574,4.338,1575,4.937,1576,4.937,1577,6.441,1578,7.168,1579,4.937,1580,4.937]],["title/injectables/StudentService.html",[149,1.714,207,2.433]],["body/injectables/StudentService.html",[2,0.201,3,0.24,5,0.22,7,0.541,9,1.081,16,0.777,17,2.574,18,1.102,19,2.987,28,0.292,29,0.672,30,1.611,33,0.995,35,0.736,38,1.517,40,1.147,41,0.011,42,1.082,43,0.605,44,1.321,49,3.062,52,1.237,54,0.832,56,1.105,57,0.968,58,0.996,59,0.609,60,0.408,66,0.23,67,0.395,83,0.898,109,0.788,147,0.005,148,0.005,149,2.088,154,3.808,155,3.406,156,3.086,171,0.546,172,1.697,173,2.041,174,2.113,176,1.154,177,2.498,197,1.417,207,2.465,213,4.027,227,2.465,237,3.529,238,1.921,287,2.105,338,4.532,351,4.532,357,3.169,358,4.268,374,1.202,380,1.881,415,1.261,439,2.974,440,2.113,443,2.312,448,1.909,454,1.848,498,3.424,516,2.275,544,3.661,668,2.831,671,1.269,676,2.446,677,2.275,694,3.387,695,4.719,721,5.299,745,1.791,755,1.909,778,2.041,783,1.685,788,2.676,791,4.027,824,6.072,855,1.985,894,2.695,1257,5.894,1282,3.387,1467,3.661,1524,3.661,1581,2.676,1582,4.584,1583,3.661,1584,3.661,1585,4.584,1586,4.584,1587,4.584,1588,4.584,1589,4.584,1590,3.045,1591,6.132,1592,7.915,1593,4.584,1594,3.045,1595,4.584,1596,3.045,1597,4.584,1598,6.577,1599,3.045,1600,3.661,1601,4.584,1602,3.045,1603,4.584,1604,4.584,1605,3.045,1606,4.584,1607,4.584,1608,4.584,1609,3.045,1610,3.045,1611,3.045,1612,3.045,1613,3.045,1614,3.045,1615,3.045]],["title/components/UpdatePasswordComponent.html",[0,0.465,141,1.124]],["body/components/UpdatePasswordComponent.html",[0,0.783,1,0.638,2,0.426,3,0.202,4,0.711,5,0.186,7,0.304,9,0.376,14,3.464,16,1.031,18,0.705,21,2.721,24,0.588,25,2.39,26,1.176,28,0.246,29,0.589,30,2.365,32,2.689,33,0.873,34,2.191,35,1.356,37,1.639,38,1.511,40,0.411,41,0.011,42,0.748,43,0.53,44,0.473,47,1.996,48,2.133,49,2.446,51,1.595,52,1.097,53,1.768,54,0.838,56,0.931,57,1.278,58,1.315,59,0.694,60,0.344,61,3.142,62,1.326,63,1.381,64,1.003,65,1.381,66,0.194,67,0.643,71,0.866,73,1.393,74,0.711,75,0.711,76,0.638,77,1.113,78,0.638,79,1.083,80,0.711,81,0.604,82,1.926,83,0.313,84,0.711,85,0.638,86,0.711,87,0.638,88,0.711,89,0.638,90,1.113,91,0.638,92,1.372,93,0.638,94,0.711,95,0.638,96,0.673,97,1.113,98,0.655,99,1.113,100,0.638,101,0.711,102,0.638,103,0.655,104,0.473,105,1.552,106,0.638,107,0.692,108,0.638,109,0.293,110,0.638,111,0.711,112,0.638,113,0.473,114,0.638,115,0.711,116,0.638,117,0.711,118,0.638,119,0.711,120,0.638,121,0.246,122,0.673,123,0.711,124,0.655,125,0.411,126,0.638,127,0.473,128,0.638,129,0.711,130,0.638,131,0.711,132,0.638,133,0.711,134,0.638,135,0.711,136,0.638,137,0.638,138,0.638,139,0.638,140,0.711,141,1.393,142,0.711,143,0.638,144,1.299,145,0.711,146,0.711,147,0.005,148,0.007,159,2.285,163,1.571,175,0.772,177,1.243,239,0.873,241,2.497,252,2.484,285,2.972,363,4.464,374,2.135,394,4.529,400,2.646,428,2.191,432,2.285,436,2.285,437,4.464,438,1.434,440,2.586,443,2.25,444,3.297,447,1.922,448,2.335,454,2.261,456,2.258,461,1.143,462,1.228,464,1.228,466,2.285,477,1.442,478,1.51,488,3.016,498,3.334,499,1.51,510,2.076,512,2.162,520,2.364,521,2.258,522,2.364,546,1.381,547,1.113,548,1.315,549,1.381,556,2.162,588,2.364,593,1.381,594,1.381,635,3.212,680,3.663,717,1.326,745,1.571,772,1.184,797,3.877,831,1.898,833,3.212,882,1.898,894,2.364,994,1.898,1002,1.922,1036,3.212,1087,2.484,1235,3.76,1239,2.051,1242,5.98,1249,4.479,1254,2.78,1261,5.736,1262,1.898,1268,4.927,1276,3.533,1277,2.051,1284,2.257,1287,2.257,1288,2.257,1289,3.533,1290,2.257,1352,3.212,1503,2.257,1563,4.479,1616,6.579,1617,6.457,1618,4.927,1619,4.021,1620,3.212,1621,2.258,1622,4.021,1623,2.568,1624,4.021,1625,5.608,1626,4.021,1627,3.212,1628,3.533,1629,2.78,1630,4.021,1631,4.021,1632,2.568,1633,4.021,1634,2.568,1635,2.568,1636,2.972,1637,3.533,1638,2.568,1639,2.568,1640,4.021,1641,2.568,1642,4.021,1643,4.021,1644,4.021,1645,4.021,1646,4.021,1647,4.021,1648,3.533,1649,2.568,1650,2.568,1651,2.257,1652,2.257,1653,2.257,1654,2.568,1655,2.568,1656,2.568,1657,2.568,1658,3.212,1659,2.568,1660,4.021]],["title/interfaces/User.html",[54,0.465,171,0.811]],["body/interfaces/User.html",[2,0.333,3,0.397,5,0.364,7,0.38,9,0.956,11,4.823,18,0.82,28,0.625,29,0.956,41,0.011,42,1.227,43,0.651,49,2.742,50,3.8,54,0.905,56,1.187,66,0.493,67,0.654,147,0.008,148,0.008,154,3.369,155,3.497,167,2.169,171,1.372,231,2.501,233,2.71,235,4.265,236,4.265,237,2.098,238,1.795,239,1.82,240,4.253,241,3.409,246,3.593,247,3.593,249,2.906,260,2.809,444,3.837,453,2.632,516,3.239,547,1.806,548,2.134,671,2.289,762,3.409,814,4.253,1661,4.025,1662,5.735,1663,5.735,1664,5.735,1665,4.427]],["title/components/UserProfileComponent.html",[0,0.465,143,1.124]],["body/components/UserProfileComponent.html",[0,0.818,1,0.772,2,0.409,3,0.245,4,0.861,5,0.225,7,0.351,9,0.456,16,1.124,18,0.779,24,0.712,25,2.43,26,1.361,28,0.298,29,0.682,30,2.372,32,2.9,33,1.011,34,2.421,35,1.498,37,1.94,38,1.527,40,0.497,41,0.011,42,1.146,43,0.544,44,0.573,47,2.311,48,2.856,49,1.763,50,2.311,51,1.762,52,0.818,53,1.991,54,0.858,56,0.77,57,0.988,58,1.017,59,0.717,60,0.416,61,3.425,62,1.605,63,1.672,64,1.215,65,1.672,66,0.235,67,0.724,71,0.442,73,1.539,74,0.861,75,0.861,76,0.772,77,1.288,78,0.772,79,1.254,80,0.861,81,0.732,82,0.815,83,0.378,84,0.861,85,0.772,86,0.861,87,0.772,88,0.861,89,0.772,90,1.288,91,0.772,92,1.545,93,0.772,94,0.861,95,0.772,96,0.815,97,1.288,98,0.793,99,1.288,100,0.772,101,0.861,102,0.772,103,0.793,104,0.573,105,1.715,106,0.772,107,0.837,108,0.772,109,0.354,110,0.772,111,0.861,112,0.772,113,0.573,114,0.772,115,0.861,116,0.772,117,0.861,118,0.772,119,0.861,120,0.772,121,0.298,122,0.815,123,0.861,124,0.793,125,0.497,126,0.772,127,0.573,128,0.772,129,0.861,130,0.772,131,0.861,132,0.772,133,0.861,134,0.772,135,0.861,136,0.772,137,0.772,138,0.772,139,0.772,140,0.861,141,0.772,142,0.861,143,1.539,144,1.99,145,0.861,146,0.861,147,0.005,148,0.005,156,2.004,163,1.819,177,1.439,190,3.44,235,3.332,236,3.332,237,2.58,238,1.211,239,1.011,241,3.306,246,2.311,247,2.311,264,2.875,374,0.815,394,3.595,400,2.347,426,2.146,428,2.421,432,2.857,438,1.661,439,2.667,443,1.994,446,3.218,447,2.225,448,3.092,454,2.498,456,2.614,461,1.384,462,1.486,464,1.486,466,2.146,477,1.746,478,1.828,483,4.038,488,3.332,498,3.442,513,2.875,515,3.44,520,2.737,521,2.614,522,2.737,529,2.311,546,1.672,547,0.861,548,1.017,556,2.503,571,2.732,588,1.828,593,1.672,594,1.672,635,3.718,671,1.288,742,1.862,1002,2.225,1041,2.732,1184,2.737,1235,4.098,1239,2.483,1240,6.064,1254,3.218,1618,4.903,1620,3.718,1636,3.44,1637,4.09,1651,2.732,1652,2.732,1653,2.732,1666,6.671,1667,2.732,1668,4.09,1669,4.655,1670,6.196,1671,6.196,1672,3.109,1673,4.655,1674,3.109,1675,3.109,1676,4.09,1677,3.109,1678,4.655,1679,3.109,1680,4.655,1681,4.655,1682,3.109,1683,3.109,1684,3.109,1685,5.58,1686,3.109,1687,3.109,1688,3.109,1689,3.109,1690,3.109,1691,3.109,1692,3.109]],["title/interfaces/_User.html",[171,0.811,233,2.433]],["body/interfaces/_User.html",[2,0.346,3,0.413,5,0.379,7,0.396,9,0.768,11,5.742,18,0.659,28,0.706,29,0.981,41,0.011,42,1.239,43,0.605,49,1.985,50,3.322,54,0.906,56,1.177,66,0.505,67,0.868,147,0.008,148,0.008,154,2.704,155,2.88,167,2.88,171,1.439,231,3.322,233,3.599,235,4.317,236,4.317,237,3.235,238,1.743,239,1.867,240,3.414,241,2.333,246,3.66,247,3.66,249,2.333,260,2.255,444,4.568,453,2.112,516,2.6,547,1.45,548,1.713,671,2.151,762,2.98,814,3.414,1661,4.185,1662,4.603,1663,4.603,1664,4.603,1665,5.88]],["title/changelog.html",[637,2.364,764,1.764,1693,3.362]],["body/changelog.html",[0,0.627,2,0.3,9,0.666,16,0.77,18,0.571,41,0.007,44,0.837,54,0.83,71,0.867,83,0.838,109,0.518,113,0.837,121,0.772,122,1.191,125,1.101,127,1.123,144,1.191,147,0.009,148,0.007,156,2.624,157,3.766,166,3.63,168,1.67,171,0.814,209,1.621,238,1.323,240,2.961,241,2.023,394,3.551,399,2.672,404,3.358,411,2.961,415,0.934,420,1.529,436,2.095,438,2.175,440,2.095,442,2.961,443,2.305,444,2.672,452,3.63,453,2.774,456,2.552,457,3.358,498,3.736,508,4.484,510,3.147,511,6.201,521,2.552,529,3.026,575,4.215,607,3.142,637,2.807,671,1.258,676,2.272,677,2.255,727,2.961,736,2.688,743,2.807,748,1.956,753,2.774,755,1.892,771,2.961,772,2.095,783,1.67,798,2.241,799,1.621,802,2.672,803,2.672,808,4.215,820,3.993,862,3.63,888,3.142,892,3.274,893,2.444,914,2.807,987,3.63,1054,3.63,1058,3.993,1078,2.961,1081,2.023,1087,2.807,1093,3.63,1160,2.961,1206,3.993,1217,2.961,1223,2.807,1224,2.961,1226,2.672,1230,2.961,1256,3.63,1260,3.993,1263,3.993,1278,3.358,1314,3.993,1462,3.993,1464,3.993,1563,3.63,1600,3.63,1621,2.552,1693,3.993,1694,4.544,1695,2.807,1696,2.715,1697,2.807,1698,7.895,1699,6.461,1700,4.544,1701,7.087,1702,4.544,1703,3.63,1704,6.881,1705,4.544,1706,6.097,1707,4.544,1708,4.544,1709,6.097,1710,4.544,1711,4.544,1712,3.993,1713,4.544,1714,4.544,1715,4.544,1716,4.544,1717,4.544,1718,4.544,1719,4.544,1720,6.097,1721,4.544,1722,4.544,1723,6.881,1724,4.544,1725,4.544,1726,6.097,1727,4.544,1728,4.506,1729,6.097,1730,4.544,1731,4.544,1732,6.097,1733,5.357,1734,3.993,1735,5.357,1736,3.993,1737,3.142,1738,4.484,1739,3.142,1740,4.544,1741,4.544,1742,3.993,1743,6.046,1744,4.544,1745,4.544,1746,4.544,1747,6.881,1748,4.544,1749,3.63,1750,4.544,1751,4.544,1752,3.993,1753,4.544,1754,4.544,1755,4.544,1756,4.544,1757,4.544,1758,4.544,1759,4.544,1760,3.993]],["title/coverage.html",[1761,5.341]],["body/coverage.html",[0,0.909,1,0.874,5,0.254,6,3.091,16,0.596,18,0.442,37,1.028,41,0.011,43,0.289,54,0.362,76,0.874,78,0.874,81,0.828,83,0.428,85,0.874,87,0.874,89,0.874,91,0.874,93,0.874,95,0.874,98,0.898,100,0.874,102,0.874,103,0.898,106,0.874,108,0.874,109,0.401,110,0.874,112,0.874,114,0.874,116,0.874,118,0.874,120,0.874,121,0.337,124,0.898,126,0.874,128,0.874,130,0.874,132,0.874,134,0.874,136,0.874,137,0.874,138,0.874,139,0.874,141,0.874,143,0.874,147,0.006,148,0.006,149,3.055,150,2.432,151,3.091,171,1.506,184,3.091,185,2.81,186,3.091,207,1.892,222,2.81,227,1.892,228,4.432,233,1.892,256,2.173,260,3.426,262,3.091,278,1.892,279,2.432,280,2.432,281,1.816,308,2.81,333,2.81,335,2.81,337,3.091,374,0.922,395,3.091,396,4.072,413,3.091,415,0.723,417,4.55,418,2.81,419,3.091,461,1.566,481,2.81,482,3.091,534,3.264,598,2.81,599,4.072,630,2.81,631,4.072,648,2.432,656,2.81,662,3.091,674,3.091,676,1.087,734,1.892,735,4.55,744,1.892,759,1.892,775,1.816,779,2.432,780,3.091,795,2.292,810,2.292,823,2.292,830,3.091,831,4.432,848,4.072,855,2.292,857,3.091,873,3.091,895,3.091,896,2.81,897,5.253,902,2.292,924,3.091,938,3.091,956,3.091,957,3.091,958,2.81,960,3.091,961,3.091,971,3.091,1019,2.6,1054,7.027,1057,3.091,1069,3.091,1070,3.091,1074,3.091,1075,3.091,1081,3.241,1082,2.432,1083,3.091,1084,3.091,1113,2.432,1114,3.091,1115,3.091,1120,2.432,1121,4.547,1122,3.091,1129,4.48,1141,3.091,1152,2.432,1153,3.091,1172,2.432,1173,3.091,1182,2.432,1183,3.091,1212,4.432,1235,2.173,1240,2.81,1242,2.81,1244,3.091,1266,3.091,1293,3.091,1301,3.091,1310,3.091,1343,3.091,1354,3.091,1359,3.091,1389,4.547,1390,3.768,1391,3.091,1445,2.81,1494,2.81,1522,2.81,1537,2.432,1550,3.091,1574,3.091,1581,3.091,1616,3.091,1661,4.072,1666,3.091,1667,3.091,1712,3.091,1761,3.091,1762,1.333,1763,3.518,1764,8.228,1765,3.518,1766,3.518,1767,6.981,1768,6.577,1769,5.099,1770,5.099,1771,5.099,1772,3.518,1773,3.518,1774,3.518,1775,3.518,1776,6.577,1777,5.099,1778,3.518,1779,3.518,1780,3.518,1781,3.518,1782,3.518,1783,3.518,1784,3.518,1785,3.518,1786,3.091,1787,5.099,1788,3.518,1789,3.518,1790,5.997,1791,5.099,1792,3.518,1793,3.518,1794,4.072,1795,5.099,1796,5.997,1797,5.099,1798,5.099,1799,7.28,1800,5.099,1801,3.518,1802,3.518,1803,5.099,1804,5.099,1805,5.099,1806,3.518,1807,3.518,1808,3.518,1809,3.518,1810,3.518,1811,3.518,1812,3.518,1813,3.518,1814,3.091,1815,3.518,1816,3.518,1817,3.518,1818,3.518,1819,3.518,1820,3.091,1821,3.518,1822,3.518,1823,3.518,1824,3.091,1825,3.091,1826,3.518,1827,3.518]],["title/dependencies.html",[197,1.674,1828,3.826]],["body/dependencies.html",[24,1.128,33,1.069,41,0.011,60,0.659,147,0.008,148,0.008,175,1.48,197,1.521,200,2.767,284,6.29,285,4.751,290,3.638,292,3.932,293,3.041,326,3.932,353,3.932,357,3.404,408,3.208,409,3.208,440,2.964,453,1.985,515,3.638,911,3.638,1324,4.326,1325,6.29,1329,4.326,1331,5.649,1332,4.326,1760,4.326,1829,4.923,1830,8.574,1831,6.429,1832,4.923,1833,4.923,1834,4.923,1835,8.075,1836,4.923,1837,4.923,1838,4.923,1839,4.923,1840,4.923,1841,4.923,1842,6.429,1843,4.923,1844,4.923,1845,4.923,1846,4.923,1847,6.429,1848,4.923,1849,4.923,1850,6.429,1851,4.923,1852,4.923,1853,4.923,1854,4.923,1855,4.923,1856,4.923,1857,4.923,1858,6.429,1859,4.923,1860,4.923,1861,4.923,1862,4.923,1863,4.923,1864,4.923,1865,6.918,1866,4.923,1867,6.429,1868,4.923,1869,4.923,1870,4.923,1871,4.923,1872,4.923,1873,4.923,1874,4.923,1875,4.923,1876,4.923,1877,4.923,1878,4.923,1879,4.923,1880,4.923,1881,4.923,1882,4.923,1883,6.429,1884,4.923,1885,4.326,1886,4.923,1887,4.923,1888,4.923,1889,4.923,1890,4.923,1891,4.923,1892,4.923,1893,4.923,1894,4.923,1895,4.923,1896,6.668,1897,4.923,1898,4.923,1899,4.923,1900,4.923,1901,4.923,1902,4.923,1903,4.923,1904,3.932,1905,4.923,1906,4.923,1907,4.923,1908,4.923,1909,4.923,1910,4.923,1911,4.923,1912,4.923,1913,4.923,1914,4.923,1915,4.923,1916,4.923,1917,4.923,1918,4.923]],["title/index.html",[28,0.366,637,2.364,764,1.764]],["body/index.html",[41,0.01,79,1.868,147,0.009,148,0.009,764,3.198,911,5.126,1699,6.095,1919,5.54,1920,6.937]],["title/license.html",[637,2.364,764,1.764,1921,3.362]],["body/license.html",[5,0.463,41,0.009,147,0.009,148,0.009,239,1.39,263,4.428,467,3.956,852,3.766,937,5.116,1628,5.628,1701,5.628,1733,5.628,1742,7.084,1865,5.628,1921,7.708,1922,6.405,1923,6.405,1924,6.405,1925,6.405,1926,6.405,1927,7.573,1928,6.405,1929,6.405,1930,6.405,1931,5.628,1932,6.405,1933,6.405,1934,6.405,1935,6.405,1936,6.405,1937,6.405,1938,7.573,1939,6.405,1940,6.405,1941,6.405,1942,6.405,1943,6.405,1944,6.405,1945,6.405,1946,6.405]],["title/modules.html",[195,2.045]],["body/modules.html",[41,0.009,147,0.009,148,0.009,195,2.143,196,4.403,206,2.836,268,4.707,274,4.403,275,4.403,276,4.403,277,4.403,285,6.547,643,4.707,943,4.707,1532,4.707,1752,7.784,1947,8.859,1948,8.859]],["title/overview.html",[1949,5.341]],["body/overview.html",[0,0.372,1,1.513,37,1.781,41,0.011,66,0.273,76,1.513,78,1.881,81,1.783,85,1.513,87,1.513,89,1.513,91,1.513,93,1.513,95,1.513,98,1.555,100,1.513,102,1.513,103,1.555,106,1.513,108,1.513,110,1.513,112,1.513,114,1.513,116,1.513,118,1.513,120,1.513,124,1.555,126,1.513,127,0.667,128,1.513,130,1.513,132,1.513,134,1.513,136,1.513,137,1.513,138,1.513,139,1.513,141,1.513,143,1.513,147,0.006,148,0.006,149,1.371,150,4.213,171,0.648,195,1.751,196,5.8,197,1.118,198,1.867,199,1.867,200,1.557,201,1.867,202,3.179,203,3.179,204,3.179,205,3.179,206,3.85,207,3.277,208,2.686,209,1.291,268,6.535,269,3.179,270,3.179,271,3.179,272,3.179,273,3.179,274,5.717,275,5.236,276,5.608,277,5.457,278,3.277,279,4.213,280,4.213,281,3.145,322,3.179,323,3.179,643,6.236,644,3.179,645,3.179,647,3.179,648,4.213,779,4.213,865,3.179,866,3.179,943,6.349,944,3.179,945,3.179,947,3.179,1081,1.611,1082,5.236,1113,5.236,1120,4.213,1152,4.213,1160,2.358,1172,4.213,1182,5.236,1194,3.179,1231,3.179,1232,3.179,1234,3.179,1235,3.764,1291,2.89,1302,3.179,1303,3.179,1319,3.179,1320,3.179,1321,3.179,1532,6.349,1533,3.179,1534,3.179,1536,3.179,1537,4.213,1703,2.89,1949,3.179,1950,3.618]],["title/todo.html",[574,3.056,637,2.364,764,1.764]],["body/todo.html",[13,3.788,16,1.143,41,0.01,54,0.694,72,3.11,83,0.95,121,0.747,147,0.009,148,0.009,529,3.348,575,4.663,676,2.085,1743,5.927,1951,6.858,1952,6.745,1953,5.927,1954,5.388]],["title/miscellaneous/variables.html",[534,2.688,1955,3.362]],["body/miscellaneous/variables.html",[9,0.668,13,3.43,17,2.558,18,0.866,28,0.436,32,2.543,40,0.977,41,0.011,42,1.04,43,0.501,52,1.183,54,0.709,56,0.951,57,2.565,58,2.805,70,3.639,72,2.101,73,1.132,83,0.555,104,1.125,121,0.436,125,0.977,147,0.007,148,0.008,154,2.352,155,1.961,211,1.837,228,3.367,238,1.752,239,1.496,244,4.763,245,3.639,246,2.261,247,2.261,248,3.639,249,2.029,250,3.639,251,3.639,252,2.814,253,3.639,254,3.639,256,4.256,257,3.639,258,5.503,259,3.639,260,2.629,261,3.639,415,0.937,440,2.816,443,2.071,444,2.679,461,3.068,510,2.352,516,2.261,534,2.261,547,1.261,548,1.49,676,2.129,736,2.386,739,1.961,741,2.969,747,2.352,758,3.065,764,2.101,778,2.029,799,2.179,808,4.223,856,4.547,975,5.44,987,3.639,1009,3.639,1010,2.969,1019,5.092,1156,4.003,1160,3.98,1177,4.003,1192,4.003,1221,4.514,1247,4.223,1387,5.367,1494,5.503,1703,3.639,1786,4.003,1820,4.003,1824,4.003,1825,5.367,1953,4.003,1955,6.054,1956,4.556,1957,4.556,1958,4.556,1959,4.556,1960,4.556,1961,4.556,1962,6.108,1963,6.108,1964,6.108,1965,4.556,1966,4.556,1967,4.556,1968,4.556,1969,4.556,1970,4.556,1971,4.556,1972,2.679,1973,4.556,1974,4.556,1975,4.003,1976,4.556,1977,6.108,1978,4.556,1979,4.556,1980,6.108,1981,4.556,1982,4.556,1983,4.003,1984,4.556,1985,3.639,1986,3.639,1987,4.556,1988,4.556]],["title/additional-documentation/controllers.html",[71,0.544,229,1.216,1696,1.704]],["body/additional-documentation/controllers.html",[9,0.913,16,1.055,41,0.009,54,0.641,109,0.71,147,0.009,148,0.009,339,5.505,345,4.976,347,4.604,348,4.604,349,4.604,415,1.281,427,4.976,440,2.873,495,4.976,496,4.976,676,1.925,683,4.604,786,4.307,892,2.774,1583,4.976,1584,4.976,1696,3.855,1762,2.36,1989,5.474,1990,5.474,1991,5.474,1992,5.474,1993,5.474,1994,5.474,1995,5.474,1996,5.474,1997,5.474,1998,5.474,1999,5.474,2000,5.474,2001,5.474,2002,5.474,2003,5.474,2004,5.474,2005,5.474,2006,5.474,2007,5.474,2008,5.474,2009,5.474,2010,5.474,2011,5.474,2012,5.474,2013,5.474,2014,5.474,2015,5.474,2016,5.474,2017,4.307,2018,5.474,2019,5.474,2020,5.474,2021,4.307,2022,5.474]],["title/additional-documentation/controllers/admin-controller.html",[9,0.486,71,0.471,229,1.054,1696,1.476]],["body/additional-documentation/controllers/admin-controller.html",[7,0.643,9,1.208,16,0.9,17,2.091,18,0.849,28,0.357,40,1.318,41,0.011,43,0.676,48,2.665,49,1.411,50,1.848,51,1.92,52,1.145,54,0.901,72,3.522,83,0.647,147,0.006,148,0.006,154,3.196,155,2.665,177,2.547,189,1.848,211,3.08,237,3.091,339,3.926,400,2.958,415,1.388,436,2.449,443,2.498,453,2.722,498,1.658,510,3.831,671,2.2,691,3.462,695,3.477,717,3.831,742,2.652,745,1.455,798,1.369,996,5.276,1073,4.99,1091,1.78,1523,3.272,1621,4.667,1695,5.284,1696,2.757,1762,1.411,1972,3.97,1989,4.668,1990,4.668,1991,4.668,1992,4.668,1993,4.668,2021,5.495,2023,3.724,2024,3.724,2025,4.837,2026,4.837,2027,5.485,2028,4.837,2029,4.837,2030,4.4,2031,4.4,2032,4.4,2033,2.975,2034,3.724,2035,3.272,2036,6.192,2037,3.724,2038,6.192,2039,5.312,2040,3.724,2041,3.724,2042,2.575,2043,3.724,2044,3.272,2045,3.724,2046,3.724,2047,3.724,2048,5.399,2049,5.399,2050,5.312,2051,3.926,2052,4.243,2053,5.312,2054,3.724,2055,1.603]],["title/additional-documentation/controllers/course-controller.html",[16,0.562,71,0.471,229,1.054,1696,1.476]],["body/additional-documentation/controllers/course-controller.html",[7,0.651,9,0.796,13,2.681,16,1.485,17,1.362,18,0.927,28,0.232,29,0.7,40,1.313,41,0.01,43,0.674,48,2.338,49,0.919,51,1.545,52,1.13,54,0.845,72,3.399,83,0.767,109,0.544,147,0.005,148,0.005,154,1.251,155,2.338,156,1.654,168,0.891,177,2.537,189,2.37,197,0.749,211,2.54,235,2.567,236,2.567,237,3.123,238,1.568,239,0.834,241,1.08,242,1.362,243,2.504,249,1.711,374,1.007,400,3.197,414,4.139,415,1.45,420,1.293,427,3.07,439,3.035,443,2.586,453,2.913,454,1.55,467,1.498,495,3.813,496,3.07,498,2.637,507,3.528,510,4.024,512,1.304,513,2.374,575,1.676,668,1.498,671,2.134,672,1.426,677,1.203,695,1.362,717,3.805,742,2.657,755,2.262,798,0.891,799,1.703,852,1.426,893,1.304,894,1.426,902,2.504,976,1.58,1002,1.837,1073,2.84,1078,3.111,1106,1.937,1223,1.498,1419,1.792,1524,1.937,1584,3.07,1621,4.633,1695,5.305,1696,2.126,1697,1.498,1739,1.676,1762,0.919,1951,2.13,1972,4.334,1994,3.377,1995,4.195,1996,3.377,1997,3.377,1998,3.377,1999,3.377,2000,3.377,2001,3.377,2002,6.477,2017,1.676,2021,5.185,2025,4.804,2026,4.804,2027,5.448,2028,4.887,2029,4.96,2030,4.708,2031,4.708,2032,4.596,2042,3.301,2044,2.13,2048,4.564,2049,4.995,2051,1.792,2055,1.044,2056,2.425,2057,2.425,2058,2.84,2059,7.052,2060,2.425,2061,3.07,2062,3.843,2063,2.425,2064,3.813,2065,2.425,2066,5.922,2067,2.425,2068,2.425,2069,1.937,2070,3.843,2071,2.425,2072,2.425,2073,2.13,2074,2.425,2075,4.774,2076,3.843,2077,2.425,2078,2.425,2079,2.13,2080,2.425,2081,3.843,2082,2.425,2083,2.425,2084,2.425,2085,2.425,2086,2.425,2087,2.425,2088,2.425,2089,2.425,2090,3.843,2091,2.425,2092,2.425,2093,2.425,2094,2.425,2095,2.425,2096,1.792,2097,1.937,2098,2.425,2099,2.425,2100,2.425,2101,2.13,2102,2.425,2103,2.425,2104,2.425,2105,1.937,2106,2.657,2107,1.937,2108,2.13,2109,2.425]],["title/additional-documentation/controllers/fridge-controller.html",[71,0.471,229,1.054,676,1.024,1696,1.476]],["body/additional-documentation/controllers/fridge-controller.html",[2,0.3,7,0.637,17,1.266,20,1.213,28,0.216,29,0.532,33,0.49,40,1.312,41,0.01,43,0.676,48,2.871,50,1.8,51,1.032,52,1.148,54,0.825,83,0.781,104,0.416,109,0.914,113,0.416,121,0.777,125,0.361,147,0.004,148,0.004,156,0.971,163,0.881,167,0.971,170,1.835,177,2.534,189,3.584,211,3.127,237,3.063,242,1.266,374,1.749,400,3.056,420,2.158,436,1.04,438,1.623,439,1.561,443,2.544,453,2.46,454,1.835,498,2.543,503,1.801,507,1.667,510,3.797,511,2.681,512,2.447,516,1.119,529,2.835,575,3.146,668,2.241,671,2.219,672,2.675,675,1.667,676,2.622,677,1.119,689,1.164,691,2.364,695,2.037,712,3.728,717,3.728,740,2.037,742,2.635,749,1.393,750,1.326,751,2.348,753,1.835,755,2.171,756,1.326,758,1.895,778,2.543,783,2.85,798,0.829,799,0.805,804,2.897,849,1.667,850,1.559,853,3.146,862,1.801,894,1.326,902,1.47,914,1.393,976,4.605,1002,2.175,1073,4.741,1257,3.634,1419,2.681,1467,1.801,1583,2.897,1620,1.801,1621,4.626,1629,2.508,1695,5.228,1696,2.026,1697,3.22,1728,1.667,1739,3.604,1762,0.854,1972,3.772,1986,1.801,2003,3.187,2004,3.187,2005,3.187,2006,3.187,2007,3.187,2008,3.187,2009,3.187,2010,5.019,2011,5.362,2012,3.187,2013,3.187,2014,4.58,2017,4.885,2021,5.168,2025,4.794,2026,4.706,2027,5.337,2028,4.487,2029,4.794,2030,3.977,2031,3.977,2032,3.723,2033,1.801,2042,3.146,2048,5.503,2049,5.669,2051,2.681,2052,2.897,2055,0.971,2058,4.222,2061,4.563,2073,1.982,2079,1.982,2096,3.363,2097,3.634,2105,2.897,2106,3.604,2107,1.801,2110,2.255,2111,2.255,2112,2.255,2113,6.05,2114,2.255,2115,4.55,2116,2.255,2117,3.998,2118,2.255,2119,2.255,2120,2.255,2121,2.255,2122,3.187,2123,2.255,2124,2.255,2125,1.982,2126,3.187,2127,2.255,2128,2.255,2129,2.255,2130,2.255,2131,3.187,2132,5.213,2133,5.213,2134,3.187,2135,3.998,2136,2.255,2137,2.255,2138,2.255,2139,2.255,2140,2.255,2141,2.255,2142,2.255,2143,3.627,2144,4.55,2145,5.213,2146,2.255,2147,2.255,2148,2.255,2149,2.255,2150,1.982,2151,2.255,2152,2.255,2153,2.255,2154,2.255,2155,2.255,2156,2.255,2157,2.255]],["title/additional-documentation/controllers/genetics-controller.html",[71,0.471,229,1.054,892,1.476,1696,1.476]],["body/additional-documentation/controllers/genetics-controller.html",[7,0.599,28,0.482,29,0.956,40,1.224,41,0.01,43,0.628,44,0.927,52,0.956,104,1.201,121,0.693,125,1.224,147,0.009,148,0.008,170,2.629,177,2.365,212,5.729,400,3.132,415,1.035,420,2.194,443,2.546,448,2.095,453,2.029,510,3.95,547,1.393,668,4.028,671,2.002,717,3.365,736,2.99,737,4.727,739,2.806,742,2.568,745,1.966,753,2.029,758,2.715,766,2.165,781,3.108,786,4.508,798,2.914,799,2.58,802,3.834,805,4.028,816,3.718,817,4.019,826,3.478,828,4.508,892,2.903,1002,3.117,1078,3.279,1214,3.478,1215,3.478,1220,4.249,1226,2.958,1227,4.249,1229,4.249,1282,3.718,1621,4.297,1695,5.017,1696,3.221,1697,4.028,1739,3.478,1762,1.906,1972,3.834,2015,5.729,2025,4.249,2026,4.249,2028,4.249,2029,4.249,2030,4.249,2031,4.249,2032,4.249,2042,4.508,2055,2.165,2064,4.019,2096,3.718,2158,5.031,2159,5.031,2160,5.031,2161,6.52,2162,5.031,2163,5.031,2164,5.031,2165,5.729,2166,5.031,2167,5.031,2168,5.031,2169,5.031]],["title/additional-documentation/controllers/scenario-controller.html",[71,0.471,109,0.378,229,1.054,1696,1.476]],["body/additional-documentation/controllers/scenario-controller.html",[7,0.603,17,2.898,28,0.494,29,0.971,40,1.236,41,0.01,43,0.634,52,1.132,109,0.99,147,0.008,148,0.008,168,1.896,177,2.388,189,2.561,211,2.952,400,2.774,415,1.589,439,2.221,443,2.402,453,2.081,510,2.663,512,2.775,671,1.834,672,3.034,703,4.898,712,3.779,717,3.779,742,2.611,755,2.149,798,1.896,799,1.841,821,4.534,856,4.094,899,4.898,905,4.898,976,4.319,1002,2.467,1294,5.294,1529,4.122,1621,4.487,1695,5.137,1696,3.26,1762,1.955,1972,3.034,2016,5.823,2017,5.062,2025,4.771,2026,4.771,2028,4.319,2029,4.319,2030,3.363,2031,3.363,2032,3.363,2048,5.654,2049,5.525,2055,2.221,2058,3.814,2106,4.582,2107,4.122,2108,4.534,2113,4.534,2135,4.534,2170,5.16,2171,5.16,2172,4.534,2173,4.534,2174,5.16,2175,5.16,2176,5.16,2177,5.16,2178,5.16,2179,5.16,2180,5.16,2181,4.534,2182,5.16,2183,5.16]],["title/additional-documentation/controllers/user-controller.html",[54,0.341,71,0.471,229,1.054,1696,1.476]],["body/additional-documentation/controllers/user-controller.html",[2,0.256,7,0.624,13,2.703,17,1.379,18,0.488,28,0.235,29,0.569,40,1.301,41,0.01,42,0.371,43,0.667,48,2.072,49,2.606,51,1.369,52,1.119,54,0.892,56,0.339,82,1.018,109,0.28,127,1.098,147,0.005,148,0.006,153,1.698,155,1.057,156,2.727,168,0.903,173,1.729,174,1.132,177,2.514,189,3.293,197,0.759,209,0.876,211,2.983,235,2.589,236,2.589,237,2.481,239,0.843,241,3.515,242,1.379,339,2.869,345,3.101,347,2.869,348,2.869,349,2.869,357,4.587,374,1.262,394,4.245,400,3.22,411,1.6,414,1.379,420,0.826,436,1.132,437,1.698,441,3.411,443,2.579,448,1.023,452,3.101,453,2.675,454,0.99,457,1.815,498,3.294,510,4.335,512,3.568,516,1.219,668,3.681,669,2.53,671,2.048,672,2.831,676,0.759,677,2.716,683,2.869,691,1.6,695,2.18,712,1.268,717,3.743,742,2.65,755,1.023,762,1.093,784,2.158,798,0.903,852,2.283,893,2.088,976,1.6,996,1.815,1002,2.616,1078,2.53,1184,1.444,1186,1.962,1246,2.158,1247,1.698,1249,3.101,1261,3.101,1262,1.815,1277,1.962,1278,4.903,1600,1.962,1621,4.619,1629,2.684,1636,1.815,1695,5.289,1696,2.144,1697,1.517,1734,4.23,1739,3.328,1749,3.101,1762,0.93,1896,2.158,1954,1.962,1972,4.264,1985,1.962,1986,1.962,2017,1.698,2018,3.411,2019,3.411,2020,3.411,2021,4.587,2022,5.567,2025,4.903,2026,4.726,2027,4.043,2028,4.726,2029,4.821,2030,4.129,2031,4.129,2032,3.565,2033,3.845,2035,2.158,2042,4.587,2048,5.345,2049,5.404,2051,1.815,2052,1.962,2055,1.057,2058,3.558,2061,1.962,2064,4.37,2096,3.558,2097,3.101,2101,2.158,2105,1.962,2106,3.328,2117,4.23,2122,2.158,2126,2.158,2134,2.158,2150,2.158,2165,2.158,2181,2.158,2184,2.456,2185,3.882,2186,2.456,2187,2.456,2188,3.882,2189,4.814,2190,2.456,2191,2.456,2192,6.335,2193,3.882,2194,2.456,2195,2.456,2196,2.456,2197,3.882,2198,2.456,2199,3.882,2200,2.456,2201,2.456,2202,2.456,2203,2.456,2204,2.456,2205,2.456,2206,2.456,2207,2.456,2208,2.456,2209,2.456,2210,2.158,2211,2.456,2212,3.882,2213,2.456,2214,2.456,2215,2.456,2216,2.456,2217,2.456,2218,2.456,2219,2.456,2220,2.456,2221,2.456,2222,2.456,2223,2.456,2224,2.456,2225,2.456,2226,2.456,2227,2.456,2228,2.456,2229,2.456,2230,2.456,2231,2.456,2232,3.882,2233,2.456,2234,2.456,2235,3.882,2236,2.456,2237,2.456]],["title/additional-documentation/genetics.html",[71,0.544,229,1.216,892,1.704]],["body/additional-documentation/genetics.html",[41,0.009,109,0.741,121,0.802,125,1.04,147,0.009,148,0.009,440,2.998,736,2.985,782,3.879,786,4.495,888,4.495,892,2.895,1738,4.237,1762,2.463,2238,5.713,2239,5.713,2240,5.713,2241,5.713,2242,5.713,2243,5.713,2244,6.502,2245,6.502,2246,6.502,2247,6.502,2248,6.502,2249,5.713,2250,5.713,2251,5.713,2252,5.713,2253,5.713,2254,5.713,2255,5.713,2256,6.502,2257,6.502,2258,6.502,2259,5.713,2260,5.713]],["title/additional-documentation/genetics/phage-scenario.html",[71,0.471,109,0.378,121,0.317,229,1.054]],["body/additional-documentation/genetics/phage-scenario.html",[2,0.504,7,0.624,28,0.329,29,0.953,40,1.298,41,0.01,43,0.658,48,1.479,51,0.977,52,1.176,56,0.817,83,0.997,109,0.965,121,0.82,147,0.006,148,0.006,170,2.021,172,1.8,177,2.48,209,1.788,211,1.386,238,1.818,239,1.412,246,1.706,249,1.53,252,2.123,374,1.893,415,1.031,420,2.43,436,2.999,443,1.033,449,2.239,454,2.021,456,1.93,547,0.951,670,2.123,739,2.547,740,4.291,742,2.584,746,2.815,747,3.57,748,3.408,749,2.123,750,4.493,751,3.357,760,4.009,763,1.774,765,4.067,766,2.8,776,3.825,782,1.643,783,2.91,797,5.388,798,2.74,803,2.947,804,5.196,807,2.54,850,2.376,851,3.705,892,1.53,903,4.405,1010,4.507,1078,3.267,1087,2.123,1092,2.745,1224,4.239,1256,2.745,1296,2.54,1446,3.267,1627,2.745,1629,2.376,1636,4.373,1737,2.376,1738,2.239,1762,1.302,1885,3.019,1904,2.745,1919,2.745,1975,3.019,2055,1.479,2238,4.405,2239,4.405,2240,4.405,2241,4.405,2242,4.405,2243,4.405,2261,5.013,2262,5.013,2263,5.013,2264,5.013,2265,5.013,2266,3.436,2267,3.436,2268,2.745,2269,4.405,2270,5.013,2271,2.745,2272,3.019,2273,4.405,2274,3.436,2275,5.2,2276,3.019,2277,4.727,2278,4.405,2279,2.745,2280,2.745,2281,3.019,2282,5.013,2283,3.019,2284,3.436,2285,3.436,2286,3.436,2287,3.019,2288,3.436,2289,3.436,2290,3.436,2291,3.436,2292,3.436,2293,3.019,2294,3.436,2295,3.436,2296,3.436,2297,3.019,2298,3.436,2299,3.436,2300,3.436,2301,6.41,2302,3.436,2303,7.221,2304,6.505,2305,6.505,2306,3.019,2307,3.436,2308,5.013,2309,3.436,2310,5.918,2311,3.436,2312,5.716,2313,3.436,2314,3.436,2315,3.436,2316,3.436,2317,3.436,2318,3.436,2319,3.436,2320,3.436,2321,3.019,2322,3.436,2323,3.436,2324,3.436,2325,3.436,2326,3.436,2327,3.436,2328,3.436,2329,3.436,2330,3.436,2331,3.019,2332,3.436,2333,3.436,2334,3.436,2335,3.436,2336,3.436,2337,3.436,2338,3.019,2339,3.436,2340,3.436,2341,3.436,2342,3.436,2343,3.436,2344,3.436]],["title/additional-documentation/genetics/phage-logic.html",[71,0.471,121,0.317,229,1.054,888,2.292]],["body/additional-documentation/genetics/phage-logic.html",[7,0.592,20,3.221,28,0.573,40,1.164,41,0.01,43,0.643,52,1.066,56,1.004,83,0.729,121,0.78,147,0.009,148,0.009,167,2.578,177,2.248,197,1.851,211,2.415,238,1.3,239,1.3,415,1.232,454,2.415,742,2.187,745,2.34,748,2.578,760,4.382,763,3.092,765,4.607,783,2.202,798,2.202,799,2.137,888,4.142,892,2.667,1010,3.904,1225,4.741,1737,4.142,1762,2.269,2055,2.578,2249,6.392,2250,6.392,2277,5.811,2278,6.884,2345,5.263,2346,5.99,2347,5.99,2348,7.275,2349,5.99,2350,7.275,2351,5.99,2352,5.99,2353,5.99,2354,5.99,2355,5.99,2356,4.427,2357,5.99,2358,5.99,2359,5.99,2360,5.99,2361,5.99]],["title/additional-documentation/genetics/phage-experiment.html",[71,0.471,121,0.317,229,1.054,782,1.585]],["body/additional-documentation/genetics/phage-experiment.html",[7,0.606,28,0.5,40,1.242,41,0.01,43,0.637,52,1.137,83,1.038,121,0.798,147,0.008,148,0.008,172,1.849,173,2.326,174,2.408,177,2.398,211,2.106,238,1.598,314,3.611,374,1.751,415,1.074,420,2.478,436,3.395,547,1.446,548,2.184,675,4.936,691,3.404,699,4.358,748,2.248,763,4.006,764,2.408,766,3.589,781,3.226,782,3.193,783,2.455,797,3.611,798,2.455,816,3.86,892,2.326,914,3.226,991,6.47,1226,3.071,1282,3.86,1658,4.172,1737,5.091,1738,5.346,1762,1.979,1931,7.048,2055,2.248,2251,6.47,2252,5.869,2253,5.869,2331,4.589,2362,5.223,2363,5.223,2364,5.223,2365,5.223,2366,6.679,2367,6.47,2368,5.223,2369,5.223,2370,5.223,2371,5.223,2372,4.589,2373,5.223,2374,6.679,2375,5.223,2376,5.223,2377,5.223,2378,5.223,2379,5.223,2380,5.223,2381,5.223,2382,6.679,2383,5.223,2384,6.679,2385,5.223,2386,5.223,2387,7.364,2388,5.223,2389,5.223,2390,5.223]],["title/additional-documentation/genetics/plate-experiment.html",[71,0.471,229,1.054,736,1.295,782,1.585]],["body/additional-documentation/genetics/plate-experiment.html",[7,0.562,13,2.346,28,0.713,40,1.232,41,0.01,43,0.611,51,1.188,52,1.128,56,0.795,104,1.309,109,0.657,121,0.79,125,0.669,147,0.007,148,0.007,172,1.594,177,2.195,211,2.322,238,1.913,239,1.617,252,2.581,374,1.095,399,3.874,415,1.698,420,2.591,616,4.386,671,1.156,727,2.723,736,3.347,742,2.416,752,4.175,753,2.863,758,3.102,762,1.86,766,3.056,783,2.422,786,3.981,798,2.422,799,2.054,801,3.753,802,3.874,805,3.557,806,3.753,807,4.256,808,5.15,815,2.723,892,1.86,994,3.088,1087,2.581,1096,2.889,1214,4.556,1215,4.91,1217,2.723,1218,2.889,1219,2.889,1220,2.723,1223,3.557,1225,2.723,1226,5.01,1227,3.753,1229,3.753,1230,2.723,1395,3.337,1446,3.753,1648,5.06,1658,3.337,1668,3.671,1728,3.088,1735,5.79,1736,3.671,1737,2.889,1738,4.294,1762,1.583,2055,1.798,2254,5.79,2255,5.79,2287,3.671,2301,3.337,2306,3.671,2321,3.671,2345,5.06,2356,3.088,2367,6.545,2372,3.671,2391,3.671,2392,5.759,2393,5.759,2394,5.759,2395,4.178,2396,3.671,2397,4.178,2398,4.178,2399,4.178,2400,3.671,2401,4.178,2402,4.178,2403,4.178,2404,4.178,2405,5.06,2406,4.178,2407,4.178,2408,4.178,2409,4.178,2410,4.178,2411,4.178,2412,4.178,2413,4.178,2414,4.178,2415,5.759,2416,5.759,2417,4.178,2418,4.178,2419,4.178,2420,4.178,2421,4.178,2422,5.759,2423,4.178,2424,4.178,2425,4.178,2426,4.178,2427,4.178,2428,4.178,2429,4.178,2430,4.178,2431,4.178,2432,3.671,2433,4.178,2434,4.178,2435,4.178,2436,4.178,2437,4.178,2438,4.178,2439,4.178,2440,4.178,2441,4.178,2442,4.178,2443,4.178,2444,4.178]],["title/additional-documentation/genetics/plexer-experiment.html",[71,0.471,125,0.53,229,1.054,782,1.585]],["body/additional-documentation/genetics/plexer-experiment.html",[7,0.559,28,0.644,40,1.185,41,0.01,43,0.64,52,0.987,109,0.768,121,0.746,125,1.368,147,0.01,148,0.008,172,1.863,177,2.08,211,2.132,238,1.855,239,1.608,399,3.958,420,2.492,689,2.729,736,3.405,742,2.42,758,2.803,766,2.276,783,1.943,798,1.943,799,2.401,801,3.446,802,4.584,803,3.958,805,4.158,806,4.387,807,4.975,808,5.39,812,3.656,813,3.656,815,4.387,816,3.908,817,4.223,818,4.387,827,3.656,892,2.354,914,3.266,1087,3.266,1217,4.387,1218,4.654,1219,4.654,1220,3.446,1223,4.158,1225,3.446,1226,3.958,1227,4.387,1229,4.387,1395,4.223,1446,3.446,1728,3.908,1762,2.003,1983,4.646,2055,2.276,2259,5.915,2260,5.915,2301,5.377,2312,5.915,2356,3.908,2391,4.646,2396,4.646,2400,4.646,2405,4.646,2445,5.288,2446,5.288,2447,5.288,2448,5.288,2449,5.288,2450,5.288,2451,5.288,2452,5.288,2453,5.288,2454,5.288,2455,5.288]],["title/additional-documentation/models.html",[71,0.544,113,0.705,229,1.216]],["body/additional-documentation/models.html",[41,0.009,113,1.289,147,0.009,148,0.009,440,3.224,1762,2.649]],["title/additional-documentation/models/course-model.html",[16,0.562,71,0.471,113,0.611,229,1.054]],["body/additional-documentation/models/course-model.html",[7,0.645,16,1.446,28,0.622,29,1.12,41,0.01,56,1.054,72,3.861,113,1.408,147,0.009,148,0.009,320,5.713,414,4.556,415,1.337,467,4.016,671,1.8,766,2.798,798,2.39,1071,5.713,1184,3.823,1762,2.463,2055,2.798,2456,4.495,2457,5.713,2458,6.502]],["title/additional-documentation/models/fridge-model.html",[71,0.471,113,0.611,229,1.054,676,1.024]],["body/additional-documentation/models/fridge-model.html",[7,0.415,28,0.527,29,1.011,41,0.01,50,2.73,54,0.776,56,0.952,57,1.748,58,2.466,72,2.536,83,0.84,109,0.948,113,1.272,121,0.722,147,0.008,148,0.008,156,2.367,170,2.218,172,1.91,173,3.702,174,4.084,238,1.498,239,1.194,242,4.235,415,1.131,420,1.851,439,2.367,454,2.218,547,1.522,548,1.798,549,2.958,676,2.569,677,2.73,739,2.367,742,2.074,762,2.449,766,2.97,772,2.536,778,3.702,781,3.397,782,2.629,783,3.055,798,2.772,850,5.214,853,5.214,975,4.065,1091,2.629,1184,3.234,1762,2.083,1904,4.393,2055,2.367,2131,6.064,2268,4.393,2271,4.393,2279,4.393,2280,4.393,2293,4.833,2297,4.833,2338,4.833,2456,3.802,2459,5.5,2460,5.5,2461,5.5,2462,5.5,2463,5.5]],["title/additional-documentation/models/phage-model.html",[71,0.471,113,0.611,121,0.317,229,1.054]],["body/additional-documentation/models/phage-model.html",[7,0.47,28,0.669,29,0.911,41,0.01,43,0.384,54,0.797,56,0.858,57,1.976,58,2.283,72,2.158,83,1.027,104,1.287,109,0.796,113,1.146,121,0.832,147,0.007,148,0.007,154,2.416,167,2.676,171,0.839,172,1.296,174,2.158,238,1.681,239,1.615,249,2.769,260,3.202,415,1.279,420,2.606,438,2.491,439,2.015,467,2.891,535,3.841,539,4.113,547,1.721,548,2.033,669,3.05,676,1.922,699,3.921,736,1.829,739,2.015,740,3.921,745,2.728,746,2.628,747,2.416,748,3.333,750,4.106,751,3.841,753,3.123,756,4.106,757,2.628,758,2.589,760,4.165,762,2.769,764,2.867,766,3.006,776,4.106,782,2.973,783,2.566,798,1.72,799,2.218,849,3.459,852,2.752,853,4.828,914,3.841,1009,4.967,1010,4.551,1091,3.807,1096,3.236,1131,4.052,1161,5.464,1184,2.752,1186,3.739,1300,4.113,1489,4.113,1697,2.891,1762,1.773,1794,4.967,1814,5.464,1972,3.656,2055,2.015,2069,4.967,2125,4.113,2356,3.459,2456,3.236,2464,6.983,2465,4.681,2466,4.681,2467,4.681,2468,4.681,2469,4.681,2470,4.681,2471,4.681,2472,4.681,2473,4.681,2474,4.681,2475,4.681,2476,4.681,2477,7.963,2478,4.681,2479,4.681,2480,4.681,2481,4.681,2482,6.219,2483,4.113,2484,4.681]],["title/additional-documentation/models/scenario-model.html",[71,0.471,109,0.378,113,0.611,229,1.054]],["body/additional-documentation/models/scenario-model.html",[7,0.56,15,4.074,28,0.592,29,0.906,41,0.01,43,0.507,54,0.715,56,1.119,57,2.524,58,2.597,59,0.46,71,0.659,109,0.981,113,1.139,121,0.806,147,0.007,148,0.007,168,1.704,238,1.788,239,1.341,247,3.067,260,1.995,263,3.205,374,1.215,411,3.021,420,2.805,439,2.659,454,2.989,513,2.864,547,1.924,676,2.148,712,3.587,746,2.603,748,3.418,752,2.726,760,3.323,765,2.726,766,2.991,772,2.849,782,2.954,783,1.704,798,1.704,799,2.754,856,4.579,879,4.074,890,4.074,899,5.136,900,3.703,902,3.021,905,5.136,906,3.703,1002,2.216,1010,4.027,1096,3.205,1160,4.027,1184,2.726,1224,3.021,1294,5.551,1295,3.703,1296,3.426,1299,4.074,1446,3.021,1529,3.703,1627,3.703,1629,3.205,1738,3.021,1762,1.756,1794,3.703,1919,3.703,2055,1.995,2069,4.936,2172,4.074,2173,4.074,2268,5.551,2269,5.43,2271,5.551,2272,6.107,2273,4.074,2275,6.107,2276,4.074,2277,3.703,2279,5.551,2280,5.921,2281,6.107,2283,6.107,2456,3.205,2457,4.074,2483,4.074,2485,6.95,2486,6.95,2487,4.636,2488,4.636,2489,4.636,2490,4.636,2491,4.636,2492,4.636,2493,4.636,2494,4.636,2495,4.636,2496,6.179,2497,6.179,2498,4.636,2499,7.413,2500,6.179,2501,6.179,2502,4.636]],["title/additional-documentation/models/user-model.html",[54,0.341,71,0.471,113,0.611,229,1.054]],["body/additional-documentation/models/user-model.html",[7,0.56,16,1.308,18,0.583,20,3.323,28,0.592,29,0.906,33,1.341,40,0.989,41,0.01,42,0.933,43,0.57,48,1.995,49,1.756,50,3.832,52,0.906,54,0.858,56,1.096,57,2.209,58,2.525,109,0.529,113,1.139,127,1.139,147,0.009,148,0.008,155,3.323,156,2.659,173,2.751,174,2.138,177,2.148,211,3.32,235,3.738,236,3.738,237,2.894,238,1.006,239,1.006,241,3.3,242,3.903,246,3.067,247,2.301,374,1.62,394,4.462,399,3.633,400,2.808,411,5.032,415,0.953,437,3.205,443,2.089,449,3.021,467,2.864,498,2.064,671,1.283,677,2.301,727,3.021,742,1.393,743,2.864,745,1.811,754,3.021,797,5.125,798,2.271,799,1.654,874,4.074,975,3.426,1002,2.216,1091,2.216,1184,3.633,1247,3.205,1254,3.205,1262,3.426,1278,5.136,1621,2.603,1676,4.074,1697,2.864,1749,3.703,1762,1.756,1954,3.703,1985,4.936,2055,1.995,2106,5.125,2210,5.43,2432,4.074,2456,3.205,2503,6.95,2504,6.95,2505,6.95,2506,6.179,2507,6.179,2508,7.413,2509,4.636,2510,7.413,2511,4.636,2512,4.636,2513,6.179,2514,4.636,2515,4.636,2516,4.636,2517,4.636,2518,4.636,2519,4.636,2520,4.636,2521,4.636,2522,4.636,2523,4.636,2524,4.636,2525,7.413,2526,4.636,2527,4.636,2528,4.636,2529,4.636,2530,4.636]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["0",{"_index":260,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Student.html":{},"components/StudentPhageComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["0.0.1",{"_index":1870,"title":{},"body":{"dependencies.html":{}}}],["0.0.3",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["0.0004",{"_index":2489,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["0.04",{"_index":2490,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["0.1.1",{"_index":1852,"title":{},"body":{"dependencies.html":{}}}],["0.1.8",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["0.19.39",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1873,"title":{},"body":{"dependencies.html":{}}}],["0.8.18",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":547,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["1.0.0",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1868,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["1.12.9",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["1.14.1",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":1854,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":1856,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1160,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/scenario-model.html":{}}}],["100",{"_index":1054,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["106",{"_index":2473,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["11",{"_index":1194,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"overview.html":{}}}],["11/11",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["11/16",{"_index":1817,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":2480,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["13/14",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["140",{"_index":1132,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["145",{"_index":1130,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["15/18",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":2478,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["1500",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1703,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["16/19",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["163",{"_index":1176,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["178",{"_index":2471,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["190",{"_index":1133,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["2",{"_index":548,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["2.0",{"_index":1927,"title":{},"body":{"license.html":{}}}],["2.1.1",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["2.3.6",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1859,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1862,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1741,"title":{},"body":{"changelog.html":{}}}],["20/21",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["2018",{"_index":1701,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["208",{"_index":1178,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["213",{"_index":2474,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["23",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["24/26",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":1724,"title":{},"body":{"changelog.html":{}}}],["260",{"_index":1134,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["27/27",{"_index":1819,"title":{},"body":{"coverage.html":{}}}],["275",{"_index":2481,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["280",{"_index":2482,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["2d",{"_index":816,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["3",{"_index":549,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/models/fridge-model.html":{}}}],["3.1.0",{"_index":1860,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1177,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":1950,"title":{},"body":{"overview.html":{}}}],["350",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["37/41",{"_index":1815,"title":{},"body":{"coverage.html":{}}}],["39;bth",{"_index":1482,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["39;btn",{"_index":1480,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["3a",{"_index":1407,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["3b",{"_index":1408,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["4",{"_index":550,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentIndivComponent.html":{}}}],["4.0.0",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1864,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":1866,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1161,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"additional-documentation/models/phage-model.html":{}}}],["400",{"_index":1739,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["401",{"_index":2193,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["403",{"_index":2051,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["404",{"_index":2064,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["422",{"_index":2200,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["43",{"_index":2469,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["5",{"_index":1192,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1129,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"coverage.html":{}}}],["50,145",{"_index":1128,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["500",{"_index":2030,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["6",{"_index":1291,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["6/6",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":2046,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["68",{"_index":1816,"title":{},"body":{"coverage.html":{}}}],["7/10",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":2494,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["75",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1196,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["80",{"_index":1794,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["83",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1175,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["9",{"_index":1197,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["9/9",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1814,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{}}}],["92",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["_admin",{"_index":486,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_authenticationservic",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["_authservic",{"_index":432,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_baseurl",{"_index":338,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["_calldelet",{"_index":1449,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["_calldeletecours",{"_index":492,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_calldeletecoursestud",{"_index":493,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_checkpassword",{"_index":1268,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_checkphagedelet",{"_index":2265,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphagedeletion(keymut",{"_index":2337,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift",{"_index":2262,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift(keymut",{"_index":2324,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_computenumoffspr",{"_index":2393,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computenumoffspring(n1",{"_index":2417,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparamet",{"_index":2392,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparameters(f1",{"_index":2409,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_copydelet",{"_index":2253,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_copydeletion(spo",{"_index":2385,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_courseservic",{"_index":434,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{}}}],["_experimentinput",{"_index":1213,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_generatedelet",{"_index":2264,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generatedeletion(useddeletespot",{"_index":2332,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift",{"_index":2261,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift(shifttyp",{"_index":2316,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_genotyp",{"_index":1222,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_getnewspot",{"_index":2263,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_getnewspot(lastmad",{"_index":2327,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_http",{"_index":791,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["_modalservic",{"_index":500,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_profileservic",{"_index":1618,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_reordercours",{"_index":1362,"title":{},"body":{"components/SignupComponent.html":{}}}],["_reordercourses(cours",{"_index":1364,"title":{},"body":{"components/SignupComponent.html":{}}}],["_rout",{"_index":430,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_router",{"_index":159,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_scenarioservic",{"_index":603,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["_shuffleplaquelist",{"_index":2394,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_shuffleplaquelist(inlist",{"_index":2438,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_studentservic",{"_index":684,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["_user",{"_index":233,"title":{"interfaces/_User.html":{}},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["_user2",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_validrecombdel",{"_index":2252,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_validrecombdel(checkpo",{"_index":2381,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_width",{"_index":973,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["a.firstname.tolowercase().localecompare(b.firstname.tolowercas",{"_index":261,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.lastname.tolowercase().localecompare(b.lastname.tolowercas",{"_index":259,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.strainnum",{"_index":1432,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["a/t",{"_index":2290,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["abil",{"_index":1743,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["abov",{"_index":194,"title":{},"body":{"components/AdminHomeComponent.html":{}}}],["absolut",{"_index":2465,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["acces",{"_index":1664,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["access",{"_index":156,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/NotAuthComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["accessgr",{"_index":242,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["account",{"_index":1954,"title":{},"body":{"todo.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["acid",{"_index":2295,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["activ",{"_index":166,"title":{},"body":{"injectables/AdminGuard.html":{},"components/ModelRoomComponent.html":{},"changelog.html":{}}}],["activatedrout",{"_index":431,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["activatedroutesnapshot",{"_index":162,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["activemod",{"_index":398,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["actual",{"_index":2432,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["actual_compon",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ad",{"_index":511,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["add",{"_index":507,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["adding/remov",{"_index":545,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor",{"_index":494,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor(this._admin.id",{"_index":569,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addit",{"_index":229,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{}}}],["addphagetofridg",{"_index":2007,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["addphagetofridge(req",{"_index":2138,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["address",{"_index":1254,"title":{},"body":{"injectables/ProfileService.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["adjust",{"_index":1188,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["admin",{"_index":9,"title":{"additional-documentation/controllers/admin-controller.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["admin'},{'nam",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["admin.compon",{"_index":220,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.guard.servic",{"_index":224,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.rout",{"_index":219,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.template.html",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.modul",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/course/course.servic",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"components/SignupComponent.html":{}}}],["admin/instr",{"_index":2124,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["admincompon",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":150,"title":{"injectables/AdminGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"coverage.html":{},"overview.html":{}}}],["adminhomecompon",{"_index":76,"title":{"components/AdminHomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminid",{"_index":1592,"title":{},"body":{"injectables/StudentService.html":{}}}],["administr",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["adminmodul",{"_index":196,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminrout",{"_index":218,"title":{},"body":{"modules/AdminModule.html":{}}}],["adminstud",{"_index":227,"title":{"interfaces/AdminStudent.html":{}},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["adminus",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{}}}],["agre",{"_index":1935,"title":{},"body":{"license.html":{}}}],["aim",{"_index":1668,"title":{},"body":{"components/UserProfileComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["aka",{"_index":2100,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["al",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{}}}],["aliv",{"_index":1645,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["allow",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["alltransl",{"_index":2352,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["alphabet",{"_index":245,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["alreadi",{"_index":851,"title":{},"body":{"interfaces/Fridge.html":{},"injectables/ProfileService.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["alway",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["and/or",{"_index":1246,"title":{},"body":{"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["anguar",{"_index":792,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["angular",{"_index":911,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["angular/compil",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":326,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":175,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"modules/HelpModule.html":{},"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":1606,"title":{},"body":{"injectables/StudentService.html":{}}}],["anyon",{"_index":1577,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["apach",{"_index":1925,"title":{},"body":{"license.html":{}}}],["apart",{"_index":2497,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["api/admin",{"_index":1608,"title":{},"body":{"injectables/StudentService.html":{}}}],["api/admin/1/students/67mak",{"_index":2045,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/cours",{"_index":2062,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum",{"_index":2075,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/:scenarioid",{"_index":2099,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructor",{"_index":2089,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructors/:studentid",{"_index":2093,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/stud",{"_index":2081,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/stud",{"_index":2024,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid",{"_index":2036,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid/:scenarioid",{"_index":2122,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["api/auth",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["api/auth/forget",{"_index":2196,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/reset",{"_index":2204,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signin",{"_index":2209,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signout",{"_index":2218,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signup",{"_index":2215,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/cours",{"_index":2068,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/cricket",{"_index":821,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:scenarioid",{"_index":2176,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:userid/:scenarioid",{"_index":2119,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/:phageid",{"_index":2143,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/delet",{"_index":2130,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/fridg",{"_index":2139,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/new",{"_index":2111,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/pl",{"_index":2160,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/cricket/plex",{"_index":2167,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/us",{"_index":1265,"title":{},"body":{"injectables/ProfileService.html":{}}}],["api/users/:userid",{"_index":2185,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/users/:userid/upd",{"_index":2191,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["app",{"_index":240,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{}}}],["app'},{'nam",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["app.compon",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["app.rout",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":78,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1710,"title":{},"body":{"changelog.html":{}}}],["appi",{"_index":1404,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["applic",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"license.html":{},"additional-documentation/models/scenario-model.html":{}}}],["application/json",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["appmodul",{"_index":268,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":1411,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["approut",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["area",{"_index":1663,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["aren't",{"_index":2375,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["aris",{"_index":609,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["array",{"_index":766,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["ask",{"_index":2356,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["aspect",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{}}}],["assign",{"_index":1607,"title":{},"body":{"injectables/StudentService.html":{}}}],["assum",{"_index":2515,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["async",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["attempt",{"_index":1636,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["auth",{"_index":183,"title":{},"body":{"injectables/AdminGuard.html":{},"components/NotAuthComponent.html":{}}}],["auth'},{'nam",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["auth.compon",{"_index":223,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth.component.t",{"_index":1070,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth.template.html",{"_index":1072,"title":{},"body":{"components/NotAuthComponent.html":{}}}],["auth/not",{"_index":222,"title":{},"body":{"modules/AdminModule.html":{},"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth/upd",{"_index":1745,"title":{},"body":{"changelog.html":{}}}],["authent",{"_index":2210,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["authenticate(candidatepassword",{"_index":2509,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["authentication.rout",{"_index":329,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.servic",{"_index":842,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["authentication/authentication.modul",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/authentication.servic",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["authentication/log",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationmodul",{"_index":274,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":328,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationservic",{"_index":37,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authetn",{"_index":1067,"title":{},"body":{"components/NavComponent.html":{}}}],["author",{"_index":1073,"title":{},"body":{"components/NotAuthComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["auto",{"_index":2519,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["avail",{"_index":613,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{}}}],["away",{"_index":2341,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["b",{"_index":1218,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["b.strainnum",{"_index":1433,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["back",{"_index":442,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{}}}],["backend",{"_index":440,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"modules/SharedModule.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/genetics.html":{},"additional-documentation/models.html":{}}}],["backend/databas",{"_index":1004,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["bact",{"_index":1706,"title":{},"body":{"changelog.html":{}}}],["bacteria",{"_index":1217,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["bad",{"_index":2096,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bade",{"_index":2141,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bar",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["base",{"_index":167,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{}}}],["basepair",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basi",{"_index":1939,"title":{},"body":{"license.html":{}}}],["basic",{"_index":1071,"title":{},"body":{"components/NotAuthComponent.html":{},"additional-documentation/models/course-model.html":{}}}],["bc",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["bcrypt",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["be",{"_index":532,"title":{},"body":{"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{}}}],["becom",{"_index":1097,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["befor",{"_index":251,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["beforehand",{"_index":1038,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["begin",{"_index":1300,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["behaviorsubject",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(nul",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["belong",{"_index":669,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["beta.2",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["beta.3",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["beta.6",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["bg",{"_index":997,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["block",{"_index":987,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bob",{"_index":1095,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["bodi",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectcours",{"_index":2078,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectdetail",{"_index":2072,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectinfo",{"_index":2161,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["bodyobjectinform",{"_index":2140,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bodyobjectnew",{"_index":2043,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["bodyobjectrequest",{"_index":2192,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectupd",{"_index":2134,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["boolean",{"_index":172,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["bootstrap",{"_index":200,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":409,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["both",{"_index":2404,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["box",{"_index":1142,"title":{},"body":{"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{}}}],["boyd",{"_index":1117,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["bp",{"_index":2477,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["breadcrumb",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"injectables/CourseResolver.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"injectables/StudentResolver.html":{},"dependencies.html":{}}}],["breadcrumbsconfig.postprocess",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["brigitt",{"_index":1923,"title":{},"body":{"license.html":{}}}],["brows",{"_index":1948,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["brute",{"_index":1867,"title":{},"body":{"dependencies.html":{}}}],["bth",{"_index":1510,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["btn",{"_index":993,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["bug",{"_index":1753,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":1951,"title":{},"body":{"todo.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["button",{"_index":508,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["button/rol",{"_index":1476,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["c",{"_index":1036,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["c'",{"_index":2493,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["c.coursenum",{"_index":1377,"title":{},"body":{"components/SignupComponent.html":{}}}],["call",{"_index":516,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["callback",{"_index":2510,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["callbackfunctioncallback",{"_index":2513,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["canaccessadmin",{"_index":342,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["canactiv",{"_index":962,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivate(rout",{"_index":964,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivatechild",{"_index":158,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["canactivatechild(rout",{"_index":161,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["cancel",{"_index":412,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{}}}],["candidatepasswordstringus",{"_index":2511,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["capac",{"_index":802,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbercapac",{"_index":2455,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbermax",{"_index":2402,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["capacitynumbermaximum",{"_index":2449,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["card",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{}}}],["case",{"_index":253,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["caus",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["cell",{"_index":817,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["certain",{"_index":904,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["chanc",{"_index":2269,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["chang",{"_index":1247,"title":{},"body":{"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["changelog",{"_index":1693,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changepassword",{"_index":2506,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["changepassword(oldpassword",{"_index":2514,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["charact",{"_index":1292,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":436,"title":{},"body":{"components/CourseCreateComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["checkdelet",{"_index":1450,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["checkphagedelet",{"_index":2248,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkphageframeshift",{"_index":2245,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkposnumberposit",{"_index":2383,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["chromosom",{"_index":991,"title":{},"body":{"components/ModelRoomComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["chrosomom",{"_index":2389,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["chunk",{"_index":2387,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["class",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["class=\"btn",{"_index":1047,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["class=\"row",{"_index":1052,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{}}}],["clean",{"_index":2117,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["clear",{"_index":1037,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["cli",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":509,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["click)=\"savedata",{"_index":1051,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["clickbutton",{"_index":1451,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["clickbutton(src",{"_index":1460,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["client",{"_index":1314,"title":{},"body":{"injectables/ScenarioResolver.html":{},"changelog.html":{}}}],["clone",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":2331,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["cluster_adminmodul",{"_index":202,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declar",{"_index":203,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_import",{"_index":204,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_provid",{"_index":205,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":322,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":323,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_coursemodul",{"_index":644,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_declar",{"_index":645,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_import",{"_index":646,"title":{},"body":{"modules/CourseModule.html":{}}}],["cluster_coursemodule_provid",{"_index":647,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_helpmodul",{"_index":865,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_declar",{"_index":866,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_import",{"_index":867,"title":{},"body":{"modules/HelpModule.html":{}}}],["cluster_locationmodul",{"_index":944,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":945,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":946,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":947,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_profilemodul",{"_index":1231,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declar",{"_index":1232,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_import",{"_index":1233,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_provid",{"_index":1234,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_scenariomodul",{"_index":1302,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_declar",{"_index":1303,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_import",{"_index":1304,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["cluster_sharedmodul",{"_index":1319,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1320,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1321,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_studentmodul",{"_index":1533,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_declar",{"_index":1534,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_import",{"_index":1535,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_provid",{"_index":1536,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["code",{"_index":703,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ModelRoomComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["codon",{"_index":2277,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["col",{"_index":1049,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["coli",{"_index":815,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["collegu",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{}}}],["colphag",{"_index":827,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["colphage(list",{"_index":2169,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["colphagearraylist",{"_index":2447,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["column",{"_index":813,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["come",{"_index":862,"title":{},"body":{"components/HelpComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["comment",{"_index":751,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["commonmodul",{"_index":327,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["commun",{"_index":1245,"title":{},"body":{"injectables/ProfileService.html":{}}}],["compar",{"_index":2512,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["comparison",{"_index":258,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":1297,"title":{},"body":{"interfaces/Scenario.html":{}}}],["complianc",{"_index":1929,"title":{},"body":{"license.html":{}}}],["compoen",{"_index":1644,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["compress",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["comput",{"_index":2345,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["computenumoffspr",{"_index":2257,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["computerecombparamet",{"_index":2256,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["concat(x",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["condit",{"_index":1628,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"license.html":{}}}],["config",{"_index":2303,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["configur",{"_index":2330,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["confirm",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["confirmdeletedialogcompon",{"_index":81,"title":{"components/ConfirmDeleteDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmpassword",{"_index":1277,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["connect",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["consist",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["consitut",{"_index":2296,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["consol",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["console.error(errormessag",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(json.stringify(error",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":255,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{}}}],["construct",{"_index":790,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(_authenticationservic",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(_authservic",{"_index":1062,"title":{},"body":{"components/NavComponent.html":{},"components/SignoutComponent.html":{}}}],["constructor(_courseservic",{"_index":429,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{}}}],["constructor(_http",{"_index":788,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["constructor(_profileservic",{"_index":1672,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["constructor(_rout",{"_index":499,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["constructor(_scenarioservic",{"_index":1311,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["constructor(_studentservic",{"_index":1525,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["constructor(activemod",{"_index":401,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["constructor(breadcrumbsconfig",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(http",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["constructor(priv",{"_index":176,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["constructor(publ",{"_index":410,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["content",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseIndivComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/StudentService.html":{}}}],["content'},{'nam",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["control",{"_index":1696,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}},"body":{"changelog.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["controller.html#deletestudentfridg",{"_index":2222,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["contructor",{"_index":910,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["cooki",{"_index":1855,"title":{},"body":{"dependencies.html":{}}}],["copi",{"_index":1931,"title":{},"body":{"license.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["copyright",{"_index":1922,"title":{},"body":{"license.html":{}}}],["core",{"_index":1857,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["correspond",{"_index":1230,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["count",{"_index":819,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["courenum",{"_index":525,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["cours",{"_index":16,"title":{"interfaces/Course.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["course.coursenum",{"_index":642,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["course.interfac",{"_index":232,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["course.resolv",{"_index":660,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.rout",{"_index":659,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.servic",{"_index":460,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{}}}],["course.touppercas",{"_index":715,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["coursebynum",{"_index":2002,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["coursebynum(req",{"_index":2103,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecoursecours",{"_index":2059,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecreatecompon",{"_index":85,"title":{"components/CourseCreateComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursedetail",{"_index":425,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["courseeditcompon",{"_index":87,"title":{"components/CourseEditComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseindivcompon",{"_index":89,"title":{"components/CourseIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseinfo",{"_index":487,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.coursenum",{"_index":595,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.descript",{"_index":626,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courseinfo.instructor",{"_index":627,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courselistcompon",{"_index":91,"title":{"components/CourseListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursemodul",{"_index":643,"title":{"modules/CourseModule.html":{}},"body":{"modules/CourseModule.html":{},"modules.html":{},"overview.html":{}}}],["coursenum",{"_index":414,"title":{},"body":{"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{}}}],["courseresolv",{"_index":648,"title":{"injectables/CourseResolver.html":{}},"body":{"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"coverage.html":{},"overview.html":{}}}],["courserout",{"_index":658,"title":{},"body":{"modules/CourseModule.html":{}}}],["courses.filter((c",{"_index":1378,"title":{},"body":{"components/SignupComponent.html":{}}}],["courses.filter((c)=>{return",{"_index":1376,"title":{},"body":{"components/SignupComponent.html":{}}}],["coursescenariocompon",{"_index":93,"title":{"components/CourseScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseservic",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverag",{"_index":1761,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpassword",{"_index":1361,"title":{},"body":{"components/SignupComponent.html":{}}}],["crate",{"_index":2310,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["creat",{"_index":420,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["create'},{'nam",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["create.compon",{"_index":652,"title":{},"body":{"modules/CourseModule.html":{}}}],["create.component.t",{"_index":419,"title":{},"body":{"components/CourseCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:24",{"_index":455,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:25",{"_index":458,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:30",{"_index":451,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:34",{"_index":433,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:47",{"_index":450,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:58",{"_index":435,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:75",{"_index":445,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.style.css",{"_index":423,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.template.html",{"_index":424,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create/cours",{"_index":418,"title":{},"body":{"components/CourseCreateComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["createcours",{"_index":427,"title":{},"body":{"components/CourseCreateComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(req",{"_index":2071,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(this.admin.id",{"_index":470,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["createpl",{"_index":786,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(phage1",{"_index":2395,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(pl",{"_index":794,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["createplate(req",{"_index":2159,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["createplatephag",{"_index":2254,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplexerpl",{"_index":2259,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["createplexerplate(rowphag",{"_index":2445,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["creating/sav",{"_index":2216,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["creation",{"_index":1676,"title":{},"body":{"components/UserProfileComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["credenti",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["crick",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{}}}],["cricket",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["cross",{"_index":752,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["crosses/manipul",{"_index":2158,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["crossov",{"_index":2366,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["css",{"_index":986,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["cummul",{"_index":2361,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["current",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["curus",{"_index":2233,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["curuseruserlog",{"_index":2027,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["dark",{"_index":998,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["dat",{"_index":1046,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["data",{"_index":803,"title":{},"body":{"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["databas",{"_index":1184,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["date",{"_index":2525,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["db",{"_index":1697,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["deal",{"_index":213,"title":{},"body":{"modules/AdminModule.html":{},"injectables/StudentService.html":{}}}],["debug",{"_index":1760,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["decim",{"_index":2270,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["declar",{"_index":199,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["defaultlabdilut",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultplexerdilut",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defin",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["defofdiff",{"_index":2486,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["degofdiff",{"_index":2178,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degofdifficulti",{"_index":2174,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degre",{"_index":2172,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["del",{"_index":1028,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["deleet",{"_index":777,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["delet",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["delete(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1612,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletecours",{"_index":495,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestud",{"_index":496,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestudents(req",{"_index":2082,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["deletedis",{"_index":1452,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["deletephag",{"_index":2009,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletephage(req",{"_index":2146,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletes",{"_index":2460,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletespot",{"_index":2461,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletestud",{"_index":1582,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudent(adminid",{"_index":1589,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudentfridg",{"_index":2006,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge(req",{"_index":2136,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge]{@link",{"_index":2221,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["deleteus",{"_index":1990,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["deleteuser(req",{"_index":2040,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["deletion.length",{"_index":1138,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i",{"_index":1139,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i+1",{"_index":1140,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletionguesslength",{"_index":1156,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"miscellaneous/variables.html":{}}}],["deletionlist",{"_index":1126,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletions.pip",{"_index":1548,"title":{},"body":{"modules/StudentModule.html":{}}}],["deletions.pipe.t",{"_index":1122,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"coverage.html":{}}}],["deletions.pipe.ts:16",{"_index":1136,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["dellist",{"_index":2382,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["dellistarraylist",{"_index":2384,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["depend",{"_index":197,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["describ",{"_index":2483,"title":{},"body":{"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["descript",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["destori",{"_index":446,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["destroy",{"_index":701,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["destruct",{"_index":635,"title":{},"body":{"components/CourseListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["detail",{"_index":439,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["determin",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/NavComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/user-model.html":{}}}],["dialog",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["dialog'},{'nam",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialog.compon",{"_index":541,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["dialog.component.t",{"_index":396,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:11",{"_index":403,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":406,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1143,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1144,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.template.html",{"_index":397,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["didn't",{"_index":1646,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["differ",{"_index":1627,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["difficulti",{"_index":2173,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dilut",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dimens",{"_index":2379,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["direct",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["directli",{"_index":1708,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":1464,"title":{},"body":{"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["discov",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dismiss",{"_index":586,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["display",{"_index":444,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["distanc",{"_index":2496,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["distribut",{"_index":1938,"title":{},"body":{"license.html":{}}}],["dnd",{"_index":1325,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["dndmodul",{"_index":1323,"title":{},"body":{"modules/SharedModule.html":{}}}],["dndmodule.forroot",{"_index":1339,"title":{},"body":{"modules/SharedModule.html":{}}}],["document",{"_index":1762,"title":{},"body":{"coverage.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["doesn't",{"_index":672,"title":{},"body":{"injectables/CourseResolver.html":{},"components/PageNotFoundComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["don't",{"_index":2207,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["dopheno",{"_index":2249,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["dopheno(mutantlist",{"_index":2347,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["doubl",{"_index":2415,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["drag",{"_index":773,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["drop",{"_index":1705,"title":{},"body":{"changelog.html":{}}}],["dure",{"_index":2069,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dynam",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":814,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["each",{"_index":799,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["easier",{"_index":535,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["edit",{"_index":483,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/UserProfileComponent.html":{}}}],["edit'},{'nam",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["edit.compon",{"_index":654,"title":{},"body":{"modules/CourseModule.html":{}}}],["edit.component.t",{"_index":482,"title":{},"body":{"components/CourseEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:105",{"_index":528,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:122",{"_index":506,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:145",{"_index":514,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:161",{"_index":502,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:178",{"_index":518,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:195",{"_index":505,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:209",{"_index":519,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:33",{"_index":531,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:37",{"_index":537,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:41",{"_index":538,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:45",{"_index":530,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:46",{"_index":536,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:50",{"_index":533,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:54",{"_index":501,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:71",{"_index":523,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:97",{"_index":526,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.style.css",{"_index":484,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.template.html",{"_index":485,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit/cours",{"_index":481,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["editcours",{"_index":1998,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(req",{"_index":2077,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(this._admin.id",{"_index":566,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["editprofil",{"_index":1248,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editprofile(userid",{"_index":1251,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editus",{"_index":2018,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["edituser(req",{"_index":2187,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["ej",{"_index":1861,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":768,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["elm.userid",{"_index":573,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["email",{"_index":241,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["email/name/rol",{"_index":1447,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["empti",{"_index":670,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["encompass",{"_index":1551,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["end",{"_index":914,"title":{},"body":{"components/LandingRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["enough",{"_index":2340,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["enrol",{"_index":615,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["ensur",{"_index":252,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"interfaces/Student.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["enter",{"_index":437,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["entir",{"_index":1952,"title":{},"body":{"todo.html":{}}}],["entityif",{"_index":2202,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["entranc",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{}}}],["entrycompon",{"_index":651,"title":{},"body":{"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/StudentModule.html":{}}}],["enum",{"_index":2507,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["enumer",{"_index":2526,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["epo",{"_index":2386,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["eposnumberend",{"_index":2390,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["equal",{"_index":2498,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["err",{"_index":477,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["err2",{"_index":563,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["error",{"_index":443,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["error.error.messag",{"_index":1387,"title":{},"body":{"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["error.error.text",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.messag",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.t",{"_index":1825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errordatabas",{"_index":2102,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["errorerror",{"_index":2116,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["errorif",{"_index":2197,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["errormessag",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["erroron",{"_index":2032,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["eslint",{"_index":1863,"title":{},"body":{"dependencies.html":{}}}],["et",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{}}}],["even",{"_index":2475,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["everyth",{"_index":1631,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["exampl",{"_index":1091,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["except",{"_index":1928,"title":{},"body":{"license.html":{}}}],["exeri",{"_index":2391,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["exisit",{"_index":1255,"title":{},"body":{"injectables/ProfileService.html":{}}}],["exisitng",{"_index":1622,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["exist",{"_index":755,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["exit",{"_index":1872,"title":{},"body":{"dependencies.html":{}}}],["expect",{"_index":1648,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["experi",{"_index":782,"title":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["experiment.servic",{"_index":951,"title":{},"body":{"modules/LocationModule.html":{}}}],["experimentphag",{"_index":734,"title":{"interfaces/ExperimentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["experimentservic",{"_index":779,"title":{"injectables/ExperimentService.html":{}},"body":{"injectables/ExperimentService.html":{},"modules/LocationModule.html":{},"coverage.html":{},"overview.html":{}}}],["expir",{"_index":1749,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"overview.html":{}}}],["express",{"_index":1865,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extend",{"_index":231,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["f1numberfract",{"_index":2411,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2",{"_index":2410,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2numberfract",{"_index":2412,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["facebook",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":174,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["far",{"_index":2339,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["featur",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{}}}],["fetch",{"_index":1620,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["field",{"_index":1625,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"license.html":{}}}],["filecod",{"_index":2485,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["fill",{"_index":1626,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["find",{"_index":668,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["findfridgebyscenown",{"_index":2011,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["findfridgebyscenowner(req",{"_index":2151,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["finish",{"_index":2084,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["first",{"_index":247,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["firstnam",{"_index":235,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["fix",{"_index":1698,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["fname",{"_index":1108,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["follow",{"_index":2181,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["for(let",{"_index":1026,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["forbiddencurr",{"_index":2060,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["forbiddenif",{"_index":2052,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["forc",{"_index":1736,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["forget",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["forgetpassword",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forgetpassword(bodi",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordcompon",{"_index":95,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":999,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["format",{"_index":689,"title":{},"body":{"components/CourseScenarioComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["formataccess",{"_index":681,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(isgr",{"_index":686,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(student.statu",{"_index":733,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formatphagetyp",{"_index":1553,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["formsmodul",{"_index":325,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":1078,"title":{},"body":{"components/PageNotFoundComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["found')if",{"_index":2150,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["found'},{'nam",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["found.compon",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.t",{"_index":1075,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1080,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.template.html",{"_index":1079,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/pag",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["foundif",{"_index":2199,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundphag",{"_index":2163,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["foundther",{"_index":2070,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["foundun",{"_index":2188,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundus",{"_index":2065,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["frame",{"_index":2278,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["framelist",{"_index":2360,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frameshift",{"_index":760,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["frameshift(",{"_index":2325,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["frameshift/phenotyp",{"_index":2346,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["framesstoplist",{"_index":2463,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["framestoplist",{"_index":2298,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["framshift",{"_index":2358,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frequenc",{"_index":2427,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["fridg",{"_index":676,"title":{"interfaces/Fridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["fridge')if",{"_index":2153,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridge'},{'nam",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["fridge.accessgr",{"_index":1444,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.compon",{"_index":1543,"title":{},"body":{"modules/StudentModule.html":{}}}],["fridge.component.t",{"_index":1391,"title":{},"body":{"components/StudentFridgeComponent.html":{},"coverage.html":{}}}],["fridge.component.ts:118",{"_index":1401,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:133",{"_index":1410,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:154",{"_index":1405,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:30",{"_index":1412,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:34",{"_index":1413,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:38",{"_index":1415,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:42",{"_index":1416,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:51",{"_index":1418,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:55",{"_index":1417,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:59",{"_index":1399,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:76",{"_index":1406,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.own",{"_index":1441,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.label",{"_index":1443,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.scencod",{"_index":1442,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.strain",{"_index":1425,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.template.html",{"_index":1393,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge/fridge.compon",{"_index":952,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/phag",{"_index":953,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/stud",{"_index":1390,"title":{},"body":{"components/StudentFridgeComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["fridgecompon",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fridgefridgefridg",{"_index":2157,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgefridgelog",{"_index":2132,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgephag",{"_index":744,"title":{"interfaces/FridgePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["frist",{"_index":1085,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["front",{"_index":1728,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["full",{"_index":805,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["function",{"_index":211,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["function(a,b",{"_index":257,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["function(error",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["futur",{"_index":907,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["g",{"_index":2492,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["g/c",{"_index":2288,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["g/c'",{"_index":2274,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gcprob",{"_index":2272,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["gcprobnumbergc",{"_index":2286,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gene",{"_index":1010,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["genear",{"_index":974,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["genelength",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gener",{"_index":798,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["generatedelet",{"_index":2247,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generateframeshift",{"_index":2244,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generatepl",{"_index":2255,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["generateplexerpl",{"_index":2260,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["generateplexerplate(lawntypestr",{"_index":2451,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["generatescenario",{"_index":2238,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["generatescenario(scenario",{"_index":2266,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["genet",{"_index":892,"title":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolist",{"_index":2405,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolistarraylist",{"_index":2453,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotyp",{"_index":1226,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotypephag",{"_index":759,"title":{"interfaces/GenotypePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["geonotyp",{"_index":2434,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["get",{"_index":637,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"components/CourseListComponent.html":{},"components/NavComponent.html":{},"changelog.html":{}}}],["get(`${this._baseurl}/${adminid}/stud",{"_index":1609,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1610,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1614,"title":{},"body":{"injectables/StudentService.html":{}}}],["getblockclass",{"_index":978,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getblockclass(strain",{"_index":983,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getbuttonclass",{"_index":1397,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('al",{"_index":1402,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('grad",{"_index":1403,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass(src",{"_index":1400,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getcours",{"_index":1997,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getcourse(req",{"_index":2074,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getfram",{"_index":2250,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["getframes(whosay",{"_index":2353,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["getfridg",{"_index":1583,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridge(adminid",{"_index":1593,"title":{},"body":{"injectables/StudentService.html":{}}}],["getfridge(req",{"_index":2118,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo",{"_index":2014,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo(fridg",{"_index":2156,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getnewspot",{"_index":2246,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["getpossibleinstructor",{"_index":1999,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getpossibleinstructors(req",{"_index":2088,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenario",{"_index":916,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenario(scenid",{"_index":920,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenariostatu",{"_index":2001,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getscenariostatus(req",{"_index":2098,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenstatu",{"_index":1453,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scenario.scencod",{"_index":1521,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scencod",{"_index":1465,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstud",{"_index":1584,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getstudent(adminid",{"_index":1595,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentcours",{"_index":1454,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstudentfridg",{"_index":2004,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudentfridge(req",{"_index":2121,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudents(req",{"_index":2080,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getus",{"_index":339,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuser(req",{"_index":2035,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo",{"_index":2022,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo(us",{"_index":2234,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["given",{"_index":903,"title":{},"body":{"components/LandingRoomComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["global",{"_index":1155,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["global]{@link",{"_index":1166,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["go",{"_index":189,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseCreateComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["goal",{"_index":900,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["goe",{"_index":1076,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["googl",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["gotofridg",{"_index":682,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["gotofridge(studentid",{"_index":692,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["govern",{"_index":1945,"title":{},"body":{"license.html":{}}}],["grace",{"_index":1871,"title":{},"body":{"dependencies.html":{}}}],["grade",{"_index":757,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["grant",{"_index":677,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["grantaccess",{"_index":683,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(req",{"_index":2220,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(scencod",{"_index":1470,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["grantaccess(studentindex",{"_index":696,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["grantscenaccess",{"_index":1585,"title":{},"body":{"injectables/StudentService.html":{}}}],["grantscenaccess(adminid",{"_index":1597,"title":{},"body":{"injectables/StudentService.html":{}}}],["greater",{"_index":1489,"title":{},"body":{"components/StudentIndivComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["group",{"_index":1148,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["gt",{"_index":1479,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{}}}],["guard",{"_index":152,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["guess",{"_index":778,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["guesses.pip",{"_index":1546,"title":{},"body":{"modules/StudentModule.html":{}}}],["guesses.pipe.t",{"_index":1153,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"coverage.html":{}}}],["guesses.pipe.ts:22",{"_index":1164,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[i",{"_index":1168,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[strain.strainnum",{"_index":1429,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["guesslist",{"_index":1158,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesss",{"_index":1154,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["handl",{"_index":1087,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["handleplex",{"_index":2015,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["handleplexer(req",{"_index":2166,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["hasauthor",{"_index":1992,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["hasauthorization(req",{"_index":2047,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["hasfridg",{"_index":1394,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["hasfridgeauthor",{"_index":2012,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasfridgeauthorization(req",{"_index":2154,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["hashlocationstrategi",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["hasphageauthor",{"_index":2013,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasphageauthorization(req",{"_index":2155,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["have",{"_index":212,"title":{},"body":{"modules/AdminModule.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["header",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["helmet",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":858,"title":{},"body":{"components/HelpComponent.html":{},"components/NavComponent.html":{}}}],["help'},{'nam",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["help.compon",{"_index":871,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.rout",{"_index":870,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.style.css",{"_index":859,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.template.html",{"_index":860,"title":{},"body":{"components/HelpComponent.html":{}}}],["help/help.modul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["helpcompon",{"_index":100,"title":{"components/HelpComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helper",{"_index":503,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["helpinform",{"_index":864,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpmodul",{"_index":275,"title":{"modules/HelpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelpModule.html":{},"modules.html":{},"overview.html":{}}}],["helprout",{"_index":869,"title":{},"body":{"modules/HelpModule.html":{}}}],["hidden",{"_index":1713,"title":{},"body":{"changelog.html":{}}}],["hofmeist",{"_index":1924,"title":{},"body":{"license.html":{}}}],["home",{"_index":191,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["home'},{'nam",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.compon",{"_index":221,"title":{},"body":{"modules/AdminModule.html":{}}}],["home.component.t",{"_index":186,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["home.style.css",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.template.html",{"_index":192,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home/admin",{"_index":185,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["home/home.compon",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["homecompon",{"_index":102,"title":{"components/HomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hopefulli",{"_index":1714,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":939,"title":{},"body":{"components/LocationComponent.html":{}}}],["hour",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":1469,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["html5",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["http",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1932,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["httpclientmodul",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["https://github.com/iconic/open",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["human",{"_index":1295,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/models/scenario-model.html":{}}}],["i.",{"_index":784,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["icon",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["iconic.git",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":671,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["id'",{"_index":2406,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["id')if",{"_index":2109,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["id1",{"_index":1191,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id2",{"_index":1193,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id3",{"_index":1195,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id=\"model",{"_index":1055,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["id=\"viewpar",{"_index":1147,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["ident",{"_index":2422,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identicalbooleanar",{"_index":2429,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identif",{"_index":2458,"title":{},"body":{"additional-documentation/models/course-model.html":{}}}],["identifi",{"_index":902,"title":{},"body":{"components/LandingRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["iderr",{"_index":1652,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["idstringcours",{"_index":2104,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["idstringmongodb",{"_index":2148,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["idstringscenario",{"_index":2182,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["idstringuser'",{"_index":2227,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["if(c",{"_index":1290,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(error",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(error.error",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isloggedin",{"_index":968,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["if(n",{"_index":1660,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(numpar",{"_index":1201,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(out",{"_index":1107,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageGuessesPipe.html":{}}}],["if(p",{"_index":1289,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(r",{"_index":725,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["if(result",{"_index":584,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["if(revers",{"_index":1112,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["if(rol",{"_index":180,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["if(sorted.length",{"_index":1209,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(strain.phagetyp",{"_index":1439,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this._admin",{"_index":1513,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.coursedetails.coursenum",{"_index":465,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["if(this.credentials.token",{"_index":1281,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.errormessag",{"_index":1285,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.getus",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["if(this.hasfridg",{"_index":1426,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this.keys.length",{"_index":1032,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["if(this.passwordmessag",{"_index":1655,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(this.phag",{"_index":1564,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.phage.phagetyp",{"_index":1567,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.selectedadd",{"_index":568,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["if(this.ssubscript",{"_index":935,"title":{},"body":{"components/ListComponent.html":{}}}],["if(this.student.rol",{"_index":1515,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.student.userid",{"_index":1514,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.subscript",{"_index":479,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{}}}],["if(this.user.cours",{"_index":1383,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.user.password",{"_index":1384,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.viewstrain",{"_index":1436,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(x",{"_index":1170,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["if(x.length",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["ignor",{"_index":1216,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["implement",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["impli",{"_index":1943,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["in.guard.servic",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["in.guard.service.t",{"_index":961,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["in.guard.service.ts:12",{"_index":965,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:28",{"_index":966,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:6",{"_index":963,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["inact",{"_index":1035,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["includ",{"_index":454,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["incorrect",{"_index":1263,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["increment",{"_index":2520,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["indic",{"_index":762,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["indiv",{"_index":600,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv'},{'nam",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["indiv.compon",{"_index":653,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["indiv.component.t",{"_index":599,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{}}}],["indiv.component.ts:114",{"_index":1466,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:132",{"_index":1468,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:148",{"_index":1471,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:168",{"_index":1488,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:195",{"_index":1475,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:211",{"_index":1461,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:227",{"_index":1463,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:246",{"_index":1459,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:264",{"_index":1458,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:279",{"_index":1472,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:30",{"_index":614,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:34",{"_index":608,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:37",{"_index":1497,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:38",{"_index":612,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:41",{"_index":1496,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:42",{"_index":610,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:43",{"_index":611,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:46",{"_index":1491,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:48",{"_index":604,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:50",{"_index":1493,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:54",{"_index":1490,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:58",{"_index":1495,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:62",{"_index":1492,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:66",{"_index":606,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:67",{"_index":1457,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:85",{"_index":1473,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:93",{"_index":605,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.style.css",{"_index":601,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.template.html",{"_index":602,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv/cours",{"_index":598,"title":{},"body":{"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["indiv/stud",{"_index":1445,"title":{},"body":{"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["individu",{"_index":616,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["inform",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["init",{"_index":524,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["initi",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["inject",{"_index":149,"title":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["inlist.length+1",{"_index":2380,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraymut",{"_index":2377,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraystrain",{"_index":2442,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["input",{"_index":399,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["input/par",{"_index":2444,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["insensit",{"_index":254,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["insert",{"_index":2319,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["instr",{"_index":154,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseEditComponent.html":{},"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["instr'",{"_index":2034,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["instrctor",{"_index":2091,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrcutor",{"_index":2090,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrs.sort(sortstud",{"_index":562,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["instructor",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Course.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["instuctor",{"_index":2094,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["integ",{"_index":2491,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["interest",{"_index":1419,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["interfac",{"_index":171,"title":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/models/phage-model.html":{}}}],["interfaces/course.interfac",{"_index":542,"title":{},"body":{"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/phage.interfac",{"_index":1145,"title":{},"body":{"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["interfaces/scenario.interfac",{"_index":932,"title":{},"body":{"components/ListComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/student.interfac",{"_index":543,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["interfaces/user.interfac",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["intermutedist",{"_index":2280,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["intern",{"_index":2031,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["intial",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{}}}],["intramutedist",{"_index":2279,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["invalid",{"_index":1734,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["isadmin",{"_index":1993,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["isadmin(req",{"_index":2054,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["isdestroy",{"_index":488,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["isdis",{"_index":1267,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isgrant",{"_index":690,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["isinstructor",{"_index":1994,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["isinstructor(req",{"_index":2056,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["isloggedin",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{}}}],["isn't",{"_index":1629,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["issu",{"_index":1704,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":2499,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["itself",{"_index":2086,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["jqueri",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1858,"title":{},"body":{"dependencies.html":{}}}],["jsdoc2md",{"_index":2055,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["json",{"_index":2028,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["json.parse(dat",{"_index":1044,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.parse(this.fridge.guess",{"_index":1427,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["json.stringify(credenti",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(this.guess",{"_index":1039,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.stringify(us",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["k",{"_index":1219,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["karma",{"_index":1920,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1642,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["key",{"_index":975,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["keymutesarraydelet",{"_index":2342,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["keymutesarraymut",{"_index":2326,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["kind",{"_index":1942,"title":{},"body":{"license.html":{}}}],["know",{"_index":2125,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["known",{"_index":749,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["lab",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["label",{"_index":856,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["labroomcompon",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["land",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["landingroomcompon",{"_index":106,"title":{"components/LandingRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["languag",{"_index":1944,"title":{},"body":{"license.html":{}}}],["larg",{"_index":807,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["largeplaqu",{"_index":1229,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["last",{"_index":246,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["lastlogin",{"_index":2503,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["lastmadenumberth",{"_index":2328,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["lastnam",{"_index":236,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["later",{"_index":2284,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["law",{"_index":1934,"title":{},"body":{"license.html":{}}}],["lawn",{"_index":800,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["lawntyp",{"_index":1220,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestring",{"_index":2400,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestrstring",{"_index":2452,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["lead",{"_index":822,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{}}}],["leak",{"_index":522,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["learn",{"_index":906,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["left",{"_index":1711,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":198,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["length",{"_index":1009,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{}}}],["licens",{"_index":1921,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1733,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["link",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/CourseIndivComponent.html":{},"components/NavComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["list",{"_index":415,"title":{},"body":{"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["list'},{'nam",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["list(req",{"_index":2170,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["list.compon",{"_index":655,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["list.component.t",{"_index":631,"title":{},"body":{"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{}}}],["list.component.ts:22",{"_index":638,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:23",{"_index":633,"title":{},"body":{"components/CourseListComponent.html":{},"components/StudentListComponent.html":{}}}],["list.component.ts:27",{"_index":1530,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:31",{"_index":1526,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:33",{"_index":636,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:44",{"_index":634,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:46",{"_index":1528,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:60",{"_index":1527,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.template.html",{"_index":632,"title":{},"body":{"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/StudentListComponent.html":{}}}],["list/cours",{"_index":630,"title":{},"body":{"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["list/list.compon",{"_index":1308,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["list/stud",{"_index":1522,"title":{},"body":{"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["listcompon",{"_index":108,"title":{"components/ListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listcours",{"_index":1995,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum",{"_index":1996,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum(req",{"_index":2067,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["liststud",{"_index":1586,"title":{},"body":{"injectables/StudentService.html":{}}}],["liststudents(adminid",{"_index":1601,"title":{},"body":{"injectables/StudentService.html":{}}}],["listus",{"_index":1989,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["listusers(req",{"_index":2023,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["liter",{"_index":1388,"title":{},"body":{"interfaces/StudentFridge.html":{}}}],["lname",{"_index":1110,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["load",{"_index":2108,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["loadash",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["locat",{"_index":739,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LocationComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["location'},{'nam",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["location.compon",{"_index":954,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.rout",{"_index":950,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.style.css",{"_index":941,"title":{},"body":{"components/LocationComponent.html":{}}}],["location.template.html",{"_index":942,"title":{},"body":{"components/LocationComponent.html":{}}}],["locationcompon",{"_index":110,"title":{"components/LocationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locationmodul",{"_index":943,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationrout",{"_index":949,"title":{},"body":{"modules/LocationModule.html":{}}}],["locationstrategi",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["loggedinguard",{"_index":279,"title":{"injectables/LoggedInGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggedInGuard.html":{},"coverage.html":{},"overview.html":{}}}],["logic",{"_index":888,"title":{"additional-documentation/genetics/phage-logic.html":{}},"body":{"components/HomeComponent.html":{},"changelog.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["login",{"_index":2211,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["longer",{"_index":754,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/models/user-model.html":{}}}],["look",{"_index":1467,"title":{},"body":{"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["lot",{"_index":2123,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["lowercas",{"_index":250,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2329,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mail",{"_index":1662,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["main",{"_index":190,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/UserProfileComponent.html":{}}}],["mainli",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["maintain",{"_index":1680,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["make",{"_index":249,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["makedeletionphag",{"_index":2243,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makedeletionphage(phag",{"_index":2313,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphag",{"_index":2242,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphage(phag",{"_index":2311,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makegen",{"_index":2239,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makegene(gcprob",{"_index":2285,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makephag",{"_index":2240,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makephage(phagedetail",{"_index":2300,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphag",{"_index":2241,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphage(phag",{"_index":2307,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mani",{"_index":2372,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["manner",{"_index":2236,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["mari",{"_index":1094,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["match",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["math.abs(x",{"_index":1181,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["math.ceil(scenarioglobals.genelength/this.steps",{"_index":1025,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["maximum",{"_index":1221,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"miscellaneous/variables.html":{}}}],["mb",{"_index":1149,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["mcbreadcrumbsconfig",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["mcbreadcrumbsmodul",{"_index":1327,"title":{},"body":{"modules/SharedModule.html":{}}}],["mcbreadcrumbsmodule.forroot",{"_index":1341,"title":{},"body":{"modules/SharedModule.html":{}}}],["md",{"_index":1050,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["mechan",{"_index":793,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["memcach",{"_index":1869,"title":{},"body":{"dependencies.html":{}}}],["memori",{"_index":521,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["messag",{"_index":400,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["messagestringvalu",{"_index":2528,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["met",{"_index":1630,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["middl",{"_index":2479,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["middlewar",{"_index":2049,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["minim",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":2276,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstop",{"_index":2275,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstopsnumberminimum",{"_index":2291,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["minu",{"_index":2470,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["minumum",{"_index":2495,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["miscellan",{"_index":1955,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1099,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["mlength",{"_index":1137,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["modal",{"_index":581,"title":{},"body":{"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["model",{"_index":113,"title":{"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["modelref",{"_index":576,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.componentinstance.messag",{"_index":582,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.result.then((result",{"_index":583,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelroomcompon",{"_index":112,"title":{"components/ModelRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modul",{"_index":195,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":169,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/StudentResolver.html":{}}}],["mongo",{"_index":1853,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":741,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{}}}],["mongoos",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":767,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["morgan",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["multipl",{"_index":1131,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["mut",{"_index":2282,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutagen",{"_index":2251,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["mutagenize(inlist",{"_index":2373,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["mutant",{"_index":1737,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["mutantlist",{"_index":2354,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymut",{"_index":2349,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymutat",{"_index":2357,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutants/recombin",{"_index":2440,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutat",{"_index":748,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutation(",{"_index":2323,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutationfreq",{"_index":2268,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutationlist",{"_index":776,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["mutations.pip",{"_index":1547,"title":{},"body":{"modules/StudentModule.html":{}}}],["mutations.pipe.t",{"_index":1173,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"coverage.html":{}}}],["mutations.pipe.ts:18",{"_index":1180,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["mutations/delet",{"_index":2500,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["mutatnt",{"_index":1228,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["mutfreq",{"_index":2420,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutfreqnumbermut",{"_index":2426,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n",{"_index":1658,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["n1.strainnum",{"_index":1204,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n1numbernumb",{"_index":2423,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2",{"_index":2418,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2)=>{return",{"_index":1203,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2.strainnum",{"_index":1205,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2numbernumb",{"_index":2424,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["na",{"_index":1375,"title":{},"body":{"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{}}}],["na.concat(oth",{"_index":1379,"title":{},"body":{"components/SignupComponent.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["name.pip",{"_index":1334,"title":{},"body":{"modules/SharedModule.html":{}}}],["name.pipe.t",{"_index":1115,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["name.pipe.ts:20",{"_index":1119,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["names.pip",{"_index":1336,"title":{},"body":{"modules/SharedModule.html":{}}}],["names.pipe.t",{"_index":1084,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["names.pipe.ts:20",{"_index":1102,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["nav",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["nav'},{'nam",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["nav.style.css",{"_index":1060,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.template.html",{"_index":1061,"title":{},"body":{"components/NavComponent.html":{}}}],["nav/nav.compon",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["navcompon",{"_index":114,"title":{"components/NavComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LocationComponent.html":{},"components/NavComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["nblock",{"_index":1024,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["necessari",{"_index":449,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["necessarili",{"_index":2037,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["need",{"_index":170,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["neg",{"_index":761,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{}}}],["new",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["newli",{"_index":804,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["newpassword",{"_index":1262,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["newpasswordstringth",{"_index":2518,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["newrol",{"_index":1448,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["next",{"_index":2048,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next('fail",{"_index":2107,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["next('invalid",{"_index":2228,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next('phag",{"_index":2149,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["next('us",{"_index":2230,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()abl",{"_index":2231,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()go",{"_index":2053,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["next()if",{"_index":2061,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next()on",{"_index":2213,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next(error)if",{"_index":2105,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next(error)on",{"_index":2183,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["nextfunctionnext",{"_index":2058,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["nextfunctionth",{"_index":2050,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["nextobjectnext",{"_index":2226,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["nfridgeshelf",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nfridgespot",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":408,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":1324,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":402,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["ngbmodal",{"_index":407,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["ngbmodul",{"_index":1326,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngbmodule.forroot",{"_index":1340,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngmodul",{"_index":215,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["ngondestori",{"_index":979,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["ngondestroy",{"_index":428,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngx",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nme",{"_index":1253,"title":{},"body":{"injectables/ProfileService.html":{}}}],["nnumbertot",{"_index":2414,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nodemail",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1256,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["none",{"_index":1162,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["normal",{"_index":1092,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["notauthcompon",{"_index":116,"title":{"components/NotAuthComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["note",{"_index":1186,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["noth",{"_index":517,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["nr",{"_index":2419,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nrnumberratio",{"_index":2425,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nshift",{"_index":2317,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nshiftsnumbernumb",{"_index":2320,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleic",{"_index":2294,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleotid",{"_index":2292,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["null",{"_index":727,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["nullsecond",{"_index":2399,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["num",{"_index":1206,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"changelog.html":{}}}],["number",{"_index":238,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["number.parseint(k",{"_index":1031,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["numbers/typ",{"_index":2430,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numdesir",{"_index":2374,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numdesirednumbernumb",{"_index":2378,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numer",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numgeno",{"_index":2433,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinput",{"_index":2439,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinputnumbernumb",{"_index":2443,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nummber",{"_index":992,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["nummut",{"_index":2435,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numoffspr",{"_index":2431,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numpar",{"_index":756,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["numphag",{"_index":737,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["numphage:1000000",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numrecomb",{"_index":2436,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nums[0",{"_index":1210,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["nums[1",{"_index":1211,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["numtodo",{"_index":2365,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numtodonumberhow",{"_index":2371,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxov",{"_index":2364,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxovernumbernumb",{"_index":2370,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["nxm",{"_index":2168,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["oauth",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":742,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["object.keys(dels).map((k",{"_index":1030,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["observ",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["obtain",{"_index":1930,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2299,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["odd",{"_index":2476,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["offspr",{"_index":2367,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["okclean",{"_index":2039,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["okif",{"_index":2033,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okinform",{"_index":2079,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["oklist",{"_index":2066,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oknewli",{"_index":2073,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["okon",{"_index":2189,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okreturn",{"_index":2135,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["oksend",{"_index":2219,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["oksuccessfulli",{"_index":2165,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okth",{"_index":2076,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oktrim",{"_index":2186,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okupd",{"_index":2044,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["okuser'",{"_index":2120,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["old",{"_index":1261,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["oldpassword",{"_index":2516,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["oldpasswordstringus",{"_index":2517,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["on",{"_index":745,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"pipes/PeopleListNamesPipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["onc",{"_index":1260,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["oncancel",{"_index":497,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["ondestroy",{"_index":421,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["oninit",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["open",{"_index":515,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["opposit",{"_index":2472,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["option",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["order",{"_index":1529,"title":{},"body":{"components/StudentListComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["origin",{"_index":2407,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["otherphag",{"_index":2283,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["otherwis",{"_index":691,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["ouput",{"_index":1098,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["out",{"_index":209,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["outlin",{"_index":995,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["outline&#39",{"_index":1484,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["output",{"_index":1093,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"changelog.html":{}}}],["over",{"_index":1223,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["overflow",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["overload",{"_index":1721,"title":{},"body":{"changelog.html":{}}}],["overrid",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["overview",{"_index":1949,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["own",{"_index":2459,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["owner",{"_index":853,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["owner/scenario",{"_index":2127,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["p",{"_index":994,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["packag",{"_index":1828,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":71,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/models/scenario-model.html":{}}}],["pagenotfoundcompon",{"_index":118,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pair",{"_index":770,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["param",{"_index":177,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["parameet",{"_index":664,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["paramet",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["paramobserv",{"_index":489,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["params['coursenum",{"_index":554,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["params['scenid",{"_index":713,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["params['studentid",{"_index":1421,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["parent",{"_index":753,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["parent(",{"_index":2484,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["parents.length",{"_index":1185,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.pip",{"_index":1338,"title":{},"body":{"modules/SharedModule.html":{}}}],["parents.pipe.t",{"_index":1183,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["parents.pipe.ts:26",{"_index":1200,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.sort((n1",{"_index":1202,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parentslist",{"_index":1189,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parser",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2521,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["particular",{"_index":2083,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["pass",{"_index":2106,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["passport",{"_index":1896,"title":{},"body":{"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["password",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["password'},{'nam",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["password.compon",{"_index":334,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{}}}],["password.component.t",{"_index":831,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:110",{"_index":1623,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:12",{"_index":840,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:13",{"_index":841,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:133",{"_index":1632,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:14",{"_index":839,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":836,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":1275,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1270,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":838,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1649,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:29",{"_index":1638,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1273,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":1641,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:34",{"_index":837,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":1639,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:38",{"_index":1274,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:41",{"_index":1619,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:56",{"_index":1271,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:68",{"_index":1634,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:70",{"_index":1272,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:85",{"_index":1635,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.template.html",{"_index":833,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password/forget",{"_index":333,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":335,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password/upd",{"_index":1242,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["passwordmessag",{"_index":1617,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["path",{"_index":153,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["peoplelist",{"_index":1089,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnam",{"_index":628,"title":{},"body":{"components/CourseIndivComponent.html":{},"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnames:isrevers",{"_index":1090,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnamespip",{"_index":1082,"title":{"pipes/PeopleListNamesPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["per",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["percent",{"_index":2273,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["perform",{"_index":781,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{}}}],["performplex",{"_index":787,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["performplexer(data",{"_index":809,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["permiss",{"_index":1946,"title":{},"body":{"license.html":{}}}],["person",{"_index":1106,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["person.firstnam",{"_index":1109,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["person.lastnam",{"_index":1111,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["personlist",{"_index":1103,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["personnam",{"_index":596,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"pipes/PersonNamePipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["personname:isrevers",{"_index":1116,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["personname:tru",{"_index":597,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["personnamepip",{"_index":1113,"title":{"pipes/PersonNamePipe.html":{}},"body":{"pipes/PersonNamePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phage",{"_index":121,"title":{"interfaces/Phage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["phage'",{"_index":1392,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["phage'},{'nam",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["phage(1|2",{"_index":2164,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["phage+1",{"_index":1056,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["phage.com",{"_index":1570,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.compon",{"_index":1544,"title":{},"body":{"modules/StudentModule.html":{}}}],["phage.component.t",{"_index":1550,"title":{},"body":{"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["phage.component.ts:19",{"_index":1554,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.component.ts:35",{"_index":1555,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.delet",{"_index":1572,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.guess",{"_index":1573,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.interfac",{"_index":854,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{}}}],["phage.mutationlist",{"_index":1571,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.par",{"_index":1150,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phage.strainnum",{"_index":1146,"title":{},"body":{"components/PhageDialogComponent.html":{},"components/StudentPhageComponent.html":{}}}],["phage.strainnum+1).tostr",{"_index":1208,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phage.template.html",{"_index":1552,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage1",{"_index":1214,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage1objectfirst",{"_index":2397,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2",{"_index":1215,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2object",{"_index":2398,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phagebyid",{"_index":2010,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["phagebyid(req",{"_index":2147,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagedelet",{"_index":1127,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagedeletionspip",{"_index":1120,"title":{"pipes/PhageDeletionsPipe.html":{}},"body":{"pipes/PhageDeletionsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagedetailsobjectphag",{"_index":2302,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagedialogcompon",{"_index":120,"title":{"components/PhageDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phagegeno1objectgenotyp",{"_index":2368,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2",{"_index":2363,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2objectgenotyp",{"_index":2369,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phageguess",{"_index":1159,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phageguessespip",{"_index":1152,"title":{"pipes/PhageGuessesPipe.html":{}},"body":{"pipes/PhageGuessesPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageid",{"_index":2145,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagemut",{"_index":1174,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagemutationspip",{"_index":1172,"title":{"pipes/PhageMutationsPipe.html":{}},"body":{"pipes/PhageMutationsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageobjectconfigur",{"_index":2314,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phageobjectphag",{"_index":2308,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagepar",{"_index":1198,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phageparents:numpar",{"_index":1190,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phageparents:phage.numpar",{"_index":1151,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phageparentspip",{"_index":1182,"title":{"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PhageParentsPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagetyp",{"_index":750,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["phagetypestringrefer",{"_index":2305,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phenotyp",{"_index":1225,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["pipe",{"_index":1081,"title":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({nam",{"_index":1105,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["pipes/peopl",{"_index":1335,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/person",{"_index":1333,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/phag",{"_index":1337,"title":{},"body":{"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["pipetransform",{"_index":1104,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["plaqu",{"_index":808,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plate",{"_index":736,"title":{"additional-documentation/genetics/plate-experiment.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["platecapac",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plateinput",{"_index":795,"title":{"interfaces/PlateInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plateresult",{"_index":823,"title":{"interfaces/PlateResults.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["play",{"_index":2344,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["plexer",{"_index":125,"title":{"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plexercapac",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plexerinput",{"_index":810,"title":{"interfaces/PlexerInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plexerroomcompon",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plu",{"_index":2468,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["plus/minu",{"_index":2467,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["pnumberrecombin",{"_index":2413,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["po",{"_index":984,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["point",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"components/LandingRoomComponent.html":{}}}],["popper.j",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["posguess",{"_index":1033,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["posit",{"_index":699,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["positive/neg",{"_index":2466,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["possibl",{"_index":513,"title":{},"body":{"components/CourseEditComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["possibleinstr",{"_index":490,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["post",{"_index":2042,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1611,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1615,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/pl",{"_index":825,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["post(`${this._baseurl}/plex",{"_index":829,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["potenti",{"_index":456,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["present",{"_index":1124,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["preset",{"_index":2333,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["press",{"_index":527,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["prevent",{"_index":520,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["previou",{"_index":2152,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["primari",{"_index":1048,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["privat",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["probabl",{"_index":2287,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["problem",{"_index":1678,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["proce",{"_index":2057,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["produc",{"_index":1556,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["profil",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["profile.compon",{"_index":1241,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.component.t",{"_index":1667,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:24",{"_index":1682,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1683,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1679,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1673,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1675,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:77",{"_index":1677,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":1674,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.rout",{"_index":1238,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.servic",{"_index":1239,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.template.html",{"_index":1669,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/profile.modul",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["profile/us",{"_index":1240,"title":{},"body":{"modules/ProfileModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profilemodul",{"_index":276,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerout",{"_index":1237,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profileservic",{"_index":1235,"title":{"injectables/ProfileService.html":{}},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["prominantli",{"_index":1640,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["properti",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["protect",{"_index":680,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["provid",{"_index":201,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["pswd",{"_index":832,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pswd'},{'name",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["public",{"_index":340,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"injectables/CourseResolver.html":{},"components/PhageDialogComponent.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["public/.../read",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../scenario.globals.t",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.interface.t",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.roles.t",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/app/admin/admin",{"_index":184,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.t",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.ts:23",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:24",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:33",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.guard.service.t",{"_index":151,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["public/app/admin/admin.guard.service.ts:10",{"_index":160,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.guard.service.ts:23",{"_index":165,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.module.t",{"_index":210,"title":{},"body":{"modules/AdminModule.html":{}}}],["public/app/admin/course/cours",{"_index":417,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["public/app/admin/course/course.module.t",{"_index":649,"title":{},"body":{"modules/CourseModule.html":{}}}],["public/app/admin/course/course.resolver.t",{"_index":662,"title":{},"body":{"injectables/CourseResolver.html":{},"coverage.html":{}}}],["public/app/admin/course/course.resolver.ts:13",{"_index":665,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.resolver.ts:28",{"_index":667,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.service.t",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["public/app/admin/not",{"_index":1069,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/stud",{"_index":1389,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/student.module.t",{"_index":1538,"title":{},"body":{"modules/StudentModule.html":{}}}],["public/app/admin/student/student.resolver.t",{"_index":1574,"title":{},"body":{"injectables/StudentResolver.html":{},"coverage.html":{}}}],["public/app/admin/student/student.resolver.ts:13",{"_index":1575,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.resolver.ts:28",{"_index":1576,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.roles.t",{"_index":1786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/admin/student/student.service.t",{"_index":1581,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["public/app/admin/student/student.service.ts:102",{"_index":1599,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:14",{"_index":1588,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:29",{"_index":1602,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:43",{"_index":1596,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:58",{"_index":1605,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:73",{"_index":1590,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:87",{"_index":1594,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/app.component.t",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["public/app/app.component.ts:11",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["public/app/app.module.t",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["public/app/authentication/authentication.module.t",{"_index":324,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["public/app/authentication/authentication.service.t",{"_index":337,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["public/app/authentication/authentication.service.ts:11",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:12",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:15",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:17",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:22",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:26",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:30",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:34",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:43",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:50",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:57",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:61",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:65",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/forget",{"_index":830,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/log",{"_index":960,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["public/app/authentication/reset",{"_index":1266,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.t",{"_index":1343,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.ts:13",{"_index":1349,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:14",{"_index":1348,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:15",{"_index":1345,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:20",{"_index":1347,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:34",{"_index":1346,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signout/signout.component.t",{"_index":1354,"title":{},"body":{"components/SignoutComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signout/signout.component.ts:15",{"_index":1355,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signout/signout.component.ts:22",{"_index":1356,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signup/signup.component.t",{"_index":1359,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signup/signup.component.ts:17",{"_index":1370,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:18",{"_index":1369,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:19",{"_index":1372,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:20",{"_index":1371,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:21",{"_index":1363,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:29",{"_index":1365,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:37",{"_index":1367,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:48",{"_index":1368,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:67",{"_index":1366,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/help/help.component.t",{"_index":857,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["public/app/help/help.component.ts:9",{"_index":861,"title":{},"body":{"components/HelpComponent.html":{}}}],["public/app/help/help.module.t",{"_index":868,"title":{},"body":{"modules/HelpModule.html":{}}}],["public/app/home/home.component.t",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["public/app/home/home.component.ts:22",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:29",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:36",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/interfaces/course.interface.t",{"_index":413,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["public/app/interfaces/experiment.interface.t",{"_index":1212,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["public/app/interfaces/fridge.interface.t",{"_index":848,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"coverage.html":{}}}],["public/app/interfaces/phage.interface.t",{"_index":735,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["public/app/interfaces/scenario.interface.t",{"_index":1293,"title":{},"body":{"interfaces/Scenario.html":{},"coverage.html":{}}}],["public/app/interfaces/student.interface.t",{"_index":228,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/interfaces/user.interface.t",{"_index":1661,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.t",{"_index":1057,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.ts:20",{"_index":1068,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:24",{"_index":1063,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:32",{"_index":1065,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:42",{"_index":1064,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/pag",{"_index":1074,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["public/app/pipes/peopl",{"_index":1083,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["public/app/pipes/person",{"_index":1114,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["public/app/pipes/phag",{"_index":1121,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["public/app/profile/profile.module.t",{"_index":1236,"title":{},"body":{"modules/ProfileModule.html":{}}}],["public/app/profile/profile.service.t",{"_index":1244,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["public/app/profile/profile.service.ts:16",{"_index":1250,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:33",{"_index":1252,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:49",{"_index":1259,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/upd",{"_index":1616,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["public/app/profile/us",{"_index":1666,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["public/app/scenario/fridge/fridge.component.t",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/fridge/phag",{"_index":1141,"title":{},"body":{"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.t",{"_index":924,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.ts:20",{"_index":931,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:24",{"_index":930,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:25",{"_index":929,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:26",{"_index":926,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:32",{"_index":928,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:40",{"_index":927,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/location/experiment.service.t",{"_index":780,"title":{},"body":{"injectables/ExperimentService.html":{},"coverage.html":{}}}],["public/app/scenario/location/experiment.service.ts:16",{"_index":789,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:35",{"_index":796,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:54",{"_index":811,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/lab",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/location/land",{"_index":895,"title":{},"body":{"components/LandingRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.component.t",{"_index":938,"title":{},"body":{"components/LocationComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.module.t",{"_index":948,"title":{},"body":{"modules/LocationModule.html":{}}}],["public/app/scenario/location/model",{"_index":971,"title":{},"body":{"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/plex",{"_index":1818,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/scenario.component.t",{"_index":1301,"title":{},"body":{"components/ScenarioComponent.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.globals.t",{"_index":1820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/scenario/scenario.module.t",{"_index":1305,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["public/app/scenario/scenario.resolver.t",{"_index":1310,"title":{},"body":{"injectables/ScenarioResolver.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.resolver.ts:14",{"_index":1312,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.resolver.ts:28",{"_index":1313,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.service.t",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["public/app/shared/confirm",{"_index":395,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"coverage.html":{}}}],["public/app/shared/read",{"_index":1824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/shared/shared.module.t",{"_index":1322,"title":{},"body":{"modules/SharedModule.html":{}}}],["pupros",{"_index":2502,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["purpos",{"_index":899,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["push",{"_index":1462,"title":{},"body":{"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["quot;reference&quot",{"_index":1557,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;student&quot",{"_index":1477,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["quot;submission&quot",{"_index":1561,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;unkown&quot",{"_index":1558,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;user&quot",{"_index":1560,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["random",{"_index":1904,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["rang",{"_index":1157,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["rare",{"_index":1665,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["rate",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":717,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/NavComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["react",{"_index":1331,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["read",{"_index":2016,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["read(req",{"_index":2175,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["readabl",{"_index":1296,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["readablestringshould",{"_index":2322,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["readerrormessag",{"_index":461,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["readerrormessage(err",{"_index":478,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["readerrormessage(err2",{"_index":564,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["readerrormessage(error",{"_index":565,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["readerrormessage(iderr",{"_index":1653,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["realstop",{"_index":2297,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["reason",{"_index":1298,"title":{},"body":{"interfaces/Scenario.html":{}}}],["recfreq",{"_index":2421,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recfreqnumberfrequ",{"_index":2428,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recomb",{"_index":2437,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recombin",{"_index":1738,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombinationfreq",{"_index":2271,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombine(phagegeno1",{"_index":2362,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["redirect",{"_index":1352,"title":{},"body":{"components/SigninComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["redirecturl",{"_index":341,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refer",{"_index":746,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["referencephag",{"_index":2281,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reflect",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["regul",{"_index":1539,"title":{},"body":{"modules/StudentModule.html":{}}}],["regular",{"_index":214,"title":{},"body":{"modules/AdminModule.html":{}}}],["rel",{"_index":2488,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["relat",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"modules/CourseModule.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["relativeto",{"_index":475,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["relev",{"_index":905,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reliv",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{}}}],["rememb",{"_index":539,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["remov",{"_index":575,"title":{},"body":{"components/CourseEditComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["render",{"_index":2128,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["repres",{"_index":818,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/StudentResolver.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["represent",{"_index":2408,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["req",{"_index":2184,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["req.curus",{"_index":2232,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["reqobjectexpress",{"_index":2025,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["request",{"_index":1621,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["requesterror",{"_index":2114,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["requestif",{"_index":2206,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["requestnumb",{"_index":2162,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["requeston",{"_index":2097,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requir",{"_index":467,"title":{},"body":{"components/CourseCreateComponent.html":{},"injectables/ScenarioResolver.html":{},"license.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["requireslogin",{"_index":2020,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requireslogin(req",{"_index":2223,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["res.accessgranted[scenid",{"_index":729,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["res.email",{"_index":1651,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["res.firstnam",{"_index":1686,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.id",{"_index":1684,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.lastnam",{"_index":1687,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["reset",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["resetpassword",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(credenti",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword(req",{"_index":2203,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(this.credenti",{"_index":1286,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcompon",{"_index":126,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpasswordemail",{"_index":2019,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordemail(req",{"_index":2195,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordexpir",{"_index":2505,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resetpasswordtoken",{"_index":2504,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resobjectexpress",{"_index":2026,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resolv",{"_index":663,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["resolve(rout",{"_index":666,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["respons",{"_index":1695,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["rest",{"_index":1729,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["result.coursenum",{"_index":474,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["result.messag",{"_index":847,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["retreiv",{"_index":2180,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["return",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["returns{observ",{"_index":1613,"title":{},"body":{"injectables/StudentService.html":{}}}],["revers",{"_index":1086,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["revok",{"_index":1600,"title":{},"body":{"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["role",{"_index":155,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["role.label",{"_index":1520,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass",{"_index":1455,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;admin&#39",{"_index":1485,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;student&#39",{"_index":1478,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass('admin",{"_index":1511,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(src",{"_index":1474,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledis",{"_index":1456,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledisabled(src",{"_index":1487,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roleerror",{"_index":2529,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["rolesenum",{"_index":2508,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["room",{"_index":758,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["room'},{'nam",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["room.compon",{"_index":955,"title":{},"body":{"modules/LocationModule.html":{}}}],["room.component.t",{"_index":897,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:112",{"_index":985,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:129",{"_index":1006,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:139",{"_index":1003,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:22",{"_index":1014,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:23",{"_index":915,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:26",{"_index":1015,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:27",{"_index":909,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:30",{"_index":1013,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:34",{"_index":1017,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:38",{"_index":1016,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:42",{"_index":1018,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:43",{"_index":1012,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:47",{"_index":913,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["room.component.ts:48",{"_index":982,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:63",{"_index":912,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:71",{"_index":1001,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:96",{"_index":1000,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.style.css",{"_index":972,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.template.html",{"_index":908,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["room/lab",{"_index":956,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["room/land",{"_index":896,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["room/model",{"_index":958,"title":{},"body":{"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room/plex",{"_index":957,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["root",{"_index":1315,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["rout",{"_index":157,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"changelog.html":{}}}],["route.params['coursenum",{"_index":673,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["route.params['scenid",{"_index":1318,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["route.params['studentid",{"_index":1579,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["router",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{}}}],["routermodul",{"_index":216,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/StudentModule.html":{}}}],["routermodule.forchild(adminrout",{"_index":226,"title":{},"body":{"modules/AdminModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":336,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["routermodule.forchild(courserout",{"_index":661,"title":{},"body":{"modules/CourseModule.html":{}}}],["routermodule.forchild(helprout",{"_index":872,"title":{},"body":{"modules/HelpModule.html":{}}}],["routermodule.forchild(locationrout",{"_index":959,"title":{},"body":{"modules/LocationModule.html":{}}}],["routermodule.forchild(profilerout",{"_index":1243,"title":{},"body":{"modules/ProfileModule.html":{}}}],["routermodule.forchild(scenariorout",{"_index":1309,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["routermodule.forchild(studentrout",{"_index":1549,"title":{},"body":{"modules/StudentModule.html":{}}}],["routermodule.forroot(approut",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesanpshot",{"_index":1316,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["routerstatesnapshot",{"_index":164,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["row",{"_index":812,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["rowphag",{"_index":826,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["rowphagearraylist",{"_index":2446,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["run",{"_index":1919,"title":{},"body":{"index.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["rxj",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/operator/concat",{"_index":1374,"title":{},"body":{"components/SignupComponent.html":{}}}],["rxjs/add/operator/filt",{"_index":1373,"title":{},"body":{"components/SignupComponent.html":{}}}],["rxjs/add/operator/takeuntil",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["rxjs/behaviorsubject",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rxjs/observ",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["rxjs/subject",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["rxjs/subscript",{"_index":459,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentIndivComponent.html":{}}}],["s",{"_index":1503,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["s.cours",{"_index":1504,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["s.course.coursenum",{"_index":1505,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["same",{"_index":772,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["save",{"_index":529,"title":{},"body":{"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedata",{"_index":980,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["savedelet",{"_index":2005,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(req",{"_index":2129,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(this.guess",{"_index":1040,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["sceanrio",{"_index":2171,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scen",{"_index":625,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scen'},{'nam",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scen.label",{"_index":629,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["scen1",{"_index":2522,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen2",{"_index":2523,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen3",{"_index":2524,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scenario",{"_index":109,"title":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["scenario'},{'nam",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scenario.compon",{"_index":657,"title":{},"body":{"modules/CourseModule.html":{},"modules/ScenarioModule.html":{}}}],["scenario.component.t",{"_index":674,"title":{},"body":{"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario.component.ts:110",{"_index":687,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:122",{"_index":697,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:144",{"_index":693,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:151",{"_index":700,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:32",{"_index":709,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:36",{"_index":705,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:40",{"_index":708,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:44",{"_index":706,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:48",{"_index":707,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:52",{"_index":704,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:56",{"_index":685,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:75",{"_index":702,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.glob",{"_index":1020,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["scenario.label",{"_index":732,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenario.purpos",{"_index":921,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.relev",{"_index":922,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.rout",{"_index":1307,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenario.scencod",{"_index":731,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.servic",{"_index":917,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["scenario.startingpoint",{"_index":923,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.style.css",{"_index":678,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.template.html",{"_index":679,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ScenarioComponent.html":{}}}],["scenario/cours",{"_index":656,"title":{},"body":{"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario/experi",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scenario/scenario.glob",{"_index":1165,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenario/scenario.modul",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.resolv",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.servic",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenariobycod",{"_index":2017,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariobycode(req",{"_index":2179,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scenariocompon",{"_index":128,"title":{"components/ScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scenariodata",{"_index":828,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["scenariodetail",{"_index":850,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["scenarioexternal:scneariocurr",{"_index":2137,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["scenarioglob",{"_index":1019,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenarioglobals.deletionguesslength",{"_index":1022,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["scenarioglobals.genelength",{"_index":1171,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenarioid",{"_index":976,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariomodul",{"_index":277,"title":{"modules/ScenarioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScenarioModule.html":{},"modules.html":{},"overview.html":{}}}],["scenarioobjectparamet",{"_index":2267,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scenarioorigin",{"_index":2464,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["scenarioresolv",{"_index":280,"title":{"injectables/ScenarioResolver.html":{}},"body":{"modules/AppModule.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"overview.html":{}}}],["scenariorout",{"_index":1306,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenarioscenariocurr",{"_index":2113,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["scenarioscenarioscenario",{"_index":2101,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenarioservic",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scencod",{"_index":712,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["scendata",{"_index":2301,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectcomput",{"_index":2309,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectconfigur",{"_index":2315,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectcurr",{"_index":2312,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectscenario",{"_index":2306,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["scenid",{"_index":721,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{}}}],["schema",{"_index":2456,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["second",{"_index":2205,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["secondari",{"_index":996,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["secondary&#39",{"_index":1483,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["section",{"_index":990,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["see",{"_index":937,"title":{},"body":{"components/ListComponent.html":{},"components/StudentFridgeComponent.html":{},"license.html":{}}}],["select",{"_index":193,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseEditComponent.html":{},"components/LocationComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["selectedadd",{"_index":491,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["selector",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["semest",{"_index":2085,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["send",{"_index":510,"title":{},"body":{"components/CourseEditComponent.html":{},"injectables/ScenarioResolver.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["sendforget",{"_index":835,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendreset",{"_index":1269,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sent",{"_index":452,"title":{},"body":{"components/CourseCreateComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["separ",{"_index":771,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{}}}],["sequenc",{"_index":1885,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["server",{"_index":453,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["server/databas",{"_index":1257,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["servic",{"_index":448,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["services/stream",{"_index":1633,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["session",{"_index":1874,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":1002,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"modules/StudentModule.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["setinstructor",{"_index":2000,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["setinstructor(req",{"_index":2092,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["setphag",{"_index":1398,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setphage(src",{"_index":1409,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setrol",{"_index":1991,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["setrole(req",{"_index":2041,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["setstudentrol",{"_index":1587,"title":{},"body":{"injectables/StudentService.html":{}}}],["setstudentrole(adminid",{"_index":1604,"title":{},"body":{"injectables/StudentService.html":{}}}],["setus",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setuser(us",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sever",{"_index":607,"title":{},"body":{"components/CourseIndivComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{}}}],["shared/confirm",{"_index":540,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["shared/read",{"_index":462,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/shared.modul",{"_index":217,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["sharedmodul",{"_index":206,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":1953,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["shelv",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":763,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["shifttypenumbershould",{"_index":2318,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["short",{"_index":1299,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["show",{"_index":898,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["shuffl",{"_index":1735,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["shuffleplaquelist",{"_index":2258,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["sign",{"_index":893,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SigninComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin'},{'nam",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signin(credenti",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signin(req",{"_index":2208,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signin(this.credenti",{"_index":1350,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.template.html",{"_index":1344,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin/signin.compon",{"_index":330,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signincompon",{"_index":130,"title":{"components/SigninComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signout",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignoutComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signout'},{'nam",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signout(req",{"_index":2217,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signout/signout.compon",{"_index":332,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signoutcompon",{"_index":132,"title":{"components/SignoutComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signup",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signup'},{'nam",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signup(req",{"_index":2214,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signup(this.us",{"_index":1386,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup(us",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signup.template.html",{"_index":1360,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":331,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signupcompon",{"_index":134,"title":{"components/SignupComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpl",{"_index":688,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["singl",{"_index":1446,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["site",{"_index":1059,"title":{},"body":{"components/NavComponent.html":{}}}],["size",{"_index":578,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["skyhook",{"_index":1329,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["skyhookdndmodul",{"_index":1328,"title":{},"body":{"modules/SharedModule.html":{}}}],["skyhookdndmodule.forroot",{"_index":1342,"title":{},"body":{"modules/SharedModule.html":{}}}],["sm",{"_index":579,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["small",{"_index":806,"title":{},"body":{"injectables/ExperimentService.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["small&#39",{"_index":1481,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["small/larg",{"_index":820,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{}}}],["smaller",{"_index":1730,"title":{},"body":{"changelog.html":{}}}],["smallplaqu",{"_index":1227,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["snapshot",{"_index":1317,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["softwar",{"_index":1937,"title":{},"body":{"license.html":{}}}],["soon",{"_index":863,"title":{},"body":{"components/HelpComponent.html":{}}}],["sort",{"_index":244,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"miscellaneous/variables.html":{}}}],["sorted.map((phage)=>{return",{"_index":1207,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["sortstud",{"_index":256,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/Student.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["special",{"_index":801,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialobjectoth",{"_index":2448,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialsobjectoth",{"_index":2401,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["specif",{"_index":852,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"license.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["specifc",{"_index":2177,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["specifi",{"_index":1282,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["spinner",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["sposnumberstart",{"_index":2388,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["spot",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["spots/length",{"_index":2334,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["src",{"_index":774,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{}}}],["ssl",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["ssubscript",{"_index":925,"title":{},"body":{"components/ListComponent.html":{}}}],["start",{"_index":764,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["start/stop",{"_index":769,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["startingpoint",{"_index":1294,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stat",{"_index":720,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["state",{"_index":163,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"interfaces/Phage.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["state.url",{"_index":178,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["statement",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":243,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["statusdescript",{"_index":2029,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["step",{"_index":1011,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["stepsiz",{"_index":977,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["stock",{"_index":2112,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridg",{"_index":2003,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridge(req",{"_index":2110,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stop",{"_index":765,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stoplist",{"_index":2348,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["stoplistarrayloc",{"_index":2350,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["store",{"_index":743,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/models/user-model.html":{}}}],["strain",{"_index":783,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Scenario.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["strain'",{"_index":1125,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["strain.guess",{"_index":1430,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strain.submit",{"_index":1440,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strainlist",{"_index":1395,"title":{},"body":{"components/StudentFridgeComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainlistarraylist",{"_index":2454,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainnum",{"_index":740,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["strainnumnumberstrain",{"_index":2304,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["strainphagephag",{"_index":2144,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stream",{"_index":1066,"title":{},"body":{"components/NavComponent.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["stringifi",{"_index":2131,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["student",{"_index":18,"title":{"interfaces/Student.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["student'",{"_index":694,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{}}}],["student.course.coursenum",{"_index":1519,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.email",{"_index":1518,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["student.interfac",{"_index":416,"title":{},"body":{"interfaces/Course.html":{}}}],["student.resolv",{"_index":1545,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.rol",{"_index":1498,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.rout",{"_index":1542,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.servic",{"_index":1420,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["student/student.servic",{"_index":225,"title":{},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{}}}],["student/us",{"_index":1591,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentfridg",{"_index":855,"title":{"interfaces/StudentFridge.html":{}},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["studentfridgecompon",{"_index":136,"title":{"components/StudentFridgeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentid",{"_index":695,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentindex",{"_index":698,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["studentindivcompon",{"_index":137,"title":{"components/StudentIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentlistcompon",{"_index":138,"title":{"components/StudentListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentmodul",{"_index":1532,"title":{"modules/StudentModule.html":{}},"body":{"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["studentnum",{"_index":1578,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["studentphag",{"_index":775,"title":{"interfaces/StudentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["studentphagecompon",{"_index":139,"title":{"components/StudentPhageComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentresolv",{"_index":1537,"title":{"injectables/StudentResolver.html":{}},"body":{"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"coverage.html":{},"overview.html":{}}}],["studentrolesarray",{"_index":1494,"title":{},"body":{"components/StudentIndivComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentrout",{"_index":1541,"title":{},"body":{"modules/StudentModule.html":{}}}],["students.sort(sortstud",{"_index":621,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["students/us",{"_index":1603,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservic",{"_index":207,"title":{"injectables/StudentService.html":{}},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["studentuserstud",{"_index":2126,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentuserth",{"_index":2038,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["studentuserus",{"_index":2095,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["styleurl",{"_index":422,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{}}}],["subject",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["submiss",{"_index":1563,"title":{},"body":{"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{}}}],["submit",{"_index":438,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["subscrib",{"_index":472,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{}}}],["subscribe((cours",{"_index":640,"title":{},"body":{"components/CourseListComponent.html":{}}}],["subscribe((dat",{"_index":1043,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["subscribe((fridg",{"_index":1423,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["subscribe((info",{"_index":557,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((instr",{"_index":560,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["subscribe((r",{"_index":588,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe((result",{"_index":846,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe((scen",{"_index":623,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((scenario",{"_index":934,"title":{},"body":{"components/ListComponent.html":{}}}],["subscribe((stat",{"_index":719,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscribe((stud",{"_index":619,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["subscribe((upd",{"_index":571,"title":{},"body":{"components/CourseEditComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe(param",{"_index":711,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscript",{"_index":426,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":512,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["successfulli",{"_index":441,"title":{},"body":{"components/CourseCreateComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["successlist",{"_index":2087,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["successmessag",{"_index":834,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":544,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/StudentService.html":{}}}],["sumit",{"_index":1559,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["support",{"_index":1752,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sure",{"_index":404,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["svg",{"_index":1947,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":1523,"title":{},"body":{"components/StudentListComponent.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["systemj",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":1565,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["tab",{"_index":940,"title":{},"body":{"components/LocationComponent.html":{}}}],["tabl",{"_index":1712,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["takeuntil(this.isdestroy",{"_index":556,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["task",{"_index":650,"title":{},"body":{"modules/CourseModule.html":{}}}],["teach",{"_index":1524,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["teacher",{"_index":2063,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["tell",{"_index":504,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":1699,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/models/course-model.html":{}}}],["textual",{"_index":1123,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["there'",{"_index":1637,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["thing",{"_index":1540,"title":{},"body":{"modules/StudentModule.html":{}}}],["think",{"_index":989,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._admin",{"_index":551,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._admin.id",{"_index":1508,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._admin.rol",{"_index":1509,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._authenticationservic",{"_index":845,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authenticationservice.canaccessadmin",{"_index":179,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._authenticationservice.getus",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{}}}],["this._authenticationservice.isloggedin",{"_index":967,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._authenticationservice.redirecturl",{"_index":181,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/SigninComponent.html":{}}}],["this._authenticationservice.setuser(result",{"_index":1351,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authservice.getus",{"_index":464,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this._authservice.setuser(nul",{"_index":1358,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._authservice.setuser(upd",{"_index":1692,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._authservice.signout",{"_index":1357,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._calldelet",{"_index":1516,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._calldeletecours",{"_index":585,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._calldeletecoursestud",{"_index":590,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._checkpassword",{"_index":1284,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this._courseservic",{"_index":469,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._courseservice.deletecourse(this._admin.id",{"_index":587,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.deletestudents(this._admin.id",{"_index":591,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourse(admin.id",{"_index":617,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{}}}],["this._courseservice.getcourse(this._admin.id",{"_index":555,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourselist",{"_index":1380,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._courseservice.getpossibleinstructors(this._admin.id",{"_index":559,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getscenariostatus(this.admin.id",{"_index":718,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._courseservice.getstudents(admin.id",{"_index":618,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["this._courseservice.listcourses(admin.id",{"_index":639,"title":{},"body":{"components/CourseListComponent.html":{}}}],["this._http",{"_index":824,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["this._modalservice.open(confirmdeletedialogcompon",{"_index":577,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._profileservice.editprofile(this.userid",{"_index":1688,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._profileservice.updatepassword(this.user.id",{"_index":1656,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._reordercourses(r",{"_index":1382,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._rout",{"_index":476,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._route.param",{"_index":710,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._route.params.subscribe(param",{"_index":553,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._route.parent.snapshot.parammap.get('scenid",{"_index":918,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["this._route.snapshot.parammap.get('token",{"_index":1280,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._router.navig",{"_index":473,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["this._router.navigate(['/admin/cours",{"_index":589,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._router.navigate(['/admin/not",{"_index":182,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._router.navigate(['/admin/stud",{"_index":730,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._router.navigate(['/profil",{"_index":1657,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._router.navigate(['authentication/signin",{"_index":969,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._router.navigate([redirect",{"_index":1353,"title":{},"body":{"components/SigninComponent.html":{}}}],["this._scenarioservic",{"_index":919,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["this._scenarioservice.getscenario(scencod",{"_index":716,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["this._scenarioservice.listscenario",{"_index":622,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._scenarioservice.setscenario(nul",{"_index":1045,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._studentservice.deletestudent(this._admin.id",{"_index":1517,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.getfridge(admin.id",{"_index":1422,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this._studentservice.getstudent(admin.id",{"_index":1580,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["this._studentservice.getstudent(this._admin.id",{"_index":1499,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this._admin.id",{"_index":1506,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this.admin.id",{"_index":724,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._studentservice.liststudents(admin.id",{"_index":1531,"title":{},"body":{"components/StudentListComponent.html":{}}}],["this._studentservice.setstudentrole(this._admin.id",{"_index":1512,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._user.asobserv",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.getvalu",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.next(us",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.admin",{"_index":463,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["this.adminus",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.canactivate(rout",{"_index":970,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this.cours",{"_index":641,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["this.coursedetail",{"_index":471,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["this.courseinfo",{"_index":558,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["this.courseinfo.coursenum",{"_index":567,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.coursenum",{"_index":714,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.cpassword",{"_index":1385,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.credenti",{"_index":1276,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.confirmpassword",{"_index":1288,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.newpassword",{"_index":1659,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.credentials.password",{"_index":1287,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.token",{"_index":1279,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.credentials['usernam",{"_index":1650,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.email",{"_index":844,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errormessag",{"_index":466,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fridg",{"_index":1414,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strain",{"_index":1428,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.filter((strain",{"_index":1438,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.sort((a,b)=>{return",{"_index":1431,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.genear",{"_index":1023,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.getus",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuser().rol",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.guess",{"_index":1027,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.guesses[strain][po",{"_index":1034,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.hasfridg",{"_index":1424,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.http.get(this._baseurl",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(this._baseurl",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["this.isdestroy",{"_index":546,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.next(tru",{"_index":593,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.unsubscrib",{"_index":594,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdis",{"_index":1283,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.key",{"_index":1029,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.newrol",{"_index":1500,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.paramobserv",{"_index":552,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.paramobserver.unsubscrib",{"_index":592,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.passwordmessag",{"_index":1654,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.phage.phagetyp",{"_index":1566,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.phagetype.touppercas",{"_index":1569,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.submit",{"_index":1568,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.possibleinstr",{"_index":561,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.possibleinstr.filter((elm",{"_index":572,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.scenario",{"_index":624,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.scenario.scencod",{"_index":722,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.scenarioid",{"_index":1042,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.selectedadd",{"_index":570,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.setphage('al",{"_index":1434,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.ssubscript",{"_index":933,"title":{},"body":{"components/ListComponent.html":{}}}],["this.ssubscription.unsubscrib",{"_index":936,"title":{},"body":{"components/ListComponent.html":{}}}],["this.steps",{"_index":1021,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.strainlist",{"_index":1437,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.stud",{"_index":620,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["this.student.accessgranted[scencod",{"_index":1502,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.rol",{"_index":1501,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.userid",{"_index":1507,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.students[studentindex].statu",{"_index":728,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.students[studentindex].userid",{"_index":723,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.subscript",{"_index":468,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.subscription.unsubscrib",{"_index":480,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.successmessag",{"_index":843,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.us",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.userid",{"_index":1041,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.userinfo",{"_index":1685,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.viewstrain",{"_index":1435,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["through",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":2336,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["ti",{"_index":248,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":411,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["tmp",{"_index":1381,"title":{},"body":{"components/SignupComponent.html":{}}}],["todo",{"_index":574,"title":{"todo.html":{}},"body":{"components/CourseEditComponent.html":{},"components/SigninComponent.html":{}}}],["togeth",{"_index":2376,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["toggl",{"_index":1007,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["toggleblock",{"_index":981,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["toggleblock(strain",{"_index":1005,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["token",{"_index":1278,"title":{},"body":{"components/ResetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["told",{"_index":2501,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["top",{"_index":1058,"title":{},"body":{"components/NavComponent.html":{},"changelog.html":{}}}],["total",{"_index":2321,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["touch",{"_index":1332,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["touchbackend",{"_index":1330,"title":{},"body":{"modules/SharedModule.html":{}}}],["toward",{"_index":2441,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["track",{"_index":1643,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["transfer",{"_index":1731,"title":{},"body":{"changelog.html":{}}}],["transform",{"_index":1100,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["transform(delet",{"_index":1135,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["transform(guess",{"_index":1163,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["transform(mut",{"_index":1179,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["transform(par",{"_index":1199,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["transform(person",{"_index":1118,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["transform(personlist",{"_index":1101,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["transport",{"_index":2198,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["tri",{"_index":457,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/NotAuthComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["trim",{"_index":2235,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["tripl",{"_index":2416,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["true",{"_index":173,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["true/fals",{"_index":1486,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["tslib",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1707,"title":{},"body":{"changelog.html":{}}}],["tube/pl",{"_index":738,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["two",{"_index":1096,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageParentsPipe.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["ui",{"_index":1187,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["unabl",{"_index":2115,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["unaccept",{"_index":2530,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["unauthorizederror",{"_index":2194,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unauthorizedif",{"_index":2224,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["undefin",{"_index":726,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageParentsPipe.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["under",{"_index":1742,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["uneven",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["uniqu",{"_index":2457,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["unknown",{"_index":747,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["unkown",{"_index":1562,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["unless",{"_index":1933,"title":{},"body":{"license.html":{}}}],["unprocess",{"_index":2201,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unreleas",{"_index":1694,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["unsubscrib",{"_index":447,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["until",{"_index":1681,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["up",{"_index":894,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updat",{"_index":498,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["updated.email",{"_index":1691,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.firstnam",{"_index":1689,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.lastnam",{"_index":1690,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatedst",{"_index":1598,"title":{},"body":{"injectables/StudentService.html":{}}}],["updatepassword",{"_index":1249,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(req",{"_index":2190,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(userid",{"_index":1258,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatepasswordcompon",{"_index":141,"title":{"components/UpdatePasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updatephag",{"_index":2008,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updatephage(req",{"_index":2142,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["updateprofil",{"_index":1671,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["url",{"_index":168,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["us",{"_index":239,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["usag",{"_index":1088,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["useddeletespot",{"_index":2338,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["useddeletespotsarraydelet",{"_index":2343,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["useddeletespotsarraylist",{"_index":2335,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["usedshiftspot",{"_index":2462,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["user",{"_index":54,"title":{"interfaces/User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user'",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user')if",{"_index":2229,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["user.interfac",{"_index":234,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{}}}],["user/scenario",{"_index":849,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["user/stud",{"_index":230,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["userbyid",{"_index":2021,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["userbyid(req",{"_index":2225,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["userid",{"_index":237,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["userinfo",{"_index":1670,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["usernam",{"_index":2212,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["userprofilecompon",{"_index":143,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users'",{"_index":2133,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["useruserus",{"_index":2237,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["usual",{"_index":901,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["v1.0.2",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":1754,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":1746,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":1744,"title":{},"body":{"changelog.html":{}}}],["v1.0.6",{"_index":1740,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":1725,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":1722,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":1700,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":797,"title":{},"body":{"injectables/ExperimentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["valu",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["valuesstring[\"admin\",\"instr\",\"student\"]accept",{"_index":2527,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["var",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["vari",{"_index":2351,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["variabl",{"_index":534,"title":{"miscellaneous/variables.html":{}},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":1624,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["version",{"_index":1926,"title":{},"body":{"license.html":{}}}],["via",{"_index":2487,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["view",{"_index":187,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/LocationComponent.html":{},"components/NotAuthComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{}}}],["viewstrain",{"_index":1396,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["virtual",{"_index":785,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["visibl",{"_index":188,"title":{},"body":{"components/AdminHomeComponent.html":{},"interfaces/Scenario.html":{},"components/StudentFridgeComponent.html":{}}}],["visual",{"_index":1077,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["vs",{"_index":2289,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["w",{"_index":1053,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["want",{"_index":405,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["warranti",{"_index":1941,"title":{},"body":{"license.html":{}}}],["way",{"_index":1727,"title":{},"body":{"changelog.html":{}}}],["webpag",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["websit",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["welcom",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{}}}],["went",{"_index":1718,"title":{},"body":{"changelog.html":{}}}],["weren't",{"_index":1717,"title":{},"body":{"changelog.html":{}}}],["wheater",{"_index":988,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["whocal",{"_index":2396,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringloc",{"_index":2450,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringlocation/room",{"_index":2403,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["whole",{"_index":2359,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["whosaysstringwho",{"_index":2355,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["width",{"_index":1008,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["windowclass",{"_index":580,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["within",{"_index":675,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["without",{"_index":1940,"title":{},"body":{"license.html":{}}}],["word",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{}}}],["work",{"_index":1647,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["write",{"_index":1936,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1264,"title":{},"body":{"injectables/ProfileService.html":{}}}],["wt",{"_index":1224,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["wtgene",{"_index":2293,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["x",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["x[0].text",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["y",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["y=0",{"_index":1167,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["z",{"_index":1169,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["zone.j",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":208,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Entrance component for admin features\nMainly, it is a card that allows navigation between course-related\ninfo and student-related info\nContent of the card is determined by router\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin\n            \n\n\n\n\n            \n                templateUrl\n                ./admin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adminUser\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the currently logged in user's information\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            adminUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adminUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Entrance component for admin features\n * Mainly, it is a card that allows navigation between course-related\n * info and student-related info\n * Content of the card is determined by router\n */\n@Component({\n  selector: 'admin',\n  templateUrl: './admin.template.html'\n})\n\nexport class AdminComponent implements OnInit {\n  /**\n   * Logged in user\n   */\n  private adminUser: User;\n  private errorMessage: string = '';\n\n  constructor(\n    private _authenticationService: AuthenticationService\n  ){}\n\n  /**\n   * When initializing the component, get the currently logged in user's information\n   */\n  ngOnInit(){\n    this.adminUser = this._authenticationService.getUser();\n  }\n\n}\n\n    \n\n    \n        \n\n  Administrator Page\n  Instructor Page\n  \n    \n      \n        \n          \n             \n            Courses\n            \n            \n            \n              \n            Students\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Administrator Page  Instructor Page                                                       Courses                                                              Students                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/admin.guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Guard the admin paths so only users with admin or instr\nrole can access the route\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.guard.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.guard.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            Determine if user can activate the route based on their role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is admin or instr\nfalse if user is only a student\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n/**\n * Guard the admin paths so only users with `admin` or `instr`\n * role can access the route\n */\n@Injectable()\nexport class AdminGuard implements CanActivateChild {\n\n  constructor(private _authenticationService: AuthenticationService, private _router: Router) {}\n\n  /**\n   * Determine if user can activate the route based on their role\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {boolean} - `true` if user is `admin` or `instr`\n   * - `false` if user is only a `student`\n   */\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    let role: boolean = this._authenticationService.canAccessAdmin();\n    if(role)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['/admin/not-auth']);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminHomeComponent.html":{"url":"components/AdminHomeComponent.html","title":"component - AdminHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin-home/admin-home.component.ts\n\n\n    \n        Description\n    \n    \n        A view component that is visible when going to the main admin page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin-home\n            \n\n\n\n\n            \n                templateUrl\n                ./admin-home.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A view component that is visible when going to the main admin page\n */\n@Component({\n  selector: 'admin-home',\n  templateUrl: './admin-home.template.html'\n})\n\nexport class AdminHomeComponent{}\n\n    \n\n    \n        \n  Select Courses or Students above.\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Select Courses or Students above.'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/admin.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for admin functions having to deal with students and courses that should not be accessed by a regular user\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminComponent\n                            \n                            \n                                AdminHomeComponent\n                            \n                            \n                                NotAuthComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AdminGuard\n                            \n                            \n                                     StudentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AdminRoutes } from './admin.routes';\nimport { AdminComponent } from './admin.component';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { NotAuthComponent } from './not-auth/not-auth.component';\n\nimport { AdminGuard } from './admin.guard.service';\n\nimport { StudentService } from './student/student.service';\n\n/**\n * Module for admin functions having to deal with students and courses that should not be accessed by a regular user\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(AdminRoutes)\n  ],\n  declarations: [\n    AdminComponent,\n    AdminHomeComponent,\n    NotAuthComponent\n  ],\n  providers: [\n    AdminGuard,\n    StudentService\n  ]\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminStudent.html":{"url":"interfaces/AdminStudent.html","title":"interface - AdminStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AdminStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information needed for admin pages about a user/student\n\n            \n\n            \n                Extends\n            \n            \n                    Student\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:     Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component;\nLinks the nav bar to the content needed based on the url\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-app\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/app.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The main application component;\n * Links the nav bar to the content needed based on the url\n */\n@Component({\n    selector: 'cricket-app',\n    template: ''\n})\nexport class AppComponent {\n    constructor() { }\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The main bootstrapped module\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                NavComponent\n                            \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthenticationService\n                            \n                            \n                                     CourseService\n                            \n                            \n                                     LoggedInGuard\n                            \n                            \n                                     ScenarioResolver\n                            \n                            \n                                     ScenarioService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AdminModule\n                            \n                            \n                                    AuthenticationModule\n                            \n                            \n                                    HelpModule\n                            \n                            \n                                    ProfileModule\n                            \n                            \n                                    ScenarioModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { McBreadcrumbsConfig } from 'ngx-breadcrumbs';\n\nimport { AppRoutes } from './app.routes';\n\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { LoggedInGuard } from './authentication/logged-in.guard.service';\nimport { ScenarioService } from './scenario/scenario.service';\nimport { CourseService } from './admin/course/course.service';\nimport { ScenarioResolver } from './scenario/scenario.resolver';\n\nimport { SharedModule } from './shared/shared.module';\nimport { AdminModule } from './admin/admin.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { HelpModule } from './help/help.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { ScenarioModule } from './scenario/scenario.module';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { HomeComponent } from './home/home.component';\n\n/**\n * The main bootstrapped module\n */\n@NgModule({\n    imports: [\n        BrowserModule,\n      SharedModule,\n        HttpClientModule,\n      HelpModule,\n      AdminModule,\n      ProfileModule,\n        AuthenticationModule,\n      ScenarioModule,\n      RouterModule.forRoot(AppRoutes)\n    ],\n    declarations: [\n        AppComponent,\n        NavComponent,\n      HomeComponent,\n      PageNotFoundComponent\n    ],\n    providers: [\n      AuthenticationService,\n      LoggedInGuard,\n      ScenarioService,\n      CourseService,\n      ScenarioResolver\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\nconstructor(breadcrumbsConfig: McBreadcrumbsConfig) {\n\n    breadcrumbsConfig.postProcess = (x) => {\n\n      // Ensure that the first breadcrumb always points to home\n\n      let y = x;\n\n      if(x.length && x[0].text !== 'Home') {\n        y = [\n          {\n            text: 'Home',\n            path: ''\n          }\n        ].concat(x);\n      }\n\n      return y;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/authentication/authentication.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ForgetPasswordComponent\n                            \n                            \n                                ResetPasswordComponent\n                            \n                            \n                                SigninComponent\n                            \n                            \n                                SignoutComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticationRoutes } from './authentication.routes';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SignoutComponent } from './signout/signout.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(AuthenticationRoutes)\n    ],\n    declarations: [\n        SigninComponent,\n        SignupComponent,\n      SignoutComponent,\n      ForgetPasswordComponent,\n      ResetPasswordComponent\n    ]\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                            \n                                    Private\n                                _user\n                            \n                            \n                                getUser$\n                            \n                            \n                                    Public\n                                redirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAccessAdmin\n                            \n                            \n                                forgetPassword\n                            \n                            \n                                getUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setUser\n                            \n                            \n                                signin\n                            \n                            \n                                signout\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAccessAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAccessAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nforgetPassword(body: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     User\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signout\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/auth/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._user.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { User } from '../interfaces/user.interface';\n\n@Injectable()\nexport class AuthenticationService {\n    private _user: BehaviorSubject = new BehaviorSubject(null);\n    getUser$ = this._user.asObservable();\n\n    //private _user2: User;\n    private _baseUrl = '/api/auth/'\n\n    public redirectUrl: string = '/';\n\n    constructor(private http: HttpClient) {\n    }\n\n  setUser(user: User){\n    this._user.next(user);\n  }\n\n  getUser(): User{\n    return this._user.getValue();\n  }\n\n  isLoggedIn(): boolean{\n    return (!!this.getUser());\n  }\n\n  canAccessAdmin(): boolean{\n    if(this.getUser()){\n      return this.getUser().role > 0\n    }\n    else{\n      return false;\n    }\n  }\n\n  signin(credentials: any): Observable {\n      let body = JSON.stringify(credentials);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signin', body, { headers: headers });\n  }\n\n  signup(user: any): Observable {\n      let body = JSON.stringify(user);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signup', body, { headers: headers });\n  }\n\n  signout(): Observable{\n    return this.http.get(this._baseUrl + 'signout');\n  }\n\n  forgetPassword(body: any): Observable{\n    return this.http.post(this._baseUrl + 'forget-password', body);\n  }\n\n  resetPassword(credentials: any): Observable{\n    return this.http.post(this._baseUrl + 'reset-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDeleteDialogComponent.html":{"url":"components/ConfirmDeleteDialogComponent.html","title":"component - ConfirmDeleteDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDeleteDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/shared/confirm-delete-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-delete-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-delete-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/shared/confirm-delete-dialog.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Are you sure you want to delete?'\n                        \n                    \n                \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'confirm-delete-dialog',\n  templateUrl: './confirm-delete-dialog.template.html'\n})\n\nexport class ConfirmDeleteDialogComponent{\n\n  @Input() message: string = 'Are you sure you want to delete?'\n\n  constructor(public activeModal: NgbActiveModal){\n\n  }\n}\n\n    \n\n    \n        \n  \n      &times;\n    \n\n\n\n  \n    {{ message }}\n  \n\n\n\n  \n    Cancel\n  \n  \n    Confirm\n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        ×          {{ message }}        Cancel        Confirm  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDeleteDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/course.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information about a course\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courseNum\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        instructors\n                                \n                                \n                                            Optional\n                                        students\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseNum\n                                    \n                                \n                                \n                                    \n                                        courseNum:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the course\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructors\n                                    \n                                \n                                \n                                    \n                                        instructors:     _User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Instructors of the course, if any\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                    \n                                \n                                \n                                    \n                                        students:     Student[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Student[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of students in the course, if any\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Student } from './student.interface';\nimport { _User } from './user.interface';\n\n/**\n * Information about a course\n */\nexport interface Course {\n  /**\n   * Course number\n   */\n  courseNum: string;\n  /**\n   * Description of the course\n   */\n  description: string;\n  /**\n   * List of students in the course, if any\n   */\n  students?: Student[];\n  /**\n   * Instructors of the course, if any\n   */\n  instructors?: _User[]\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseCreateComponent.html":{"url":"components/CourseCreateComponent.html","title":"component - CourseCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-create/course-create.component.ts\n\n\n    \n        Description\n    \n    \n        Component to create a new course\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-create\n            \n\n            \n                styleUrls\n                course-create.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-create.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseDetails\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _router: Router, _route: ActivatedRoute, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-create/course-create.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Check that a course number has been entered then\nsubmit course details to backend\nIf course successfully created, go back to list of courses\nIf error, display error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            On component destory, unsubscribe from services if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the currently logged\nin user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:34\n                            \n                        \n\n                \n                    \n                        Logged in admin user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseDetails:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:30\n                            \n                        \n\n                \n                    \n                        \nCourse details to be sent to the backend server\nIncludes courseNum and description\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:24\n                            \n                        \n\n                \n                    \n                        Potential error message from the backend server when trying to\ncreate the course\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { User } from '../../../interfaces';\nimport { readErrorMessage } from '../../../shared/read-error'\n\n/**\n * Component to create a new course\n */\n@Component({\n  selector: 'course-create',\n  templateUrl: './course-create.template.html',\n  styleUrls: ['./course-create.style.css']\n})\n\nexport class CourseCreateComponent implements OnInit, OnDestroy {\n  /**\n   * Potential error message from the backend server when trying to\n   * create the course\n   */\n  private errorMessage: string = '';\n  private subscription: Subscription;\n  /**\n   * - Course details to be sent to the backend server\n   * - Includes `courseNum` and `description`\n   */\n  private courseDetails: any = {};\n  /**\n   * Logged in admin user\n   */\n  private admin: User;\n\n  constructor(\n    private _courseService: CourseService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n     private _authService: AuthenticationService\n  ){}\n\n  /**\n   * When initializing the component, get the currently logged\n   * in user\n   */\n  ngOnInit(){\n    this.admin = this._authService.getUser();\n  }\n\n  /**\n   * Check that a course number has been entered then\n   * submit course details to backend\n   *\n   * If course successfully created, go back to list of courses\n   * If error, display error message\n   */\n  createCourse(){\n    if(this.courseDetails.courseNum===''){\n      this.errorMessage = 'Course number is required'\n    } else {\n      this.subscription = this._courseService\n      .createCourse(this.admin.id, this.courseDetails)\n    .subscribe( (result)=>{\n      this._router.navigate(['../', result.courseNum], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n    }\n  }\n\n  /**\n   * On component destory, unsubscribe from services if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Create Course\n  \n  \n    Course Number\n  \n  \n\n  \n    Course Description\n  \n  \n\n  \n    Submit\n  \n  \n    {{errorMessage}}\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create Course        Course Number          Course Description          Submit        {{errorMessage}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseEditComponent.html":{"url":"components/CourseEditComponent.html","title":"component - CourseEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-edit/course-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-edit\n            \n\n            \n                styleUrls\n                course-edit.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-edit.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                possibleInstr\n                            \n                            \n                                selectedAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _callDeleteCourse\n                            \n                            \n                                _callDeleteCourseStudents\n                            \n                            \n                                addInstructor\n                            \n                            \n                                deleteCourse\n                            \n                            \n                                deleteCourseStudents\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-edit/course-edit.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Helper method which uses service to tell server to delete the course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Helper method with tells service to delete all of the\nstudents in this course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addInstructor\n                            \n                            \n                        \n                    \n                \n                \n                    \naddInstructor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            \nWhen add instructor button is clicked, send the selected\ninstructor (by userId) to the backend to be added as an instructor\nIf successful, update list of possible instructors\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            \nWhen clicking delete course button, open a dialog\nto confirm deletion\nIf confirmed, call helper method\nIf cancel, do nothing\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:178\n                            \n                        \n\n\n                \n                    \n                            \nWhen delete students button is click,\nopen a dialog to confirm deletion\nIf confirm, call helper method\nIf cancel, do nothing\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:209\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from services to prevent a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            On init\n\nget the logged in user\nUse the url param to get course number\nGet course details (using coureNum)\nGet possible instructors (using courseNum)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            When the cancel button is pressed, navigate back to course view page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            When submit button is clicked, submit the updates to be\nsaved in the backend\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:45\n                            \n                        \n\n                \n                    \n                        The logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:33\n                            \n                        \n\n                \n                    \n                        Course being edited\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:54\n                            \n                        \n\n                \n                    \n                        Potential error messages from the backend server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:50\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            possibleInstr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        possibleInstr:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:37\n                            \n                        \n\n                \n                    \n                        List of possible instructors who could be added\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAdd:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:41\n                            \n                        \n\n                \n                    \n                        Variable used to remember instr selected when adding\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { User } from '../../../interfaces/user.interface';\nimport { Student, AdminStudent, sortStudents } from '../../../interfaces/student.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n@Component({\n  selector: 'course-edit',\n  templateUrl: './course-edit.template.html',\n  styleUrls: ['./course-edit.style.css']\n})\n\n/**\n * Component for editting course details such as\n * adding/removing instructors, updating course description\n */\nexport class CourseEditComponent implements OnInit, OnDestroy{\n\n  /**\n   * Course being edited\n   */\n  courseInfo: Course;\n  /**\n   * List of possible instructors who could be added\n   */\n  private possibleInstr: AdminStudent[];\n  /**\n   * Variable used to remember instr selected when adding\n   */\n  selectedAdd: number;\n  /**\n   * The logged in user\n   */\n  private _admin: User;\n  private paramObserver: any;\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential error messages from the backend server\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _courseService: CourseService,\n    private _authService: AuthenticationService,\n    private _modalService: NgbModal){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * On init\n   * 1. get the logged in user\n   * 2. Use the url param to get course number\n   * 3. Get course details (using coureNum)\n   * 4. Get possible instructors (using courseNum)\n   */\n  ngOnInit(){\n    this._admin = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n\n            this._courseService.getCourse(this._admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n                this.courseInfo = info;\n                this._courseService.getPossibleInstructors(this._admin.id, course)\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((instrs)=>{\n                    this.possibleInstr = instrs.sort(sortStudents);\n                }, (err2)=>{\n                  this.errorMessage = readErrorMessage(err2);\n                  this.possibleInstr = [];\n                });\n              },(error) => {\n                this.errorMessage = readErrorMessage(error);\n              });\n        });\n  }\n\n  /**\n   * When the cancel button is pressed, navigate back to course view page\n   */\n  onCancel(){\n    this._router.navigate(['../'], {relativeTo: this._route});\n  }\n\n  /**\n   * When submit button is clicked, submit the updates to be\n   * saved in the backend\n   */\n  update(){\n    this._courseService\n      .editCourse(this._admin.id, this.courseInfo.courseNum, this.courseInfo)\n    .takeUntil(this.isDestroyed$)\n    .subscribe( (result)=>{\n      // success\n      this._router.navigate(['../'], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * - When add instructor button is clicked, send the selected\n   * instructor (by userId) to the backend to be added as an instructor\n   * - If successful, update list of possible instructors\n   */\n  addInstructor(){\n    if(this.selectedAdd){\n    this._courseService\n      .addInstructor(this._admin.id, this.courseInfo.courseNum, this.selectedAdd)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.courseInfo = updated;\n      this.possibleInstr = this.possibleInstr.filter((elm)=>{\n        return elm.userId != this.selectedAdd\n      });\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n    }\n  }\n  // TODO: remove instructor\n\n  /**\n   * - When clicking delete course button, open a dialog\n   * to confirm deletion\n   * - If confirmed, call helper method\n   * - If cancel, do nothing\n   */\n  deleteCourse(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm', windowClass: 'delete-modal'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourse()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method which uses service to tell server to delete the course\n   */\n  _callDeleteCourse(){\n    this._courseService.deleteCourse(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * - When delete students button is click,\n   * open a dialog to confirm deletion\n   * - If confirm, call helper method\n   * - If cancel, do nothing\n   */\n  deleteCourseStudents(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete all students in course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourseStudents()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method with tells service to delete all of the\n   * students in this course\n   */\n  _callDeleteCourseStudents(){\n    this._courseService.deleteStudents(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses/', this.courseInfo.courseNum]);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * Unsubscribe from services to prevent a memory leak\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    {{ courseInfo.courseNum }}\n\n    \n      \n        Instructors\n      \n      \n        {{ instr | personName }}\n      \n    \n\n    \n      \n        Add Instructor\n      \n      \n        \n        Instructor to add\n        {{instr | personName:true }}\n      \n        \n          Add\n        \n      \n    \n    \n      Description\n    \n    \n    \n      \n        Submit\n        Cancel\n      \n    \n    \n      Delete course\n      Delete students in course\n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}        {{ courseInfo.courseNum }}                  Instructors                    {{ instr | personName }}                            Add Instructor                            Instructor to add        {{instr | personName:true }}                        Add                            Description                          Submit        Cancel                    Delete course      Delete students in course        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseIndivComponent.html":{"url":"components/CourseIndivComponent.html","title":"component - CourseIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-indiv/course-indiv.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-indiv\n            \n\n            \n                styleUrls\n                course-indiv.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from subscriptions to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Initialize all content on the page using several services\n\nGet the logged in user\nGet the course information (description, instructors)\nGet the list of students in the course\nGet the list of scenarios\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:34\n                            \n                        \n\n                \n                    \n                        Course info including courseNum, description, instructors\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:48\n                            \n                        \n\n                \n                    \n                        Potential error message that could arise\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:42\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:38\n                            \n                        \n\n                \n                    \n                        list of available scenarios (used for linking)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:30\n                            \n                        \n\n                \n                    \n                        List of students enrolled in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { Course, Student, sortStudents, Scenario, User } from '../../../interfaces';\n\n@Component({\n  selector: 'course-indiv',\n  templateUrl: './course-indiv.template.html',\n  styleUrls: ['./course-indiv.style.css']\n})\n\n\n/**\n * Component to view an individual course\n * Includes information such as course number, description, instructors, and students\n */\nexport class CourseIndivComponent implements OnInit, OnDestroy{\n\n  /**\n   * List of students enrolled in the course\n   */\n  private students: Student[] = [];\n  /**\n   * Course info including `courseNum`, `description`, `instructors`\n   */\n  courseInfo: Course;\n  /**\n   * list of available scenarios (used for linking)\n   */\n  private scenarios: Scenario[];\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  private paramObserver: any;\n\n  /**\n   * Potential error message that could arise\n   */\n  private errorMessage: string = '';\n\n  constructor(\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _courseService: CourseService,\n    private _authService: AuthenticationService,\n    private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize all content on the page using several services\n   * 1. Get the logged in user\n   * 2. Get the course information (description, instructors)\n   * 3. Get the list of students in the course\n   * 4. Get the list of scenarios\n   */\n  ngOnInit(){\n    let admin: User = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n            this._courseService.getCourse(admin.id, course)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n              this.courseInfo = info;\n              this._courseService.getStudents(admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((students)=>{\n                this.students = students.sort(sortStudents);\n                this._scenarioService.listScenarios()\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((scens)=>{\n                    this.scenarios = scens;\n                });\n              });\n            },(error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Unsubscribe from subscriptions to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          {{ courseInfo.courseNum }}\n        \n      \n      Edit\n    \n\n    \n      \n          Description\n        \n        {{ courseInfo.description }}\n     \n    \n      \n          Instructors\n        \n        {{ courseInfo.instructors | peopleListNames }}\n     \n  \n  \n  \n      View Scenario Status \n    \n      \n        By Student\n        \n          {{ student | personName:true }}\n        \n        \n      \n      \n      \n        By Scenario\n        \n          {{ scen.label }}\n        \n      \n      \n    \n    \n     \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                {{ courseInfo.courseNum }}                    Edit                        Description                {{ courseInfo.description }}                         Instructors                {{ courseInfo.instructors | peopleListNames }}                 View Scenario Status                   By Student                  {{ student | personName:true }}                                          By Scenario                  {{ scen.label }}                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseListComponent.html":{"url":"components/CourseListComponent.html","title":"component - CourseListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-list/course-list.component.ts\n\n\n    \n        Description\n    \n    \n        \nComponent which lists available courses based on logged-in user role\nIf admin, lists all available courses\nIf instr, list courses which instructor of\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-list\n            \n\n\n\n\n            \n                templateUrl\n                ./course-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-list/course-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from services if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Initialize component by getting list of courses\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:22\n                            \n                        \n\n                \n                    \n                        List of courses\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\n\nimport { Course, User } from '../../../interfaces';\n\n/**\n * - Component which lists available courses based on logged-in user role\n * - If admin, lists all available courses\n * - If instr, list courses which instructor of\n */\n@Component({\n    selector: 'course-list',\n    templateUrl: './course-list.template.html'\n})\nexport class CourseListComponent implements OnInit, OnDestroy{\n  /**\n   * List of courses\n   */\n    private courses: Course[];\n  private subscription: Subscription;\n\n    constructor(\n      private _courseService: CourseService,\n      private _authService: AuthenticationService\n    ) {}\n\n    /**\n     * Initialize component by getting list of courses\n     */\n    ngOnInit() {\n      let admin: User = this._authService.getUser();\n      this.subscription = this._courseService.listCourses(admin.id)\n        .subscribe((courses) => {\n        this.courses = courses\n      });\n    }\n\n  /**\n   * On component destruction, unsubscribe from services if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \nCourses\n\n  Create new course\n  \n      {{course.courseNum}}\n   \n \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Courses  Create new course        {{course.courseNum}}    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CourseModule.html":{"url":"modules/CourseModule.html","title":"module - CourseModule","body":"\n                   \n\n\n\n\n  Modules\n  CourseModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_imports\n\n\n\ncluster_CourseModule_providers\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/course/course.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for course-related tasks like adding, editing, \ndeleting, and viewing a course and the students in a course\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseCreateComponent\n                            \n                            \n                                CourseEditComponent\n                            \n                            \n                                CourseIndivComponent\n                            \n                            \n                                CourseListComponent\n                            \n                            \n                                CourseScenarioComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CourseResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CourseCreateComponent } from './course-create/course-create.component';\nimport { CourseIndivComponent } from './course-indiv/course-indiv.component';\nimport { CourseEditComponent } from './course-edit/course-edit.component';\nimport { CourseListComponent } from './course-list/course-list.component';\nimport { CourseScenarioComponent } from './course-scenario/course-scenario.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { CourseRoutes } from './course.routes';\nimport { CourseResolver } from './course.resolver';\n\n/**\n * Module for course-related tasks like adding, editing, \n * deleting, and viewing a course and the students in a course\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(CourseRoutes)\n  ],\n  declarations: [\n    CourseCreateComponent,\n    CourseIndivComponent,\n    CourseEditComponent,\n    CourseListComponent,\n    CourseScenarioComponent\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    CourseResolver\n  ]\n})\nexport class CourseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseResolver.html":{"url":"injectables/CourseResolver.html","title":"injectable - CourseResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/course/course.resolver.ts\n        \n\n            \n                Description\n            \n            \n                For the navigation breadcrumb, resolves a URL courseNum parameeter\nto the course number\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Based on the URL courseNum parameter, find the course\nit belongs to\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The course info for the courseNum\nor an empty observable if the id doesn't belong to any course\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { CourseService } from './course.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { Course } from '../../interfaces/course.interface';\n\n/**\n * For the navigation breadcrumb, resolves a URL courseNum parameeter\n * to the course number\n */\n@Injectable()\nexport class CourseResolver implements Resolve {\n\n  constructor(private _courseService: CourseService,\n              private _authService: AuthenticationService\n              ) { }\n  /**\n   * Based on the URL `courseNum` parameter, find the course\n   * it belongs to\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {Observable} The course info for the courseNum\n   * or an empty observable if the id doesn't belong to any course\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n    const courseNum = route.params['courseNum'];\n\n    if (courseNum) {\n      return this._courseService.getCourse(admin.id, courseNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseScenarioComponent.html":{"url":"components/CourseScenarioComponent.html","title":"component - CourseScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-scenario/course-scenario.component.ts\n\n\n    \n        Description\n    \n    \n        This component displays the scenario status of all students\nwithin the course and allows for navigation to student fridges\nand grant access for a student\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-scen\n            \n\n            \n                styleUrls\n                course-scenario.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-scenario.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseNum\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Protected\n                                scenario\n                            \n                            \n                                    Protected\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatAccess\n                            \n                            \n                                goToFridge\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _courseService: CourseService, _studentService: StudentService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatAccess(isGranted: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Simple formatting function which returns formatted string\ndepending on if student has access granted or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isGranted\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nhas access been granted\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \nformatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToFridge(studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            On \"View Fridge\" button, navigates to that student's fridge\nfor this scenario\nCalled on (click) of \"View Fridge\" button of a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe student's userID\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(studentIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Calls service to grant the student access to the scenario\nCalled on (click) of \"Grant access\" button for a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npositional index of student in the list of students; \nThis is NOT the student's userId\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from services to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Initalize the component\n\nGet the logged in user\nBased on the URL, get the course number and scenario code\nGet the scenario information\nGet the scenario status of students in the course\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:52\n                            \n                        \n\n                \n                    \n                        The logged in admin user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseNum:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:36\n                            \n                        \n\n                \n                    \n                        The course number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:56\n                            \n                        \n\n                \n                    \n                        Potential backend error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:44\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:48\n                            \n                        \n\n                \n                    \n                        Subscription to observe url courseNum parameter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:40\n                            \n                        \n\n                \n                    \n                        Information about the scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:32\n                            \n                        \n\n                \n                    \n                        List of students in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../../student/student.service';\n\nimport { Course, Student, Scenario, User } from '../../../interfaces/';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * This component displays the scenario status of all students\n * within the course and allows for navigation to student fridges\n * and grant access for a student\n */\n@Component({\n  selector: 'course-scen',\n  templateUrl: './course-scenario.template.html',\n  styleUrls: ['./course-scenario.style.css']\n})\n\nexport class CourseScenarioComponent implements OnInit, OnDestroy {\n\n  /**\n   * List of students in the course\n   */\n  protected students: Student[] = [];\n  /**\n   * The course number\n   */\n  private courseNum: string;\n  /**\n   * Information about the scenario\n   */\n  protected scenario: Scenario;\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Subscription to observe url `courseNum` parameter\n   */\n  private paramObserver: any;\n  /**\n  * The logged in admin user\n  */\n  private admin: User;\n  /**\n   * Potential backend error messages\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _authService: AuthenticationService,\n    private _courseService: CourseService,\n    private _studentService: StudentService,\n    private _scenarioService: ScenarioService\n              ){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initalize the component\n   * 1. Get the logged in user\n   * 2. Based on the URL, get the course number and scenario code\n   * 3. Get the scenario information\n   * 4. Get the scenario status of students in the course\n   */\n  ngOnInit() {\n    this.admin = this._authService.getUser();\n    this.paramObserver = this._route.params\n      .subscribe(params => {\n          let course = params['courseNum'];\n          let scenCode = params['scenId'];\n      this.courseNum = course.toUpperCase();\n      this._scenarioService.getScenario(scenCode)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n          // success\n          this.scenario = res;\n        this._courseService.getScenarioStatus(this.admin.id, course, scenCode)\n          .takeUntil(this.isDestroyed$)\n          .subscribe((stats)=>{\n\n            this.students = stats;\n        }, (err2)=>{\n          this.errorMessage = readErrorMessage(err2);\n        });\n\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n        });\n  }\n\n  /**\n   * Simple formatting function which returns formatted string\n   * depending on if student has access granted or not\n   *\n   * @param {boolean} isGranted - has access been granted\n   *\n   * @returns {string} - formatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n   */\n  formatAccess(isGranted: boolean): string{\n    return (isGranted ? 'Access granted' : 'Access not granted');\n  }\n\n  /**\n   * Calls service to grant the student access to the scenario\n   *\n   * Called on `(click)` of \"Grant access\" button for a student\n   * \n   * @param {number} studentIndex - positional index of student in the list of students; \n   * This is **NOT** the student's userId\n   */\n  grantAccess(studentIndex: number){\n    let scenId = this.scenario.scenCode;\n    let studentId = this.students[studentIndex].userId;\n    this._studentService.grantScenAccess(this.admin.id, studentId, scenId, true)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        if(res !== undefined && res !== null){\n          this.students[studentIndex].status = res.accessGranted[scenId];\n        }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * On \"View Fridge\" button, navigates to that student's fridge\n   * for this scenario\n   *\n   * Called on `(click)` of \"View Fridge\" button of a student\n   *\n   * @param {number} studentId - the student's userID\n   */\n  goToFridge(studentId: number){\n    this._router.navigate(['/admin/students/', studentId, this.scenario.scenCode]);\n  }\n\n  /**\n   * When destroying component, unsubscribe from services to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      {{ courseNum }} \n    \n\n    \n      {{scenario.scenCode}}\n      {{ scenario.label }}\n    \n\n    \n      \n        \n        {{student | personName}}: {{ formatAccess(student.status) }}\n        \n        \n          Grant access\n          View fridge\n        \n         \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}              {{ courseNum }}               {{scenario.scenCode}}      {{ scenario.label }}                              {{student | personName}}: {{ formatAccess(student.status) }}                          Grant access          View fridge                             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExperimentPhage.html":{"url":"interfaces/ExperimentPhage.html","title":"interface - ExperimentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExperimentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage interface used for plating and plexer\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        numPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numPhage\n                                    \n                                \n                                \n                                    \n                                        numPhage:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of this phage in the tube/plate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExperimentService.html":{"url":"injectables/ExperimentService.html","title":"injectable - ExperimentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ExperimentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/location/experiment.service.ts\n        \n\n            \n                Description\n            \n            \n                This service performs the plate and plexer experiments used\nwhen crossing or mutating phage strains, i.e. performing a\nvirtual experiment\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPlate\n                            \n                            \n                                performPlexer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/experiment.service.ts:16\n                            \n                        \n\n                \n                    \n                            Construct the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Anguar mechanism to make calls to backend server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPlate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatePlate(plate: PlateInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            With valid input for the plate, calls the backend to generate\na new plate that is displayed in the lab room\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        plate\n                                                        \n                                                                    PlateInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninformation needed to generate the new plate\nIncludes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nnewly generate plate with info about parents and (is plate full or list of small and large plaques)\nif error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            performPlexer\n                            \n                            \n                        \n                    \n                \n                \n                    \nperformPlexer(data: PlexerInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            With valid input, call the backend to generate valid results for the plexer\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    PlexerInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                information needed to generate the\nplexer results\n\nInputs a list of phage Ids for the rows and columns, E. coli\nlawn type, location, specials, individual plexer plate capacity\nand scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    the results of the plexer as a 2D array\nwere each cell in the array represents a plate and has\nis plate full or counts of small/large plaques\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/cricket'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:16\n                            \n                        \n\n                \n                    \n                        Leading backend URL path\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PlateInput, PlateResults, PlexerInput } from '../../interfaces';\n\n/**\n * This service performs the plate and plexer experiments used\n * when crossing or mutating phage strains, i.e. performing a\n * virtual experiment\n */\n@Injectable()\nexport class ExperimentService {\n  /**\n   * Leading backend URL path\n   */\n  private _baseURL = 'api/cricket';\n\n  /**\n   * Construct the service\n   *\n   * @param {HttpClient} _http Anguar mechanism to make calls to backend server\n   */\n  constructor(private _http: HttpClient) { }\n\n  /**\n   * With valid input for the plate, calls the backend to generate\n   * a new plate that is displayed in the lab room\n   *\n   * @param {PlateInput} plate - information needed to generate the new plate\n   * - Includes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n   *\n   * @returns {Observable} - newly generate plate with info about parents and (is plate full or list of small and large plaques)\n   * - if error\n   */\n  createPlate(plate: PlateInput): Observable{\n    var res = this._http\n    .post(`${this._baseURL}/plate`, plate)\n    return res;\n  }\n\n  /**\n   * With valid input, call the backend to generate valid results for the plexer\n   *\n   * @param {PlexerInput} data information needed to generate the\n   * plexer results\n   * - Inputs a list of phage Ids for the rows and columns, E. coli\n   * lawn type, location, specials, individual plexer plate capacity\n   * and scenario data\n   *\n   * @returns {Observable} the results of the plexer as a 2D array\n   * were each cell in the array represents a plate and has\n   * is plate full or counts of small/large plaques\n   */\n  performPlexer(data: PlexerInput): Observable{\n    // data will have rowPhage, colPhage, lawn type, location, specials, capacity, scenarioData\n    var res = this._http\n    .post(`${this._baseURL}/plexer`, data);\n    return res;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/forget-password/forget-password.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                forget-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./forget-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                email\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                sendForget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/forget-password/forget-password.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendForget\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendForget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n@Component({\n    selector: 'forget-pswd',\n    templateUrl: './forget-password.template.html'\n})\nexport class ForgetPasswordComponent {\n    private errorMessage: string = '';\n  private successMessage: string = '';\n    private email: string;\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService) { }\n\n    sendForget() {\n      this.successMessage = '';\n      this.errorMessage = '';\n      let body = {email: this.email};\n        this.subscription = this._authenticationService\n          .forgetPassword(body)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Forget Password?\n    \n    Email\n    \n      \n    Submit\n  {{ successMessage }}\n  {{ errorMessage }}\n      \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forget Password?        Email              Submit  {{ successMessage }}  {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fridge.html":{"url":"interfaces/Fridge.html","title":"interface - Fridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Fridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                A user/scenario fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessGranted\n                                \n                                \n                                        guesses\n                                \n                                \n                                        scenarioDetails\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        strains\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Has access already been granted for this user/scenario;\nFridges for each scenario are the same when access not granted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Deletion guesses\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioDetails\n                                    \n                                \n                                \n                                    \n                                        scenarioDetails:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information for this specific user/scenario needed when\nsubmitting the plexer or generating a new plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario id this fridge belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     FridgePhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FridgePhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id for owner of this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FridgePhage.html":{"url":"interfaces/FridgePhage.html","title":"interface - FridgePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FridgePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage stored in the fridge\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                            Optional\n                                        numParents\n                                \n                                \n                                            Optional\n                                        parents\n                                \n                                \n                                        phageType\n                                \n                                \n                                            Optional\n                                        submitted\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description for this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numParents\n                                    \n                                \n                                \n                                    \n                                        numParents:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If user phage, number of parents in the cross to create this phage;\nused to check if one of the parents no longer exists\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If a user phage, the phage used in the cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phageType\n                                    \n                                \n                                \n                                    \n                                        phageType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage type; one of \"reference\", \"unknown\", and \"user\" depending\non who created it and if mutation state is known\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                    \n                                \n                                \n                                    \n                                        submitted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For user phage, should this phage be graded\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenotypePhage.html":{"url":"interfaces/GenotypePhage.html","title":"interface - GenotypePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GenotypePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage on the lab room plate that will be saved to\nthe fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                        parents\n                                \n                                \n                                        shifts\n                                \n                                \n                                            Optional\n                                        src\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop locations of deletion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage used in cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shifts\n                                    \n                                \n                                \n                                    \n                                        shifts:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                    \n                                \n                                \n                                    \n                                        src:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Where the phage is being dragged from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/help/help.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                help\n            \n\n            \n                styleUrls\n                help.style.css\n            \n\n\n\n            \n                templateUrl\n                ./help.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/help/help.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'help',\n  templateUrl: './help.template.html',\n  styleUrls: ['./help.style.css']\n})\n\nexport class HelpComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n\n  Help\nInformation coming soon\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  HelpInformation coming soon'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelpModule.html":{"url":"modules/HelpModule.html","title":"module - HelpModule","body":"\n                   \n\n\n\n\n  Modules\n  HelpModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_HelpModule_imports\n\n\n\n\nHelpComponent\n\nHelpComponent\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/help/help.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HelpComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HelpRoutes } from './help.routes';\nimport { HelpComponent } from './help.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(HelpRoutes)\n  ],\n  declarations: [\n    HelpComponent\n  ]\n})\nexport class HelpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        The home landing page when going to the website\nMainly a view component, but some aspects are dependent\non if a user is logged in and the user role\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                styleUrls\n                home.style.css\n            \n\n\n\n            \n                templateUrl\n                ./home.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/home/home.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            When destroying the component, unset the user variable\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            When intializing component, get the logged in user, if any\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/home/home.component.ts:22\n                            \n                        \n\n                \n                    \n                        The logged in user, if any\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\n\nimport { User } from '../interfaces/user.interface';\n\n/**\n * The home landing page when going to the website\n * Mainly a view component, but some aspects are dependent\n * on if a user is logged in and the user role\n */\n@Component({\n  selector: 'home',\n  templateUrl: './home.template.html',\n  styleUrls: ['./home.style.css']\n})\n\nexport class HomeComponent implements OnInit, OnDestroy{\n  /**\n   * The logged in user, if any\n   */\n  private user: User;\n\n  constructor(private _authenticationService: AuthenticationService){}\n\n  /**\n   * When intializing component, get the logged in user, if any\n   */\n  ngOnInit(){\n    this.user = this._authenticationService.getUser();\n  }\n\n  /**\n   * When destroying the component, unset the user variable\n   */\n  ngOnDestroy(){\n    this.user = undefined;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Welcome to Crick et al.\n\n    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.\n    \n    \n      \n        Instructor Page\n        Administrator Page\n      \n      \n        Sign out\n      \n    \n    \n    \n      \n        Sign in\n        \n      \n        Sign up\n      \n    \n    \n\n  \n    \n  \n\n\n  Go to Scenarios\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome to Crick et al.    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.                      Instructor Page        Administrator Page                    Sign out                                Sign in                      Sign up                        Go to Scenarios'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingRoomComponent.html":{"url":"components/LandingRoomComponent.html","title":"component - LandingRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/landing-room/landing-room.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows the scenario details including\n\npurpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\nrelevance - why the scenario is relevant for learning and future scenarios\nstarting point - description of the phage students start the scenario with\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                landing-room\n            \n\n\n\n\n            \n                templateUrl\n                ./landing-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scenario\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                            Component contructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular router\n\n                                                        \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The current URL route to get scenario id\n\n                                                        \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get scenario information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            When destroying the component, unsubscribe if necessary to\nprevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\nGet the details for scenarios\nIf error, go back to home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:23\n                            \n                        \n\n                \n                    \n                        The current scenario we are viewing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                        Subscription to the getScenario method of scenario service\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ScenarioService } from '../../scenario.service';\nimport { Scenario } from '../../../interfaces';\n\n/**\n * This component shows the scenario details including\n * 1. purpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\n * 2. relevance - why the scenario is relevant for learning and future scenarios\n * 3. starting point - description of the phage students start the scenario with\n */\n@Component({\n  selector: 'landing-room',\n  templateUrl: './landing-room.template.html'\n})\n\nexport class LandingRoomComponent implements OnInit, OnDestroy {\n\n  /**\n   * The current scenario we are viewing\n   */\n  scenario: Scenario;\n  /**\n   * Subscription to the getScenario method of scenario service\n   */\n  private subscription: any;\n\n  /**\n   * Component contructor\n   * @param {Router} _router Angular router\n   * @param {ActivatedRoute} _route The current URL route to get scenario id\n   * @param {ScenarioService} _scenarioService Service to get scenario information\n   */\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _scenarioService: ScenarioService){\n\n  }\n\n  /**\n   * Initialize the component\n   * 1. Get scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\n   * 2. Get the details for scenarios\n   * If error, go back to home page\n   */\n  ngOnInit(){\n    let scenId = this._route.parent.snapshot.paramMap.get('scenId');\n    this.subscription = this._scenarioService\n      .getScenario(scenId)\n      .subscribe(\n      scenario => {\n        this.scenario = scenario;\n      },\n      error => this._router.navigate(['/'])\n    );\n  }\n\n  /**\n   * When destroying the component, unsubscribe if necessary to\n   * prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{scenario.label}} \n  Purpose\n  {{scenario.purpose}}\n\n  Relevance\n  {{scenario.relevance}}\n\n  Starting Point\n  {{scenario.startingPoint}}\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{scenario.label}}   Purpose  {{scenario.purpose}}  Relevance  {{scenario.relevance}}  Starting Point  {{scenario.startingPoint}}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists all available scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario-list\n            \n\n\n\n\n            \n                templateUrl\n                ./list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                scenarios\n                            \n                            \n                                    Private\n                                sSubscription\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:24\n                            \n                        \n\n                \n                    \n                        list of available scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object of logged in user, if available\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { ScenarioService } from '../scenario.service';\n\nimport { User } from '../../interfaces/user.interface';\nimport { Scenario } from '../../interfaces/scenario.interface';\n\n/**\n * Component which lists all available scenarios\n */\n@Component({\n    selector: 'scenario-list',\n    templateUrl: './list.template.html'\n})\nexport class ListComponent implements OnInit, OnDestroy{\n  /**\n   * User object of logged in user, if available\n   */\n    user: User;\n  /**\n  * list of available scenarios\n  */\n    scenarios: Scenario[];\n    errorMessage: string;\n  private sSubscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService, private _scenarioService: ScenarioService) {\n\n    }\n\n    ngOnInit() {\n      this.user = this._authenticationService.getUser();\n      this.sSubscription = this._scenarioService.listScenarios()\n        .subscribe((scenarios) => {\n        this.scenarios = scenarios\n      });\n    }\n\n  ngOnDestroy(){\n    if(this.sSubscription)\n    this.sSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  Available Scenarios\n  \n    \n      {{scenario.label}}\n    \n    \n  \n  \n    \n      Sign in or Sign up to see scenarios.\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Available Scenarios            {{scenario.label}}                      Sign in or Sign up to see scenarios.  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationComponent.html":{"url":"components/LocationComponent.html","title":"component - LocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/location.component.ts\n\n\n    \n        Description\n    \n    \n        This is a view component which hosts the location\ntab selection navigator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                location\n            \n\n            \n                styleUrls\n                location.style.css\n            \n\n\n\n            \n                templateUrl\n                ./location.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * This is a view component which hosts the location\n * tab selection navigator\n */\n@Component({\n  selector: 'location',\n  templateUrl: './location.template.html',\n  styleUrls: ['./location.style.css']\n})\n\nexport class LocationComponent {\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n        \n          \n             \n            Info\n            \n            \n            \n              \n            Lab\n          \n            \n            \n              \n            Plexer\n          \n            \n            \n              \n            Model\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                               Info                                                              Lab                                                            Plexer                                                            Model                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FridgeComponent\n                            \n                            \n                                LabRoomComponent\n                            \n                            \n                                LandingRoomComponent\n                            \n                            \n                                LocationComponent\n                            \n                            \n                                ModelRoomComponent\n                            \n                            \n                                PhageDialogComponent\n                            \n                            \n                                PlexerRoomComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                PhageDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ExperimentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { LocationRoutes } from './location.routes';\n\nimport { ExperimentService } from './experiment.service';\n\nimport { FridgeComponent } from '../fridge/fridge.component';\nimport { PhageDialogComponent } from '../fridge/phage-dialog.component';\n\nimport { LocationComponent } from './location.component';\nimport { LandingRoomComponent } from './landing-room/landing-room.component';\nimport { LabRoomComponent } from './lab-room/lab-room.component';\nimport { PlexerRoomComponent } from './plexer-room/plexer-room.component';\nimport { ModelRoomComponent } from './model-room/model-room.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(LocationRoutes)\n  ],\n  declarations: [\n    FridgeComponent,\n    PhageDialogComponent,\n    LocationComponent,\n    LabRoomComponent,\n    PlexerRoomComponent,\n    ModelRoomComponent,\n    LandingRoomComponent\n  ],\n   entryComponents: [\n    PhageDialogComponent\n  ],\n  providers: [\n    ExperimentService\n  ]\n})\nexport class LocationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggedInGuard.html":{"url":"injectables/LoggedInGuard.html","title":"injectable - LoggedInGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoggedInGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/logged-in.guard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/logged-in.guard.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class LoggedInGuard implements CanActivate, CanActivateChild {\n\n  constructor(\n    private _authenticationService: AuthenticationService,\n    private _router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n     state: RouterStateSnapshot\n  ): boolean {\n    let url: string = state.url;\n\n    let isLoggedIn: boolean = this._authenticationService.isLoggedIn();\n    if(isLoggedIn)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['authentication/signin']);\n      return false;\n    }\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelRoomComponent.html":{"url":"components/ModelRoomComponent.html","title":"component - ModelRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/model-room/model-room.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                model-room\n            \n\n            \n                styleUrls\n                model-room.style.css\n            \n\n\n\n            \n                templateUrl\n                ./model-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                geneAr\n                            \n                            \n                                    Private\n                                guesses\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                keys\n                            \n                            \n                                    Private\n                                scenarioId\n                            \n                            \n                                    Private\n                                stepSize\n                            \n                            \n                                    Private\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockClass\n                            \n                            \n                                ngOnDestory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveData\n                            \n                            \n                                toggleBlock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/model-room/model-room.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBlockClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBlockClass(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:112\n                            \n                        \n\n\n                \n                    \n                            Get the CSS classes for a strain guess block\nBlock indicates wheater user thinks that section of the chromosome\nis deleted in the strain\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'guess-block btn p-0': boolean; 'btn-outline-secondary': boolean; 'bg-dark': any; }\n\n                            \n                                \n                                    \napplicable CSS classes in the form\n{'class': boolean, ...}\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestory\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet user id\nGet the scenario id from parent URL\nGet user guesses from scenario service (set by fridge)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveData\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            Saves the guesses to the backend/database using the service\ncalled on (click) of Save Button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlock\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleBlock(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Toggle block guess from true to false OR false to true\ncalled on (click) of the block\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _width:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:47\n                            \n                        \n\n                \n                    \n                        CSS width of each block dependent on length of gene and step size\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geneAr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geneAr:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            guesses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guesses:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:22\n                            \n                        \n\n                \n                    \n                        Current user guesses as object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keys:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:26\n                            \n                        \n\n                \n                    \n                        Array of strain numbers included\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarioId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarioId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:38\n                            \n                        \n\n                \n                    \n                        Scenario code\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stepSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:34\n                            \n                        \n\n                \n                    \n                        Size of each block\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:42\n                            \n                        \n\n                \n                    \n                        User id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../scenario.service';\nimport { ScenarioGlobals } from '../../scenario.globals';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n@Component({\n    selector: 'model-room',\n    templateUrl: './model-room.template.html',\n  styleUrls: ['./model-room.style.css']\n})\n\nexport class ModelRoomComponent {\n\n  /**\n   * Current user guesses as object\n   */\n  private guesses: any;\n  /**\n   * Array of strain numbers included\n   */\n  private keys: number[];\n  /**\n   *\n   */\n  private geneAr: number[];\n  /**\n   * Size of each block\n   */\n  private stepSize: number;\n  /**\n   * Scenario code\n   */\n  private scenarioId: string;\n  /**\n   * User id\n   */\n  private userId: number;\n  private errorMessage: string = '';\n  /**\n   * CSS width of each block dependent on length of gene and step size\n   */\n  private _width: string;\n  private isDestroyed$: Subject;\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _authenticationService: AuthenticationService,\n              private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n\n    this.stepSize = ScenarioGlobals.deletionGuessLength;\n    this.geneAr = [];\n    let nBlocks: number = Math.ceil(ScenarioGlobals.geneLength/this.stepSize);\n    for(let i = 0; i  {\n      this.guesses = dels;\n\n      this.keys = Object.keys(dels).map((k)=> {return Number.parseInt(k);});\n      if(this.keys.length === 0){\n        this.errorMessage = 'No phage available for modelling'\n      } else {\n        this.errorMessage = '';\n      }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * Destroy the component by unsubscribing\n   */\n  ngOnDestory(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  /**\n   * Get the CSS classes for a strain guess block\n   * Block indicates wheater user thinks that section of the chromosome\n   * is deleted in the strain\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   *\n   * @returns {Object} - applicable CSS classes in the form\n   * {'class': boolean, ...}\n   */\n  getBlockClass(strain: number, pos: number){\n    let posGuess = this.guesses[strain][pos];\n    return {\n      'guess-block btn p-0': true,\n      'btn-outline-secondary': !posGuess, // inactive\n      'bg-dark': posGuess // active\n    }\n  }\n\n  /**\n   * Toggle block guess from true to false OR false to true\n   *\n   * called on (click) of the block\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   */\n  toggleBlock(strain: number, pos: number){\n    let c = this.guesses[strain][pos];\n    this.guesses[strain][pos] = !c;\n  }\n\n  /**\n   * Saves the guesses to the backend/database using the service\n   *\n   * called on (click) of Save Button\n   */\n  saveData(){\n    // clear error message beforehand\n    this.errorMessage = '';\n    // use service and save data (as a string)\n    let out = JSON.stringify(this.guesses)\n    this._scenarioService\n      .saveDeletions(this.guesses, this.userId, this.scenarioId)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((dat)=>{\n      this.guesses = JSON.parse(dat);\n      this._scenarioService.setScenario(null, dat);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{errorMessage}}\n   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">\n      Save\n  \n \n 0\" class=\"row w-100\" id=\"modeller\">\n  \n    \n      {{phage+1}}\n    \n  \n  \n    \n      \n         \n      \n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{errorMessage}}   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">      Save    0\" class=\"row w-100\" id=\"modeller\">            {{phage+1}}                                         '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/nav/nav.component.ts\n\n\n    \n        Description\n    \n    \n        Navigation bar at the top of the site\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-nav\n            \n\n            \n                styleUrls\n                nav.style.css\n            \n\n\n\n            \n                templateUrl\n                ./nav.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing, if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Initiate the component by getting the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription stream for the authetnication service\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object used to determine if profile link should be\nincluded in the nav bar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Navigation bar at the top of the site\n */\n@Component({\n    selector: 'cricket-nav',\n    templateUrl: './nav.template.html',\n    styleUrls: ['./nav.style.css']\n})\nexport class NavComponent implements OnInit, OnDestroy {\n\n  /**\n   * User object used to determine if profile link should be\n   * included in the nav bar\n   */\n  private user: User;\n  /**\n   * Subscription stream for the authetnication service\n   */\n  private subscription: any;\n\n  constructor(private _authService: AuthenticationService) {\n    }\n\n  /**\n   * Initiate the component by getting the current user\n   */\n  ngOnInit(){\n    this.subscription = this._authService.getUser$\n    .subscribe((res)=>{\n      this.user = res\n    });\n  }\n\n  /**\n   * Destory the component by unsubscribing, if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n    \n  \n-->\n\n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n      \n        Help\n      \n      \n        Profile\n        \n          Sign out\n        \n      \n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Cricket                              Scenarios            -->          Cricket                              Scenarios                    Help                    Profile                  Sign out                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotAuthComponent.html":{"url":"components/NotAuthComponent.html","title":"component - NotAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/not-auth/not-auth.component.ts\n\n\n    \n        Description\n    \n    \n        A basic view component when user tries to access an admin\npage but does not have admin access\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-auth\n            \n\n\n\n\n            \n                templateUrl\n                ./not-auth.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A basic view component when user tries to access an admin\n * page but does not have admin access\n */\n@Component({\n  selector: 'not-auth',\n  templateUrl: './not-auth.template.html'\n})\n\nexport class NotAuthComponent{\n\n}\n\n    \n\n    \n        \n  \n    NOT AUTHORIZED\n    Return\n      Home\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NOT AUTHORIZED    Return      Home      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        When URL goes to a page that doesn't exist;\nThis is simple, visual component needed to get the template\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/page-not-found/page-not-found.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * When URL goes to a page that doesn't exist;\n * This is simple, visual component needed to get the template\n */\n@Component({\n  selector: 'page-not-found',\n  templateUrl: './page-not-found.template.html',\n})\n\nexport class PageNotFoundComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n  Page Not Found\n\n  Go Back Home\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Page Not Found  Go Back Home'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PeopleListNamesPipe.html":{"url":"pipes/PeopleListNamesPipe.html","title":"pipe - PeopleListNamesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PeopleListNamesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/people-list-names.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format a list of user's or students frist and last name as \"firstName lastName\"\n\nWhen reverse is true, format as \"lastName, firstName\"\nAble to handle when only first or last name is set\n\nUsage: {{ peopleList | peopleListNames:isReverse }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            Normal output :  \n[{firstName: \"Mary\", lastName: \"One\"}, {firstName: \"Bob\", lastName: \"Two\"}] becomes \"Mary One, Bob Two\"\n                        \n                        \n                            Reverse ouput :  \n[{firstName: \"Mary\", lastName: \"One\"}, {firstName: \"Bob\", lastName: \"Two\"}] becomes \"One, Mary; Two, Bob\"\n                        \n                        \n                            Missing names :  \n[{firstName: undefined, lastName: \"One\"}, {firstName: \"Bob\", lastName: undefined}] becomes \"One, Bob\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        peopleListNames\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(personList: any[], reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/people-list-names.pipe.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personList\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format a list of user's or students frist and last name as \"firstName lastName\"\n * - When reverse is true, format as \"lastName, firstName\"\n * - Able to handle when only first or last name is set\n * \n * **Usage:** `{{ peopleList | peopleListNames:isReverse }}`\n *\n * @example Normal output :  \n * [{firstName: \"Mary\", lastName: \"One\"}, {firstName: \"Bob\", lastName: \"Two\"}] becomes \"Mary One, Bob Two\"\n * @example Reverse ouput :  \n * [{firstName: \"Mary\", lastName: \"One\"}, {firstName: \"Bob\", lastName: \"Two\"}] becomes \"One, Mary; Two, Bob\"\n * @example Missing names :  \n * [{firstName: undefined, lastName: \"One\"}, {firstName: \"Bob\", lastName: undefined}] becomes \"One, Bob\"\n */\n@Pipe({name: 'peopleListNames'})\nexport class PeopleListNamesPipe implements PipeTransform {\n\n  transform(personList: any[], reverse: boolean): string {\n    let out = '';\n    for(let person of personList){\n      if(out !== ''){\n        out += (reverse ? '; ' : ', ');\n      }\n      let fName: string = person.firstName || '';\n      let lName: string = person.lastName || '';\n    if(reverse){\n      out += lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n      } else {\n    out += fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n      }\n    }// end for\n    return out\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PersonNamePipe.html":{"url":"pipes/PersonNamePipe.html","title":"pipe - PersonNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PersonNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/person-name.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format a user's or students frist and last name as \"firstName lastName\"\n\nWhen reverse is true, format as \"lastName, firstName\"\nAble to handle when only first or last name is set\n\nUsage: {{ person | personName:isReverse }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            Normal output :  \n{firstName: \"Mary\", lastName: \"Boyd\"} becomes \"Mary Boyd\"\n                        \n                        \n                            Reverse output :  \n{firstName: \"Mary\", lastName: \"Boyd\"} becomes \"Boyd, Mary\"\n                        \n                        \n                            First name only :  \n{firstName: \"Mary\", lastName: undefined} becomes \"Mary\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        personName\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(person: any, reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/person-name.pipe.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format a user's or students frist and last name as \"firstName lastName\"\n * - When reverse is true, format as \"lastName, firstName\"\n * - Able to handle when only first or last name is set\n *\n * **Usage:** `{{ person | personName:isReverse }}`\n *\n * @example Normal output :  \n * {firstName: \"Mary\", lastName: \"Boyd\"} becomes \"Mary Boyd\"\n * @example Reverse output :  \n * {firstName: \"Mary\", lastName: \"Boyd\"} becomes \"Boyd, Mary\"\n * @example First name only :  \n * {firstName: \"Mary\", lastName: undefined} becomes \"Mary\"\n*/\n@Pipe({name: 'personName'})\nexport class PersonNamePipe implements PipeTransform {\n\n  transform(person: any, reverse: boolean): string {\n    let fName: string = person.firstName || '';\n    let lName: string = person.lastName || '';\n  if(reverse){\n    return lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n  } else {\n    return fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n  }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Phage.html":{"url":"interfaces/Phage.html","title":"interface - Phage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Phage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Base phage interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        strainNum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MongoDB object ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strainNum\n                                    \n                                \n                                \n                                    \n                                        strainNum:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Location in fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageDeletionsPipe.html":{"url":"pipes/PhageDeletionsPipe.html","title":"pipe - PhageDeletionsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageDeletionsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-deletions.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's deletions (if any)\nUsage: {{ deletionlist | phageDeletions }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One deletion:  \n[50,145] becomes \"50 - 145\"\n                        \n                        \n                            Multiple deletions:  \n[50, 140, 190, 260] becomes \"50 - 140, 190 - 260\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageDeletions\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(deletion: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-deletions.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deletion\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format the textual presentation of a phage strain's deletions (if any)\n *\n * **Usage:** `{{ deletionlist | phageDeletions }}`\n *\n * @example One deletion:  \n * [50,145] becomes \"50 - 145\"\n * @example Multiple deletions:  \n * [50, 140, 190, 260] becomes \"50 - 140, 190 - 260\"\n */\n@Pipe({name: 'phageDeletions'})\nexport class PhageDeletionsPipe implements PipeTransform {\n\n  transform(deletion: number[]): string {\n    let out = '';\n    let mLength = (deletion.length % 2 === 0 ? deletion.length : deletion.length -1);\n\n    for(let i = 0; i  1 ? ', ' : '');\n      out += deletion[i] + ' - ' + deletion[i+1];\n    }\n\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhageDialogComponent.html":{"url":"components/PhageDialogComponent.html","title":"component - PhageDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhageDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/fridge/phage-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Modal dialog box for individual phage strains\nUsed to edit phage comment, view phage parents, or delete phage\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                phage-dialog-content\n            \n\n\n\n\n            \n                templateUrl\n                ./phage-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/fridge/phage-dialog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                            \n                            Type:    FridgePhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\nimport { FridgePhage } from '../../interfaces/phage.interface';\n\n/**\n * Modal dialog box for individual phage strains\n * Used to edit phage comment, view phage parents, or delete phage\n */\n@Component({\n  selector: 'phage-dialog-content',\n  templateUrl: './phage-dialog.template.html'\n})\nexport class PhageDialogComponent {\n  @Input() phage: FridgePhage;\n\n  constructor(public activeModal: NgbActiveModal) {\n  }\n\n}\n\n    \n\n    \n        \n  Strain {{phage.strainNum + 1}}\n  \n        &times;\n      \n\n\n  \n    \n      Type\n      \n        \n      \n    \n    \n    \n      Comment\n      \n        \n      \n    \n    \n    \n      Submitted\n      \n        \n      \n    \n    \n\n     0\" id=\"viewParents\" class=\"row form-group mb-1\">\n      Parents\n      \n        {{phage.parents | phageParents:phage.numParents}}\n      \n    \n    \n  \n\n\n\n  Delete\n  Cancel\n  Save\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Strain {{phage.strainNum + 1}}          ×                  Type                                      Comment                                      Submitted                                 0\" id=\"viewParents\" class=\"row form-group mb-1\">      Parents              {{phage.parents | phageParents:phage.numParents}}                  Delete  Cancel  Save'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhageDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageGuessesPipe.html":{"url":"pipes/PhageGuessesPipe.html","title":"pipe - PhageGuessesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageGuessesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-guesses.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of the deletion guessses for \na user's phage strain; uses a scenario global variable deletionGuessLength to determine\nthe ranges\nUsage: {{ guessList | phageGuesses }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One deletion guess:  \n[false, true, true, true, false, ...] becomes \"10-40\"\n                        \n                        \n                            No deletion guesses:  \n[false, ..., false] becomes \"None\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageGuesses\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(guesses: boolean[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-guesses.pipe.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        guesses\n                                                        \n                                                                    boolean[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ScenarioGlobals } from '../scenario/scenario.globals';\n\n/**\n * Format the textual presentation of the deletion guessses for \n * a user's phage strain; uses a [scenario global]{@link \n * ScenarioGlobals} variable `deletionGuessLength` to determine\n * the ranges\n *\n * **Usage:** `{{ guessList | phageGuesses }}`\n *\n * @example One deletion guess:  \n * [false, true, true, true, false, ...] becomes \"10-40\"\n * @example No deletion guesses:  \n * [false, ..., false] becomes \"None\"\n */\n\n@Pipe({name: 'phageGuesses'})\nexport class PhageGuessesPipe implements PipeTransform {\n\n  transform(guesses: boolean[]): string {\n    let stepSize = ScenarioGlobals.deletionGuessLength;\n    let out = '';\n    let x=-1;\n    //for(let y=0; y  0 && guesses[y] === false){\n        let z = (stepSize * y);\n        out += (out === '' ? '' : ', ');\n        out += x + ' - ' + z;\n        x = -1;\n      }\n    }\n    // check for the last possible deletion\n    if(x != -1){\n      out += (out === '' ? '' : ', ');\n      out += x + ' - ' + ScenarioGlobals.geneLength;\n    }\n    if(out === ''){\n      return 'None';\n    } else {\n    return out;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageMutationsPipe.html":{"url":"pipes/PhageMutationsPipe.html","title":"pipe - PhageMutationsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageMutationsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-mutations.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's frameshift mutations (if any)\nUsage: {{ mutationList | phageMutations }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One negative frameshift mutation:  \n[-87] becomes \"-1 at 87\"\n                        \n                        \n                            One positive frameshift mutation:  \n[163] becomes \"+1 at 163\"\n                        \n                        \n                            Multiple frameshift mutations:  \n[32, -208] becomes \"+1 at 32, -1 at 208\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageMutations\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(mutations: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-mutations.pipe.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mutations\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format the textual presentation of a phage strain's frameshift mutations (if any)\n *\n * **Usage:** `{{ mutationList | phageMutations }}`\n *\n * @example One negative frameshift mutation:  \n * [-87] becomes \"-1 at 87\"\n * @example One positive frameshift mutation:  \n * [163] becomes \"+1 at 163\"\n * @example Multiple frameshift mutations:  \n * [32, -208] becomes \"+1 at 32, -1 at 208\"\n */\n@Pipe({name: 'phageMutations'})\nexport class PhageMutationsPipe implements PipeTransform {\n\n  transform(mutations: number[]): string {\n    let out = '';\n    for(let x of mutations){\n      out += (out === '' ? '' : ', ');\n      let y = (x > 0 ? '+1' : '-1');\n      let z = Math.abs(x);\n      out += y + ' at ' + z;\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageParentsPipe.html":{"url":"pipes/PhageParentsPipe.html","title":"pipe - PhageParentsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageParentsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-parents.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's parents\n(if any) when viewing the dialog box for a phage\nThe numParents variable is used to determine if one of the\nparents had been deleted from the database when parents.length != numParents\nNote: the phage strainNum are 0-based but UI is 1-based so\nthe strain number is adjusted\nUsage: {{parentsList | phageParents:numParents}}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One parent :  \n{parents: [{id: 'id1', strainNum: '4'}], numParents: 1} becomes \"Strain 5\"\n                        \n                        \n                            Two parents:  \n{parents: [{id: 'id1', strainNum: 4}, {id: 'id2', strainNum: 10}], numParents: 2} becomes \"Strains 5 and 11\"\n                        \n                        \n                            Two parents but missing one:  \n{parents: [{id: 'id3', strainNum: 8}], numParents: 2} becomes \"Strains 9 and ?\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageParents\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(parents: Phage[], numParents: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-parents.pipe.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parents\n                                                        \n                                                                    Phage[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        numParents\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Phage } from '../interfaces/phage.interface';\n\n/**\n * Format the textual presentation of a phage strain's parents\n * (if any) when viewing the dialog box for a phage\n *\n * The `numParents` variable is used to determine if one of the\n * parents had been deleted from the database when `parents.length != numParents`\n *\n * Note: the phage `strainNum` are 0-based but UI is 1-based so\n * the strain number is adjusted\n *\n * **Usage:** `{{parentsList | phageParents:numParents}}`\n *\n * @example One parent :  \n * {parents: [{id: 'id1', strainNum: '4'}], numParents: 1} becomes \"Strain 5\"\n * @example Two parents:  \n * {parents: [{id: 'id1', strainNum: 4}, {id: 'id2', strainNum: 10}], numParents: 2} becomes \"Strains 5 and 11\"\n * @example Two parents but missing one:  \n * {parents: [{id: 'id3', strainNum: 8}], numParents: 2} becomes \"Strains 9 and ?\"\n */\n@Pipe({name: 'phageParents'})\nexport class PhageParentsPipe implements PipeTransform {\n\n  transform(parents: Phage[], numParents: number): string {\n    let out = '';\n    if(numParents === undefined){\n      numParents = parents.length\n    }\n    let sorted: Phage[] = parents.sort((n1, n2)=>{return n1.strainNum - n2.strainNum});\n    let nums = sorted.map((phage)=>{return (phage.strainNum+1).toString()});\n\n    if(sorted.length === 1 && numParents === 1){\n      out = 'Strain ' + nums[0];\n    } else if(sorted.length === 1 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ?';\n    } else if(sorted.length === 2 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ' + nums[1];\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateInput.html":{"url":"interfaces/PlateInput.html","title":"interface - PlateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to create a new plate\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        phage1\n                                \n                                \n                                        phage2\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phage1\n                                    \n                                \n                                \n                                    \n                                        phage1:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phage2\n                                    \n                                \n                                \n                                    \n                                        phage2:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateResults.html":{"url":"interfaces/PlateResults.html","title":"interface - PlateResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Data from server representing the lab room plate\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        full\n                                \n                                \n                                        genotypes\n                                \n                                \n                                        largePlaque\n                                \n                                \n                                        parents\n                                \n                                \n                                        smallPlaque\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        full\n                                    \n                                \n                                \n                                    \n                                        full:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is the plate over capacity?\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genotypes\n                                    \n                                \n                                \n                                    \n                                        genotypes:     _genotype[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _genotype[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of genotypes of the phage of the plate; several individual\nphage from \"smallPlaque\" and \"largePlaque\" can correspond to the\nsame genotype\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        largePlaque\n                                    \n                                \n                                \n                                    \n                                        largePlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    mutatnt phenotype phage on the plate; each number indicates\nthe index of the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage used to create this plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smallPlaque\n                                    \n                                \n                                \n                                    \n                                        smallPlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    WT-phenotype phage on the plate; each number indicates the index\nof the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlexerInput.html":{"url":"interfaces/PlexerInput.html","title":"interface - PlexerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlexerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to submit the plexer\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colPhage\n                                \n                                \n                                        rowPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colPhage\n                                    \n                                \n                                \n                                    \n                                        colPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the columns of the plexer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowPhage\n                                    \n                                \n                                \n                                    \n                                        rowPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the rows of the plexer\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  ProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/profile/profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                UpdatePasswordComponent\n                            \n                            \n                                UserProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProfileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ProfileRoutes } from './profile.routes';\nimport { ProfileService } from './profile.service';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ProfileRoutes)\n  ],\n  declarations: [\n    UserProfileComponent,\n    UpdatePasswordComponent\n  ],\n  providers: [\n    ProfileService\n  ]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Functions which communicate to backend to allow\nusers to update their profile and/or change the password\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editProfile\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \neditProfile(userId: number, details: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Edit details about the user profile including\n\nNme\nEmail address\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of the logged in user\n\n                                                        \n                                                \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                user details to update with\nexisiting information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe updated user information\nor error \"User does not exist\" if non-existant user\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword(userId: number, credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Update the user's password once already signed in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of logged in user\n\n                                                        \n                                                \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npassword information\nincludes: \"password\" (old password) and \"newPassword\"  (password to update to)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about the user just updated\nor error \"User does not exist\" if non-existant user\nor error \"Incorrect password\" if wrong old password\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/users/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                        Leading backend url path\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Functions which communicate to backend to allow\n * users to update their profile and/or change the password\n */\n@Injectable()\nexport class ProfileService {\n\n  /**\n   * Leading backend url path\n   */\n  private _baseUrl: string = '/api/users/';\n\n  constructor(private http: HttpClient){}\n\n  /**\n   * Edit details about the user profile including\n   * 1. Nme\n   * 2. Email address\n   *\n   * @param {number} userId userID of the logged in user\n   * @param {any} details user details to update with\n   * exisiting information\n   *\n   * @returns {Observable} - The updated user information\n   * - or error \"User does not exist\" if non-existant user\n   * - or other server/database error\n   */\n  editProfile(userId: number, details: any): Observable{\n    return this.http.post(this._baseUrl + userId, details);\n  }\n\n  /**\n   * Update the user's password once already signed in\n   *\n   * @param {number} userId userID of logged in user\n   * @param {any} credentials - password information\n   * - includes: \"password\" (old password) and \"newPassword\"  (password to update to)\n   *\n   * @returns {Observable} - information about the user just updated\n   * - or error \"User does not exist\" if non-existant user\n   * - or error \"Incorrect password\" if wrong old password\n   * - or other server/database error\n   */\n  updatePassword(userId: number, credentials: any): Observable{\n    return this.http.post(this._baseUrl + userId + '/update-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                reset-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDisabled\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/reset-password/reset-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n_checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     \"Enter new password\" | \"Confirm new password\" | \"Confirm password does not match\" | \"\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendReset\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendReset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n@Component({\n    selector: 'reset-pswd',\n    templateUrl: './reset-password.template.html'\n})\nexport class ResetPasswordComponent {\n    private errorMessage: string = '';\n  private successMessage: string = '';\n    private credentials: any;\n  private subscription: Subscription;\n  private isDisabled: boolean = false;\n\n    constructor(\n      private _authenticationService: AuthenticationService,\n      private _route: ActivatedRoute\n    ) {\n      this.credentials = {\n        password: '',\n        confirmPassword: '',\n        token: null\n      }\n    }\n\n  ngOnInit(){\n    this.credentials.token = this._route.snapshot.paramMap.get('token');\n    if(this.credentials.token === ''){\n      this.errorMessage = 'No token specified';\n      this.isDisabled = true;\n    }\n  }\n\n    sendReset() {\n      this.successMessage = '';\n       this.errorMessage = this._checkPasswords();\n      if(this.errorMessage === ''){ // able to submit\n        this.subscription = this._authenticationService\n          .resetPassword(this.credentials)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.credentials.password = '';\n          this.credentials.confirmPassword = '';\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n      }\n    }\n\n  _checkPasswords(){\n    let p = this.credentials.password;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Reset Password\n    \n      New Password\n      \n        \n        \n        Must have at least 6 characters\n        \n      \n    \n    \n    \n      Confirm\n      \n        \n\n      \n    \n    \n    Submit\n\n    \n      {{ successMessage }} Go sign in.\n    \n    \n      {{ errorMessage }}\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Reset Password          New Password                              Must have at least 6 characters                                Confirm                                Submit          {{ successMessage }} Go sign in.              {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenario.html":{"url":"interfaces/Scenario.html","title":"interface - Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/scenario.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed about each scenario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        purpose\n                                \n                                \n                                        relevance\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        startingPoint\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human-readable visible label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purpose\n                                    \n                                \n                                \n                                    \n                                        purpose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Goal for completing the scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relevance\n                                    \n                                \n                                \n                                    \n                                        relevance:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The reason this scenario is important for learning\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Short string ID for the scenario; used in the URL and for linking\nscenario to other objects\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startingPoint\n                                    \n                                \n                                \n                                    \n                                        startingPoint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of phage strains to begin the scenario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Scenario{\n  /**\n   * Human-readable visible label\n   */\n  label: string;\n  /**\n   * Short string ID for the scenario; used in the URL and for linking\n   * scenario to other objects\n   */\n  scenCode: string;\n  /**\n   * Goal for completing the scenario\n   */\n  purpose: string;\n  /**\n   * Description of phage strains to begin the scenario\n   */\n  startingPoint: string;\n  /**\n   * The reason this scenario is important for learning\n   */\n  relevance: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScenarioComponent.html":{"url":"components/ScenarioComponent.html","title":"component - ScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/scenario.component.ts\n\n\n    \n        Description\n    \n    \n        View component used to link the breadcrumb with the location\nmodule components or scenario list\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario\n            \n\n\n\n\n            \n                templateUrl\n                ./scenario.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * View component used to link the breadcrumb with the location\n * module components or scenario list\n */\n@Component({\n  selector: 'scenario',\n  templateUrl: './scenario.template.html'\n})\n\nexport class ScenarioComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScenarioModule.html":{"url":"modules/ScenarioModule.html","title":"module - ScenarioModule","body":"\n                   \n\n\n\n\n  Modules\n  ScenarioModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_ScenarioModule_imports\n\n\n\n\nListComponent\n\nListComponent\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/scenario.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ListComponent\n                            \n                            \n                                ScenarioComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ScenarioRoutes } from './scenario.routes';\nimport { ScenarioComponent } from './scenario.component';\nimport { ListComponent } from './list/list.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ScenarioRoutes)\n  ],\n  declarations: [\n    ScenarioComponent,\n    ListComponent\n  ]\n})\nexport class ScenarioModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScenarioResolver.html":{"url":"injectables/ScenarioResolver.html","title":"injectable - ScenarioResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ScenarioResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/scenario.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Resolves a route URL to get the scenario id (from the url)\nthen uses that to get the scenario label using scenario service\nThis is used to generate human-readable breadcrumb labels\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/scenario.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/scenario.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method required by implementation\nBased on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                current root URL\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe scenario object corresponding to do the url param ID if it exists\nor empty scenario if it does not exist\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { ScenarioService } from './scenario.service';\nimport { Scenario } from '../interfaces/scenario.interface';\n\n/**\n * Resolves a route URL to get the scenario id (from the url)\n * then uses that to get the scenario label using scenario service\n *\n * This is used to generate human-readable breadcrumb labels\n */\n@Injectable()\nexport class ScenarioResolver implements Resolve {\n\n  constructor(private _scenarioService: ScenarioService) { }\n\n  /**\n   * Method required by implementation\n   * Based on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n   *\n   * @param {ActivatedRouteSnapshot} route current root URL\n   * @param {RouterStateSanpshot} current route snapshot\n   *\n   * @returns {Scenario} - The scenario object corresponding to do the url param ID if it exists\n   - or empty scenario if it does not exist\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\n    const scenCode = route.params['scenId'];\n\n    if (scenCode) {\n      return this._scenarioService.getScenario(scenCode);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                            \n                                PeopleListNamesPipe\n                            \n                            \n                                PersonNamePipe\n                            \n                            \n                                PhageParentsPipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfirmDeleteDialogComponent\n                            \n                            \n                                    PeopleListNamesPipe\n                            \n                            \n                                    PersonNamePipe\n                            \n                            \n                                    PhageParentsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DndModule } from 'ng2-dnd';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { McBreadcrumbsModule } from 'ngx-breadcrumbs';\nimport { SkyhookDndModule } from 'angular-skyhook';\nimport { default as TouchBackend } from 'react-dnd-touch-backend';\n\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog.component';\n\nimport { PersonNamePipe } from '../pipes/person-name.pipe';\nimport { PeopleListNamesPipe } from '../pipes/people-list-names.pipe';\nimport { PhageParentsPipe } from '../pipes/phage-parents.pipe';\n\n@NgModule({\n    imports: [\n      CommonModule,\n      FormsModule,\n      DndModule.forRoot(),\n      NgbModule.forRoot(),\n      McBreadcrumbsModule.forRoot(),\n      SkyhookDndModule.forRoot({ backend: TouchBackend })\n    ],\n  declarations: [\n    PersonNamePipe,\n    PeopleListNamesPipe,\n    PhageParentsPipe,\n    ConfirmDeleteDialogComponent\n  ],\n    exports: [\n      CommonModule,\n      FormsModule,\n      DndModule,\n      NgbModule,\n      McBreadcrumbsModule,\n      PersonNamePipe,\n      PeopleListNamesPipe,\n      PhageParentsPipe,\n      SkyhookDndModule,\n      ConfirmDeleteDialogComponent\n    ],\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signin/signin.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signin\n            \n\n\n\n\n            \n                templateUrl\n                ./signin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signin/signin.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n@Component({\n    selector: 'signin',\n    templateUrl: './signin.template.html'\n})\nexport class SigninComponent {\n    errorMessage: string;\n    credentials: any = {};\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService,\n        private _router: Router) { }\n\n    signin() {\n        this.subscription = this._authenticationService\n          .signin(this.credentials)\n          .subscribe((result) => {\n          // TODO: update\n          this._authenticationService.setUser(result);\n          let redirect = this._authenticationService.redirectUrl ? this._authenticationService.redirectUrl : '/';\n          this._router.navigate([redirect]);\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign in\n    \n      Email\n      \n        \n      \n    \n    \n    \n      Password\n      \n        \n      \n    \n    {{errorMessage}}\n    \n      \n        Sign in \n      \n      \n        Forget password?\n      \n    \n\n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign in          Email                                      Password                            {{errorMessage}}                  Sign in                     Forget password?            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignoutComponent.html":{"url":"components/SignoutComponent.html","title":"component - SignoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signout/signout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signout\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signout/signout.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\n\n\n@Component({\n  selector: 'signout',\n  template: ''\n})\n\nexport class SignoutComponent{\n\n  private subscription: Subscription;\n\n  constructor(\n    private _authService: AuthenticationService,\n    private _router: Router\n  ){}\n\n  ngOnInit(){\n    this.subscription = this._authService.signout()\n      .subscribe((res)=>{\n        this._authService.setUser(null);\n        this._router.navigate(['/']);\n    })\n  }\n\n  /*ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }*/\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signup\n            \n\n\n\n\n            \n                templateUrl\n                ./signup.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                cPassword\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _reorderCourses\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _courseService: CourseService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signup/signup.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _reorderCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n_reorderCourses(courses: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/concat'\n\nimport { AuthenticationService } from '../authentication.service';\nimport { CourseService } from '../../admin/course/course.service';\n\n@Component({\n    selector: 'signup',\n    templateUrl: './signup.template.html'\n})\nexport class SignupComponent implements OnDestroy {\n    errorMessage: string = '';\n  private courses: string[] = [];\n    user: any = {};\n  private isDestroyed$: Subject;\n  private cPassword: string;\n\n    constructor(private _authenticationService: AuthenticationService,\n                 private _courseService: CourseService,\n        private _router: Router) {\n      this.isDestroyed$ = new Subject();\n    }\n\n  _reorderCourses(courses: any): any{\n    let na = courses.filter((c)=>{return c.courseNum === 'NA'});\n    let other = courses.filter((c)=>{\n      return c.courseNum !== 'NA'\n    });\n    return na.concat(other);\n  }\n\n  ngOnInit(){\n    this._courseService.getCourseList()\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        let tmp = this._reorderCourses(res);\n        this.courses = tmp;\n    }, (err)=>{\n      this.courses = [];\n    });\n  }\n\n    signup() {\n      if(this.user.course === undefined){\n        this.errorMessage = 'Select a course'\n      } else if(this.user.password !== this.cPassword){\n        this.errorMessage = 'Passwords must match'\n      } else {\n          this._authenticationService\n          .signup(this.user)\n      .takeUntil(this.isDestroyed$)\n          .subscribe((result) => {\n          this._authenticationService.setUser(result);\n          this._router.navigate(['/'])\n        },\n            (error) => {\n          this.errorMessage = error.error.message\n        });\n      }\n    }\n\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign up \n\n    \n      \n        First name\n        \n      \n\n      \n        Last name\n        \n      \n    \n    \n\n    \n      Email address\n      \n    \n    \n\n    \n      Course\n      \n        Select course\n        {{ course.courseNum }}\n      \n    \n    \n\n    \n      \n        Password\n        \n        \n        Must have at least 6 characters\n        \n      \n      \n          \n        \n      \n    \n    {{errorMessage}}\n    Sign up\n\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign up                   First name                            Last name                                Email address                        Course              Select course        {{ course.courseNum }}                                Password                        Must have at least 6 characters                                                    {{errorMessage}}    Sign up  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Student.html":{"url":"interfaces/Student.html","title":"interface - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed as a user using the app in scenarios\n\n            \n\n            \n                Extends\n            \n            \n                    _User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentFridge.html":{"url":"interfaces/StudentFridge.html","title":"interface - StudentFridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentFridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                Fridge information used by admin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        owner\n                                \n                                \n                                        scenario\n                                \n                                \n                                            Optional\n                                        strains\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, has access been granted for this user/scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, the deletion guesses by the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:     _User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Owner of the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenario\n                                    \n                                \n                                \n                                    \n                                        scenario:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario this fridge is for\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     StudentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StudentPhage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If fridge exists, the list of phage that are in this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentFridgeComponent.html":{"url":"components/StudentFridgeComponent.html","title":"component - StudentFridgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentFridgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-fridge.component.ts\n\n\n    \n        Description\n    \n    \n        Component to view the phage strains for a specific student\nand scenario\nAdmin is able to see each phage's mutations, deletions, comments, and possibly mutation guesses\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-fridge\n            \n\n\n\n\n            \n                templateUrl\n                ./student-fridge.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Protected\n                                fridge\n                            \n                            \n                                    Protected\n                                hasFridge\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                strainList\n                            \n                            \n                                    Private\n                                viewStrains\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonClass\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setPhage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Determine the CSS class for the view strains button depending on selected option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton determining classes for\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            View strains is \"all\"\ngetButtonClass('all') -> {'btn btn-small': true, 'btn-primary': true, 'btn-primary-outline': false}\ngetButtonClass('graded') -> {'btn btn-small': true, 'btn-primary': false, 'btn-primary-outline': true}\n\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    classes which appy to this button in the form {\"class\": boolean, ...}\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            When destorying the component, unsubscribe from services and\nobservables to prevent memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nGet studentId, scenarioId, and admin\nGet the fridge\nIf the fridge exists\n3a. add the \"guesses\" to each strain\n3b. sort the strains by strain number\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPhage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPhage(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            update the list of visible phage appropriately\nCalled on (click) of \"View Strain\" button\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton which was clicked;\nShould be one of [\"all\", \"graded\"]\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:59\n                            \n                        \n\n                \n                    \n                        Error message from the server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fridge:     StudentFridge\n\n                    \n                \n                    \n                        \n                            Type :     StudentFridge\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:30\n                            \n                        \n\n                \n                    \n                        Fridge object (if it exists)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            hasFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasFridge:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:34\n                            \n                        \n\n                \n                    \n                        If fridge exists determine by if this.fridge has strains\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:38\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:42\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            strainList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        strainList:     StudentPhage[]\n\n                    \n                \n                    \n                        \n                            Type :     StudentPhage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:55\n                            \n                        \n\n                \n                    \n                        List of phage currently being viewed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewStrains\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewStrains:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:51\n                            \n                        \n\n                \n                    \n                        Option to show all strains in fridge or\nonly strains of interest for grading (unknown\nand submitted)\nShould be \"all\" or \"graded\"\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\n\nimport { Course, AdminStudent, Scenario, StudentPhage, StudentFridge } from '../../../interfaces';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * Component to view the phage strains for a specific student\n * and scenario\n *\n * Admin is able to see each phage's mutations, deletions, comments, and possibly mutation guesses\n */\n@Component({\n  selector: 'student-fridge',\n  templateUrl: './student-fridge.template.html'\n})\n\nexport class StudentFridgeComponent implements OnInit, OnDestroy {\n  /**\n   * Fridge object (if it exists)\n   */\n  protected fridge: StudentFridge;\n  /**\n   * If fridge exists determine by if this.fridge has strains\n   */\n  protected hasFridge: boolean = false;\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n  private isDestroyed$: Subject;\n   /**\n   * Subscription for URL parameters\n   */\n  private paramObserver: any;\n\n  /**\n   * Option to show all strains in fridge or\n   * only strains of interest for grading (unknown\n   * and submitted)\n   *\n   * Should be `\"all\"` or `\"graded\"`\n   */\n  private viewStrains: string = 'all';\n  /**\n   * List of phage currently being viewed\n   */\n  private strainList: StudentPhage[];\n  /**\n   * Error message from the server\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _studentService: StudentService,\n    private _authService: AuthenticationService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize the view\n   * 1. Get studentId, scenarioId, and admin\n   * 2. Get the fridge\n   * 3. If the fridge exists\n   * 3a. add the \"guesses\" to each strain\n   * 3b. sort the strains by strain number\n   */\n  ngOnInit(){\n    this.paramObserver = this._route.params.subscribe(params => {\n      let studentId = params['studentId'];\n      let scenId = params['scenId'];\n      let admin = this._authService.getUser();\n\n      this._studentService.getFridge(admin.id, studentId, scenId)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((fridge) => {\n              this.fridge = fridge;\n              this.hasFridge = (fridge.strains !== undefined);\n              if(this.hasFridge){\n                let guesses = JSON.parse(this.fridge.guesses);\n                for(let strain of this.fridge.strains){\n                  let x = guesses[strain.strainNum];\n                  if(x){\n                    strain.guesses = x;\n                  } else{\n                    strain.guesses = [];\n                  }\n                }\n                this.fridge.strains.sort((a,b)=>{return a.strainNum - b.strainNum});\n              }\n              this.setPhage('all');\n            },\n                (error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Determine the CSS class for the view strains button depending on selected option\n   *\n   * @param {string} src - button determining classes for\n   *\n   * @returns {Object} classes which appy to this button in the form {\"class\": boolean, ...}\n   *\n   * @example View strains is \"all\"\n   * getButtonClass('all') -> {'btn btn-small': true, 'btn-primary': true, 'btn-primary-outline': false}\n   * getButtonClass('graded') -> {'btn btn-small': true, 'btn-primary': false, 'btn-primary-outline': true}\n   */\n  getButtonClass(src: string): Object{\n    return {\n      'btn btn-sm': true,\n      'btn-primary': (src === this.viewStrains),\n      'btn-outline-primary': (src !== this.viewStrains)\n    }\n  }\n\n  /**\n   * update the list of visible phage appropriately\n   *\n   * Called on `(click)` of \"View Strain\" button\n   * @param {string} src - button which was clicked;\n   * Should be one of `[\"all\", \"graded\"]`\n   */\n  setPhage(src: string){\n    this.viewStrains = src;\n    if(this.viewStrains === 'all'){\n      this.strainList = this.fridge.strains;\n    } else {\n      this.strainList = this.fridge.strains.filter((strain)=>{\n        if(strain.phageType === 'unknown'){\n          return true;\n        } else if(strain.phageType === 'user' && strain.submitted){\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n\n  /**\n   * When destorying the component, unsubscribe from services and\n   * observables to prevent memory leak\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        {{ fridge.owner | personName }}\n      \n    \n\n    \n      {{ fridge.scenario.scenCode }}\n      {{ fridge.scenario.label }}\n      \n        Access granted: {{ fridge.accessGranted }}\n      \n    \n\n    \n      Fridge does not exist yet\n    \n    \n    \n      \n        \n          All Strains\n          Graded Strains\n        \n      \n      \n        \n          \n        \n       \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                      {{ fridge.owner | personName }}                    {{ fridge.scenario.scenCode }}      {{ fridge.scenario.label }}              Access granted: {{ fridge.accessGranted }}                    Fridge does not exist yet                                    All Strains          Graded Strains                                                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentFridgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentIndivComponent.html":{"url":"components/StudentIndivComponent.html","title":"component - StudentIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-indiv/student-indiv.component.ts\n\n\n    \n        Description\n    \n    \n        Component to view information for a single student\nThis includes email/name/role information and access status\nfor all scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-indiv\n            \n\n\n\n\n            \n                templateUrl\n                ./student-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                newRole\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                roles\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Protected\n                                student\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _callDelete\n                            \n                            \n                                checkDelete\n                            \n                            \n                                clickButton\n                            \n                            \n                                deleteDisabled\n                            \n                            \n                                getScenStatus\n                            \n                            \n                                getStudentCourse\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                roleButtonClass\n                            \n                            \n                                roleDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _studentService: StudentService, _scenarioService: ScenarioService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _callDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _callDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:264\n                            \n                        \n\n\n                \n                    \n                            Helper function which implements delete student after user\nconfirmed deletion\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:246\n                            \n                        \n\n\n                \n                    \n                            \nwhen clicking delete button, open a modal dialog to confirm delete\nif confirm, delete and redirect to students\notherwise, do nothing\n\nCalled on (click) of the \"Delete\" button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickButton\n                            \n                            \n                        \n                    \n                \n                \n                    \nclickButton(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:211\n                            \n                        \n\n\n                \n                    \n                            When clicking a role button, update the student role\nby calling student service\nCalled on (click) of one of the role buttons\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrole of button pushed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:227\n                            \n                        \n\n\n                \n                    \n                            Determine if delete button should be disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if viewing page of logged in user or if student is an admin\nfalse otherwise\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScenStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScenStatus(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            Return formatted string based on if access granted for scenario\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario to look up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \"Access granted\", \"Access not granted\", or \"NA\"\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudentCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudentCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            \nGet a formatted HTML string based on the student\nIf student has a course, returns link to the course page\nIf student doesn't have a course, returns 'No course'\n\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    formatted HTML\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:148\n                            \n                        \n\n\n                \n                    \n                            Grant access for a specific scenario by calling student service\nCalled on (click) of one of the scenario buttons\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                scenario to grant access for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:279\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing to the services\nThis prevents a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Initialize component\n\nGet logged in user\nGet id of student of interest from URL\nGet the student's info\nGet list of all scenarios\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Determine CSS classes for each role button based on the\nstudent's current role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Current student has role &quot;student&quot;\nroleButtonClass(&#39;student&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: true, &#39;btn-secondary-outline&#39;: false}\nroleButtonClass(&#39;admin&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: false, &#39;btn-secondary-outline&#39;: true}\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    possible classes with true/false as applicable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleDisabled(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Determine if a role toggle button should be disabled\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    disable for roles greater than current user\nand if viewing page of current user\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:54\n                            \n                        \n\n                \n                    \n                        Logged in user who must be an admin or instructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:67\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:46\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple\nobservables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:62\n                            \n                        \n\n                \n                    \n                        New role to change to if allowed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:50\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roles:     \n\n                    \n                \n                    \n                        \n                            Default value : StudentRolesArray\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:58\n                            \n                        \n\n                \n                    \n                        List of possible roles\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:41\n                            \n                        \n\n                \n                    \n                        List of all scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            student\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        student:     AdminStudent\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:37\n                            \n                        \n\n                \n                    \n                        Student we are viewing\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil';\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../student.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { StudentRolesArray } from '../student.roles';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { User } from '../../../interfaces/user.interface';\nimport { Course } from '../../../interfaces/course.interface';\nimport { AdminStudent } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * Component to view information for a single student\n * This includes email/name/role information and access status\n * for all scenarios\n */\n@Component({\n    selector: 'student-indiv',\n    templateUrl: './student-indiv.template.html'\n})\n\nexport class StudentIndivComponent implements OnInit, OnDestroy {\n\n  /**\n   * Student we are viewing\n   */\n    protected student: AdminStudent;\n  /**\n   * List of all scenarios\n   */\n    private scenarios: Scenario[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple\n   * observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Subscription for URL parameters\n   */\n    private paramObserver: any;\n  /**\n   * Logged in user who must be an admin or instructor\n   */\n    private _admin: User;\n  /**\n   * List of possible roles\n   */\n    private roles = StudentRolesArray;\n  /**\n   * New role to change to if allowed\n   */\n    private newRole: string;\n\n  /**\n   * Potential error message\n   */\n    private errorMessage: string = '';\n\n    constructor(private _router: Router,\n        private _route: ActivatedRoute,\n        private _authService: AuthenticationService,\n        private _studentService: StudentService,\n        private _scenarioService: ScenarioService,\n        private _modalService: NgbModal) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize component\n   * 1. Get logged in user\n   * 2. Get id of student of interest from URL\n   * 3. Get the student's info\n   * 4. Get list of all scenarios\n   */\n    ngOnInit() {\n        this._admin = this._authService.getUser();\n        this.paramObserver = this._route.params.subscribe(params => {\n            let studentId = params['studentId'];\n            this._studentService.getStudent(this._admin.id, studentId)\n                .takeUntil(this.isDestroyed$)\n                .subscribe((info) => {\n                    this.student = info;\n                    this.newRole = this.student.role;\n                    this._scenarioService.listScenarios()\n                        .takeUntil(this.isDestroyed$)\n                        .subscribe((scens) => {\n                            this.scenarios = scens;\n                        });\n                },\n                (error) => {\n                    this.errorMessage = readErrorMessage(error);\n                });\n\n        });\n    }\n\n  /**\n   * Return formatted string based on if access granted for scenario\n   *\n   * @param {string} scenCode - scenario to look up\n   *\n   * @returns {string} `\"Access granted\"`, `\"Access not granted\"`, or `\"NA\"`\n   */\n    getScenStatus(scenCode: string): string {\n        let isGranted = this.student.accessGranted[scenCode];\n        if (isGranted === true) {\n            return 'Access granted'\n        } else if (isGranted === false) {\n            return 'Access not granted'\n        } else {\n            return 'NA'\n        }\n    }\n\n  /**\n   * - Get a formatted HTML string based on the student\n   * - If student has a course, returns link to the course page\n   * - If student doesn't have a course, returns 'No course'\n   *\n   * @returns {string} formatted HTML\n   */\n    getStudentCourse(): string {\n        let s: AdminStudent = this.student;\n        if (s.course) {\n            return 's.course.courseNum';\n        } else {\n            return 'No course';\n        }\n    }\n\n  /**\n   * Grant access for a specific scenario by calling student service\n   *\n   * Called on `(click)` of one of the scenario buttons\n   *\n   * @param {string} scenCode scenario to grant access for\n   */\n    grantAccess(scenCode: string) {\n        this._studentService.grantScenAccess(this._admin.id, this.student.userId, scenCode, true)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                if (res !== undefined && res !== null) {\n                  this.student = res;\n                }\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if a role toggle button should be disabled\n   *\n   * @param {string} src - name of button/role\n   *\n   * @returns {boolean} disable for roles greater than current user\n   * and if viewing page of current user\n   */\n    roleDisabled(src: string): boolean {\n        if (this._admin === undefined) {\n            return false\n        } else if (this.student.userId === this._admin.id) {\n            return true;\n        } else if (src === 'admin' && this._admin.role  {'btn btn-small': true, 'bth-secondary': true, 'btn-secondary-outline': false}\n   * roleButtonClass('admin') -> {'btn btn-small': true, 'bth-secondary': false, 'btn-secondary-outline': true}\n   */\n    roleButtonClass(src: string): Object {\n        return {\n            'btn btn-sm': true,\n            'btn-outline-secondary': src !== this.student.role,\n            'btn-secondary': src === this.student.role\n        }\n    }\n\n  /**\n   * When clicking a role button, update the student role\n   * by calling student service\n   *\n   * Called on `(click)` of one of the role buttons\n   *\n   * @param {string} src - role of button pushed\n   */\n    clickButton(src: string) {\n        this._studentService.setStudentRole(this._admin.id, this.student.userId, src)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                this.student = res;\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if delete button should be disabled\n   *\n   * @returns {boolean} - `true` if viewing page of logged in user or if student is an admin\n   * `false` otherwise\n   */\n  deleteDisabled(){\n    if(this._admin === undefined){\n      return true;\n    } else if(this.student.userId === this._admin.id){\n      return false;\n    } else if(this.student.role === 'admin'){\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * - when clicking delete button, open a modal dialog to confirm delete\n   * - if confirm, delete and redirect to students\n   * - otherwise, do nothing\n   *\n   * Called on `(click)` of the \"Delete\" button\n   */\n  checkDelete(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDelete();\n      }\n    }, (dismiss)=>{\n      // do nothing\n      return;\n    });\n  }\n\n  /**\n   * Helper function which implements delete student after user\n   * confirmed deletion\n   */\n  protected _callDelete(){\n    this._studentService.deleteStudent(this._admin.id, this.student.userId)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/students']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * Destroy the component by unsubscribing to the services\n   * This prevents a memory leak\n   */\n    ngOnDestroy() {\n        this.paramObserver.unsubscribe();\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n\n    }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          \n            {{ student | personName }}\n          \n        \n        \n          Delete\n        \n      \n\n      \n        \n          Email\n        \n        {{ student.email }}\n      \n\n      \n        \n          Course\n        \n        \n          {{ student.course.courseNum }}\n          No course\n        \n      \n\n      \n        Role\n        \n          \n          {{ role.label }}\n        \n        \n      \n      \n\n    \n    \n\n    \n      Scenarios\n      \n        \n          \n            {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}\n          \n          \n            Grant access\n            View fridge\n          \n        \n        \n      \n      \n    \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                            {{ student | personName }}                                    Delete                                      Email                {{ student.email }}                              Course                          {{ student.course.courseNum }}          No course                            Role                            {{ role.label }}                                              Scenarios                                    {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}                                Grant access            View fridge                                                  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentListComponent.html":{"url":"components/StudentListComponent.html","title":"component - StudentListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-list/student-list.component.ts\n\n\n    \n        Description\n    \n    \n        \nComponent which lists students dependent on the role of logged in user;\nif \"admin\", all users in the system\nif \"instr\", all users in courses instr teaches\n\n\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-list\n            \n\n\n\n\n            \n                templateUrl\n                ./student-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing from all observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nget logged in user id\nget the list of students\norder the list of students\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error message from server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        List of students\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { AdminStudent, sortStudents } from '../../../interfaces/student.interface';\n\n/**\n * - Component which lists students dependent on the role of logged in user;\n  * - if `\"admin\"`, all users in the system\n  * - if `\"instr\"`, all users in courses instr teaches\n */\n@Component({\n    selector: 'student-list',\n    templateUrl: './student-list.template.html'\n})\nexport class StudentListComponent implements OnInit, OnDestroy {\n  /**\n   * List of students\n   */\n    private students: AdminStudent[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Error message from server\n   */\n    private errorMessage: string = '';\n\n    constructor(\n        private _studentService: StudentService,\n        private _authService: AuthenticationService\n    ) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the view\n   * 1. get logged in user id\n   * 2. get the list of students\n   * 3. order the list of students\n   */\n    ngOnInit() {\n        let admin = this._authService.getUser();\n        this._studentService.listStudents(admin.id)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((students) => {\n                this.students = students.sort(sortStudents);\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Destory the component by unsubscribing from all observables\n   */\n    ngOnDestroy() {\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n    }\n}\n\n    \n\n    \n        \nStudents\n\n  {{ errorMessage }}\n  \n      \n      \n        {{student | personName:true}}\n        {{student.course.courseNum}}\n        {{student.role}}\n      \n    \n   \n \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Students  {{ errorMessage }}                      {{student | personName:true}}        {{student.course.courseNum}}        {{student.role}}              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n  Modules\n  StudentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_imports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/student/student.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for admin-regulated student things like setting the\nrole, viewing fridges for grading, and listing all students\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PhageDeletionsPipe\n                            \n                            \n                                PhageGuessesPipe\n                            \n                            \n                                PhageMutationsPipe\n                            \n                            \n                                StudentFridgeComponent\n                            \n                            \n                                StudentIndivComponent\n                            \n                            \n                                StudentListComponent\n                            \n                            \n                                StudentPhageComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     StudentResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { StudentRoutes } from './student.routes';\n\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { StudentIndivComponent } from './student-indiv/student-indiv.component';\nimport { StudentFridgeComponent } from './student-fridge/student-fridge.component';\nimport { StudentPhageComponent } from './student-fridge/student-phage.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { StudentResolver } from './student.resolver';\nimport { PhageGuessesPipe } from '../../pipes/phage-guesses.pipe';\nimport { PhageMutationsPipe } from '../../pipes/phage-mutations.pipe';\nimport { PhageDeletionsPipe } from '../../pipes/phage-deletions.pipe';\n\n/**\n * Module for admin-regulated student things like setting the\n * role, viewing fridges for grading, and listing all students\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(StudentRoutes)\n  ],\n  declarations: [\n    StudentListComponent,\n    StudentIndivComponent,\n    StudentFridgeComponent,\n    StudentPhageComponent,\n    PhageGuessesPipe,\n    PhageMutationsPipe,\n    PhageDeletionsPipe\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    StudentResolver\n  ]\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentPhage.html":{"url":"interfaces/StudentPhage.html","title":"interface - StudentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information about the phage used for admin\nand grading\n\n            \n\n            \n                Extends\n            \n            \n                    FridgePhage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        mutationList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop location of deleetion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     boolean[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deletion guesses from the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutationList\n                                    \n                                \n                                \n                                    \n                                        mutationList:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentPhageComponent.html":{"url":"components/StudentPhageComponent.html","title":"component - StudentPhageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentPhageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-phage.component.ts\n\n\n    \n        Description\n    \n    \n        Small component which encompasses a single phage strain being viewed\nwithin a student's fridge\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-phage\n            \n\n\n\n\n            \n                templateUrl\n                ./student-phage.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatPhageType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-phage.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                        The phage which the component is created for\n\n                            \n                            Type:    StudentPhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatPhageType\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatPhageType()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Produces formatted string based on phage type and if phage is\nsubmitted to be graded\n\n\n                            \n                                    Example :\n                                        \n                                            reference phage -&gt; &quot;REFERENCE&quot;\nscenario unknown phage -&gt; &quot;UNKOWN&quot;\nuser phage, not sumitted -&gt; &quot;USER&quot;\nsubmitted phage -&gt; &quot;SUBMISSION&quot;\n                                        \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    formatted string\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input} from '@angular/core';\n\nimport { StudentPhage } from '../../../interfaces/phage.interface';\n\n/**\n * Small component which encompasses a single phage strain being viewed\n * within a student's fridge\n */\n@Component({\n  selector: 'student-phage',\n  templateUrl: './student-phage.template.html'\n})\n\nexport class StudentPhageComponent{\n\n  /**\n   * The phage which the component is created for\n   */\n  @Input() phage: StudentPhage;\n\n  constructor(){}\n\n  /**\n   * Produces formatted string based on phage type and if phage is\n   * submitted to be graded\n   *\n   * @returns {string} formatted string\n   *\n   * @example\n   * reference phage -> \"REFERENCE\"\n   * scenario unknown phage -> \"UNKOWN\"\n   * user phage, not sumitted -> \"USER\"\n   * submitted phage -> \"SUBMISSION\"\n   */\n  formatPhageType(): string{\n    if(this.phage){\n      let t = this.phage.phageType;\n      if(this.phage.phageType === 'user' && this.phage.submitted){\n        return 'SUBMISSION'\n      } else {\n        return this.phage.phageType.toUpperCase();\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n    \n        \n\n  {{ phage.strainNum + 1 }}\n\n\n\n    \n      {{ formatPhageType() }}\n    \n  \n    \n  \n \n\n  \n    Comment\n    {{ phage.comment }}\n  \n   0\">\n    Mutations\n    \n      {{ phage.mutationList | phageMutations }}\n    \n  \n  \n   0\">\n    Deletion\n    \n      {{phage.deletion | phageDeletions}}\n    \n  \n  \n   0\">\n    Guess\n    \n      {{ phage.guesses | phageGuesses }}\n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ phage.strainNum + 1 }}          {{ formatPhageType() }}                   Comment    {{ phage.comment }}     0\">    Mutations          {{ phage.mutationList | phageMutations }}           0\">    Deletion          {{phage.deletion | phageDeletions}}           0\">    Guess          {{ phage.guesses | phageGuesses }}        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentPhageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentResolver.html":{"url":"injectables/StudentResolver.html","title":"injectable - StudentResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.resolver.ts\n        \n\n            \n                Description\n            \n            \n                \nNeeded for breadcrumbs\nResolves the studentId in the URL to the student it represents\n\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Based on the URL studentId parameter, find the user\nit belongs to\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The student the id belongs to\nor an empty observable if the id doesn't belong to anyone\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { StudentService } from './student.service';\nimport { AdminStudent } from '../../interfaces/student.interface';\n\n/**\n * - Needed for breadcrumbs\n * - Resolves the studentId in the URL to the student it represents\n */\n@Injectable()\nexport class StudentResolver implements Resolve {\n\n  constructor(private _studentService: StudentService,\n              private _authService: AuthenticationService) { }\n\n  /**\n   * Based on the URL `studentId` parameter, find the user\n   * it belongs to\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {Observable} The student the id belongs to\n   * or an empty observable if the id doesn't belong to anyone\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n\n    const studentNum = route.params['studentId'];\n\n    if (studentNum) {\n      return this._studentService.getStudent(admin.id, studentNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.service.ts\n        \n\n            \n                Description\n            \n            \n                Service which deals with all student-related backend calls\nfrom an admin\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteStudent\n                            \n                            \n                                getFridge\n                            \n                            \n                                getStudent\n                            \n                            \n                                grantScenAccess\n                            \n                            \n                                listStudents\n                            \n                            \n                                setStudentRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:73\n                            \n                        \n\n\n                \n                    \n                            Delete a student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student to delete\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nstudent who was just deleted\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFridge(adminId: number, studentId: number, scenId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Get scenario fridge for a student; includes fridge details such as\nfridge strains and guesses\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario Id for fridge to find\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    the student's fridge or error\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Get details about a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to be looked up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ndetails about specified student\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantScenAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Update scenario access for a student; this deletes the existing\nfridge\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        updatedState\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ntrue to grant access, false to revoke access\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    updated student\n\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistStudents(adminId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            List of students, content is dependent of logged in user role\nIf admin, return all students/users\nIf instr, returns students of courses instr teachs\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nlist of students\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStudentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStudentRole(adminId: number, studentId: number, role: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Update the role (admin, instr, student) of another student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to update\n\n\n                                                        \n                                                \n                                                \n                                                        role\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nnew role to be assigned; one of: \"admin\", \"instr\", \"student\"\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe updated student\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/admin'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AdminStudent, StudentFridge } from '../../interfaces';\n\n/**\n * Service which deals with all student-related backend calls\n * from an admin\n */\n@Injectable()\nexport class StudentService {\n  \n  private _baseURL = 'api/admin';\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * List of students, content is dependent of logged in user role\n   *\n   * If `admin`, return all students/users\n   * \n   * If `instr`, returns students of courses instr teachs\n   *\n   * @param {number} adminId - userId of logged in user\n   *\n   * @returns {AdminStudent[]} - list of students\n   */\n  listStudents(adminId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students`);\n  }\n\n  /**\n   * Get details about a student\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to be looked up\n   *\n   * @returns {Observable} - details about specified student\n   * - or other server/database error\n   */\n  getStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Update the role (admin, instr, student) of another student/user\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to update\n   * @param {string} role - new role to be assigned; one of: `\"admin\", \"instr\", \"student\"`\n   *\n   * @returns {Observable} - the updated student\n   * - or other server/database error\n   */\n  setStudentRole(adminId: number, studentId: number, role: string): Observable{\n    let body = {role: role};\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}`, body);\n  }\n\n  /**\n   * Delete a student/user\n   *\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student to delete\n   *\n   * @returns {Observable} - student who was just deleted\n   * - or other server/database error\n   */\n  deleteStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .delete(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Get scenario fridge for a student; includes fridge details such as\n   * fridge strains and guesses\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {string} scenId - scenario Id for fridge to find\n   *\n   * @returns{Observable} the student's fridge or error\n   */\n  getFridge(adminId: number, studentId: number, scenId: string): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`);\n  }\n\n  /**\n   * Update scenario access for a student; this deletes the existing\n   * fridge\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {boolean} updatedState - true to grant access, false to revoke access\n   *\n   * @returns {Observable} updated student\n   * - or other server/database error\n   */\n  grantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean): Observable{\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`, {access: updatedState});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdatePasswordComponent.html":{"url":"components/UpdatePasswordComponent.html","title":"component - UpdatePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UpdatePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/update-password/update-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a logged in user to update their password\nby entering their current password then the new password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-password\n            \n\n\n\n\n            \n                templateUrl\n                ./update-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                passwordMessage\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/update-password/update-password.component.ts:41\n                            \n                        \n\n                \n                    \n                            Class constructor for this component;\nIncludes router (for navigation) and services to fetch info\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Navigate to a page not using the browser\n\n                                                        \n                                                \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service when sends request to backend and handles updating the exisitng information\n\n                                                        \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Does various checks to ensure the password fields are valid\n\nAll fields are filled in\nNew password is different from old password\nConfirm password matches new password\n\n\n\n                            \n                            \n                            \n                                Returns :     \"Enter old password\" | \"Enter new password\" | \"Confirm new password\" | \"New password cannot the s...\n\n                            \n                                \n                                    error message if at least one condition isn't met or '' if everything is valid\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe to services/streams\nto prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet the logged in user info\nSet up the credentials with email address\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Attempt to update the password\nIf successful, redirects to profile page\nIf there's an error, displays error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:29\n                            \n                        \n\n                \n                    \n                        Password information include old password, new password, and confirm new password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:37\n                            \n                        \n\n                \n                    \n                        potential backend error message displayed prominantly\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:33\n                            \n                        \n\n                \n                    \n                        State to keep track of compoenent alive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            passwordMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:41\n                            \n                        \n\n                \n                    \n                        Error message about submission and why the submission didn't work as expected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        The logged in user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Component for a logged in user to update their password\n * by entering their current password then the new password\n */\n@Component({\n  selector: 'user-password',\n  templateUrl: './update-password.template.html'\n})\n\nexport class UpdatePasswordComponent{\n\n  /**\n   * The logged in user\n   */\n  private user: User;\n  /**\n   * Password information include old password, new password, and confirm new password\n   */\n  private credentials: any;\n  /**\n   * State to keep track of compoenent alive\n   */\n  private isDestroyed$: Subject;\n  /**\n   * potential backend error message displayed prominantly\n   */\n  private errorMessage: string = '';\n  /**\n   * Error message about submission and why the submission didn't work as expected\n   */\n  private passwordMessage: string = '';\n\n  /**\n   * Class constructor for this component;\n   * Includes router (for navigation) and services to fetch info\n   *\n   * @param {router} _router Navigate to a page not using the browser\n   * @param {ProfileService} _profileService Service when sends request to backend and handles updating the exisitng information\n   */\n  constructor(\n    private _router: Router,\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n      this.credentials = {\n        password: '',\n        newPassword: '',\n        confirmPassword: ''\n      };\n    }\n\n  /**\n   * Initialize the component\n   * 1. Get the logged in user info\n   * 2. Set up the credentials with email address\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.user = res;\n      this.credentials['username'] = res.email;\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempt to update the password\n   * If successful, redirects to profile page\n   * If there's an error, displays error message\n   */\n  updatePassword(){\n    // do checks\n    this.passwordMessage = this._checkPasswords();\n    if(this.passwordMessage === ''){\n      // can update\n      this._profileService.updatePassword(this.user.id, this.credentials)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n        this._router.navigate(['/profile']);\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n    } else {\n      this.errorMessage = '';\n    }\n  }\n\n  /**\n   * Does various checks to ensure the password fields are valid\n   * 1. All fields are filled in\n   * 2. New password is different from old password\n   * 3. Confirm password matches new password\n   *\n   * @returns {string} error message if at least one condition isn't met or `''` if everything is valid\n   */\n  protected _checkPasswords(){\n    let p = this.credentials.password;\n    let n = this.credentials.newPassword;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter old password';\n    } else if(n === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p === n){\n      return 'New password cannot the same as the old password';\n    } else if(n !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * On component destruction, unsubscribe to services/streams\n   * to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Update Password\n  \n  {{ errorMessage }}\n  \n    \n      Email\n      \n        \n      \n     \n    \n      Old Password\n      \n        \n      \n     \n    \n      New Password\n      \n        \n      \n     \n    \n      Confirm Password\n      \n        \n      \n     \n    {{passwordMessage}}\n    Submit\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Password    {{ errorMessage }}            Email                                   Old Password                                   New Password                                   Confirm Password                             {{passwordMessage}}    Submit  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdatePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                The logged in user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User e-mail; also used for logging in\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to indicate user when making calls to\nthe server\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role to indicate what areas of the app are accesible to the user;\n0 = student, 1 = instr, 2 = admin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/user-profile/user-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Main user profile component; aimed for use to edit name and\nemail address. Also access update password link to update password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                            Class constructor; includes services to fetch info\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service for updating the information\n\n                                                        \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get the current user information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from services to prevent\nmemory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Initialize the component on creation\n\nGet the logged in user\nSave the user's details to object to be able to edit\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Attempts to update the profile if possible or set error\nmessage if there's a problem\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                        State to maintain open subscriptions until component is destoryed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:24\n                            \n                        \n\n                \n                    \n                        Database user id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                        User details (as an object)\nCurrently includes: firstName, lastName, and email\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Main user profile component; aimed for use to edit name and\n * email address. Also access update password link to update password\n */\n@Component({\n  selector: 'user-profile',\n  templateUrl: './user-profile.template.html'\n})\n\nexport class UserProfileComponent{\n\n  /**\n   * Database user id\n   */\n  private userId: number;\n  /**\n   * User details (as an object)\n   * Currently includes: firstName, lastName, and email\n   */\n  private userInfo: any;\n  /**\n   * State to maintain open subscriptions until component is destoryed\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential error message\n   */\n  private errorMessage: string = '';\n\n  /**\n   * Class constructor; includes services to fetch info\n   *\n   * @param {ProfileService} _profileService Service for updating the information\n   * @param {AuthenticationService} _authService Service to get the current user information\n   */\n  constructor(\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the component on creation\n   * 1. Get the logged in user\n   * 2. Save the user's details to object to be able to edit\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.userId = res.id;\n      this.userInfo = {\n        firstName: res.firstName,\n        lastName: res.lastName,\n        email: res.email\n      }\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempts to update the profile if possible or set error\n   * message if there's a problem\n   */\n  updateProfile(){\n    this._profileService.editProfile(this.userId, this.userInfo)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.userInfo = {firstName: updated.firstName,\n                      lastName: updated.lastName,\n                      email: updated.email};\n      this._authService.setUser(updated);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * On component destruction, unsubscribe from services to prevent\n   * memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Profile\n  \n    {{ errorMessage }}\n  \n  \n  Update Password\n    \n  \n    \n      \n        First Name\n        \n       \n\n      \n        Last Name\n        \n       \n     \n    \n      \n        Email\n        \n       \n     \n    Submit\n   \n\n\n \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Profile      {{ errorMessage }}      Update Password                        First Name                             Last Name                                      Email                        Submit    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_User.html":{"url":"interfaces/_User.html","title":"interface - _User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  _User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                base user class which is extended by other interfaces\nand rarely used on its own\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User first name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User last name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to index users\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n[unreleased]\n\nUPDATED responses on error in app controllers\nADDED check for null phage from DB when trying to create a plate\nFIXED testing error with deleting fridge\n\n[v1.0.9] - 2018-04-16\n\nfixed issue with potential incorrect error dropping bact tube to plate directly\nUPDATED plexer submission\nwhen submit button is pushed, a spinner appears in the top left of the results table and the submit button is disabled\nspinner is hidden and button is active once the results come back from the server\nthis will hopefully minimize students sending the same plexer request several times bc they weren't sure if it went through--this causes server overload\n\n\n\n[v1.0.8] - 2018-02-26\n\nSave parent id of phage from plate to fridge\nGet parent info about phage when getting fridge\nDisplay phage parent strain number in dialog\n\n[v1.0.7] - 2018-02-23\n\nUPDATED the way phage mutations are stored to save memory\nupdated all genetics components\nupdated model\nupdated front end interface and pipe\n\n\nUPDATED on rest bacteria, only WT-like genotypes sent to client so smaller data transfer\nREMOVED rate limiting (causing server errors)\nFIXED over capacity for plexer\nADDED \"Page not found\" component for invalid URL\nADDED shuffle plaque lists to force mutants and recombinants to the front\nWhen small/large plaques 100-400\nHandle and shuffle each separately\n\n\n\n[v1.0.6] - 2018-02-20\n\nFIXED recombination error which was under-generating recombinants\nADDED ability to delete non-admin users\nADDED ability to delete course\nREMOVED revoke access option on user fridges\n\n[v1.0.5]\n\nADDED rate limiting\ngenetics routes\nuser auth/update routes\n\n\nUPDATED backend genetics testing\n\n[v1.0.4] - 2018-01-24\n\nADDED Ability to reset password\nsends email to user if user exists\npassword reset token expires after an hour\n\n\nADDED SSL support\nFIXED bugs\ngrant scenario access\nSign out blocking issue\n\n\n\n[v1.0.3] - 2018-01-23\n\nADDED User profile and update password pages\nADDED user controller tests\n\n[v1.0.2] - 2018-01-10\n\nFIXED issues with genetics logic\noverflow on REST bact\nnum phage generated with uneven input phage numbers\nupdated corresponding tests\n\n\nswitched console output to debug\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    public/app/admin/admin-home/admin-home.component.ts\n            \n            \n                component\n            \n            \n                AdminHomeComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.guard.service.ts\n            \n            \n                injectable\n            \n            \n                AdminGuard\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-create/course-create.component.ts\n            \n            \n                component\n            \n            \n                CourseCreateComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-edit/course-edit.component.ts\n            \n            \n                component\n            \n            \n                CourseEditComponent\n            \n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-indiv/course-indiv.component.ts\n            \n            \n                component\n            \n            \n                CourseIndivComponent\n            \n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-list/course-list.component.ts\n            \n            \n                component\n            \n            \n                CourseListComponent\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-scenario/course-scenario.component.ts\n            \n            \n                component\n            \n            \n                CourseScenarioComponent\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.resolver.ts\n            \n            \n                injectable\n            \n            \n                CourseResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    public/app/admin/not-auth/not-auth.component.ts\n            \n            \n                component\n            \n            \n                NotAuthComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-fridge.component.ts\n            \n            \n                component\n            \n            \n                StudentFridgeComponent\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-phage.component.ts\n            \n            \n                component\n            \n            \n                StudentPhageComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-indiv/student-indiv.component.ts\n            \n            \n                component\n            \n            \n                StudentIndivComponent\n            \n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-list/student-list.component.ts\n            \n            \n                component\n            \n            \n                StudentListComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.resolver.ts\n            \n            \n                injectable\n            \n            \n                StudentResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.roles.ts\n            \n            \n                variable\n            \n            \n                StudentRolesArray\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.service.ts\n            \n            \n                injectable\n            \n            \n                StudentService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    public/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/authentication/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    public/app/authentication/forget-password/forget-password.component.ts\n            \n            \n                component\n            \n            \n                ForgetPasswordComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    public/app/authentication/logged-in.guard.service.ts\n            \n            \n                injectable\n            \n            \n                LoggedInGuard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    public/app/authentication/reset-password/reset-password.component.ts\n            \n            \n                component\n            \n            \n                ResetPasswordComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    public/app/authentication/signin/signin.component.ts\n            \n            \n                component\n            \n            \n                SigninComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    public/app/authentication/signout/signout.component.ts\n            \n            \n                component\n            \n            \n                SignoutComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    public/app/authentication/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    public/app/help/help.component.ts\n            \n            \n                component\n            \n            \n                HelpComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    public/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/course.interface.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateInput\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateResults\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlexerInput\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                Fridge\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                StudentFridge\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                ExperimentPhage\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                FridgePhage\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                GenotypePhage\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                Phage\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                StudentPhage\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/scenario.interface.ts\n            \n            \n                interface\n            \n            \n                Scenario\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                AdminStudent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                Student\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                variable\n            \n            \n                sortStudents\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                _User\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/nav/nav.component.ts\n            \n            \n                component\n            \n            \n                NavComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    public/app/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/pipes/people-list-names.pipe.ts\n            \n            \n                pipe\n            \n            \n                PeopleListNamesPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/person-name.pipe.ts\n            \n            \n                pipe\n            \n            \n                PersonNamePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-deletions.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageDeletionsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-guesses.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageGuessesPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-mutations.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageMutationsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-parents.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageParentsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/profile/profile.service.ts\n            \n            \n                injectable\n            \n            \n                ProfileService\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    public/app/profile/update-password/update-password.component.ts\n            \n            \n                component\n            \n            \n                UpdatePasswordComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    public/app/profile/user-profile/user-profile.component.ts\n            \n            \n                component\n            \n            \n                UserProfileComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/fridge.component.ts\n            \n            \n                component\n            \n            \n                FridgeComponent\n            \n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/phage-dialog.component.ts\n            \n            \n                component\n            \n            \n                PhageDialogComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    public/app/scenario/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/experiment.service.ts\n            \n            \n                injectable\n            \n            \n                ExperimentService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/lab-room/lab-room.component.ts\n            \n            \n                component\n            \n            \n                LabRoomComponent\n            \n            \n                90 %\n                (37/41)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/landing-room/landing-room.component.ts\n            \n            \n                component\n            \n            \n                LandingRoomComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/location.component.ts\n            \n            \n                component\n            \n            \n                LocationComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/model-room/model-room.component.ts\n            \n            \n                component\n            \n            \n                ModelRoomComponent\n            \n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/plexer-room/plexer-room.component.ts\n            \n            \n                component\n            \n            \n                PlexerRoomComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.component.ts\n            \n            \n                component\n            \n            \n                ScenarioComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.globals.ts\n            \n            \n                variable\n            \n            \n                ScenarioGlobals\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.resolver.ts\n            \n            \n                injectable\n            \n            \n                ScenarioResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.service.ts\n            \n            \n                injectable\n            \n            \n                ScenarioService\n            \n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                    public/app/shared/confirm-delete-dialog.component.ts\n            \n            \n                component\n            \n            \n                ConfirmDeleteDialogComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    public/app/shared/read-error.ts\n            \n            \n                variable\n            \n            \n                readErrorMessage\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/compiler-cli : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/platform-server : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^1.0.0-beta.6\n        \n            angular-skyhook : ^1.0.0-beta.2\n        \n            async : ^2.6.0\n        \n            bcrypt : ^1.0.3\n        \n            body-parser : ^1.15.2\n        \n            bootstrap : ^4.0.0-beta.3\n        \n            clone : ^2.1.1\n        \n            compression : ^1.6.0\n        \n            connect-flash : ^0.1.1\n        \n            connect-mongo : ^1.3.2\n        \n            cookie-parser : ^1.4.3\n        \n            core-js : 2.4.1\n        \n            debug : ^3.1.0\n        \n            ejs : ^2.5.2\n        \n            eslint : ^4.1.1\n        \n            express : ^4.14.0\n        \n            express-brute : ^1.0.1\n        \n            express-brute-memcached : ^0.0.1\n        \n            express-graceful-exit : ^0.4.0\n        \n            express-session : ^1.14.1\n        \n            helmet : ^3.10.0\n        \n            https : ^1.0.0\n        \n            jquery : ^3.2.1\n        \n            loadash : ^1.0.0\n        \n            method-override : ^2.3.6\n        \n            mongoose : ^5.0.7\n        \n            mongoose-sequence : ^4.0.1\n        \n            morgan : ^1.7.0\n        \n            ng2-dnd : ^5.0.2\n        \n            ngx-breadcrumbs : ^0.0.3\n        \n            nodemailer : ^4.4.2\n        \n            open-iconic : https://github.com/iconic/open-iconic.git\n        \n            passport : ^0.3.2\n        \n            passport-facebook : ^2.1.1\n        \n            passport-google-oauth : ^1.0.0\n        \n            passport-local : ^1.0.0\n        \n            popper.js : ^1.12.9\n        \n            random-js : ^1.0.8\n        \n            react-dnd-html5-backend : ^2.5.4\n        \n            react-dnd-touch-backend : ^0.3.20\n        \n            reflect-metadata : ^0.1.8\n        \n            rxjs : ^5.5.2\n        \n            systemjs : ^0.19.39\n        \n            tslib : ^1.8.0\n        \n            zone.js : ^0.8.18\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncricket\nRun angular tests with : karma start\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n   Copyright 2018 Brigitte Hofmeister\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CourseModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelpModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScenarioModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_providers\n\n\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            10 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        34 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTO DO\n\n[] Ability to remove instructor from a course\n[] Bulk delete phage as an entire shelf\n[] Bulk save phage to the fridge\n[] Allow user to delete account\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            readErrorMessage   (public/.../read-error.ts)\n                        \n                        \n                            ScenarioGlobals   (public/.../scenario.globals.ts)\n                        \n                        \n                            sortStudents   (public/.../student.interface.ts)\n                        \n                        \n                            StudentRolesArray   (public/.../student.roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    public/app/shared/read-error.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            readErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        readErrorMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : function(error: any): string {\n  console.log(JSON.stringify(error));\n  let errorMessage = 'Unknown error';\n  if(error.error && error.error.message){\n   return error.error.message\n  } else if(error.error && error.error.text){\n   return error.error.text\n  } else if (error && error.message){\n   return error.message;\n  } else if(error){\n    return error;\n  }\n  //console.error(errorMessage);\n  return errorMessage;\n}\n                        \n                    \n\n\n            \n        \n\n    public/app/scenario/scenario.globals.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ScenarioGlobals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ScenarioGlobals:     miscellaneou\n\n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /**\n   * Number of starting phage when taken from fridge\n   */\n  numPhage:1000000,\n  /**\n   * Maximum number of plaques allowed on lab room plate\n   */\n  plateCapacity: 1500,\n  /**\n   * Maximum number of plaques allowed on each plexer room plate\n   */\n  plexerCapacity: 200,\n  /**\n   * Number of shelves in the fridge\n   */\n  nFridgeShelf: 32,\n  /**\n   * Number of spots on each shelf of the fridge\n   */\n  nFridgeSpots: 16,\n  /**\n   * Default dilution value for lab room; can be changed by user\n   */\n  defaultLabDilution: 10,\n  /**\n   * Default dilution value for plexer room; can be changed by user\n   */\n  defaultPlexerDilution: 5,\n  /**\n   * Length of the gene in number of basepairs\n   */\n  geneLength: 350,\n  /**\n   * Number of basepairs per \"block\" when guessing deletion location\n   */\n  deletionGuessLength: 10\n}\n                        \n                    \n\n                \n                    \n                        Scenario/experiement-related values used to\n\nSend the correct parameters to backend calls\nMatch some backend parameters\nHave consistent defaults\n\n\n                    \n                \n\n            \n        \n\n    public/app/interfaces/student.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortStudents:     \n\n                    \n                \n                    \n                        \n                            Default value : function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n                        \n                    \n\n                \n                    \n                        Function to sort students alphabetically by last name;\nUses first name for ties\nMakes the name lowercase before sorting to ensure sort is\ncase insensitive\n\n                    \n                \n\n            \n        \n\n    public/app/admin/student/student.roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StudentRolesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        StudentRolesArray:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    key: 'student',\n    label: 'Student',\n    value: 0\n  }, {\n    key: 'instr',\n    label: 'Instructor',\n    value: 1\n  }, {\n    key: 'admin',\n    label: 'Administrator',\n    value: 2\n  }\n]\n                        \n                    \n\n                \n                    \n                        List of user roles with their numeric value (value), string value\nused by MongoDB (key), and string displayed on webpage (label)\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers.html":{"url":"additional-documentation/controllers.html","title":"additional-page - Controllers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Controllers\n\n\n\n  \n    \n      Admin Controller\n    \n    \n      listUsers\n      getUser\n      deleteUser\n      setRole\n      hasAuthorization\n      isAdmin\n    \n  \n  \n  \n    \n      Course Controller\n    \n    \n      isInstructor\n      listCourses\n      listCourseNum\n      createCourse\n      getCourse\n      editCourse\n      deleteCourse\n      getStudents\n      deleteCourseStudents\n      getPossibleInstructors\n      setInstructor\n      getScenarioStatus\n      courseByNum\n    \n  \n  \n  \n    \n      Fridge Controller\n    \n    \n      stockFridge\n      getFridge\n      getStudentFridge\n      saveDeletions\n      deleteStudentFridge\n      addPhageToFridge\n      updatePhage\n      deletePhage\n      phageById\n      findFridgeByScenOwner\n      hasFridgeAuthorization\n      hasPhageAuthorization\n      getFridgeInfo\n    \n  \n  \n  \n    \n      Genetics Controller\n    \n    \n      createPlate\n      handlePlexer\n    \n  \n  \n  \n    \n      Scenario Controller\n    \n    \n      list\n      read\n      scenarioByCode\n    \n  \n  \n  \n    \n      User Controller\n    \n    \n      getUser\n      editUser\n      resetPasswordEmail\n      resetPassword\n      signin\n      signup\n      signout\n      grantAccess\n      requiresLogin\n      userById\n      getUserInfo\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/admin-controller.html":{"url":"additional-documentation/controllers/admin-controller.html","title":"additional-page - Admin Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Admin Controller\n\n  \n    Description\n  \n  \n    The Admin-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                listUsers\n              \n\n                getUser\n              \n\n                deleteUser\n              \n\n                setRole\n              \n\n                hasAuthorization\n              \n\n                isAdmin\n              \n          \n        \n      \n    \n  \n\n      \n  \nlistUsers\n\n  \n    \n      listUsers(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/students\n\n      \n\n        list all users in the system for admin OR\nlist all students for instructor courses for instructor\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error\n\n    \n    200 OKIf user is admin, returns list of all users\nIf user is instr, returns list of students in instr's courses\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetUser\n\n  \n    \n      getUser(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/students/:studentId\n\n      \n\n        Get information about a secondary user (not necessarily the user currently logged in)\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeleteUser\n\n  \n    \n      deleteUser(req, res) ⇒ Object\n    \n\n        DELETE\n/api/admin/:userId/students/:studentId\n\n      \n\n        Delete a secondary user\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsetRole\n\n  \n    \n      setRole(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/students/:studentId\n\n      \n\n        Update a user's role to \"student\", \"instructor\", or \"admin\"\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n      \n      bodyObjectnew role; one of \"student\", \"instr\", \"admin\"\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated user information\n\n      \n\n\n\n\n    \n\n      \n      \n    Request Example :\n    /api/admin/1/students/67Make user 67 an instructor \n  {\n  role: \"instr\"\n}\n \n  \n\n    \n\n  \n\n      \n  \nhasAuthorization\n\n  \n    \n      hasAuthorization(req, res, next) ⇒ Object | function\n    \n\n        Middleware to check if current user is instructor or admin\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionthe next middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    json object to response if not authorized otherwise go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin or instructor, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to the next middleware if user is admin or instructor\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nisAdmin\n\n  \n    \n      isAdmin(req, res, next) ⇒ Object | function\n    \n\n        Middleware to check if current user is admin\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionthe next middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    json object to response if not authorized otherwise next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to next middleware if user is an admin\n\n      \n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/course-controller.html":{"url":"additional-documentation/controllers/course-controller.html","title":"additional-page - Course Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Course Controller\n\n  \n    Description\n  \n  \n    The Course-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                isInstructor\n              \n\n                listCourses\n              \n\n                listCourseNum\n              \n\n                createCourse\n              \n\n                getCourse\n              \n\n                editCourse\n              \n\n                deleteCourse\n              \n\n                getStudents\n              \n\n                deleteCourseStudents\n              \n\n                getPossibleInstructors\n              \n\n                setInstructor\n              \n\n                getScenarioStatus\n              \n\n                courseByNum\n              \n          \n        \n      \n    \n  \n\n      \n  \nisInstructor\n\n  \n    \n      isInstructor(req, res, next) ⇒ Object | function\n    \n\n        Middleware to allow only admin and the instructor of the course to proceed\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n      \n      courseCOURSEcourse details from courseByNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    json object to response not allowed or next middleware if allowed\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 Forbiddencurrent user not authorized, send error as {message: 'Not instructor of this course'}\n\n    \n    next()If user authorized, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nlistCourses\n\n  \n    \n      listCourses() ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses\n\n      \n\n        get list of courses\nis user is admin, list all\nif user is instructor, list courses for teacher\n      \n\n      \n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUser is admin and there are no courses OR user is instr role but not the instructor of any courses; sends message as {message: 'No courses found'}\n\n    \n    200 OKList of courses; courses in the list depend on user role\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nlistCourseNum\n\n  \n    \n      listCourseNum(req, res) ⇒ Object\n    \n\n        GET\n/api/courses\n\n      \n\n        Return the list of course numbers that currently exist\n\nThis is used during sign-up and does not require a user to be logged in\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not Foundthere are no courses; sends message as {message: \"No courses found\"}\n\n    \n    200 OKList of courses with properties courseNum and id (DB id)\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ncreateCourse\n\n  \n    \n      createCourse(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/courses\n\n      \n\n        Create a new course and set current user as instructor\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectdetails about new course: courseNum and description\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKNewly created course\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetCourse\n\n  \n    \n      getCourse(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses/:courseNum\n\n      \n\n        Get information about an existing course\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKthe course information including courseNum, description, and list of instructors\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \neditCourse\n\n  \n    \n      editCourse(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/courses/:courseNum\n\n      \n\n        Update the description of an existing course\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      bodyObjectcourse information to update - the description\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated course information\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeleteCourse\n\n  \n    \n      deleteCourse() ⇒ Object\n    \n\n        DELETE\n/api/admin/:userId/courses/:courseNum\n\n      \n\n        Delete a course\n      \n\n      \n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about course just deleted\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetStudents\n\n  \n    \n      getStudents(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses/:courseNum/students\n\n      \n\n        get list of students for a course\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in the course; each student has properties firstName, lastName, userId, accessGranted, and email\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeleteCourseStudents\n\n  \n    \n      deleteCourseStudents(req, res) ⇒ Object\n    \n\n        DELETE\n/api/admin/:userId/courses/:courseNum/students\n\n      \n\n        Bulk delete all students in a particular course\nMost useful when finished with semester and course is over\nDoes not remove the course itself\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 SuccessList of students just deleted\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetPossibleInstructors\n\n  \n    \n      getPossibleInstructors(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses/:courseNum/instructors\n\n      \n\n        Get list of all possible instructors for a specific course (not including the instrcutors currently teaching the course)\nAdmin can add current instructors or students in the course\nInstructors can add other instrctors\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of possible instrcutors; each person has properties firstName, lastName, userId, and role\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsetInstructor\n\n  \n    \n      setInstructor(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/courses/:courseNum/instructors/:studentId'\n\n      \n\n        Add an instuctor to the course and make user \"instructor\" role if user is a student\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      studentUSERuser to make instructor; identified with userById with id studentId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error updating the course, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error updating the user, sends description of error as {message: error-message}\n\n    \n    200 OKThe updated course\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetScenarioStatus\n\n  \n    \n      getScenarioStatus(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/courses/:courseNum/:scenarioId\n\n      \n\n        Get scenario status (aka access granted) for a scenario for all\nstudents in a course\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum\n\n      \n      scenarioSCENARIOscenario of interested; identified with scenarioByCode with id scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    404 Not FoundThere are no students in the course, sends error as {message: \"no students found\"}\n\n    \n    500 Internal Server ErrorDatabase error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in course with scenario access; each object in list has firstName, lastName, userId, and status\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ncourseByNum\n\n  \n    \n      courseByNum(req, res, next, id) ⇒ function\n    \n\n        :courseNum\n\n      \n\n        Middleware to find course by course number\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n    idstringcourse number from URL\n\n  \n\n\n\n      \n\n      \nReturns :  function    \n    go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass the error to the next middleware\n\n    \n    next('Failed to load course id')If course doesn't exist, pass message to middleware\n\n    \n    next()If success, set request course and go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/fridge-controller.html":{"url":"additional-documentation/controllers/fridge-controller.html","title":"additional-page - Fridge Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Fridge Controller\n\n  \n    Description\n  \n  \n    The Fridge-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                stockFridge\n              \n\n                getFridge\n              \n\n                getStudentFridge\n              \n\n                saveDeletions\n              \n\n                deleteStudentFridge\n              \n\n                addPhageToFridge\n              \n\n                updatePhage\n              \n\n                deletePhage\n              \n\n                phageById\n              \n\n                findFridgeByScenOwner\n              \n\n                hasFridgeAuthorization\n              \n\n                hasPhageAuthorization\n              \n\n                getFridgeInfo\n              \n          \n        \n      \n    \n  \n\n      \n  \nstockFridge\n\n  \n    \n      stockFridge(req, res) ⇒ Object\n    \n\n        GET\n/api/cricket/:userId/:scenarioId/new-fridge\n\n      \n\n        Create a new fridge stocked with the scenario phage\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestError creating phage for this fridge, sends error as {message: 'Unable to create new phage for scenario'}\n\n    \n    500 Internal Server ErrorError saving the new fridge, sends error as {message: 'Unable to save new fridge'}\n\n    \n    200 OKNewly created fridge cleaned by getFridgeInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetFridge\n\n  \n    \n      getFridge(req, res) ⇒ Object\n    \n\n        GET\n/api/cricket/:userId/:scenarioId\n\n      \n\n        Get the current user's fridge\nOnly include info needed to be known for lab room, plexer room, and model room of scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKUser's fridge for this scenario cleaned by getFridgeInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetStudentFridge\n\n  \n    \n      getStudentFridge(req, res) ⇒ Object\n    \n\n        GET\n/api/admin/:userId/students/:studentId/:scenarioId\n\n      \n\n        Get a user's fridge and include lots of details only\nadmin/instrs should know\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKIf fridge doesn't exist, return owner/scenario as if the fridge exists (information needed for front-end rendering)\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsaveDeletions\n\n  \n    \n      saveDeletions(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/:userId/:scenarioId/deletions\n\n      \n\n        Update the deletion guesses for the fridge\nguesses come in as object and are stringified when saving\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectupdated guesses to save\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKreturns stringified updated guesses to response\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeleteStudentFridge\n\n  \n    \n      deleteStudentFridge(req, res, next) ⇒ function\n    \n\n        /api/admin/:userId/students/:studentId/:scenarioId\n\n      \n\n        Middleware which deletes a fridge and all phage within the fridge\nCalled after granting access because new fridge\nneeds to be created for the user/scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext function to go to\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioexternal:SCNEARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  function    \n    go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next()If successful, delete the fridge and all phage in the fridge, then go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \naddPhageToFridge\n\n  \n    \n      addPhageToFridge(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/:userId/:scenarioId/fridge-phage\n\n      \n\n        Create new phage with phage type \"user\", save that to DB, and add to the current fridge\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectinformation about new strain; has properties\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bade RequestOn error creating new phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error adding phage to fridge, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about the newly added strain, including info about phage parents (fetch from DB)\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nupdatePhage\n\n  \n    \n      updatePhage(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/:userId/:scenarioId/:phageId\n\n      \n\n        Update the comment or submitted state of a phage\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectupdated strain info; has comment, strainNum, and submitted\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, sends description of error as {message: error-message}\n\n    \n    200 OKreturn updated phage with information about phage parents (from DB)\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ndeletePhage\n\n  \n    \n      deletePhage(req, res) ⇒ Object\n    \n\n        DELETE\n/api/cricket/:userId/:scenarioId/:phageId\n\n      \n\n        Delete a phage strain and remove it from the fridge\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error deleting phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error removing phage from fridge, sends error as {message: \"Unable to remove strain from fridge\"}\n\n    \n    200 OKreturn the newly deleted phage strain\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nphageById\n\n  \n    \n      phageById(req, res, next, id) ⇒ function\n    \n\n        :phageId\n\n      \n\n        Middleware which identifies a phage strain based on the\nid\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n    idstringmongoDB id of phage strain to look for\n\n  \n\n\n\n      \n\n      \nReturns :  function    \n    go to the next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Phage not found')If phage doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request strain and go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nfindFridgeByScenOwner\n\n  \n    \n      findFridgeByScenOwner(req, next) ⇒ function\n    \n\n        \n      \n\n        Middleware to find a fridge by the current user and current scenario\nuser and scenario were set in previous middleware\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  function    \n    go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Failed to find fridge')If fridge doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request fridge and go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nhasFridgeAuthorization\n\n  \n    \n      hasFridgeAuthorization(req, res, next) ⇒ Object | function\n    \n\n        Middleware to check if current user is fridge owner\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nhasPhageAuthorization\n\n  \n    \n      hasPhageAuthorization(req, res, next) ⇒ Object | function\n    \n\n        Middleware to determine if current user has authorization to\nupdate a phage strain\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress responses object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      strainPHAGEphage strain from phageById with id phageId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetFridgeInfo\n\n  \n    \n      getFridgeInfo(fridge) ⇒ Object\n    \n\n        Helper method to return fridge details in consistent\nformat\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    fridgeFRIDGEfridge object from DB\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    \ncleaned up fridge object with properties\nscenarioDetails, guesses, accessGranted, userId, scenCode, and strains\nEach strain of strains has comment, id, parents, strainNum, phageType, submitted, and numParents\n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/genetics-controller.html":{"url":"additional-documentation/controllers/genetics-controller.html","title":"additional-page - Genetics Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Genetics Controller\n\n  \n    Description\n  \n  \n    The controller which performs genetic crosses/manipulations in\nthe lab and plexer rooms\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                handlePlexer\n              \n          \n        \n      \n    \n  \n\n      \n  \ncreatePlate\n\n  \n    \n      createPlate(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/plate\n\n      \n\n        Creates a plate for the lab room\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to create the plate; has properties phage1 (numPhage and id), (optional) phage2, lawnType, location, capacity, and scenarioData\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    \njson object to response\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestNumber of phage is not set for one of the phage, send error as {message: 'numPhage not set'}\n\n    \n    404 Not foundPhage 1 is not found in DB, send error as {message: Error finding the specified phage(1|2)'}\n\n    \n    500 Internal Server ErrorOn error, sends error message as {message: error-message}\n\n    \n    200 OKsuccessfully generated plate; has properties full, smallPlaque, largePlaque, genotypes, and parents\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nhandlePlexer\n\n  \n    \n      handlePlexer(req, res) ⇒ Object\n    \n\n        POST\n/api/cricket/plexer\n\n      \n\n        Generates the NxM plates for the plexer\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to generate plexer;\nhas rowPhage (list with each having id and numPhage),\ncolPhage(list with each having id and numPhage),\nscenarioData, lawnType, location, capacity\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    \njson object to response\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Service ErrorOn error finding phage in DB, send error as {message: error-message}\n\n    \n    200 OKsuccessfully generated plexer result as 2D array where each cell has full, smallPlaque, and largePlaque\n\n      \n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/scenario-controller.html":{"url":"additional-documentation/controllers/scenario-controller.html","title":"additional-page - Scenario Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Scenario Controller\n\n  \n    Description\n  \n  \n    The Scenario-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                list\n              \n\n                read\n              \n\n                scenarioByCode\n              \n          \n        \n      \n    \n  \n\n      \n  \nlist\n\n  \n    \n      list(req, res) ⇒ Object\n    \n\n        GET\n/api/cricket\n\n      \n\n        List all of the sceanrios in order of degree of difficulty\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKReturn list of scenarios\neach scenario has properties label, scenCode, purpose, startingPoint, relevance, and degOfDifficulty\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nread\n\n  \n    \n      read(req, res) ⇒ Object\n    \n\n        GET\n/api/cricket/:scenarioId\n\n      \n\n        Get the details about a specifc scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    returns json object of scenario to response with properties label, scenCode, purpose, startingPoint, relevance, and degOfDiff\n\n\n\n    \n\n  \n\n      \n  \nscenarioByCode\n\n  \n    \n      scenarioByCode(req, res, next, id) ⇒ function\n    \n\n        :scenarioId\n\n      \n\n        Retreives a scenario from a scenario code\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware to follow\n\n  \n    idStringscenario code from URL\n\n  \n\n\n\n      \n\n      \nReturns :  function    \n    \nnext middleware\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)On error, pass the error to next middleware\n\n    \n    next('Failed to load scenario id')\nIf scenario doesn't exist, pass message to next middleware\n\n\n    \n    next()\nif successful, set request scenario and go to next middleware\n\n\n      \n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/user-controller.html":{"url":"additional-documentation/controllers/user-controller.html","title":"additional-page - User Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  User Controller\n\n  \n    Description\n  \n  \n    The User-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                getUser\n              \n\n                editUser\n              \n\n                updatePassword\n              \n\n                resetPasswordEmail\n              \n\n                resetPassword\n              \n\n                signin\n              \n\n                signup\n              \n\n                signout\n              \n\n                grantAccess\n              \n\n                requiresLogin\n              \n\n                userById\n              \n\n                getUserInfo\n              \n          \n        \n      \n    \n  \n\n      \n  \ngetUser\n\n  \n    \n      getUser(req, req) ⇒ Object\n    \n\n        GET\n/api/users/:userId\n\n      \n\n        Get information about a user\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    reqObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKTrimmed user information from getUserInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \neditUser\n\n  \n    \n      editUser(req, res) ⇒ Object\n    \n\n        POST\n/api/users/:userId\n\n      \n\n        Update user info - name and/or email\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectupdated information about user, specifically firstName, lastName, and email\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nupdatePassword\n\n  \n    \n      updatePassword(req, res) ⇒ Object\n    \n\n        POST\n/api/users/:userId/update-password\n\n      \n\n        Update a user password\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectrequest body with password (old password) and newPassword (new password)\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error finding user, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    401 UnauthorizedError changing password, i.e. old password isn't correct, sends error as {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nresetPasswordEmail\n\n  \n    \n      resetPasswordEmail(req, res, next) ⇒ Object\n    \n\n        POST\n/api/auth/forget-password\n\n      \n\n        Sends an email to a user to allow user to reset password\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with email\nincludes \"body\" which has user email\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf error with email transporter, send error as {message: 'Error with server email service'}\n\n    \n    404 Not FoundIf email doesn't belong to a current user send message as {message: 'No account with that email.'}\n\n    \n    422 Unprocessable EntityIf error trying to send reset email, send error to response as {message: error-message}\n\n    \n    200 OKSuccessfully sends the email and sends success message to response\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nresetPassword\n\n  \n    \n      resetPassword(req, res) ⇒ Object\n    \n\n        POST\n/api/auth/reset-password\n\n      \n\n        Allows user to reset the password using a token (sent by email)\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with password (new password),\nconfirmPassword (password entered second time) and token (token sent to email to allow password reset)\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf database error, send {message: error-message}\n\n    \n    404 Not FoundIf token is invalid, send error as {message: 'Invalid token.'}\n\n    \n    403 ForbiddenIf token is expired, send error as {message: 'Token has expired'}\n\n    \n    400 Bad RequestIf password and confirm password don't match, send error as {message: 'Confirm password does not match.'}\n\n    \n    200 OKIf successfully update password, send {message: 'Password has been reset.'}\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsignin\n\n  \n    \n      signin(req, res, next) ⇒ Object | function\n    \n\n        POST\n/api/auth/signin\n\n      \n\n        Using passport authenticate and request login in, attempts to sign users in\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware function\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email) and password\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object | function    \n    json object on error or go to next middleware on success\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, send error as {message: error-message}\n\n    \n    next()On success, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsignup\n\n  \n    \n      signup(req, res) ⇒ Object\n    \n\n        POST\n/api/auth/signup\n\n      \n\n        Create a new user\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email), password,\nfirstName, lastName, and courseNum\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error creating/saving user, sends {message: error-message}\n\n    \n    400 Bad RequestOn error logging in, sends {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nsignout\n\n  \n    \n      signout(req, res) ⇒ Object\n    \n\n        GET\n/api/auth/signout\n\n      \n\n        Sign out a logged in user\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object;\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    json object to response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKSends true\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngrantAccess\n\n  \n    \n      grantAccess(req, res) ⇒ Object\n    \n\n        POST\n/api/admin/:userId/students/:studentId/:scenarioId\n\n      \n\n        grant access to student for specific scenario\nNote: this function is called after [deleteStudentFridge]{@link fridge-controller.html#deleteStudentFridge} middleware\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n\n\n\n        Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent to grant access for from userById with id studentId\n\n      \n      scenarioSCENARIOscenario to grant access for from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectrequest body with access indicating to grant (true) or revoke (false) access\n\n        \n\n\n\n\n      \n\n      \nReturns :  Object    \n    json object for response\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKIf user doesn't have accessGranted property, send 200 response as if it was successful\n\n    \n    200 OKIf successfully update user, send updated user\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nrequiresLogin\n\n  \n    \n      requiresLogin(req, res, next) ⇒ Object | function\n    \n\n        Middleware to check if current user can access the path depending if they are logged in\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextfunctionnext middleware to follow\n\n  \n\n\n\n      \n\n      \nReturns :  Object | function    \n    \njson response when not logged in otherwise go to next middleware\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    401 UnauthorizedIf not currently logged in, send error as {message: 'User is not logged in'}\n\n    \n    next()If logged in, go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \nuserById\n\n  \n    \n      userById(req, res, next, id) ⇒ function\n    \n\n        :userId | :studentId\n\n      \n\n        Find user (if they exist) by the user id\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    reqObjectExpress request object\n\n  \n    resObjectExpress response object\n\n  \n    nextObjectNext function to go to\n\n  \n    idstringuser's id as a string from URL\n\n  \n\n\n\n      \n\n      \nReturns :  function    \n    \nnext middleware\n\n\n\nResponse :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next('Invalid user')If id is invalid, pass message to next middleware\n\n    \n    next(error)If some error, pass error to next middleware\n\n    \n    next('User not found')If id doesn't belong to a user, pass message to next middleware\n\n    \n    next()Able to find user\nIf req.curUser isn't set, set request curUser as the logged in user and go to next middleware;\nIf req.curUser is set, set request student as the secondary user and go to next middleware\n\n      \n\n\n\n\n    \n\n  \n\n      \n  \ngetUserInfo\n\n  \n    \n      getUserInfo(user) ⇒ Object\n    \n\n        Returns trimmed user info in a consistent manner\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    userUSERuser object from DB\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    trimmed user object to have properties id, firstName,\nlastName, email, and role\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics.html":{"url":"additional-documentation/genetics.html","title":"additional-page - Genetics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Genetics\n\nPhage\n\n  \n    \n      Phage Scenario\n    \n    \n      generateScenario\n      makeGene\n      makePhage\n      makeWTPhage\n      makeFrameshiftPhage\n      makeDeletionPhage\n      generateFrameshift\n      checkPhageFrameshift\n      getNewSpot\n      generateDeletion\n      checkPhageDeletion\n    \n  \n  \n  \n    \n      Phage Logic\n    \n    \n      doPheno\n      getFrames\n    \n  \n  \n  \n    \n      Phage Experiment\n    \n    \n      recombine\n      mutagenize\n      _validRecombDel\n      _copyDeletion\n    \n  \n  \n \nPlates\n\n  \n    \n      Plate Experiment\n    \n    \n      createPlate\n      createPlatePhage\n      generatePlate\n      computeRecombParameters\n      computeNumOffspring\n      shufflePlaqueList\n    \n  \n  \n  \n    \n      Plexer Experiment\n    \n    \n      createPlexerPlate\n      generatePlexerPlate\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-scenario.html":{"url":"additional-documentation/genetics/phage-scenario.html","title":"additional-page - Phage Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Scenario\n\n  \n    Description\n  \n  \n    Functions which handle creating  phage for different scenarios\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                generateScenario\n              \n\n                makeGene\n              \n\n                makePhage\n              \n\n                makeWTPhage\n              \n\n                makeFrameshiftPhage\n              \n\n                makeDeletionPhage\n              \n\n                _generateFrameshift\n              \n\n                _checkPhageFrameshift\n              \n\n                _getNewSpot\n              \n\n                _generateDeletion\n              \n\n                _checkPhageDeletion\n              \n          \n        \n      \n    \n  \n\n      \n  \ngenerateScenario\n\n  \n    \n      generateScenario(scenario) ⇒ Object\n    \n\n        Generates all of the phage and other necessary info for a given scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    scenarioObjectparameters for the scenario; includes:\n\nmutationFreq (number): chance of mutation as decimal\nrecombinationFreq (number): chance of single recombination as decimal\ngcProb (number): percent of G/C's to use in gene\nminStops (number): minimum number of stop codons when out of frame\nintraMuteDist (number[])\ninterMuteDist (number)\nreferencePhage (string[]): descriptions of reference phage; known WT or mut\notherPhage (string[]): descriptions of non-reference phage; unknown WT or mut\n\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    all info needed for a new scenario\n\nstrains (Object[]): list of strains\nscenarioDetails (Object): scenario info needed for experiments later\n\n\n\n\n    \n\n  \n\n      \n  \nmakeGene\n\n  \n    \n      makeGene(gcProb, minStops) ⇒ Object\n    \n\n        Make a WT gene - has no stop codons normally but has at least\nminStops with frameshifts\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    gcProbnumberGC probability (percent G/C vs A/T)\n\n  \n    minStopsnumberminimum number of stops for frameshifted gene\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    the nucleotide sequence to be used; includes:\n\nwtGene (string): nucleic acids that consitute this gene\nrealStops (number[]): location of stop codons\nframeStopList (number[][]): location and which frameshift the stop occurs\n\n\n\n\n    \n\n  \n\n      \n  \nmakePhage\n\n  \n    \n      makePhage(phageDetails, strainNum, phageType, scenData) ⇒ Object\n    \n\n        Create a phage strain\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageDetailsObjectphage config info (from scenario config)\n\n  \n    strainNumnumberstrain number\n\n  \n    phageTypestringreference or unknown\n\n  \n    scenDataObjectscenario parameters\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    newly created strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n\n    \n\n  \n\n      \n  \nmakeWTPhage\n\n  \n    \n      makeWTPhage(phage, strainNum, phageType, scenData) ⇒ Object\n    \n\n        Create a WT phage - no mutations\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageObjectphage config info (from scenario config)\n\n  \n    strainNumnumberstrain number\n\n  \n    phageTypestringreference or unknown\n\n  \n    scenDataObjectcomputed scenario info\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n\n    \n\n  \n\n      \n  \nmakeFrameshiftPhage\n\n  \n    \n      makeFrameshiftPhage(phage, strainNum, phageType, scenData) ⇒ Object\n    \n\n        Generate a mutant phage strain that has at least 1 frameshift mutation\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageObjectphage config info (from scenario config)\n\n  \n    strainNumnumberstrain number\n\n  \n    phageTypestringreference or unknown\n\n  \n    scenDataObjectcurrent scenario information; used to generate new, valid strain\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n\n    \n\n  \n\n      \n  \nmakeDeletionPhage\n\n  \n    \n      makeDeletionPhage(phage, strainNum, phageType, scenData) ⇒ Object\n    \n\n        Create a phage strain with a large deletion\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageObjectconfiguration for phage to generate from scenario\n\n  \n    strainNumnumberstrain number\n\n  \n    phageTypestringreference or unknown\n\n  \n    scenDataObjectconfiguration for current scenario\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n\n    \n\n  \n\n      \n  \n_generateFrameshift\n\n  \n    \n      _generateFrameshift(shiftType, nShifts, readable, scenData) ⇒ Array\n    \n\n        Attempt to generate a single frameshift mutation\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    shiftTypenumbershould it be insertion, deletion, or random\n\n  \n    nShiftsnumbernumber of shifts total for this phage\n\n  \n    readablestringshould be gene be in frame or not\n\n  \n    scenDataObjectcurrent scenario data to ensure valid phage\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    valid mutation(s) for this new phage or empty list if no valid mutation found\n\n\n\n    \n\n  \n\n      \n  \n_checkPhageFrameshift\n\n  \n    \n      _checkPhageFrameshift(keyMutes, scenData) ⇒ boolean\n    \n\n        Check that the potential frameshift(s) are valid given the\nmutations in other phage in the scenario\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    keyMutesArraymutations to check\n\n  \n    scenDataObjectcurrent scenario data\n\n  \n\n\n\n      \n\n      \nReturns :  boolean    \n    is the frameshift valid?\n\n\n\n    \n\n  \n\n      \n  \n_getNewSpot\n\n  \n    \n      _getNewSpot(lastMade, scenData) ⇒ number\n    \n\n        Attempt to create a new mutation\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    lastMadenumberthe last mutation made\n\n  \n    scenDataObjectcurrent scenario configuration info\n\n  \n\n\n\n      \n\n      \nReturns :  number    \n    location of new frameshift mutation that isn't too close to other mutations\n\n\n\n    \n\n  \n\n      \n  \n_generateDeletion\n\n  \n    \n      _generateDeletion(usedDeleteSpots) ⇒ Array\n    \n\n        Attempt to generate a deletion if we run out of preset deletion spots/lengths\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    usedDeleteSpotsArraylist of deletion spots already used\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    new valid deletion if found or throws error\n\n\n\n    \n\n  \n\n      \n  \n_checkPhageDeletion\n\n  \n    \n      _checkPhageDeletion(keyMutes, usedDeleteSpots) ⇒ boolean\n    \n\n        Check that deletion is valid; far enough away from other deletions\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    keyMutesArraydeletion to check\n\n  \n    usedDeleteSpotsArraydeletions already in play for scenario\n\n  \n\n\n\n      \n\n      \nReturns :  boolean    \n    is the deletion valid?\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-logic.html":{"url":"additional-documentation/genetics/phage-logic.html","title":"additional-page - Phage Logic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Logic\n\n  \n    Description\n  \n  \n    Functions which compute frameshift/phenotype type\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                doPheno\n              \n\n                getFrames\n              \n          \n        \n      \n    \n  \n\n      \n  \ndoPheno\n\n  \n    \n      doPheno(mutantList, stopList) ⇒ string\n    \n\n        Determine the phenotype of a phage based on the list of mutations\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    mutantListArraymutations for this phage strain\n\n  \n    stopListArraylocations of stop codons for varying frameshifts\n\n  \n\n\n\n      \n\n      \nReturns :  string    \n    phenotype; one of \"allTranslated\", \"frameShifted\", \"deleted\", or \"stopped\"\n\n\n\n    \n\n  \n\n      \n  \ngetFrames\n\n  \n    \n      getFrames(whoSays, mutantList, stopList) ⇒ Object\n    \n\n        Get the frame shift for a mutant\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    whoSaysstringwho is asking; not used\n\n  \n    mutantListArraymutatations in this phage\n\n  \n    stopListArraylocations of stop codons depending on framshift\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    includes frame (frameshift number of gene as a whole) and frameList (frameshift cummulatively for each frame)\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-experiment.html":{"url":"additional-documentation/genetics/phage-experiment.html","title":"additional-page - Phage Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Experiments\n\n  \n    Description\n  \n  \n    Functions which perform experiments on the phage strains\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                recombine\n              \n\n                mutagenize\n              \n\n                _validRecombDel\n              \n\n                _copyDeletion\n              \n          \n        \n      \n    \n  \n\n      \n  \nrecombine\n\n  \n    \n      recombine(phageGeno1, phageGeno2, numXOver, numToDo) ⇒ Array\n    \n\n        Recombine 2 strains with specified number of crossovers and number of offspring\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phageGeno1Objectgenotype of phage 1 (shifts and deletion)\n\n  \n    phageGeno2Objectgenotype of phage 2 (shifts and deletion)\n\n  \n    numXOvernumbernumber of crossovers\n\n  \n    numToDonumberhow many offspring to create\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    list of recombined offspring genotypes (shifts and deletion)\n\n\n\n    \n\n  \n\n      \n  \nmutagenize\n\n  \n    \n      mutagenize(inList, numDesired) ⇒ Array>\n    \n\n        Create N number of mutants\n\nchecks that mutations aren't too close together on the chromosome\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    inListArraymutations (shifts) of phage to mutagenize\n\n  \n    numDesirednumbernumber of new mutants to generate\n\n  \n\n\n\n      \n\n      \nReturns :  Array>    \n    2D array of new mutants;\nDimensions: numDesired x inList.length+1\n\n\n\n    \n\n  \n\n      \n  \n_validRecombDel\n\n  \n    \n      _validRecombDel(checkPos, delList) ⇒ boolean\n    \n\n        check if recombination position is within a deletion\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    checkPosnumberposition to check\n\n  \n    delListArraylist of deletions for phage\n\n  \n\n\n\n      \n\n      \nReturns :  boolean    \n    true if recombination is valid (not in a deletion); false otherwise\n\n\n\n    \n\n  \n\n      \n  \n_copyDeletion\n\n  \n    \n      _copyDeletion(sPos, ePos, delList) ⇒ Array\n    \n\n        Create a copy of deletions within the start and end positions of\nchromosome chunk to be copied\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    sPosnumberstart position of chrosomome chunk to copy\n\n  \n    ePosnumberend position of chromosome chunk to copy\n\n  \n    delListArraylist of deletions for this phage\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    copy of the deletions\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plate-experiment.html":{"url":"additional-documentation/genetics/plate-experiment.html","title":"additional-page - Plate Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plate Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plates of phage crosses\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                createPlatePhage\n              \n\n                generatePlate\n              \n\n                _computeRecombParameters\n              \n\n                _computeNumOffspring\n              \n\n                _shufflePlaqueList\n              \n          \n        \n      \n    \n  \n\n      \n  \ncreatePlate\n\n  \n    \n      createPlate(phage1, phage2, lawnType, specials, capacity, whoCalled, scenData) ⇒ Object\n    \n\n        Creates the lab room plate\n\nOnly used in the lab room\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    phage1Objectfirst phage in the cross\n\n  \n    phage2Object | nullsecond phage in the cross or null if not crossing\n\n  \n    lawnTypestringE. coli bacteria type \"B\" or \"K\"\n\n  \n    specialsObjectother special parameters (not used)\n\n  \n    capacitynumbermax number of plaques allowed on the plate\n\n  \n    whoCalledstringlocation/room asking to generate the plate\n\n  \n    scenDataObjectscenario information\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    new plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques, number is index of genotype in genotypes list\ngenotypes (number[][]): list of genotypes for this plate\nparents (string[]): ids of input phage\n\n\n\n\n    \n\n  \n\n      \n  \ncreatePlatePhage\n\n  \n    \n      createPlatePhage() ⇒ Object\n    \n\n        Create the genotypes and strains for this plate\n\nUsed by both the lab room and plexer room\n      \n\n      \nReturns :  Object    \n    phage for this plate\n\ngenoList (): list of genotypes\nstrainList (number[]): list of indices corresponding to genoList\nparents (string): ID's for original phage used to create plate\n\n\n\n\n    \n\n  \n\n      \n  \ngeneratePlate\n\n  \n    \n      generatePlate() ⇒ object\n    \n\n        Phenotypes the plate phage and ensures not too many phage on the plate\n\nThis function is only used in the lab room\n      \n\n      \nReturns :  object    \n    representation of plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques; number is index of genotype in genotypes list\ngenotypes\n\n\n\n\n    \n\n  \n\n      \n  \n_computeRecombParameters\n\n  \n    \n      _computeRecombParameters(f1, f2, p, n) ⇒ Array\n    \n\n        Compute the recombination parameters\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    f1numberfraction of phage1\n\n  \n    f2numberfraction of phage2\n\n  \n    pnumberrecombination probability\n\n  \n    nnumbertotal number of offspring expected\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    \nnumber of single, double, and triple recombinants to create\n\n\n\n\n    \n\n  \n\n      \n  \n_computeNumOffspring\n\n  \n    \n      _computeNumOffspring(n1, n2, nR, mutFreq, recFreq, identical) ⇒ Object\n    \n\n        Compute the expected number of offspring\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    n1numbernumber of input for phage1\n\n  \n    n2numbernumber of input for phage2\n\n  \n    nRnumberratio of phage1 to phage2\n\n  \n    mutFreqnumbermutation frequency for the scenario\n\n  \n    recFreqnumberfrequency of recombination for scenario\n\n  \n    identicalbooleanare the two phage identical\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    numbers/types of offspring to create\n\nnumOffspring (number): number of offspring aiming for\ntotal (number): actual number of offspring to be generated\nnumGeno (number[]): number of each parental geonotype\nnumMuts (number[]): number of mutants for each parental genotype\nnumRecomb (number[]): number of single, double, and triple recomb\n\n\n\n\n    \n\n  \n\n      \n  \n_shufflePlaqueList\n\n  \n    \n      _shufflePlaqueList(inList, numInput) ⇒ Array\n    \n\n        shuffle strains; force mutants/recombinants to be towards the front of the list\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    inListArraystrain list to shuffle\n\n  \n    numInputnumbernumber of input/parent phage\n\n  \n\n\n\n      \n\n      \nReturns :  Array    \n    shuffled strain list\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plexer-experiment.html":{"url":"additional-documentation/genetics/plexer-experiment.html","title":"additional-page - Plexer Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plexer Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plexer plates\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlexerPlate\n              \n\n                generatePlexerPlate\n              \n          \n        \n      \n    \n  \n\n      \n  \ncreatePlexerPlate\n\n  \n    \n      createPlexerPlate(rowPhage, colPhage, lawnType, special, capacity, whoCalled, scenData) ⇒ Object\n    \n\n        Creates the plexer results\n\nOnly used in the plexer room\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    rowPhageArraylist of input phage representing the rows\n\n  \n    colPhageArraylist of input phage representing the columns\n\n  \n    lawnTypestringE. coli bacteria type; \"B\" or \"K\"\n\n  \n    specialObjectother parameters; not used\n\n  \n    capacitynumbermaximum number of phage per plate\n\n  \n    whoCalledstringlocation asking to create the plexer\n\n  \n    scenDataObjectcurrent scenario data\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    plexer results; 2D array (but as an object) where each cell is a \"plate\" that has\n\nfull (boolean): plate over capacity?\nsmallPlaque (number): number of small plaque on the plate\nlargePlaque (number): number of large plaque on the plate\n\n\n\n\n    \n\n  \n\n      \n  \ngeneratePlexerPlate\n\n  \n    \n      generatePlexerPlate(lawnTypeStr, genoList, strainList, capacity, scenData) ⇒ Object\n    \n\n        Phenotype the phage and format results for front-end\n\nOnly used by the plexer room\n      \n\n      \n\n        Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    lawnTypeStrstringE. coli bacteria type; \"B\" or \"K\"\n\n  \n    genoListArraylist of genotypes on the plate\n\n  \n    strainListArraylist of strains which is the index to the genotype\n\n  \n    capacitynumbercapacity of each plexer plate\n\n  \n    scenDataObjectcurrent scenario data\n\n  \n\n\n\n      \n\n      \nReturns :  Object    \n    \nresults for this single plexer plate\nfull (boolean): is plate over capacity\nsmallPlaque (number): number of small plaque on plate\nlargePlaque (number): number of large plaque on plate\n\n\n\n\n    \n\n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models.html":{"url":"additional-documentation/models.html","title":"additional-page - Models","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Models\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/course-model.html":{"url":"additional-documentation/models/course-model.html","title":"additional-page - Course Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Course Model\n\n  \n    Description\n  \n  \n    Database schema for course\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\ncourseNum\n\n\n\ndescription\n\n\n\ninstructors\n\n\n\n\n\n  \n\nProperties  \n  \n    \n      \n          REQUIRED\n\n      courseNum\n      \n    \n      courseNum : string\n    \n\n      \n        \n          \n          uniquely identifable course ID\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      description\n      \n    \n      description : string\n    \n\n      \n        \n          \n          basic text description of the course\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      instructors\n      \n    \n      instructors : Array\n    \n\n      \n        \n          \n          list of instructors for the course\n\n        \n      \n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/fridge-model.html":{"url":"additional-documentation/models/fridge-model.html","title":"additional-page - Fridge Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Fridge Model\n\n  \n    Description\n  \n  \n    Database schema for fridge\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\nowner\n\n\n\nscenario\n\n\n\naccessGranted\n\n\n\nstrains\n\n\n\nscenarioDetails\n\n\n\nguesses\n\n\n\n\n\n  \n\nProperties  \n  \n    \n      \n      owner\n      \n    \n      owner : USER\n    \n\n      \n        \n          \n          user who owns the fridge\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      scenario\n      \n    \n      scenario : SCENARIO\n    \n\n      \n        \n          \n          scenario the fridge is for\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      accessGranted\n      \n    \n      accessGranted : boolean\n    \n\n      \n        \n          \n          has access been granted by instructor\n\nwhen false, phage strains are the same for all users\nwhen true, phage are generated using random numbers\n\n\n        \n      \n    \n        \n          Default Value : false\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      strains\n      \n    \n      strains : Array\n    \n\n      \n        \n          \n          list of phage strains\nin the fridge\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      scenarioDetails\n      \n    \n      scenarioDetails : String\n    \n\n      \n        \n          \n          \nstringified object of the scenario details generated when\nthe fridge was created and is needed for performing\nexperiments\nincludes interMuteDist, intraMuteDist, mutationFreq, recombinationFreq,\ndeleteSizes, deleteSpots, usedDeleteSpots,\nusedShiftSpots, wtGene, realStops, framesStopList\n\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      guesses\n      \n    \n      guesses : String\n    \n\n      \n        \n          \n          stringified object of user's\nguesses for locations of deletions where the key is the\nstrain number of the guess and the value is an array of\nboolean values indicating if guessed a deletion\n\n        \n      \n      \n        \n          \n    Example : \n  \"{'1': [false, false, false, false, true, true, ...],\n  '2': [true, true, true, false, false, false, ...],\n  '3': [false, false, false, false, false, false, ...]\n }\"\n \n  \n        \n      \n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/phage-model.html":{"url":"additional-documentation/models/phage-model.html","title":"additional-page - Phage Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Phage Model\n\n  \n    Description\n  \n  \n    Database schema for phage strains\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\nstrainNum\n\n\n\nowner\n\n\n\nscenarioOrigin\n\n\n\nphageType\n\n\n\nmutationList\n\n\n\ndeletion\n\n\n\ncomment\n\n\n\nsubmitted\n\n\n\nparents\n\n\n\nnumParents\n\n\n\n\n\n  \n\nProperties  \n  \n    \n      \n          REQUIRED\n      strainNum\n      \n    \n      strainNum : number\n    \n\n      \n        \n          \n          location of the phage in the fridge; note this is 0-based but fridge interface is 1-based\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      owner\n      \n    \n      owner : USER\n    \n\n      \n        \n          \n          user who this phage belongs to\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      scenarioOrigin\n      \n    \n      scenarioOrigin : SCENARIO\n    \n\n      \n        \n          \n          scenario that\nthis phage was created for\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      phageType\n      \n    \n      phageType : String\n    \n\n      \n        \n          \n          description of who created phage; must be one of reference, unknown or user\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      mutationList\n      \n    \n      mutationList : Array\n    \n\n      \n        \n          \n          list of frameshift mutations\n\nfor each mutation, absolute value of number indicates position in the gene\npositive/negative number indicates plus/minus frameshift\n\n\n        \n      \n      \n        \n          \n    Example : \n    One plus frameshift mutation \n  [43]\n \n  \n\n    Example : \n    One minus frameshift mutation \n  [-178]\n \n  \n\n    Example : \n    Two frameshifts of opposite type  \n  [106, -213]\n \n  \n        \n      \n  \n\n\n  \n  \n    \n      \n      deletion\n      \n    \n      deletion : Array\n    \n\n      \n        \n          \n          list of deletions in the strain;\n\nif length 2, [0] is start of deletion and [1] is end\nif length greater than 2, there are multiple deletions that start on even index positions and end on odd index position\n\n\n        \n      \n      \n        \n          \n    Example : \n    80 bp deletion at the beginning of gene \n  [0, 80]\n \n  \n\n    Example : \n    150 bp deletion in the middle of the gene \n  [125, 275]\n \n  \n\n    Example : \n    Multiple deletions: 40 bp-90 bp and 200 bp-280 bp \n  [40, 90, 200, 280]\n \n  \n        \n      \n  \n\n\n  \n  \n    \n      \n      comment\n      \n    \n      comment : String\n    \n\n      \n        \n          \n          User/scenario comment that describes this phage strain; makes it easier to remember details about each phage\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      submitted\n      \n    \n      submitted : boolean\n    \n\n      \n        \n          \n          for user phage, is this a phage that should be graded by instructor\n\nused when scenario asks users to create a phage with a specific mutation and makes it easier for the instr to phage\n\n\n        \n      \n    \n        \n          Default Value : false\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      parents\n      \n    \n      parents : Array\n    \n\n      \n        \n          \n          when phage created in the lab room on the plate, these are the parent(s) used during the experiment\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      numParents\n      \n    \n      numParents : number\n    \n\n      \n        \n          \n          when phage created in lab room on the lab, number of parents used during the experiment\n\nused to know if a phage has a parent that was deleted from the DB\n\n\n        \n      \n    \n        \n          Default Value : 0\n        \n      \n\n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/scenario-model.html":{"url":"additional-documentation/models/scenario-model.html","title":"additional-page - Scenario Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Scenario Model\n\n  \n    Description\n  \n  \n    Database schema for scenarios (scenarios are created when the application runs the first time)\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\nlabel\n\n\n\nfileCode\n\n\n\nscenCode\n\n\n\ndefOfDiff\n\n\n\nmutationFreq\n\n\n\nrecombinationFreq\n\n\n\ngcProb\n\n\n\nminStops\n\n\n\nintraMuteDist\n\n\n\ninterMuteDist\n\n\n\npurpose\n\n\n\nrelevance\n\n\n\nstartingPoint\n\n\n\nreferencePhage\n\n\n\notherPhage\n\n\n\n\n\n  \n\nProperties  \n  \n    \n      \n      label\n      \n    \n      label : string\n    \n\n      \n        \n          \n          human-readable label describing the scenario\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      fileCode\n      \n    \n      fileCode : string\n    \n\n  \n\n\n  \n  \n    \n      \n          INDEX\n      scenCode\n      \n    \n      scenCode : string\n    \n\n      \n        \n          \n          short string used to uniquely\nidentify each scenario via URL\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      defOfDiff\n      \n    \n      defOfDiff : number\n    \n\n      \n        \n          \n          relative degree of difficulty used to order the scenarios on the scenario page\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      mutationFreq\n      \n    \n      mutationFreq : number\n    \n\n      \n        \n          \n          chance creating a new frameshift mutation during an experiment\n\n        \n      \n    \n        \n          Default Value : 0.0004\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      recombinationFreq\n      \n    \n      recombinationFreq : number\n    \n\n      \n        \n          \n          chance of single recombination when crossing two phage in an experiment\n\n        \n      \n    \n        \n          Default Value : 0.04\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      gcProb\n      \n    \n      gcProb : number\n    \n\n      \n        \n          \n          integer number for percent G and C's when creating the WT gene\n\n        \n      \n    \n        \n          Default Value : 72\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      minStops\n      \n    \n      minStops : number\n    \n\n      \n        \n          \n          minumum number of possible stop codons that would be created during frameshifts of a gene\n\n        \n      \n    \n        \n          Default Value : 10\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      intraMuteDist\n      \n    \n      intraMuteDist : Array\n    \n\n      \n        \n          \n          mutations on the same phage are\nbetween [0] and [1] distance apart when interMuteDist isn't set\n\n        \n      \n    \n        \n          Default Value : [10, 80]\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      interMuteDist\n      \n    \n      interMuteDist : number\n    \n\n      \n        \n          \n          minimum distance apart that\nmutations should be for different phage of the same scenario; equals -1 when unset\n\n        \n      \n    \n        \n          Default Value : -1\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      purpose\n      \n    \n      purpose : string\n    \n\n      \n        \n          \n          description of the goal of the scenario for users\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      relevance\n      \n    \n      relevance : String\n    \n\n      \n        \n          \n          description of why this scenario is important for learning\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      startingPoint\n      \n    \n      startingPoint : String\n    \n\n      \n        \n          \n          description of the phage\nstrains in the fridge when first created\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      referencePhage\n      \n    \n      referencePhage : Array\n    \n\n      \n        \n          \n          each item is a phage to be created for the scenario when fridge created\n\neach item includes details about what mutations/deletions, if any, to include in the phage\nas a reference phage, mutation type is told to user\n\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      otherPhage\n      \n    \n      otherPhage : Array\n    \n\n      \n        \n          \n          each item is a phage to be created for the scenario when fridge created\n\neach item includes details about what mutations/deletions, if any, to include in the phage\nas an other phage, mutation type is not told to user and discovering the mutation is often the puprose for the scenario\n\n\n        \n      \n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/user-model.html":{"url":"additional-documentation/models/user-model.html","title":"additional-page - User Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  User Model\n\n  \n    Description\n  \n  \n    Database schema for user\n  \n\n  Index\n  \n  \n    \nProperties\n\n\n\n\n\n\nuserId\n\n\n\nfirstName\n\n\n\nlastName\n\n\n\nemail\n\n\n\npassword\n\n\n\ncourse\n\n\n\naccessGranted\n\n\n\nrole\n\n\n\nlastLogin\n\n\n\nresetPasswordToken\n\n\n\nresetPasswordExpires\n\n\n\n\n\nMethods\n\n\n\n\n\n\nauthenticate\n\n\n\nchangePassword\n\n\n\n\n\nEnums\n\n\n\n\n\n\nrolesEnum\n\n\n\n\n\n  \n\nMethods  \n  \n    \n      \n      authenticate\n      \n    \n      authenticate(candidatePassword, callback) ⇒ function\n    \n\n      \n        \n          \n          Determines if the entered password is correct\n\n        \n      \n      \n        \n            \n              Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    candidatePasswordstringuser input password to compare to database\n\n  \n    callbackfunctionCallback function to pass result to\n\n  \n\n\n        \n      \n      \n        \n            Returns :  function    \n    Pass error message and if password is a match to the callback function\n\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      changePassword\n      \n    \n      changePassword(oldPassword, newPassword, callback) ⇒ function\n    \n\n      \n        \n          \n          Update a user password, assuming the oldPassword is correct\n\n        \n      \n      \n        \n            \n              Parameters : \n\n  \nParam\nType\nDescription\n\n\n\n\n    oldPasswordstringuser input for current password\n\n  \n    newPasswordstringthe new password user wants to change to\n\n  \n    callbackfunctionCallback function to pass result to\n\n  \n\n\n        \n      \n      \n        \n            Returns :  function    \n    Pass error message or null to callback function\n\n\n        \n      \n  \n\n\nProperties  \n  \n    \n      \n          INDEX\n      userId\n      \n    \n      userId : number\n    \n\n      \n        \n          \n          auto-incremented user ID\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      firstName\n      \n    \n      firstName : string\n    \n\n      \n        \n          \n          user's first name\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      lastName\n      \n    \n      lastName : string\n    \n\n      \n        \n          \n          user's last name\n\n        \n      \n  \n\n\n  \n  \n    \n      \n          REQUIRED\n      email\n      \n    \n      email : string\n    \n\n      \n        \n          \n          user's email address\n\n        \n      \n  \n\n\n  \n  \n    \n      \n          VALIDATE\n      password\n      \n    \n      password : string\n    \n\n      \n        \n          \n          user's password; actual password is not stored in DB\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      course\n      \n    \n      course : COURSE\n    \n\n      \n        \n          \n          course the user is part of\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      accessGranted\n      \n    \n      accessGranted : Object\n    \n\n      \n        \n          \n          for each scenario (as key), has access been granted\n\n        \n      \n      \n        \n          \n    Example : \n  {\"scen1\": false, \"scen2\": true, \"scen3\": true}\n \n  \n        \n      \n  \n\n\n  \n  \n    \n      \n      role\n      \n    \n      role : string\n    \n\n      \n        \n          \n          user's role which is used to determine website access; one of rolesEnum\n\n        \n      \n    \n        \n          Default Value : student\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      lastLogin\n      \n    \n      lastLogin : Date\n    \n\n      \n        \n          \n          date and time of the last time the user logged in\n\n        \n      \n    \n        \n          Default Value : time of account creation\n        \n      \n\n  \n\n\n  \n  \n    \n      \n      resetPasswordToken\n      \n    \n      resetPasswordToken : string\n    \n\n      \n        \n          \n          token generated for user when they request a password reset; necessary to be able to set the new password\n\n        \n      \n  \n\n\n  \n  \n    \n      \n      resetPasswordExpires\n      \n    \n      resetPasswordExpires : Date\n    \n\n      \n        \n          \n          date and time that the password-reset token expires; token is no longer valid after this time\n\n        \n      \n  \n\n\nEnumerables  \n  \n    \n      \n      rolesEnum\n      \n    \n      rolesEnum : enum\n    \n\n      \n        \n          \n          List of valid roles for users and error message\n\n        \n      \n      \n        \n            \n              \n  \n    \n        Param\n        Type\n        Default\n        Description\n    \n  \n  \n\n      valuesstring[\"admin\",\"instr\",\"student\"]acceptable values\n\n      \n      messagestringValue \"{VALUE}\" is not a valid roleerror message on unacceptable value\n\n        \n\n\n\n        \n      \n  \n\n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
