var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AdminComponent.html",[0,0.417,1,1.124]],["body/components/AdminComponent.html",[0,0.743,1,1.771,2,0.493,3,0.332,4,1.168,5,0.305,6,3.707,7,0.179,8,5.797,9,1.063,10,5.797,11,4.008,12,7.13,13,2.771,14,3.255,15,5.093,16,1.346,17,3.68,18,0.981,19,3.778,20,2.992,21,2.337,22,1.695,23,2.85,24,0.967,25,2.481,26,1.695,27,5.797,28,0.404,29,0.954,30,2.313,31,7.13,32,2.969,33,1.293,34,2.701,35,1.402,36,2.369,37,2.085,38,1.466,39,5.797,40,0.675,41,0.011,42,1,43,0.543,44,0.777,45,3.117,46,4.219,47,2.673,48,2.265,49,2.331,50,2.581,51,1.561,52,0.618,53,1.505,54,0.771,55,4.219,56,0.914,57,1.505,58,1.461,59,0.742,60,0.565,61,2.177,62,2.177,63,2.269,64,1.648,65,2.269,66,0.319,67,0.547,68,4.219,69,3.37,70,4.63,71,0.97,72,2.673,73,1.771,74,1.168,75,1.168,76,1.048,77,1.604,78,1.048,79,1.561,80,1.168,81,0.993,82,1.106,83,0.514,84,1.168,85,1.048,86,1.168,87,1.048,88,1.168,89,1.048,90,1.604,91,1.048,92,1.833,93,1.048,94,1.168,95,1.048,96,1.106,97,1.604,98,1.076,99,1.604,100,1.048,101,1.168,102,1.048,103,1.076,104,0.777,105,1.974,106,1.048,107,1.136,108,1.048,109,0.465,110,1.048,111,1.168,112,1.048,113,0.777,114,1.048,115,1.168,116,1.048,117,1.168,118,1.048,119,1.168,120,1.048,121,0.404,122,1.106,123,1.168,124,1.076,125,0.675,126,1.048,127,0.777,128,1.048,129,1.168,130,1.048,131,1.168,132,1.048,133,1.168,134,1.048,135,1.168,136,1.048,137,1.048,138,1.048,139,1.048,140,1.168,141,1.048,142,1.168,143,1.048,144,1.106,145,1.136,146,1.168,147,0.007,148,0.007]],["title/injectables/AdminGuard.html",[149,1.714,150,3.128]],["body/injectables/AdminGuard.html",[2,0.34,3,0.406,5,0.373,7,0.281,9,1.163,18,0.806,20,3.419,21,3.297,22,2.14,28,0.494,30,1.507,33,1.477,35,1.247,36,2.895,37,2.258,38,1.362,40,1.06,41,0.011,42,1,43,0.544,44,1.221,45,3.562,52,1.132,54,0.806,56,0.711,59,0.727,60,0.69,64,2.014,66,0.389,67,0.669,147,0.008,148,0.008,149,2.772,150,4.58,151,4.53,152,5.82,153,4.895,154,3.834,155,3.438,156,2.509,157,5.203,158,6.786,159,3.374,160,5.156,161,5.82,162,5.523,163,3.005,164,5.523,165,5.156,166,4.895,167,2.758,168,2.675,169,5.291,170,2.509,171,1.187,172,2.08,173,3.15,174,3.499,175,1.55,176,1.953,177,1.937,178,4.53,179,5.156,180,5.156,181,4.118,182,5.156,183,4.53]],["title/components/AdminHomeComponent.html",[0,0.417,76,1.124]],["body/components/AdminHomeComponent.html",[0,0.75,1,1.254,2,0.333,3,0.398,4,1.397,5,0.365,7,0.214,9,1.177,16,1.362,18,0.99,24,1.157,25,2.505,26,1.91,41,0.01,42,0.986,54,0.626,59,0.501,60,0.676,66,0.381,67,0.655,71,0.94,73,1.903,74,1.397,75,1.397,76,1.903,77,1.809,78,1.254,79,1.76,80,1.397,81,1.188,82,1.323,83,0.615,84,1.397,85,1.254,86,1.397,87,1.254,88,1.397,89,1.254,90,1.809,91,1.254,92,2.005,93,1.254,94,1.397,95,1.254,96,1.323,97,1.809,98,1.288,99,1.809,100,1.254,101,1.397,102,1.254,103,1.288,104,0.93,105,2.121,106,1.254,107,1.36,108,1.254,109,0.557,110,1.254,111,1.397,112,1.254,113,0.93,114,1.254,115,1.397,116,1.254,117,1.397,118,1.254,119,1.397,120,1.254,121,0.483,122,1.323,123,1.397,124,1.288,125,0.808,126,1.254,127,0.93,128,1.254,129,1.397,130,1.254,131,1.397,132,1.254,133,1.397,134,1.254,135,1.397,136,1.254,137,1.254,138,1.254,139,1.254,140,1.397,141,1.254,142,1.397,143,1.254,144,1.323,145,1.36,146,1.397,147,0.008,148,0.008,184,4.435,185,4.032,186,4.435,187,2.721,188,5.219,189,3.243,190,4.829,191,3.669,192,5.741,193,4.518,194,6.534]],["title/modules/AdminModule.html",[195,1.522,196,3.128]],["body/modules/AdminModule.html",[1,2.051,2,0.353,3,0.422,5,0.387,7,0.227,9,1.06,16,1.117,18,0.826,41,0.011,54,0.65,59,0.862,60,0.716,66,0.512,67,0.695,76,2.051,116,2.051,127,0.987,147,0.008,148,0.008,150,5.709,156,2.57,175,1.609,185,4.276,195,2.635,196,6.124,197,1.609,198,2.763,199,3.845,200,2.304,201,3.697,202,4.704,203,4.704,204,4.704,205,4.704,206,3.676,207,4.44,208,3.502,209,1.802,210,5.354,211,2.651,212,5.962,213,5.015,214,6.785,215,3.649,216,3.006,217,2.763,218,5.354,219,5.354,220,5.354,221,5.354,222,4.276,223,5.354,224,5.354,225,4.704,226,5.354]],["title/interfaces/AdminStudent.html",[171,0.811,227,2.433]],["body/interfaces/AdminStudent.html",[2,0.367,3,0.438,5,0.402,7,0.236,9,0.988,16,1.408,18,0.967,28,0.532,29,1.144,41,0.011,42,1.144,43,0.57,51,2.041,52,1.018,54,0.532,56,1.15,59,0.69,66,0.572,71,0.901,73,1.381,109,0.613,147,0.008,148,0.008,155,3.417,170,2.871,171,1.358,172,1.498,211,2.172,227,3.736,228,4.109,229,2.208,230,6.105,231,3.762,232,4.885,233,3.736,234,3.844,235,2.759,236,2.759,237,2.315,238,1.175,239,1.353,240,3.434,241,2.315,242,3.122,243,3.623,244,5.24,245,4.441,246,2.759,247,2.759,248,4.441,249,2.242,250,4.441,251,4.441,252,3.434,253,4.441,254,4.441,255,3.434,256,3.434,257,4.441,258,6.054,259,4.441,260,2.393,261,4.441]],["title/components/AppComponent.html",[0,0.417,78,1.124]],["body/components/AppComponent.html",[0,0.749,1,1.25,2,0.332,3,0.396,4,1.805,5,0.364,7,0.213,9,0.716,16,1.306,18,0.932,19,4.251,24,1.153,25,2.505,35,1.749,38,1.035,41,0.01,42,0.985,54,0.624,59,0.5,60,0.674,66,0.38,67,0.653,71,0.653,73,1.901,74,1.393,75,1.393,76,1.25,77,1.805,78,1.901,79,2.062,80,1.393,81,1.185,82,1.32,83,0.613,84,1.393,85,1.25,86,1.393,87,1.25,88,1.393,89,1.25,90,1.805,91,1.25,92,2.003,93,1.25,94,1.393,95,1.25,96,1.32,97,1.805,98,1.285,99,1.805,100,1.25,101,1.393,102,1.25,103,1.285,104,0.928,105,2.119,106,1.25,107,1.356,108,1.25,109,0.555,110,1.25,111,1.393,112,1.25,113,0.928,114,1.25,115,1.393,116,1.25,117,1.393,118,1.25,119,1.393,120,1.25,121,0.482,122,1.32,123,1.393,124,1.285,125,0.805,126,1.25,127,0.928,128,1.25,129,1.393,130,1.25,131,1.393,132,1.25,133,1.393,134,1.25,135,1.393,136,1.25,137,1.25,138,1.25,139,1.25,140,1.393,141,1.25,142,1.393,143,1.25,144,1.32,145,1.356,146,1.393,147,0.008,148,0.008,167,2.716,168,2.259,170,2.471,190,4.82,240,4.029,262,4.423,263,4.251,264,3.367,265,5.731,266,5.731,267,5.034]],["title/modules/AppModule.html",[195,1.522,268,3.344]],["body/modules/AppModule.html",[2,0.279,3,0.333,5,0.306,7,0.179,37,2.26,41,0.011,52,0.62,59,0.876,60,0.567,64,1.654,66,0.439,67,0.549,71,0.549,78,2.093,102,1.92,114,1.92,118,1.92,127,0.78,147,0.007,148,0.007,153,3.129,175,1.272,190,4.294,191,3.726,195,2.403,196,5.345,197,1.272,198,2.185,199,3.424,200,3.221,201,3.293,206,3.442,208,2.999,209,1.424,215,3.125,216,2.377,217,2.185,247,2.101,252,2.615,268,6.62,269,3.72,270,3.72,271,3.72,272,3.72,273,3.72,274,5.345,275,5.345,276,5.345,277,5.345,278,4.157,279,5.345,280,5.345,281,3.99,282,4.233,283,5.811,284,3.72,285,3.381,286,5.811,287,2.927,288,4.233,289,4.233,290,3.129,291,5.811,292,3.381,293,3.589,294,4.233,295,4.233,296,4.233,297,4.233,298,2.927,299,3.72,300,4.233,301,4.233,302,4.233,303,4.233,304,4.233,305,4.233,306,4.233,307,4.233,308,3.381,309,4.233,310,4.233,311,4.233,312,4.233,313,4.233,314,4.017,315,3.72,316,3.72,317,5.299,318,4.233,319,4.233,320,3.72,321,4.233]],["title/modules/AuthenticationModule.html",[195,1.522,274,3.128]],["body/modules/AuthenticationModule.html",[2,0.353,3,0.421,5,0.386,7,0.227,17,3.499,41,0.011,49,2.217,54,0.749,59,0.862,60,0.715,66,0.512,67,0.694,95,2.05,96,1.402,126,2.05,127,1.442,130,2.05,132,2.05,134,2.05,147,0.008,148,0.008,175,1.607,195,2.634,197,1.607,198,2.759,199,3.842,200,2.301,201,2.654,208,3.499,209,1.799,213,5.01,215,3.645,216,3.002,274,6.085,290,3.951,322,4.697,323,4.697,324,5.346,325,6.779,326,3.986,327,5.01,328,5.956,329,5.956,330,3.365,331,5.956,332,4.27,333,5.956,334,5.346,335,5.346,336,5.346,337,5.346,338,5.346,339,4.27,340,5.415,341,4.27,342,5.346]],["title/injectables/AuthenticationService.html",[37,1.323,149,1.714]],["body/injectables/AuthenticationService.html",[0,0.372,2,0.328,3,0.203,5,0.186,7,0.274,9,0.799,13,1.926,16,0.663,18,0.491,19,2.626,28,0.246,29,0.663,30,1.89,33,0.899,34,1.526,35,0.623,37,1.178,38,1.606,40,1.034,41,0.011,42,0.976,43,0.615,44,1.191,48,2.732,49,2.743,50,1.794,51,1.085,52,1.238,53,0.918,54,0.856,56,0.841,57,2.003,58,1.945,59,0.605,60,0.345,65,1.385,66,0.194,67,0.334,71,0.728,96,0.675,127,1.48,145,1.085,147,0.005,148,0.007,149,1.88,154,2,156,2.127,168,1.396,170,1.526,172,1.741,173,2.623,174,2.684,176,0.975,177,1.782,201,2.787,209,1.889,211,1.574,213,2.978,233,3.02,235,2,236,2,239,1.258,240,2.489,241,3.449,260,1.108,287,1.78,328,3.54,329,3.54,330,4.091,343,2.262,344,2.239,345,3.153,346,4.15,347,5.167,348,3.235,349,5.615,350,5.615,351,4.029,352,4.934,353,3.218,354,4.029,355,3.669,356,4.505,357,3.669,358,2.262,359,4.15,360,4.029,361,3.218,362,2.575,363,2.194,364,3.54,365,2.575,366,1.317,367,3.992,368,1.858,369,2.127,370,1.678,371,2.5,372,4.969,373,2.167,374,2.064,375,4.177,376,3.09,377,2.681,378,2.786,379,2.478,380,1.945,381,3.54,382,3.54,383,2.978,384,2.898,385,2.489,386,3.54,387,2.575,388,4.029,389,3.54,390,4.029,391,3.468,392,2.575,393,4.029,394,2.575,395,4.111,396,4.969,397,2.575,398,2.575,399,3.218,400,4.969,401,2.978,402,4.029,403,3.54,404,4.029,405,2.575,406,1.574,407,1.794,408,2.369,409,2.978,410,4.029,411,2.575,412,3.09,413,3.882,414,2.978,415,4.469,416,4.029,417,2.575,418,4.029,419,2.575,420,2.113,421,1.826,422,2.264,423,2.626,424,4.029,425,2.489,426,4.029,427,2.575,428,5.615,429,4.029,430,2.575,431,4.029,432,2.575,433,2.786,434,2.489,435,3.235,436,1.794,437,4.029,438,4.362,439,1.59,440,2.575,441,2.575,442,2.575,443,1.59,444,2.575,445,2.575,446,2.575,447,2.575,448,6.464,449,4.029,450,4.934,451,2.575,452,2.575,453,1.903]],["title/components/ConfirmDeleteDialogComponent.html",[0,0.417,81,1.065]],["body/components/ConfirmDeleteDialogComponent.html",[0,0.675,1,1.114,2,0.296,3,0.353,4,1.241,5,0.324,7,0.19,9,0.638,16,1.257,18,0.89,24,1.028,25,2.49,26,1.767,28,0.429,29,0.995,35,1.084,38,1.405,40,0.718,41,0.011,42,1.032,43,0.561,44,0.826,54,0.753,56,0.834,57,1.6,58,1.554,59,0.6,60,0.6,66,0.339,67,0.582,71,0.582,73,1.817,74,1.241,75,1.241,76,1.114,77,1.673,78,1.114,79,1.628,80,1.241,81,1.721,82,2.171,83,1.042,84,1.241,85,1.114,86,1.241,87,1.114,88,1.241,89,1.114,90,1.673,91,1.114,92,1.892,93,1.114,94,1.241,95,1.114,96,1.176,97,1.673,98,1.144,99,1.673,100,1.114,101,1.241,102,1.114,103,1.144,104,0.826,105,2.024,106,1.114,107,1.208,108,1.114,109,0.494,110,1.114,111,1.241,112,1.114,113,0.826,114,1.114,115,1.241,116,1.114,117,1.241,118,1.114,119,1.241,120,1.114,121,0.429,122,2.107,123,1.241,124,1.144,125,0.718,126,1.114,127,0.826,128,1.114,129,1.241,130,1.114,131,1.241,132,1.114,133,1.241,134,1.114,135,1.241,136,1.114,137,1.114,138,1.114,139,1.114,140,1.241,141,1.114,142,1.241,143,1.114,144,1.176,145,1.208,146,1.241,147,0.007,148,0.007,200,1.93,327,4.466,348,3.938,377,2.705,454,6.427,455,3.582,456,6.044,457,6.044,458,5.31,459,5.31,460,6.709,461,4.107,462,3.941,463,6.911,464,6.044,465,3.119,466,6.044,467,3.938,468,4.827,469,4.485,470,3.315,471,2.923,472,2.923,473,3.941,474,2.77,475,4.827]],["title/interfaces/Course.html",[16,0.745,171,0.811]],["body/interfaces/Course.html",[2,0.388,3,0.463,5,0.425,7,0.363,16,1.455,18,1.066,28,0.562,29,1.184,41,0.011,43,0.664,44,1.492,51,1.937,56,1.166,59,0.714,66,0.444,72,3.896,147,0.008,148,0.008,171,1.288,233,4.353,234,4.062,238,1.519,476,5.162,477,4.353,478,1.439,479,5.875]],["title/components/CourseCreateComponent.html",[0,0.417,85,1.124]],["body/components/CourseCreateComponent.html",[0,0.727,1,0.837,2,0.222,3,0.265,4,0.933,5,0.244,7,0.291,9,1.054,16,1.446,18,0.785,21,2.599,22,1.445,23,2.519,24,0.772,25,2.445,26,1.445,28,0.323,29,0.814,30,2.441,32,2.986,33,1.102,34,2.442,35,1.195,37,1.884,38,1.563,40,0.539,41,0.011,42,0.883,43,0.563,44,0.621,47,2.279,48,1.931,49,2.107,52,0.858,53,2.087,54,0.755,56,0.807,57,1.763,58,1.712,59,0.736,60,0.451,64,1.317,66,0.254,67,0.437,71,0.437,73,1.601,74,0.933,75,0.933,76,0.837,77,1.368,78,0.837,79,1.331,80,0.933,81,0.793,82,0.884,83,0.41,84,0.933,85,1.601,86,0.933,87,0.837,88,0.933,89,0.837,90,1.368,91,0.837,92,1.62,93,0.837,94,0.933,95,0.837,96,0.884,97,1.368,98,0.86,99,1.368,100,0.837,101,0.933,102,0.837,103,0.86,104,0.621,105,1.784,106,0.837,107,0.908,108,0.837,109,0.372,110,0.837,111,0.933,112,0.837,113,0.621,114,0.837,115,0.933,116,0.837,117,0.933,118,0.837,119,0.933,120,0.837,121,0.323,122,0.884,123,0.933,124,0.86,125,0.539,126,0.837,127,0.621,128,0.837,129,0.933,130,0.837,131,0.933,132,0.837,133,0.933,134,0.837,135,0.933,136,0.837,137,0.837,138,0.837,139,0.837,140,0.933,141,0.837,142,0.933,143,0.837,144,0.884,145,0.908,146,0.933,147,0.007,148,0.006,159,2.698,171,0.604,175,1.013,189,2.453,238,1.45,278,3.466,344,1.712,363,1.931,366,2.107,368,2.279,370,2.986,374,1.816,377,2.169,378,3.417,379,2.167,380,2.232,415,3.417,420,2.578,421,1.228,422,2.599,434,3.053,435,2.196,465,2.551,477,2.658,478,0.989,480,5.054,481,6.194,482,2.961,483,2.437,484,2.775,485,4.942,486,4.942,487,6.445,488,3.504,489,5.148,490,2.518,491,2.692,492,3.286,493,3.619,494,2.698,495,4.942,496,3.053,497,3.37,498,3.221,499,3.053,500,3.37,501,3.417,502,1.931,503,2.658,504,3.37,505,3.37,506,3.37,507,3.37,508,1.982,509,2.196,510,1.451,511,1.554,512,2.961,513,1.611,514,3.37,515,2.279,516,1.982,517,2.961,518,3.37,519,3.37,520,2.692,521,2.33,522,3.37,523,2.961,524,2.961,525,1.893,526,1.893,527,1.982,528,1.982]],["title/components/CourseEditComponent.html",[0,0.417,87,1.124]],["body/components/CourseEditComponent.html",[0,0.527,1,0.56,2,0.239,3,0.178,4,0.624,5,0.163,7,0.193,9,0.321,14,2.037,16,1.415,18,0.896,21,2.102,22,1.061,23,1.958,24,0.517,25,2.36,26,1.061,28,0.216,29,0.597,30,2.327,32,2.541,33,1.576,34,1.975,35,0.545,37,1.524,38,1.61,40,0.361,41,0.011,42,0.687,43,0.547,44,0.416,49,1.705,52,1.036,53,2.456,54,0.676,56,0.628,57,0.805,58,0.781,59,0.742,60,0.302,61,2.948,62,1.164,63,1.213,64,0.881,65,1.213,66,0.17,67,0.293,71,0.59,72,3.696,73,1.295,74,0.624,75,0.624,76,0.56,77,1.004,78,0.56,79,0.977,80,0.624,81,0.854,82,1.805,83,0.993,84,0.624,85,0.56,86,0.624,87,1.295,88,0.624,89,0.56,90,1.004,91,0.56,92,1.259,93,0.56,94,0.624,95,0.56,96,0.591,97,1.004,98,0.576,99,1.004,100,0.56,101,0.624,102,0.56,103,0.576,104,0.416,105,1.443,106,0.56,107,0.608,108,0.56,109,0.249,110,0.56,111,0.624,112,0.56,113,0.416,114,0.56,115,0.624,116,0.56,117,0.624,118,0.56,119,0.624,120,0.56,121,0.216,122,1.498,123,0.624,124,0.576,125,0.361,126,0.56,127,0.416,128,0.56,129,0.624,130,0.56,131,0.624,132,0.56,133,0.624,134,0.56,135,0.624,136,0.56,137,0.56,138,0.56,139,0.56,140,0.624,141,0.56,142,0.624,143,0.56,144,0.591,145,0.608,146,0.624,147,0.005,148,0.004,154,3.029,159,1.673,163,1.333,168,1.256,175,0.678,176,0.854,177,1.061,187,1.511,193,3.604,200,0.971,206,1.004,217,1.164,227,2.803,237,1.511,238,1.207,239,1.376,249,1.463,255,2.241,256,1.393,278,2.803,344,2.311,366,1.995,368,1.673,370,2.541,371,1.615,376,2.731,377,1.221,379,1.524,380,1.806,407,2.321,421,0.56,422,1.835,436,1.615,467,2.364,468,2.897,470,3.853,471,1.47,472,1.47,475,5.328,477,1.951,478,1.043,480,5.147,483,1.895,484,2.037,490,2.037,492,2.555,493,2.927,494,2.098,496,2.811,499,2.241,502,2.037,509,1.47,510,0.971,511,1.04,513,1.078,515,2.814,517,3.187,520,1.802,521,2.508,523,3.187,524,3.187,525,2.927,526,2.927,529,6.309,530,1.982,531,3.723,532,3.628,533,3.628,534,4.581,535,4.581,536,2.803,537,3.604,538,5.213,539,5.213,540,5.213,541,5.213,542,5.213,543,4.164,544,4.164,545,5.213,546,2.942,547,1.326,548,3.998,549,3.628,550,2.255,551,5.328,552,5.213,553,2.255,554,2.255,555,4.93,556,4.365,557,4.612,558,4.51,559,3.588,560,2.255,561,3.853,562,2.587,563,5.362,564,2.255,565,2.255,566,1.872,567,1.8,568,1.872,569,2.255,570,3.187,571,3.628,572,2.255,573,3.628,574,2.255,575,2.255,576,2.255,577,2.133,578,2.255,579,2.037,580,2.255,581,2.255,582,2.255,583,3.187,584,1.667,585,1.47,586,1.802,587,1.667,588,1.802,589,2.255,590,1.213,591,0.591,592,0.697,593,1.119,594,1.393,595,1.982,596,1.559,597,1.667,598,1.802,599,2.255,600,3.281,601,1.802,602,3.998,603,2.255,604,2.255,605,4.55,606,2.255,607,1.982,608,1.982,609,1.326,610,2.255,611,6.415,612,2.255,613,2.255,614,3.628,615,1.982,616,2.255,617,2.255,618,1.802,619,1.559,620,3.187,621,3.187,622,2.897,623,2.681,624,2.255,625,1.802,626,3.187,627,3.187,628,3.187,629,2.255,630,3.187,631,2.255,632,2.133,633,3.628,634,2.255,635,2.255,636,1.559,637,1.213,638,1.213,639,3.187,640,2.508,641,2.897]],["title/components/CourseIndivComponent.html",[0,0.417,89,1.124]],["body/components/CourseIndivComponent.html",[0,0.609,1,0.763,2,0.407,3,0.242,4,0.851,5,0.222,7,0.305,9,0.656,16,1.423,18,1.029,19,3.007,21,2.484,22,1.349,23,2.385,24,0.704,25,2.427,26,1.349,28,0.294,29,0.76,30,2.46,32,2.887,33,1.029,34,2.334,35,1.116,37,1.801,38,1.556,40,0.492,41,0.011,42,0.836,43,0.59,44,0.566,47,2.128,49,1.509,51,1.493,52,0.676,53,1.646,54,0.664,56,0.765,57,1.646,58,1.598,59,0.751,60,0.411,61,3.408,62,1.586,63,1.652,64,1.201,66,0.232,67,0.399,71,0.719,72,3.316,73,1.53,74,0.851,75,0.851,76,0.763,77,1.277,78,0.763,79,1.243,80,0.851,81,0.723,82,0.806,83,0.374,84,0.851,85,0.763,86,0.851,87,0.763,88,0.851,89,1.53,90,1.277,91,0.763,92,1.534,93,0.763,94,0.851,95,0.763,96,0.806,97,1.277,98,0.784,99,1.277,100,0.763,101,0.851,102,0.763,103,0.784,104,0.566,105,1.705,106,0.763,107,0.828,108,0.763,109,0.913,110,0.763,111,0.851,112,0.763,113,0.566,114,0.763,115,0.851,116,0.763,117,0.851,118,0.763,119,0.851,120,0.763,121,0.294,122,0.806,123,0.851,124,0.784,125,0.492,126,0.763,127,0.566,128,0.763,129,0.851,130,0.763,131,0.851,132,0.763,133,0.851,134,0.763,135,0.851,136,0.763,137,0.763,138,0.763,139,0.763,140,0.851,141,0.763,142,0.851,143,0.763,144,0.806,145,0.828,146,0.851,147,0.005,148,0.005,159,2.128,163,1.696,171,0.551,175,0.924,187,2.307,238,0.649,239,1.199,243,3.007,249,1.861,256,1.898,264,2.382,278,3.313,281,3.179,298,2.124,344,2.134,368,2.128,374,2.036,377,1.553,379,1.801,407,2.055,421,0.763,477,2.482,478,1.481,480,5.024,483,2.307,484,2.591,488,2.128,490,2.407,492,3.112,493,3.459,494,2.555,496,3.423,502,2.407,509,2.003,510,1.323,511,1.417,513,1.469,515,1.417,531,3.007,535,5.412,536,3.313,537,4.259,547,1.807,566,2.382,567,2.29,568,2.382,579,2.591,588,2.454,590,1.652,591,0.806,592,0.95,593,1.525,594,1.898,596,2.124,597,2.271,598,2.454,600,2.98,601,2.454,602,2.7,609,1.807,636,2.124,637,1.652,638,1.652,639,4.055,641,3.686,642,6.157,643,2.454,644,4.055,645,4.615,646,4.055,647,3.423,648,4.615,649,3.073,650,3.073,651,2.85,652,3.073,653,4.615,654,3.073,655,3.073,656,3.073,657,3.19,658,3.073,659,4.615,660,1.807,661,2.7,662,3.073,663,2.7,664,2.271,665,2.7,666,2.454,667,2.7,668,2.124,669,2.454,670,4.615,671,4.615,672,4.055,673,4.615]],["title/components/CourseListComponent.html",[0,0.417,91,1.124]],["body/components/CourseListComponent.html",[0,0.753,1,0.981,2,0.261,3,0.311,4,1.094,5,0.286,7,0.167,9,0.986,16,1.467,18,0.844,22,1.62,23,2.753,24,0.905,25,2.471,26,1.62,28,0.378,29,0.912,30,2.318,33,1.235,34,2.626,35,1.339,37,2.027,38,1.501,40,0.632,41,0.011,42,0.966,43,0.525,44,0.728,47,2.554,49,1.811,52,0.812,53,1.976,54,0.724,59,0.725,60,0.529,64,1.544,66,0.298,67,0.513,71,0.513,72,2.554,73,1.722,74,1.094,75,1.094,76,0.981,77,1.533,78,0.981,79,1.492,80,1.094,81,0.93,82,1.036,83,0.481,84,1.094,85,0.981,86,1.094,87,0.981,88,1.094,89,0.981,90,1.533,91,1.722,92,1.77,93,0.981,94,1.094,95,0.981,96,1.036,97,1.533,98,1.008,99,1.533,100,0.981,101,1.094,102,0.981,103,1.008,104,0.728,105,1.919,106,0.981,107,1.064,108,0.981,109,0.436,110,0.981,111,1.094,112,0.981,113,0.728,114,0.981,115,1.094,116,0.981,117,1.094,118,0.981,119,1.094,120,0.981,121,0.378,122,1.036,123,1.094,124,1.008,125,0.632,126,0.981,127,0.728,128,0.981,129,1.094,130,0.981,131,1.094,132,0.981,133,1.094,134,0.981,135,1.094,136,0.981,137,0.981,138,0.981,139,0.981,140,1.094,141,0.981,142,1.094,143,0.981,144,1.036,145,1.064,146,1.094,147,0.007,148,0.007,154,2.749,155,2.384,167,2.307,171,0.708,278,3.728,344,2.401,420,1.811,421,1.376,478,1.667,480,4.931,483,2.663,488,3.764,490,2.709,491,3.156,494,2.949,496,3.422,502,2.164,503,2.979,508,2.323,509,2.575,513,1.889,516,2.323,527,2.323,528,2.323,657,4.793,674,6.044,675,3.156,676,4.425,677,5.54,678,3.952,679,3.83,680,3.952,681,3.422,682,3.952,683,3.952,684,3.952,685,3.472,686,4.867]],["title/modules/CourseModule.html",[195,1.522,687,3.344]],["body/modules/CourseModule.html",[2,0.336,3,0.4,5,0.367,7,0.215,16,1.419,17,3.388,18,0.799,41,0.011,59,0.865,60,0.68,66,0.496,67,0.659,81,1.711,83,0.885,85,2.023,87,2.023,89,2.023,91,2.023,93,2.023,127,0.937,147,0.008,148,0.008,175,1.528,187,2.733,195,2.585,197,1.528,198,2.624,199,3.752,200,2.188,201,3.608,206,3.627,208,3.388,209,1.71,215,3.53,216,2.855,217,2.624,481,4.06,529,4.06,531,4.278,558,4.851,584,3.757,585,3.313,642,4.06,674,4.06,687,6.545,688,4.467,689,4.467,690,5.083,691,4.467,692,5.631,693,5.083,694,6.564,695,5.243,696,5.083,697,4.467,698,5.083,699,4.467,700,4.06,701,4.467,702,5.083,703,5.083,704,5.083,705,5.083]],["title/injectables/CourseResolver.html",[149,1.714,692,3.128]],["body/injectables/CourseResolver.html",[2,0.476,3,0.394,5,0.361,7,0.275,9,0.711,14,3.646,16,1.393,21,2.618,22,2.108,28,0.479,30,1.462,33,1.448,35,1.209,37,2.232,38,1.335,40,1.221,41,0.011,42,0.98,43,0.533,44,1.196,52,1.119,59,0.805,60,0.669,64,1.953,66,0.377,67,0.649,147,0.008,148,0.008,149,2.732,157,4.715,162,5.47,163,2.98,164,5.47,167,2.704,168,2.809,169,5.186,170,2.46,171,1.164,175,1.503,176,1.894,177,1.898,238,1.372,255,3.088,278,4.105,293,4.011,348,4.7,375,4.261,384,3.351,421,1.242,439,3.088,477,4.549,491,3.993,494,3.325,496,4.011,509,3.258,513,2.39,586,3.993,661,4.393,692,4.489,706,4.393,707,6.477,708,6.493,709,4.999,710,5.186,711,4.999,712,4.011,713,4.975,714,3.818,715,1.749,716,4.999]],["title/components/CourseScenarioComponent.html",[0,0.417,93,1.124]],["body/components/CourseScenarioComponent.html",[0,0.669,1,0.611,2,0.162,3,0.194,4,0.681,5,0.178,7,0.232,9,0.944,13,1.859,14,3.076,16,1.367,18,1.047,21,2.208,22,1.137,23,2.075,24,0.564,25,2.381,26,1.137,28,0.461,29,0.64,30,2.379,32,2.64,33,0.867,34,2.075,35,0.595,37,1.601,38,1.571,40,1.015,41,0.011,42,0.957,43,0.607,44,1.009,49,1.791,51,1.475,52,1.038,53,1.954,54,0.695,56,1.054,57,1.387,58,1.347,59,0.72,60,0.329,61,3.079,62,1.27,63,1.323,64,0.961,66,0.186,67,0.319,71,0.319,73,1.36,74,0.681,75,0.681,76,0.611,77,1.076,78,0.611,79,1.047,80,0.681,81,0.579,82,0.645,83,0.3,84,0.681,85,0.611,86,0.681,87,0.611,88,0.681,89,0.611,90,1.076,91,0.611,92,1.334,93,1.36,94,0.681,95,0.611,96,0.645,97,1.076,98,0.628,99,1.076,100,0.611,101,0.681,102,0.611,103,0.628,104,0.453,105,1.516,106,0.611,107,0.663,108,0.611,109,0.911,110,0.611,111,0.681,112,0.611,113,0.453,114,0.611,115,0.681,116,0.611,117,0.681,118,0.611,119,0.681,120,0.611,121,0.236,122,0.645,123,0.681,124,0.628,125,0.394,126,0.611,127,0.453,128,0.611,129,0.681,130,0.611,131,0.681,132,0.611,133,0.681,134,0.611,135,0.681,136,0.611,137,0.611,138,0.611,139,0.611,140,0.681,141,0.611,142,0.681,143,0.611,144,0.645,145,0.663,146,0.681,147,0.005,148,0.005,156,3.082,159,1.793,163,1.429,167,1.619,168,1.897,171,0.441,172,1.475,173,1.059,175,0.74,176,0.932,177,1.409,187,2.64,197,1.169,207,2.945,211,1.519,225,2.162,237,2.281,238,1.59,243,3.569,249,1.568,278,2.945,281,2.827,298,1.701,344,2.196,368,1.793,370,1.619,375,2.007,376,1.176,377,1.308,379,1.409,391,1.52,407,1.731,421,0.611,443,2.402,465,2.007,477,3.702,478,1.096,480,5.04,483,2.007,484,2.184,488,1.793,490,2.14,492,2.707,493,3.076,494,2.223,496,2.978,502,2.14,509,1.604,510,1.059,511,1.135,512,2.162,513,1.176,515,2.223,525,2.184,526,2.184,536,2.945,537,3.787,547,1.447,556,3.917,557,3.787,562,3.147,566,2.007,567,1.93,568,2.007,570,3.417,579,2.184,590,1.323,591,0.645,592,0.761,593,1.221,594,1.52,596,1.701,598,1.966,600,2.592,607,2.162,608,2.162,632,2.286,636,1.701,637,1.323,638,1.323,640,2.688,647,2.978,664,1.819,668,1.701,669,3.106,700,6.178,717,2.162,718,2.874,719,2.242,720,4.039,721,3.889,722,3.417,723,4.686,724,3.889,725,3.889,726,2.874,727,3.333,728,3.889,729,3.889,730,2.461,731,3.417,732,3.273,733,4.236,734,3.889,735,2.461,736,4.686,737,3.349,738,3.889,739,2.461,740,3.889,741,2.184,742,2.461,743,2.402,744,2.461,745,2.874,746,2.461,747,2.461,748,2.461,749,2.461,750,2.461,751,2.461,752,2.461,753,2.461,754,2.007,755,2.162,756,2.461,757,2.461,758,2.162,759,2.007,760,2.461,761,2.461,762,2.461,763,2.874,764,3.889,765,2.461,766,2.461,767,2.461,768,1.447,769,2.461,770,2.461,771,2.162,772,3.889,773,2.874,774,3.889]],["title/interfaces/ExperimentPhage.html",[171,0.811,775,2.433]],["body/interfaces/ExperimentPhage.html",[2,0.297,3,0.354,5,0.325,7,0.257,9,0.64,18,0.547,28,0.43,29,0.997,41,0.011,43,0.497,51,1.211,54,0.701,56,1.01,66,0.577,83,0.958,104,0.828,121,0.853,125,0.969,147,0.007,148,0.007,163,1.652,171,1.466,172,1.631,197,1.351,229,1.429,231,3.634,238,1.835,239,1.533,363,1.757,366,1.47,369,1.703,408,2.644,420,2.394,436,2.002,478,1.211,577,2.644,591,1.919,592,1.871,715,1.631,719,2.115,741,3.399,775,3.255,776,2.93,777,2.674,778,4.522,779,4.185,780,3.462,781,2.525,782,2.93,783,1.279,784,3.255,785,2.441,786,2.525,787,2.321,788,2.945,789,2.777,790,2.644,791,2.321,792,4.024,793,2.952,794,2.93,795,2.644,796,3.399,797,1.872,798,2.418,799,4.233,800,3.945,801,3.26,802,2.321,803,2.695,804,3.559,805,2.605,806,4.185,807,4.185,808,4.185,809,4.185,810,3.945,811,2.791,812,3.109,813,2.777,814,2.321,815,2.644,816,3.109,817,2.695]],["title/injectables/ExperimentService.html",[149,1.714,818,3.128]],["body/injectables/ExperimentService.html",[2,0.427,3,0.317,5,0.291,7,0.274,28,0.386,29,0.925,30,1.89,33,1.253,35,0.975,38,1.438,40,1.034,41,0.011,42,0.976,43,0.664,44,1.191,51,1.884,52,1.116,56,0.775,57,1.438,58,1.396,59,0.694,60,0.539,66,0.304,67,0.523,73,1.395,104,1.035,109,0.771,121,0.729,125,1.312,147,0.009,148,0.007,149,2.449,170,2.649,171,0.722,176,1.527,177,1.642,239,1.094,287,2.787,327,4.151,344,1.946,345,4.276,346,5.168,359,5.168,370,2.912,374,2.064,375,4.033,379,1.642,421,1.737,439,2.49,461,4.276,465,2.899,478,1.399,562,3.471,591,1.472,592,1.736,660,3.302,715,1.513,759,3.609,777,3.425,778,3.469,780,3.165,788,2.417,792,3.302,793,2.265,797,2.339,805,3.01,818,3.883,819,3.542,820,4.319,821,3.343,822,2.064,823,5.617,824,3.883,825,5.617,826,3.542,827,5.617,828,4.935,829,5.617,830,4.792,831,4.031,832,3.013,833,2.353,834,7.353,835,4.792,836,4.323,837,4.685,838,4.486,839,4.319,840,3.66,841,4.151,842,4.834,843,5.617,844,4.792,845,4.031,846,3.883,847,3.883,848,3.66,849,3.66,850,4.151,851,4.486,852,3.66,853,5.617,854,4.935,855,4.935,856,2.627,857,4.935,858,4.031,859,2.787,860,2.787,861,2.787,862,4.031]],["title/components/ForgetPasswordComponent.html",[0,0.417,95,1.124]],["body/components/ForgetPasswordComponent.html",[0,0.697,1,0.821,2,0.218,3,0.26,4,0.915,5,0.239,7,0.245,9,0.47,13,2.329,16,1.121,18,0.777,22,1.424,24,0.757,25,2.441,26,1.424,28,0.316,29,0.802,30,2.354,32,2.966,33,1.087,35,0.799,36,1.856,37,1.867,38,1.515,40,0.529,41,0.011,42,0.873,43,0.559,44,0.609,45,2.62,50,2.169,51,1.312,52,0.714,53,1.738,54,0.724,56,1.065,57,1.738,58,1.688,59,0.634,60,0.442,66,0.25,67,0.429,71,0.429,73,1.586,74,0.915,75,0.915,76,0.821,77,1.349,78,0.821,79,1.312,80,0.915,81,0.778,82,0.867,83,0.402,84,0.915,85,0.821,86,0.915,87,0.821,88,0.915,89,0.821,90,1.349,91,0.821,92,1.602,93,0.821,94,0.915,95,1.586,96,2.023,97,1.349,98,0.844,99,1.349,100,0.821,101,0.915,102,0.821,103,0.844,104,0.609,105,1.767,106,0.821,107,0.89,108,0.821,109,0.364,110,0.821,111,0.915,112,0.821,113,0.609,114,0.821,115,0.915,116,0.821,117,0.915,118,0.821,119,0.915,120,0.821,121,0.316,122,0.867,123,0.915,124,0.844,125,0.529,126,0.821,127,1.466,128,0.821,129,0.915,130,0.821,131,0.915,132,0.821,133,0.915,134,0.821,135,0.915,136,0.821,137,0.821,138,0.821,139,0.821,140,0.915,141,0.821,142,0.915,143,0.821,144,0.867,145,0.89,146,0.915,147,0.006,148,0.006,176,1.252,241,3.631,264,2.515,326,3.754,330,3.997,339,6.038,344,2.212,345,2.736,363,1.904,364,2.905,366,2.088,367,4.669,369,1.846,371,2.169,372,2.285,376,3.053,377,2.678,378,4.924,379,2.354,380,2.212,383,4.719,384,2.515,406,2.495,415,4.924,483,2.409,488,3.618,490,2.495,498,4.161,502,1.904,508,1.944,510,1.423,511,1.524,515,2.247,516,1.944,527,1.944,528,1.944,546,2.029,559,2.865,566,2.515,567,2.418,568,2.515,609,1.944,743,3.01,863,6.642,864,2.443,865,4.281,866,3.892,867,6.258,868,6.385,869,4.872,870,3.306,871,3.306,872,3.175,873,4.281,874,2.865,875,4.872,876,3.306,877,3.306,878,3.306,879,2.154,880,4.872,881,4.872,882,4.281,883,3.306,884,2.443,885,2.443,886,2.905]],["title/interfaces/Fridge.html",[171,0.811,719,1.398]],["body/interfaces/Fridge.html",[2,0.321,3,0.383,5,0.352,7,0.206,9,0.692,18,0.592,28,0.466,29,1.05,41,0.011,43,0.66,51,1.917,54,0.611,56,1.188,59,0.633,66,0.482,83,0.866,109,0.887,121,0.681,125,1.021,147,0.008,148,0.008,156,2.971,170,2.416,171,1.275,172,2.035,233,3.43,234,3.363,237,3.146,238,1.504,239,0.947,242,4.404,366,2.086,369,2.696,421,1.584,478,1.424,713,4.157,715,2.035,719,2.732,720,3.893,754,4.048,777,2.492,784,4.062,811,2.941,814,3.292,817,3.705,822,2.883,832,2.344,833,2.146,887,3.886,888,6.062,889,5.223,890,4.714,891,3.582,892,5.223,893,3.363,894,3.17,895,3.005]],["title/interfaces/FridgePhage.html",[171,0.811,784,2.433]],["body/interfaces/FridgePhage.html",[2,0.274,3,0.327,5,0.3,7,0.278,9,0.591,18,0.506,28,0.398,29,0.945,41,0.011,43,0.646,44,1.416,51,1.119,54,0.769,56,1.108,66,0.561,83,0.936,104,0.766,121,0.858,125,0.665,147,0.007,148,0.007,163,2.108,171,1.412,172,1.908,197,1.724,229,1.321,231,3.517,238,1.817,239,1.534,363,2.241,366,2.317,369,2.173,408,3.373,420,2.576,436,1.85,478,1.148,577,2.443,591,1.857,592,1.773,715,1.545,719,2.19,741,3.222,775,2.235,776,2.708,777,2.241,778,2.567,779,2.873,780,3.391,781,2.334,782,2.708,783,1.182,784,3.533,785,2.857,786,3.222,787,2.961,788,3.049,789,3.544,790,4.166,791,3.657,792,4.371,793,3.286,794,3.739,795,4.166,796,3.69,797,1.73,798,2.235,799,4.134,800,3.739,801,3.155,802,2.145,803,2.554,804,3.373,805,2.469,806,3.966,807,3.966,808,3.966,809,3.966,810,3.739,811,2.645,812,2.873,813,2.567,814,2.145,815,2.443,816,2.873,817,2.554]],["title/interfaces/GenotypePhage.html",[171,0.811,798,2.433]],["body/interfaces/GenotypePhage.html",[2,0.277,3,0.331,5,0.304,7,0.245,9,0.598,18,0.512,28,0.402,29,0.952,41,0.011,43,0.613,44,1.066,51,1.132,54,0.682,56,1.065,66,0.564,83,1.016,104,1.066,121,0.853,125,0.673,147,0.007,148,0.007,163,1.545,171,1.416,172,1.558,197,1.264,229,1.336,231,3.281,238,1.84,239,1.502,363,1.642,366,1.375,369,1.593,408,2.472,420,2.441,436,2.575,478,1.323,577,3.4,591,2.022,592,2.043,715,1.558,719,2.2,741,3.712,775,2.261,776,2.74,777,2.583,778,2.597,779,2.906,780,3.558,781,2.361,782,2.74,783,1.196,784,3.11,785,2.332,786,2.361,787,2.17,788,3.064,789,2.597,790,2.472,791,2.17,792,4.186,793,3.187,794,2.74,795,2.472,796,3.247,797,2.408,798,3.11,799,4.393,800,4.308,801,3.435,802,3.675,803,2.943,804,3.887,805,2.845,806,4.57,807,4.57,808,4.57,809,4.57,810,4.308,811,3.048,812,3.998,813,4.398,814,2.17,815,2.472,816,2.906,817,2.575]],["title/components/HelpComponent.html",[0,0.417,100,1.124]],["body/components/HelpComponent.html",[0,0.712,1,1.281,2,0.34,3,0.406,4,1.427,5,0.373,9,0.733,16,1.315,18,0.94,24,1.181,25,2.508,26,1.937,35,1.77,38,1.06,41,0.01,42,1,51,1.389,54,0.634,59,0.512,60,0.69,66,0.389,67,0.669,71,0.669,73,1.918,74,1.427,75,1.427,76,1.281,77,1.833,78,1.281,79,1.784,80,1.427,81,1.213,82,1.352,83,0.628,84,1.427,85,1.281,86,1.427,87,1.281,88,1.427,89,1.281,90,1.833,91,1.281,92,2.026,93,1.281,94,1.427,95,1.281,96,1.352,97,1.833,98,1.316,99,1.833,100,1.918,101,1.427,102,1.281,103,1.316,104,0.95,105,2.138,106,1.281,107,1.389,108,1.281,109,0.568,110,1.281,111,1.427,112,1.281,113,0.95,114,1.281,115,1.427,116,1.281,117,1.427,118,1.281,119,1.427,120,1.281,121,0.494,122,1.352,123,1.427,124,1.316,125,0.825,126,1.281,127,0.95,128,1.281,129,1.427,130,1.281,131,1.427,132,1.281,133,1.427,134,1.281,135,1.427,136,1.281,137,1.281,138,1.281,139,1.281,140,1.427,141,1.281,142,1.427,143,1.281,144,1.352,145,1.389,146,1.427,147,0.008,148,0.008,484,3.72,896,4.53,897,5.846,898,6.624,899,6.624,900,5.156,901,5.291,902,6.624,903,5.156]],["title/modules/HelpModule.html",[195,1.522,275,3.128]],["body/modules/HelpModule.html",[2,0.403,3,0.481,5,0.442,41,0.011,59,0.856,60,0.818,66,0.556,67,0.793,100,2.119,127,1.126,147,0.009,148,0.009,175,1.837,195,2.478,197,1.837,198,3.155,199,4.08,200,2.631,201,3.034,206,3.798,208,3.801,209,2.057,215,3.961,216,3.433,217,3.155,275,6.016,904,5.372,905,5.372,906,6.114,907,6.114,908,6.114,909,6.114,910,6.114,911,6.114]],["title/components/HomeComponent.html",[0,0.417,102,1.124]],["body/components/HomeComponent.html",[0,0.759,1,1.022,2,0.271,3,0.324,4,1.138,5,0.297,7,0.174,9,0.585,11,3.938,16,1.22,18,0.859,22,1.665,23,2.813,24,0.942,25,2.477,26,1.665,28,0.394,29,0.938,30,1.911,33,1.27,34,2.672,35,0.994,36,2.31,37,2.062,38,1.451,40,0.658,41,0.011,42,0.986,43,0.467,44,0.758,45,3.063,49,2.506,52,0.835,53,2.032,54,0.834,59,0.649,60,0.55,64,1.607,65,2.212,66,0.311,67,0.534,69,3.285,70,4.55,71,1.019,72,2.627,73,1.752,74,1.138,75,1.138,76,1.022,77,1.577,78,1.022,79,1.534,80,1.138,81,0.968,82,1.078,83,0.501,84,1.138,85,1.022,86,1.138,87,1.022,88,1.138,89,1.022,90,1.577,91,1.022,92,1.809,93,1.022,94,1.138,95,1.022,96,1.078,97,1.577,98,1.05,99,1.577,100,1.022,101,1.138,102,1.752,103,1.05,104,0.758,105,1.952,106,1.022,107,1.76,108,1.022,109,0.72,110,1.022,111,1.138,112,1.022,113,0.758,114,1.022,115,1.138,116,1.022,117,1.138,118,1.022,119,1.138,120,1.022,121,0.394,122,1.078,123,1.138,124,1.05,125,0.658,126,1.022,127,0.758,128,1.022,129,1.138,130,1.022,131,1.138,132,1.022,133,1.138,134,1.022,135,1.138,136,1.022,137,1.022,138,1.022,139,1.022,140,1.138,141,1.022,142,1.138,143,1.022,144,1.078,145,1.108,146,1.138,147,0.007,148,0.007,155,2.452,176,1.558,187,2.372,189,3.501,191,3.961,192,5.005,197,1.712,209,1.917,407,2.536,409,4.21,412,3.663,483,2.721,484,3.199,490,2.756,743,3.519,745,4.21,768,2.418,912,3.614,913,5.005,914,5.696,915,5.696,916,5.696,917,4.113,918,4.113,919,5.696,920,4.21,921,5.696,922,7.054,923,5.696,924,5.696,925,5.696,926,3.938,927,5.696,928,5.005,929,5.696,930,2.536,931,3.349]],["title/components/LandingRoomComponent.html",[0,0.417,106,1.124]],["body/components/LandingRoomComponent.html",[0,0.751,1,0.865,2,0.23,3,0.274,4,0.964,5,0.252,7,0.277,9,0.496,16,1.145,18,0.883,21,3.019,22,1.48,23,2.567,24,0.798,25,2.45,26,1.48,28,0.334,29,0.834,30,2.033,33,1.46,34,2.48,35,0.842,38,1.43,40,0.954,41,0.011,42,0.9,43,0.489,44,0.642,47,2.335,48,2.558,51,1.364,52,0.742,53,1.806,54,0.485,59,0.65,60,0.466,66,0.263,67,0.452,71,0.774,73,1.626,74,0.964,75,0.964,76,0.865,77,1.401,78,0.865,79,1.364,80,0.964,81,0.82,82,0.913,83,0.424,84,0.964,85,0.865,86,0.964,87,0.865,88,0.964,89,0.865,90,1.401,91,0.865,92,1.651,93,0.865,94,0.964,95,0.865,96,0.913,97,1.401,98,0.889,99,1.401,100,0.865,101,0.964,102,0.865,103,0.889,104,0.642,105,1.812,106,1.626,107,2.017,108,0.865,109,0.969,110,0.865,111,0.964,112,0.865,113,0.642,114,0.865,115,0.964,116,0.865,117,0.964,118,0.865,119,0.964,120,0.865,121,0.717,122,0.913,123,0.964,124,0.889,125,0.557,126,0.865,127,0.642,128,0.865,129,0.964,130,0.865,131,0.964,132,0.865,133,0.964,134,0.865,135,0.964,136,0.865,137,0.865,138,0.865,139,0.865,140,0.964,141,0.865,142,0.964,143,0.865,144,0.913,145,0.938,146,0.964,147,0.006,148,0.006,157,4.482,159,2.75,168,2.268,171,0.624,175,1.047,176,1.32,177,1.744,187,2.108,189,2.513,191,2.843,239,0.986,281,3.59,316,5.753,344,2.268,374,1.861,379,1.744,420,1.656,422,2.64,483,2.484,488,3.346,490,2.558,492,3.676,493,3.905,499,3.127,502,1.978,503,2.723,516,2.048,520,2.783,521,2.409,527,2.048,528,2.048,547,2.048,566,2.613,567,2.513,568,2.613,591,1.327,592,1.565,593,1.729,647,4.044,668,2.409,715,1.364,743,3.127,754,2.613,763,2.575,773,3.742,787,2.613,788,2.818,793,2.041,797,2.726,803,3.231,932,6.375,933,5.795,934,2.783,935,4.449,936,4.838,937,4.044,938,5.063,939,3.3,940,4.449,941,5.063,942,5.362,943,4.044,944,5.063,945,4.449,946,5.063,947,5.063,948,3.742,949,3.484,950,3.484,951,3.127,952,3.484,953,5.063,954,2.575,955,3.484,956,3.061,957,3.484,958,5.063,959,5.063,960,5.063]],["title/components/ListComponent.html",[0,0.417,108,1.124]],["body/components/ListComponent.html",[0,0.752,1,0.975,2,0.259,3,0.309,4,1.087,5,0.284,7,0.166,9,0.558,16,1.199,18,0.842,22,1.612,23,2.743,24,0.899,25,2.47,26,1.612,28,0.376,29,0.908,30,2.021,32,2.878,33,1.23,34,2.619,35,0.949,36,2.204,37,2.021,38,1.595,40,0.628,41,0.011,42,0.962,43,0.598,44,0.723,45,2.965,47,2.543,49,1.803,52,0.808,53,1.967,54,0.808,56,0.88,59,0.75,60,0.525,64,1.534,65,2.111,66,0.296,67,0.509,69,3.136,71,0.509,73,1.717,74,1.087,75,1.087,76,0.975,77,1.526,78,0.975,79,1.485,80,1.087,81,0.924,82,1.029,83,0.478,84,1.087,85,0.975,86,1.087,87,0.975,88,1.087,89,0.975,90,1.526,91,0.975,92,1.764,93,0.975,94,1.087,95,0.975,96,1.029,97,1.526,98,1.002,99,1.526,100,0.975,101,1.087,102,0.975,103,1.002,104,0.723,105,1.913,106,0.975,107,1.057,108,1.717,109,0.962,110,0.975,111,1.087,112,0.975,113,0.723,114,0.975,115,1.087,116,0.975,117,1.087,118,0.975,119,1.087,120,0.975,121,0.376,122,1.029,123,1.087,124,1.002,125,0.628,126,0.975,127,0.723,128,0.975,129,1.087,130,0.975,131,1.087,132,0.975,133,1.087,134,0.975,135,1.087,136,0.975,137,0.975,138,0.975,139,0.975,140,1.087,141,0.975,142,1.087,143,0.975,144,1.029,145,1.057,146,1.087,147,0.007,148,0.007,176,1.487,239,1.074,281,3.568,344,2.394,412,3.305,478,1.584,483,2.654,488,3.187,490,2.701,502,2.154,503,2.965,508,2.308,566,2.846,567,2.737,568,2.846,647,3.937,657,5.473,666,3.136,668,2.714,676,4.404,743,3.406,773,4.075,783,1.568,920,2.901,931,3.242,954,2.901,961,3.45,962,6.913,963,5.514,964,3.926,965,3.926,966,4.404,967,3.926,968,3.926,969,3.926,970,3.136,971,3.926,972,3.926,973,3.926,974,3.926,975,4.404]],["title/components/LocationComponent.html",[0,0.417,110,1.124]],["body/components/LocationComponent.html",[0,0.749,1,1.25,2,0.478,3,0.396,4,1.393,5,0.364,7,0.213,9,0.716,14,3.663,16,1.306,18,0.932,24,1.153,25,2.505,26,1.907,41,0.01,42,0.985,54,0.624,59,0.5,60,0.674,66,0.38,67,0.653,71,0.653,73,1.901,74,1.393,75,1.393,76,1.25,77,1.805,78,1.25,79,1.757,80,1.393,81,1.185,82,1.32,83,0.613,84,1.393,85,1.25,86,1.393,87,1.25,88,1.393,89,1.25,90,1.805,91,1.25,92,2.003,93,1.25,94,1.393,95,1.25,96,1.32,97,1.805,98,1.285,99,1.805,100,1.25,101,1.393,102,1.25,103,1.285,104,1.333,105,2.119,106,1.25,107,1.356,108,1.25,109,0.555,110,1.901,111,1.393,112,1.25,113,1.333,114,1.25,115,1.393,116,1.25,117,1.393,118,1.25,119,1.393,120,1.25,121,0.482,122,1.32,123,1.393,124,1.285,125,1.158,126,1.25,127,0.928,128,1.25,129,1.393,130,1.25,131,1.393,132,1.25,133,1.393,134,1.25,135,1.393,136,1.25,137,1.25,138,1.25,139,1.25,140,1.393,141,1.25,142,1.393,143,1.25,144,1.32,145,1.356,146,1.393,147,0.008,148,0.008,187,2.716,193,4.509,484,3.663,780,3.294,976,4.423,977,6.523,978,6.523,979,6.523,980,6.523]],["title/modules/LocationModule.html",[195,1.522,981,3.128]],["body/modules/LocationModule.html",[2,0.339,3,0.405,5,0.372,41,0.011,59,0.87,60,0.688,66,0.499,67,0.667,98,2.085,103,2.085,104,0.947,106,2.029,107,1.385,110,2.029,112,2.029,113,0.947,120,2.091,124,2.085,125,0.823,127,0.947,147,0.008,148,0.008,175,1.545,195,2.225,197,1.545,198,2.654,199,3.772,200,2.213,201,3.628,206,3.638,208,3.413,209,1.73,215,3.556,216,2.887,217,2.654,585,3.35,695,5.281,818,5.648,933,4.106,981,6.178,982,4.517,983,4.517,984,5.141,985,4.517,986,5.141,987,5.141,988,5.141,989,5.141,990,5.141,991,5.141,992,5.141,993,7.716,994,4.517,995,4.517,996,4.106,997,5.141]],["title/injectables/LoggedInGuard.html",[149,1.714,279,3.128]],["body/injectables/LoggedInGuard.html",[2,0.297,3,0.355,5,0.326,7,0.257,20,3.783,21,3.299,22,1.318,28,0.432,30,1.773,33,1.352,35,1.466,36,2.531,37,2.143,38,1.409,40,1.096,41,0.011,42,1.034,43,0.562,44,1.263,45,3.261,48,2.369,49,2.841,52,1.154,54,0.842,56,0.622,59,0.68,60,0.603,66,0.34,67,0.585,71,1.117,147,0.007,148,0.007,149,2.596,152,5.328,156,2.297,157,4.527,158,6.44,159,3.159,161,5.328,162,5.657,163,3.079,164,5.657,166,5.821,167,2.525,168,2.834,172,2.122,173,2.949,174,3.276,175,1.355,177,1.773,178,3.961,181,3.6,197,1.822,249,2.445,279,4.192,352,3.961,371,2.7,374,2.228,406,2.369,412,2.899,434,3.745,467,3.952,499,3.745,879,2.937,998,6.44,999,3.961,1000,6.064,1001,7.648,1002,4.508,1003,4.508,1004,4.508,1005,6.064,1006,4.192,1007,5.328,1008,6.064,1009,4.508,1010,6.064,1011,4.508,1012,4.508,1013,4.508,1014,4.508,1015,4.508]],["title/components/ModelRoomComponent.html",[0,0.417,112,1.124]],["body/components/ModelRoomComponent.html",[0,0.612,1,0.611,2,0.162,3,0.194,4,0.681,5,0.178,7,0.204,9,0.35,16,0.982,18,0.772,21,2.208,24,0.564,25,2.381,26,1.137,28,0.571,29,0.64,30,2.479,32,2.64,33,0.867,34,1.826,35,0.595,37,1.601,38,1.608,40,0.771,41,0.011,42,0.9,43,0.618,44,0.888,45,2.592,47,1.135,48,1.519,52,1.009,53,1.954,54,0.695,56,1.001,57,0.878,58,0.852,59,0.683,60,0.329,61,3.079,62,1.27,63,1.323,64,0.961,66,0.186,67,0.861,71,0.319,73,1.36,74,0.681,75,0.681,76,0.611,77,1.076,78,0.611,79,1.047,80,0.681,81,0.579,82,0.645,83,0.726,84,0.681,85,0.611,86,0.681,87,0.611,88,0.681,89,0.611,90,1.076,91,0.611,92,1.334,93,0.611,94,0.681,95,0.611,96,0.645,97,1.076,98,0.628,99,1.076,100,0.611,101,0.681,102,0.611,103,0.628,104,0.453,105,1.516,106,0.611,107,0.663,108,0.611,109,0.658,110,0.611,111,0.681,112,1.36,113,1.268,114,0.611,115,0.681,116,0.611,117,0.681,118,0.611,119,0.681,120,0.611,121,0.524,122,0.645,123,0.681,124,0.628,125,0.394,126,0.611,127,0.453,128,0.611,129,0.681,130,0.611,131,0.681,132,0.611,133,0.681,134,0.611,135,0.681,136,0.611,137,0.611,138,0.611,139,0.611,140,0.681,141,0.611,142,0.681,143,0.611,144,0.645,145,0.663,146,0.681,147,0.005,148,0.007,159,1.793,163,1.429,166,1.819,168,0.852,172,1.708,173,2.567,174,2.618,175,0.74,176,0.932,177,1.601,197,1.169,209,0.828,237,2.281,238,1.814,239,1.293,249,1.568,260,2.963,263,2.534,281,2.827,344,2.196,366,1.271,368,1.793,370,1.619,374,1.429,377,1.622,379,1.601,406,0.961,407,1.731,421,0.611,436,2.956,484,2.184,492,2.707,493,3.076,502,2.14,510,1.059,511,1.135,515,2.75,525,2.184,526,2.184,536,2.945,547,1.447,556,2.402,557,3.787,562,2.719,579,2.184,590,1.323,592,1.202,593,1.93,594,2.402,600,1.323,622,4.375,623,2.874,637,1.323,638,1.323,647,2.978,657,1.701,715,1.475,719,1.843,743,2.402,745,2.874,783,1.371,793,0.992,797,2.281,801,1.731,805,1.674,817,3.547,822,2.842,833,1.843,837,1.447,872,2.534,934,1.966,945,3.417,954,1.819,956,2.162,996,6.308,1016,6.939,1017,3.889,1018,5.477,1019,5.477,1020,4.048,1021,3.569,1022,4.813,1023,3.889,1024,5.477,1025,5.477,1026,3.889,1027,3.889,1028,3.889,1029,6.884,1030,2.461,1031,5.065,1032,6.413,1033,3.889,1034,3.889,1035,3.889,1036,3.417,1037,5.477,1038,5.065,1039,2.874,1040,3.106,1041,2.874,1042,3.889,1043,3.889,1044,2.461,1045,2.461,1046,2.461,1047,3.889,1048,3.889,1049,2.461,1050,3.417,1051,2.461,1052,3.889,1053,3.106,1054,2.534,1055,3.889,1056,2.461,1057,2.461,1058,2.461,1059,2.286,1060,2.461,1061,2.461,1062,2.461,1063,2.461,1064,1.819,1065,2.461,1066,2.461,1067,2.162,1068,2.461,1069,2.461,1070,2.461,1071,1.604,1072,3.889,1073,2.461,1074,2.461,1075,2.461,1076,2.461,1077,2.461,1078,4.821,1079,4.821,1080,2.461,1081,3.106,1082,2.461,1083,2.461,1084,2.461,1085,2.461,1086,2.162,1087,2.461,1088,2.461,1089,2.461,1090,2.461,1091,2.461,1092,3.889,1093,3.417,1094,6.341,1095,3.889,1096,3.889,1097,3.417,1098,3.889,1099,3.106,1100,3.889,1101,3.889]],["title/components/NavComponent.html",[0,0.417,114,1.124]],["body/components/NavComponent.html",[0,0.739,1,1.026,2,0.273,3,0.325,4,1.144,5,0.299,7,0.175,9,0.588,14,3.209,16,1.222,18,0.86,20,2.949,22,1.671,23,2.819,24,0.947,25,2.478,26,1.671,28,0.396,29,0.941,30,2.243,33,1.274,34,2.677,35,0.999,37,2.066,38,1.526,40,0.661,41,0.011,42,0.989,43,0.538,44,0.761,47,2.635,48,2.233,52,0.837,53,2.038,54,0.814,59,0.65,60,0.553,64,1.614,65,2.222,66,0.312,67,0.536,71,0.536,73,1.756,74,1.144,75,1.144,76,1.026,77,1.582,78,1.026,79,2.159,80,1.144,81,0.973,82,1.083,83,0.503,84,1.144,85,1.026,86,1.144,87,1.026,88,1.144,89,1.026,90,1.582,91,1.026,92,1.813,93,1.026,94,1.144,95,1.026,96,1.083,97,1.582,98,1.054,99,1.582,100,1.026,101,1.144,102,1.026,103,1.054,104,0.761,105,1.956,106,1.026,107,1.113,108,1.026,109,0.818,110,1.026,111,1.144,112,1.026,113,0.761,114,1.756,115,1.144,116,1.026,117,1.144,118,1.026,119,1.144,120,1.026,121,0.396,122,1.083,123,1.144,124,1.054,125,0.661,126,1.026,127,0.761,128,1.026,129,1.144,130,1.026,131,1.144,132,1.026,133,1.144,134,1.026,135,1.144,136,1.026,137,1.026,138,1.026,139,1.026,140,1.144,141,1.026,142,1.144,143,1.026,144,1.945,145,1.113,146,1.144,147,0.007,148,0.007,176,1.565,209,1.923,239,1.113,264,2.949,265,6.21,266,6.21,344,1.979,374,2.1,412,2.732,483,2.728,484,3.209,488,3.538,490,2.761,494,2.635,501,3.951,502,2.233,503,3.073,513,1.975,516,2.429,527,2.429,528,2.429,632,2.429,681,3.53,759,2.133,783,1.625,897,4.564,920,3.054,1102,3.631,1103,4.564,1104,5.714,1105,5.714,1106,5.714,1107,3.631,1108,5.714,1109,4.132,1110,4.132,1111,5.714,1112,5.021,1113,4.132]],["title/components/NotAuthComponent.html",[0,0.417,116,1.124]],["body/components/NotAuthComponent.html",[0,0.749,1,1.249,2,0.332,3,0.396,4,1.391,5,0.363,7,0.213,9,1.127,16,1.305,18,0.931,24,1.152,25,2.505,26,1.905,41,0.01,42,0.984,52,0.955,54,0.732,59,0.499,60,0.673,66,0.38,67,0.652,71,0.938,73,1.9,74,1.391,75,1.391,76,1.249,77,1.804,78,1.249,79,1.755,80,1.391,81,1.183,82,1.318,83,0.612,84,1.391,85,1.249,86,1.391,87,1.249,88,1.391,89,1.249,90,1.804,91,1.249,92,2.001,93,1.249,94,1.391,95,1.249,96,1.318,97,1.804,98,1.283,99,1.804,100,1.249,101,1.391,102,1.249,103,1.283,104,0.926,105,2.117,106,1.249,107,1.354,108,1.249,109,0.554,110,1.249,111,1.391,112,1.249,113,0.926,114,1.249,115,1.391,116,1.9,117,1.391,118,1.249,119,1.391,120,1.249,121,0.481,122,1.318,123,1.391,124,1.283,125,0.804,126,1.249,127,0.926,128,1.249,129,1.391,130,1.249,131,1.391,132,1.249,133,1.391,134,1.249,135,1.391,136,1.249,137,1.249,138,1.249,139,1.249,140,1.391,141,1.249,142,1.391,143,1.249,144,1.318,145,1.354,146,1.391,147,0.008,148,0.008,156,2.898,183,5.726,187,2.714,191,3.659,222,4.015,434,4.025,1114,4.417,1115,4.417,1116,5.726,1117,6.517,1118,4.816]],["title/components/PageNotFoundComponent.html",[0,0.417,118,1.124]],["body/components/PageNotFoundComponent.html",[0,0.745,1,1.225,2,0.325,3,0.388,4,1.983,5,0.356,7,0.209,9,0.701,16,1.297,18,0.924,24,1.13,25,2.502,26,1.882,35,1.732,38,1.014,41,0.01,42,0.971,54,0.616,59,0.49,60,0.66,66,0.372,67,0.64,71,1.095,73,1.886,74,1.365,75,1.365,76,1.225,77,1.781,78,1.225,79,1.733,80,1.365,81,1.161,82,1.293,83,0.6,84,1.365,85,1.225,86,1.365,87,1.225,88,1.365,89,1.225,90,1.781,91,1.225,92,1.983,93,1.225,94,1.365,95,1.225,96,1.293,97,1.781,98,1.258,99,1.781,100,1.225,101,1.365,102,1.225,103,1.258,104,0.909,105,2.102,106,1.225,107,1.328,108,1.225,109,0.544,110,1.225,111,1.365,112,1.225,113,0.909,114,1.225,115,1.365,116,1.225,117,1.365,118,1.886,119,1.365,120,1.225,121,0.472,122,1.293,123,1.365,124,1.258,125,0.789,126,1.225,127,0.909,128,1.225,129,1.365,130,1.225,131,1.365,132,1.225,133,1.365,134,1.225,135,1.365,136,1.225,137,1.225,138,1.225,139,1.225,140,1.365,141,1.225,142,1.365,143,1.225,144,1.293,145,1.328,146,1.365,147,0.008,148,0.008,168,2.229,170,2.438,189,3.194,191,3.614,308,5.14,369,2.438,384,3.322,499,3.975,731,5.655,1119,5.655,1120,4.333,1121,6.436,1122,6.436,1123,4.949,1124,6.436,1125,4.931]],["title/pipes/PeopleListNamesPipe.html",[1126,1.947,1127,3.128]],["body/pipes/PeopleListNamesPipe.html",[2,0.298,3,0.355,5,0.326,7,0.191,18,0.739,22,1.319,24,1.034,33,1.007,38,0.928,40,0.722,41,0.011,42,1.235,43,0.37,44,0.832,50,2.702,52,0.889,56,1.012,59,0.448,60,0.604,66,0.341,67,0.585,147,0.007,148,0.007,172,1.847,173,2.612,209,2.574,235,4.313,236,4.313,246,3.639,247,3.012,406,2.371,478,1.467,672,5.332,732,3.785,768,4.311,951,2.788,1071,2.941,1126,2.612,1127,4.196,1128,5.332,1129,3.966,1130,5.332,1131,7.192,1132,3.955,1133,3.955,1134,6.069,1135,6.069,1136,3.505,1137,4.847,1138,4.847,1139,7.192,1140,7.482,1141,8.515,1142,8.185,1143,5.135,1144,6.069,1145,5.332,1146,2.941,1147,6.069,1148,4.513,1149,6.069,1150,3.955,1151,2.941,1152,3.605,1153,6.923,1154,3.966,1155,6.923,1156,3.966,1157,3.966,1158,3.966]],["title/pipes/PersonNamePipe.html",[1126,1.947,1159,3.128]],["body/pipes/PersonNamePipe.html",[2,0.327,3,0.39,5,0.358,7,0.21,18,0.786,22,1.448,24,1.134,33,1.104,38,1.018,40,0.792,41,0.011,42,1.261,43,0.406,44,0.912,50,2.873,52,1.052,56,1.05,59,0.492,60,0.663,66,0.374,67,0.642,147,0.008,148,0.008,172,1.934,173,2.777,235,4.229,236,4.229,246,3.775,247,3.775,406,2.521,640,4.461,732,3.926,768,3.794,1126,2.777,1130,5.67,1131,7.237,1132,4.205,1133,4.205,1136,3.636,1137,5.154,1138,6.075,1139,7.587,1140,7.339,1143,5.271,1146,3.227,1150,4.205,1151,3.227,1152,5.734,1153,6.931,1154,4.351,1155,6.931,1156,4.351,1158,4.351,1159,4.461,1160,5.67,1161,4.351,1162,6.453,1163,6.453,1164,4.951]],["title/interfaces/Phage.html",[121,0.433,171,0.811]],["body/interfaces/Phage.html",[2,0.295,3,0.352,5,0.323,7,0.255,9,0.636,18,0.544,28,0.428,29,0.993,41,0.011,43,0.56,51,1.204,54,0.699,56,1.084,66,0.576,83,0.956,104,0.823,121,0.851,125,0.715,147,0.007,148,0.007,163,1.642,167,1.861,171,1.463,172,1.624,197,1.343,229,1.42,231,3.386,238,1.826,239,1.485,363,1.746,366,1.461,369,1.693,408,2.627,420,2.388,436,1.99,478,1.206,577,2.627,591,1.915,592,1.863,715,2.116,719,2.257,741,3.385,775,2.403,776,2.912,777,2.355,778,2.76,779,3.089,780,3.515,781,4.101,782,3.929,783,1.715,784,3.242,785,2.431,786,2.509,787,2.306,788,2.936,789,2.76,790,2.627,791,2.306,792,4.011,793,2.945,794,2.912,795,2.627,796,3.385,797,1.861,798,2.403,799,4.225,800,3.929,801,3.252,802,2.306,803,2.684,804,3.544,805,2.595,806,4.168,807,4.168,808,4.168,809,4.168,810,3.929,811,2.78,812,3.089,813,2.76,814,2.306,815,2.627,816,3.089,817,2.684]],["title/pipes/PhageDeletionsPipe.html",[1126,1.947,1165,3.128]],["body/pipes/PhageDeletionsPipe.html",[2,0.358,3,0.427,5,0.392,7,0.23,22,1.584,24,1.241,33,1.208,38,1.114,40,0.867,41,0.011,42,1.032,43,0.445,44,0.998,52,1.002,56,0.943,59,0.538,60,0.725,66,0.409,67,0.703,83,1.024,121,0.654,147,0.008,148,0.008,209,2.52,238,1.583,260,2.942,591,1.792,592,1.674,732,3.529,785,2.757,1059,4.02,1071,3.531,1126,2.942,1133,4.455,1136,3.581,1143,5.126,1146,3.531,1150,4.455,1151,3.531,1165,4.727,1166,4.727,1167,4.761,1168,5.052,1169,5.052,1170,5.461,1171,6.837,1172,6.912,1173,6.837,1174,7.277,1175,6.837,1176,7.866,1177,7.866,1178,7.866,1179,6.837,1180,5.418,1181,5.418,1182,7.49,1183,5.418,1184,5.418]],["title/components/PhageDialogComponent.html",[0,0.417,120,1.124]],["body/components/PhageDialogComponent.html",[0,0.663,1,1.066,2,0.283,3,0.338,4,1.188,5,0.31,7,0.182,9,0.611,16,1.238,18,0.875,19,3.824,24,0.984,25,2.483,26,1.715,28,0.411,29,0.966,35,1.038,38,1.374,40,0.687,41,0.011,42,1.009,43,0.617,44,0.791,54,0.562,59,0.713,60,0.575,66,0.324,67,0.557,71,0.557,73,1.784,74,1.188,75,1.188,76,1.066,77,1.624,78,1.066,79,1.58,80,1.188,81,1.011,82,1.126,83,0.916,84,1.188,85,1.066,86,1.188,87,1.066,88,1.188,89,1.066,90,1.624,91,1.066,92,1.85,93,1.066,94,1.188,95,1.066,96,1.126,97,1.624,98,1.096,99,1.624,100,1.066,101,1.188,102,1.066,103,1.096,104,0.791,105,1.988,106,1.066,107,1.157,108,1.066,109,0.473,110,1.066,111,1.188,112,1.066,113,0.791,114,1.066,115,1.188,116,1.066,117,1.188,118,1.066,119,1.188,120,1.784,121,0.833,122,1.972,123,1.188,124,1.096,125,0.687,126,1.066,127,0.791,128,1.066,129,1.188,130,1.066,131,1.188,132,1.066,133,1.188,134,1.066,135,1.188,136,1.066,137,1.066,138,1.066,139,1.066,140,1.188,141,1.066,142,1.188,143,1.066,144,1.126,145,1.157,146,1.188,147,0.007,148,0.007,187,2.991,200,1.848,206,1.912,217,2.216,239,1.142,260,2.525,348,3.824,366,1.918,436,2.612,455,3.43,459,5.155,460,6.608,461,4.034,462,3.773,463,6.822,470,3.173,471,2.798,472,2.798,473,3.773,474,2.652,475,4.686,531,3.824,591,1.883,625,4.686,660,3.45,784,3.594,791,3.708,793,2.896,822,2.64,872,3.824,1097,5.155,1185,6.312,1186,5.155,1187,5.867,1188,4.294,1189,3.43,1190,5.155,1191,5.867,1192,5.867,1193,5.867,1194,5.867,1195,5.867]],["title/pipes/PhageGuessesPipe.html",[1126,1.947,1196,3.128]],["body/pipes/PhageGuessesPipe.html",[2,0.317,3,0.379,5,0.347,7,0.204,20,3.267,22,1.405,24,1.101,33,1.072,38,0.988,40,0.769,41,0.011,42,0.955,43,0.394,44,0.886,50,2.818,52,1.037,56,0.873,59,0.628,60,0.643,66,0.363,67,0.624,83,1.01,109,0.698,121,0.606,147,0.007,148,0.007,172,1.906,173,3.453,174,4.014,209,2.793,238,1.016,239,1.232,246,2.386,260,2.069,314,5.198,317,5.055,363,1.878,407,2.818,421,1.194,559,2.826,591,1.855,732,3.267,785,2.552,803,2.14,817,3.572,822,2.326,1022,5.561,1064,4.677,1067,4.223,1071,3.132,1126,2.724,1133,4.124,1136,3.382,1143,4.9,1146,3.132,1150,4.124,1151,3.132,1157,4.223,1166,4.375,1168,4.677,1169,4.677,1196,4.375,1197,4.223,1198,6.329,1199,4.807,1200,5.561,1201,6.329,1202,6.329,1203,6.607,1204,4.375,1205,5.561,1206,7.076,1207,6.329,1208,4.807,1209,4.807,1210,4.807,1211,5.561,1212,4.807,1213,5.561,1214,4.807]],["title/pipes/PhageMutationsPipe.html",[1126,1.947,1215,3.128]],["body/pipes/PhageMutationsPipe.html",[2,0.341,3,0.407,5,0.374,7,0.219,22,1.512,24,1.185,33,1.153,38,1.063,40,0.827,41,0.011,42,1.002,43,0.424,44,0.953,52,0.973,56,0.916,59,0.513,60,0.692,66,0.39,67,0.671,121,0.635,147,0.008,148,0.008,209,2.69,238,1.548,260,2.225,314,4.588,317,5.3,591,2.25,732,3.425,741,3.726,785,3.118,788,3.694,799,4.532,800,4.325,815,3.902,1059,3.902,1071,3.37,1126,2.856,1133,4.325,1136,3.696,1143,5.332,1146,3.37,1150,4.325,1151,3.37,1166,4.588,1168,4.904,1169,4.904,1170,5.3,1213,5.831,1215,4.588,1216,4.543,1217,6.794,1218,6.794,1219,7.732,1220,6.794,1221,7.732,1222,6.636,1223,5.171,1224,5.171]],["title/pipes/PhageParentsPipe.html",[1126,1.947,1225,3.128]],["body/pipes/PhageParentsPipe.html",[2,0.285,3,0.341,5,0.313,7,0.183,20,3.043,22,1.264,24,0.991,33,0.964,38,0.889,40,0.692,41,0.011,42,0.89,43,0.355,44,0.797,52,0.983,56,0.814,59,0.585,60,0.579,66,0.327,67,0.561,83,0.718,121,0.803,122,1.546,147,0.007,148,0.007,167,3,187,2.455,209,2.618,238,1.593,239,1.148,244,2.99,260,2.887,407,2.625,591,2.087,592,2.461,594,4.45,715,2.183,732,3.043,768,2.543,781,4.668,785,3.137,793,3.499,795,5.102,822,3.084,1126,2.537,1133,3.842,1136,3.444,1143,5.071,1145,5.18,1146,2.818,1150,3.842,1151,2.818,1166,4.076,1168,4.357,1169,4.357,1170,4.709,1186,5.18,1189,3.454,1204,4.076,1225,4.076,1226,3.8,1227,3.171,1228,6.708,1229,4.709,1230,5.896,1231,5.896,1232,5.896,1233,5.896,1234,7.205,1235,6.331,1236,5.325,1237,5.896,1238,5.18,1239,5.896,1240,5.896,1241,5.896,1242,5.896,1243,5.896,1244,4.324,1245,4.324,1246,4.324,1247,4.324,1248,4.324,1249,4.324,1250,4.324,1251,3.8,1252,4.324,1253,4.324,1254,6.708,1255,6.708,1256,4.324]],["title/interfaces/PlateInput.html",[171,0.811,830,2.949]],["body/interfaces/PlateInput.html",[2,0.314,3,0.375,5,0.344,7,0.202,28,0.674,29,1.036,41,0.011,43,0.578,51,1.897,56,0.972,59,0.473,66,0.588,83,0.58,104,1.159,109,0.525,121,0.827,125,1.199,147,0.007,148,0.007,170,2.838,171,1.434,172,1.283,231,3.496,238,1.75,239,1.225,366,1.557,380,1.65,385,2.942,420,2.45,421,1.562,422,1.92,478,1.499,651,2.942,660,2.8,714,2.8,775,4.507,777,3.306,780,2.05,783,1.789,793,1.92,797,2.619,798,2.561,801,2.801,802,2.458,811,2.196,820,2.942,821,2.277,830,4.099,833,2.117,835,3.104,836,3.698,837,2.8,839,2.942,844,3.104,846,3.293,847,3.293,848,3.104,849,3.104,852,3.104,856,3.104,859,3.293,860,3.293,861,3.293,893,3.293,930,2.12,1257,3.52,1258,5.984,1259,5.18,1260,5.18,1261,5.024,1262,3.104,1263,3.293,1264,3.293,1265,3.104,1266,3.52,1267,5.024,1268,2.942,1269,3.104,1270,4.099,1271,4.798,1272,4.099,1273,3.804,1274,4.099]],["title/interfaces/PlateResults.html",[171,0.811,856,2.949]],["body/interfaces/PlateResults.html",[2,0.291,3,0.347,5,0.318,7,0.187,28,0.726,29,0.983,41,0.011,43,0.642,51,1.608,56,0.934,59,0.437,66,0.573,83,0.536,104,1.248,109,0.485,121,0.844,125,1.161,147,0.007,148,0.007,170,2.565,171,1.402,172,1.824,231,2.963,238,1.814,239,1.318,366,1.44,380,2.067,385,3.687,420,2.374,421,1.094,422,1.775,478,1.565,651,3.687,660,3.509,714,2.589,775,4.08,777,3.37,780,1.895,783,1.698,793,2.927,797,2.82,798,2.368,801,3.232,802,2.273,811,2.752,820,2.72,821,2.105,830,2.87,833,2.443,835,2.87,836,3.981,837,3.509,839,4.484,844,2.87,846,3.044,847,3.044,848,2.87,849,2.87,852,3.89,856,3.89,859,3.044,860,3.044,861,3.044,893,3.044,930,1.961,1257,3.254,1258,5.408,1259,3.044,1260,3.044,1261,4.767,1262,2.87,1263,3.044,1264,3.044,1265,2.87,1266,3.254,1267,5.798,1268,3.687,1269,3.89,1270,4.731,1271,5.094,1272,5.098,1273,4.767,1274,5.098]],["title/interfaces/PlexerInput.html",[171,0.811,844,2.949]],["body/interfaces/PlexerInput.html",[2,0.311,3,0.372,5,0.341,7,0.2,28,0.671,29,1.029,41,0.011,43,0.575,51,1.889,56,0.968,59,0.468,66,0.586,83,0.574,104,1.152,109,0.52,121,0.833,125,1.303,147,0.007,148,0.007,170,2.828,171,1.43,172,1.271,231,3.48,238,1.747,239,1.217,366,2.044,380,1.635,385,2.915,420,2.293,421,1.172,422,1.903,478,1.597,651,2.915,660,2.775,714,2.775,775,4.499,777,3.269,780,2.031,783,1.778,793,1.903,797,2.603,798,2.538,801,2.784,802,2.436,811,2.176,820,2.915,821,2.256,830,3.075,833,2.104,835,3.075,836,3.676,837,2.775,839,2.915,844,4.074,846,4.323,847,4.323,848,3.075,849,3.075,852,3.075,856,3.075,859,5.161,860,5.161,861,3.263,893,3.263,930,2.101,1257,3.488,1258,5.962,1259,3.263,1260,3.263,1261,4.994,1262,3.075,1263,3.263,1264,3.263,1265,3.075,1266,3.488,1267,4.994,1268,2.915,1269,3.075,1270,4.074,1271,4.787,1272,4.074,1273,3.769,1274,4.074]],["title/modules/ProfileModule.html",[195,1.522,276,3.128]],["body/modules/ProfileModule.html",[2,0.381,3,0.455,5,0.417,41,0.011,54,0.553,59,0.862,60,0.772,66,0.537,67,0.749,127,1.064,141,2.09,143,2.09,147,0.008,148,0.008,175,1.735,195,2.393,197,1.735,198,2.979,199,3.979,200,2.484,201,3.826,206,3.746,208,3.671,209,1.942,215,3.824,216,3.241,217,2.979,276,6.096,340,4.611,546,2.404,1275,5.072,1276,5.072,1277,5.772,1278,5.072,1279,5.197,1280,5.772,1281,5.772,1282,5.772,1283,4.611,1284,4.266,1285,5.072,1286,4.611,1287,5.772]],["title/injectables/ProfileService.html",[149,1.714,1279,2.795]],["body/injectables/ProfileService.html",[2,0.281,3,0.336,5,0.308,7,0.282,13,2.791,28,0.408,29,0.961,30,1.947,33,1.302,35,1.031,38,1.473,40,1.065,41,0.011,42,1.005,43,0.588,44,1.227,49,2.342,50,2.6,51,2.176,52,1.135,54,0.844,56,0.919,57,1.521,58,1.477,59,0.711,60,0.571,65,2.293,66,0.322,67,0.553,144,1.878,147,0.007,148,0.007,149,2.523,153,4.315,168,2.022,176,1.615,177,2.094,211,2.281,237,3.452,238,1.707,241,2.431,287,2.948,330,4.3,346,5.293,358,3.746,359,5.293,361,4.664,367,3.607,369,3.06,370,2.982,374,2.632,375,4.094,379,2.424,396,5.187,412,2.791,422,3.304,433,4.952,438,3.746,439,2.633,450,5.13,531,3.805,546,3.537,591,1.118,592,1.318,890,4.315,1279,3.607,1288,3.746,1289,5.839,1290,5.13,1291,3.805,1292,5.839,1293,4.664,1294,5.839,1295,5.839,1296,4.263,1297,5.839,1298,5.839,1299,5.721,1300,5.839,1301,4.263,1302,5.13,1303,5.721,1304,4.315,1305,5.13,1306,5.839,1307,5.839,1308,5.839]],["title/components/ResetPasswordComponent.html",[0,0.417,126,1.124]],["body/components/ResetPasswordComponent.html",[0,0.692,1,0.69,2,0.183,3,0.219,4,0.768,5,0.201,7,0.118,9,0.395,13,2.042,16,1.039,18,0.712,21,1.119,22,1.249,23,2.241,24,0.636,25,2.407,26,1.249,28,0.266,29,0.703,30,2.38,32,2.776,33,0.953,34,2.215,35,1.033,36,1.559,37,1.949,38,1.544,40,0.444,41,0.011,42,0.786,43,0.588,44,0.512,45,2.297,47,1.97,52,1.05,53,1.857,54,0.638,56,0.92,57,1.857,58,1.803,59,0.627,60,0.371,66,0.21,67,0.36,71,0.36,73,1.452,74,0.768,75,0.768,76,0.69,77,1.182,78,0.69,79,1.151,80,0.768,81,0.653,82,2.003,83,0.338,84,0.768,85,0.69,86,0.768,87,0.69,88,0.768,89,0.69,90,1.182,91,0.69,92,1.441,93,0.69,94,0.768,95,0.69,96,0.728,97,1.182,98,0.708,99,1.182,100,0.69,101,0.768,102,0.69,103,0.708,104,0.512,105,1.618,106,0.69,107,0.748,108,0.69,109,0.306,110,0.69,111,0.768,112,0.69,113,0.512,114,0.69,115,0.768,116,0.69,117,0.768,118,0.69,119,0.768,120,0.69,121,0.266,122,0.728,123,0.768,124,0.708,125,0.444,126,1.452,127,1.5,128,0.69,129,0.768,130,0.69,131,0.768,132,0.69,133,0.768,134,0.69,135,0.768,136,0.69,137,0.69,138,0.69,139,0.69,140,0.768,141,0.69,142,0.768,143,0.69,144,0.728,145,0.748,146,0.768,147,0.005,148,0.008,156,1.618,168,1.48,172,1.402,173,1.195,174,2.042,175,0.834,189,2.12,241,2.435,249,1.722,264,1.433,326,2.511,330,4.337,341,6.101,344,1.48,345,2.399,363,1.669,366,2.27,368,1.97,371,1.902,373,2.297,376,2.795,377,2.57,379,2.32,380,2.025,391,1.715,395,2.511,396,4.608,400,5.587,403,3.753,406,2.284,412,2.042,415,2.953,421,2.007,436,1.902,453,3.848,461,3.283,465,3.018,467,2.784,483,2.168,488,3.461,490,2.284,492,2.924,493,3.283,498,2.784,502,1.669,503,2.297,508,1.632,510,1.195,511,1.28,515,2.401,516,1.632,527,1.632,528,1.632,546,1.779,556,3.611,591,0.728,592,0.858,593,1.378,594,1.715,609,1.632,679,2.953,833,1.437,864,2.052,865,3.753,866,3.412,867,5.857,873,3.753,879,1.809,882,3.753,884,2.052,885,2.052,886,2.439,1039,2.052,1081,3.412,1227,2.297,1309,6.712,1310,3.753,1311,5.847,1312,5.137,1313,5.847,1314,4.272,1315,2.776,1316,3.753,1317,3.753,1318,3.848,1319,2.776,1320,2.776,1321,4.272,1322,4.67,1323,2.776,1324,5.847,1325,2.439,1326,3.753,1327,2.776,1328,4.272,1329,2.439,1330,4.272,1331,2.439,1332,2.439,1333,2.776,1334,2.776,1335,2.776,1336,2.776,1337,2.439,1338,2.776,1339,2.776,1340,3.753,1341,3.753,1342,3.753,1343,2.439,1344,3.412,1345,3.753]],["title/interfaces/Scenario.html",[109,0.499,171,0.811]],["body/interfaces/Scenario.html",[2,0.371,3,0.443,5,0.407,7,0.323,28,0.539,29,1.153,41,0.011,43,0.673,51,1.516,56,1.231,59,0.695,66,0.425,109,0.973,121,0.67,147,0.008,148,0.008,168,2.425,170,2.132,171,1.255,188,5.593,239,1.363,264,3.614,715,1.886,754,4.116,783,1.992,822,2.573,833,1.894,895,5.165,936,5.893,937,5.593,942,5.893,943,5.593,1346,4.946,1347,6.37,1348,5.593,1349,5.175,1350,7.002,1351,7.002,1352,6.152,1353,6.152]],["title/components/ScenarioComponent.html",[0,0.417,128,1.124]],["body/components/ScenarioComponent.html",[0,0.775,1,1.263,2,0.336,3,0.4,4,1.407,5,0.367,7,0.215,9,0.723,16,1.31,18,0.935,24,1.165,25,2.506,26,1.919,41,0.01,42,0.991,54,0.628,59,0.505,60,0.68,66,0.384,67,0.659,71,0.659,73,1.908,74,1.407,75,1.407,76,1.263,77,1.817,78,1.263,79,1.768,80,1.407,81,1.196,82,1.333,83,0.619,84,1.407,85,1.263,86,1.407,87,1.263,88,1.407,89,1.263,90,1.817,91,1.263,92,2.012,93,1.263,94,1.407,95,1.263,96,1.333,97,1.817,98,1.297,99,1.817,100,1.263,101,1.407,102,1.263,103,1.297,104,0.937,105,2.126,106,1.263,107,1.369,108,1.263,109,0.877,110,1.263,111,1.407,112,1.263,113,0.937,114,1.263,115,1.407,116,1.263,117,1.407,118,1.263,119,1.407,120,1.263,121,0.487,122,1.333,123,1.407,124,1.297,125,0.813,126,1.263,127,0.937,128,1.908,129,1.407,130,1.263,131,1.407,132,1.263,133,1.407,134,1.263,135,1.407,136,1.263,137,1.263,138,1.263,139,1.263,140,1.407,141,1.263,142,1.407,143,1.263,144,1.333,145,1.369,146,1.407,147,0.008,148,0.008,187,2.733,195,2.209,239,1.278,264,3.388,293,4.054,478,1.313,722,5.767,780,2.825,1354,4.467]],["title/modules/ScenarioModule.html",[195,1.522,277,3.128]],["body/modules/ScenarioModule.html",[0,0.648,2,0.374,3,0.446,5,0.409,7,0.24,11,4.86,17,3.628,41,0.011,59,0.852,60,0.758,66,0.531,67,0.735,108,2.08,109,0.881,127,1.044,128,2.08,147,0.008,148,0.008,175,1.702,195,2.818,197,1.702,198,2.923,199,3.945,200,2.438,201,2.811,206,3.729,208,3.628,209,1.906,215,3.78,216,3.181,217,2.923,239,1.369,264,2.923,277,6.02,701,4.977,891,3.947,981,4.86,1355,4.977,1356,4.977,1357,5.664,1358,5.664,1359,6.176,1360,5.614,1361,6.176,1362,5.664,1363,5.664,1364,5.664,1365,5.664]],["title/injectables/ScenarioResolver.html",[149,1.714,280,3.128]],["body/injectables/ScenarioResolver.html",[2,0.324,3,0.386,5,0.355,7,0.272,22,2.089,28,0.47,33,1.69,35,1.186,38,1.319,40,1.026,41,0.011,42,0.968,43,0.526,44,1.182,48,2.792,52,1.111,59,0.781,60,0.656,66,0.37,67,0.636,109,0.96,147,0.008,148,0.008,149,2.707,157,4.857,162,5.437,163,2.626,164,5.239,167,2.67,168,2.946,175,1.474,176,1.858,177,2.216,189,3.183,239,1.623,255,3.029,280,4.434,281,3.911,293,3.961,344,2.625,348,4.656,369,2.871,371,2.855,375,3.911,385,3.961,421,1.218,422,2.586,435,4.179,439,3.029,499,3.961,647,3.961,707,6.443,710,5.122,714,3.77,715,2.041,754,3.911,758,4.309,783,1.824,832,2.357,895,4.681,939,4.179,954,3.625,970,3.917,1348,5.122,1349,4.739,1366,4.309,1367,4.904,1368,4.904,1369,4.904,1370,5.635,1371,6.413,1372,4.904,1373,4.904,1374,4.904]],["title/modules/SharedModule.html",[195,1.522,206,2.014]],["body/modules/SharedModule.html",[0,0.588,2,0.321,3,0.383,5,0.352,7,0.206,41,0.011,57,1.735,59,0.867,60,0.651,66,0.57,67,0.631,81,2.027,82,1.275,83,0.592,127,0.896,147,0.008,148,0.008,170,2.416,195,2.8,197,1.462,198,2.511,199,3.674,200,2.745,201,2.415,206,3.903,208,3.292,209,1.637,215,3.43,263,4.157,290,3.595,292,3.886,293,3.005,331,6.254,332,3.886,333,6.254,370,2.656,436,2.84,471,3.17,472,3.17,474,3.94,478,0.973,585,3.17,660,3.75,948,3.595,1126,2.745,1127,5.954,1159,5.954,1225,5.954,1375,4.275,1376,4.275,1377,4.275,1378,4.865,1379,6.379,1380,6.379,1381,6.379,1382,6.379,1383,4.275,1384,5.605,1385,6.379,1386,6.379,1387,6.379,1388,4.275,1389,6.379,1390,4.275,1391,4.275,1392,4.865,1393,4.865,1394,4.865,1395,4.865,1396,4.275,1397,4.865,1398,4.865,1399,4.865,1400,4.865,1401,4.865]],["title/components/SigninComponent.html",[0,0.417,130,1.124]],["body/components/SigninComponent.html",[0,0.717,1,0.908,2,0.241,3,0.288,4,1.012,5,0.264,7,0.155,9,0.52,14,2.944,16,1.167,18,0.815,21,2.7,22,1.533,24,0.838,25,2.459,26,1.533,28,0.35,29,0.863,30,1.957,32,3.072,33,1.169,35,0.884,36,2.053,37,1.957,38,1.517,40,0.585,41,0.011,42,0.925,43,0.549,44,0.674,45,2.819,49,2.189,52,0.768,53,1.87,54,0.786,56,0.846,57,1.304,58,1.266,59,0.704,60,0.489,66,0.276,67,0.474,71,0.919,73,1.663,74,1.012,75,1.012,76,0.908,77,1.451,78,0.908,79,1.412,80,1.012,81,0.861,82,0.959,83,0.445,84,1.012,85,0.908,86,1.012,87,0.908,88,1.012,89,0.908,90,1.451,91,0.908,92,1.696,93,0.908,94,1.012,95,0.908,96,1.607,97,1.451,98,0.933,99,1.451,100,0.908,101,1.012,102,0.908,103,0.933,104,0.674,105,1.853,106,0.908,107,0.985,108,0.908,109,0.403,110,0.908,111,1.012,112,0.908,113,0.674,114,0.908,115,1.012,116,0.908,117,1.012,118,0.908,119,1.012,120,0.908,121,0.35,122,0.959,123,1.012,124,0.933,125,0.585,126,0.908,127,0.674,128,0.908,129,1.012,130,1.663,131,1.012,132,0.908,133,1.012,134,0.908,135,1.012,136,0.908,137,0.908,138,0.908,139,0.908,140,1.012,141,0.908,142,1.012,143,0.908,144,0.959,145,0.985,146,1.012,147,0.006,148,0.006,156,2.536,159,2.826,168,2.319,175,1.099,176,1.385,181,4.188,191,2.944,239,1.021,241,2.788,326,3.082,330,3.661,344,2.555,355,5.451,368,2.417,369,1.986,374,1.927,376,2.506,377,2.253,379,2.157,395,3.082,396,5.373,406,2.616,412,3.715,413,3.625,433,3.625,434,4.136,435,3.417,465,2.706,483,2.552,488,3.703,490,2.616,502,2.048,503,2.819,508,2.15,510,1.574,511,1.686,515,1.686,516,2.15,527,2.15,528,2.15,546,1.523,609,2.15,618,2.92,872,3.417,879,2.383,884,2.702,885,2.702,1006,4.9,1112,4.607,1402,3.213,1403,5.243,1404,5.243,1405,5.243,1406,3.656,1407,4.607,1408,3.656,1409,5.243,1410,3.875,1411,5.243,1412,3.656,1413,5.883,1414,3.656,1415,3.656,1416,3.213,1417,3.656]],["title/components/SignoutComponent.html",[0,0.417,132,1.124]],["body/components/SignoutComponent.html",[0,0.764,1,1.055,2,0.28,3,0.335,4,1.176,5,0.307,7,0.18,9,0.604,14,3.271,16,1.234,18,0.871,21,2.884,22,1.703,23,2.861,24,0.973,25,2.482,28,0.407,29,0.959,30,2.191,33,1.299,34,2.709,35,1.408,37,2.263,38,1.471,40,0.68,41,0.011,42,1.003,43,0.478,44,0.783,52,0.854,53,2.078,54,0.773,59,0.71,60,0.569,66,0.321,67,0.551,71,0.972,73,1.776,74,1.176,75,1.176,76,1.055,77,1.612,78,1.055,79,1.569,80,1.176,81,1,82,1.114,83,0.517,84,1.176,85,1.055,86,1.176,87,1.055,88,1.176,89,1.055,90,1.612,91,1.055,92,1.84,93,1.055,94,1.176,95,1.055,96,1.114,97,1.612,98,1.084,99,1.612,100,1.055,101,1.176,102,1.055,103,1.084,104,0.783,105,1.979,106,1.055,107,1.144,108,1.055,109,0.468,110,1.055,111,1.176,112,1.055,113,0.783,114,1.055,115,1.176,116,1.055,117,1.176,118,1.055,119,1.176,120,1.055,121,0.407,122,1.114,123,1.176,124,1.084,125,0.68,126,1.055,127,1.225,128,1.055,129,1.176,130,1.055,131,1.176,132,1.776,133,1.176,134,1.055,135,1.176,136,1.055,137,1.055,138,1.055,139,1.055,140,1.176,141,1.055,142,1.176,143,1.055,144,1.114,145,1.144,146,1.176,147,0.007,148,0.007,159,3.065,175,1.277,191,4.016,209,2.406,326,3.425,344,2.018,356,4.305,380,2.018,407,2.593,409,4.305,412,3.419,483,2.768,488,3.721,490,2.794,494,2.686,502,2.276,503,3.132,508,2.498,516,2.498,521,2.937,527,2.498,528,2.498,591,1.114,592,1.313,593,2.109,632,2.498,679,4.027,879,2.769,1006,4.027,1107,3.733,1418,3.733,1419,5.825,1420,5.825,1421,4.248,1422,4.248,1423,4.652,1424,4.248,1425,4.248,1426,4.248]],["title/components/SignupComponent.html",[0,0.417,134,1.124]],["body/components/SignupComponent.html",[0,0.695,1,0.698,2,0.185,3,0.221,4,0.777,5,0.203,7,0.183,9,0.399,13,2.06,14,2.42,16,1.442,18,0.716,21,2.372,22,1.26,23,2.257,24,0.643,25,2.41,26,1.26,28,0.269,29,0.71,30,2.326,32,2.789,33,0.961,34,2.228,35,0.679,36,1.577,37,1.72,38,1.549,40,0.69,41,0.011,42,1.137,43,0.572,44,0.794,45,2.318,48,1.684,49,1.409,52,1.022,53,1.871,54,0.775,56,1.018,57,1.871,58,1.817,59,0.732,60,0.376,61,3.275,62,1.449,63,1.51,66,0.212,67,0.364,71,0.68,73,1.461,74,0.777,75,0.777,76,0.698,77,1.193,78,0.698,79,1.584,80,0.777,81,0.661,82,1.375,83,0.342,84,0.777,85,0.698,86,0.777,87,0.698,88,0.777,89,0.698,90,1.193,91,0.698,92,1.452,93,0.698,94,0.777,95,0.698,96,0.736,97,1.193,98,0.717,99,1.193,100,0.698,101,0.777,102,0.698,103,0.717,104,0.517,105,1.628,106,0.698,107,0.756,108,0.698,109,0.31,110,0.698,111,0.777,112,0.698,113,0.517,114,0.698,115,0.777,116,0.698,117,0.777,118,0.698,119,0.777,120,0.698,121,0.269,122,0.736,123,0.777,124,0.717,125,0.449,126,0.698,127,0.517,128,0.698,129,0.777,130,0.698,131,0.777,132,0.698,133,0.777,134,1.461,135,0.777,136,0.698,137,0.698,138,0.698,139,0.698,140,0.777,141,0.698,142,0.777,143,0.698,144,0.736,145,0.756,146,0.777,147,0.005,148,0.008,159,2.418,163,1.584,172,1.161,175,0.844,176,1.064,177,0.821,191,2.42,193,4.82,235,2.139,236,2.139,239,1.304,241,2.789,246,2.139,247,2.139,249,1.738,264,2.224,278,3.163,299,2.468,330,3.461,344,2.037,357,5.565,363,2.298,366,1.923,367,3.633,368,1.987,370,1.795,374,2.162,376,2.06,377,1.45,379,2.103,395,2.534,406,1.684,412,3.716,413,4.067,421,1.303,422,1.738,477,2.318,478,1.507,483,2.184,490,2.298,496,3.239,502,2.298,510,1.209,511,1.295,515,2.712,521,1.942,525,1.577,526,1.577,536,3.163,566,2.224,567,2.139,568,2.224,579,2.42,590,1.51,600,2.318,609,1.651,632,1.651,637,1.51,638,1.51,651,2.662,657,4.63,685,3.787,686,3.787,715,1.584,768,1.651,783,1.226,833,1.45,872,3.833,879,3.418,884,2.075,885,2.075,931,4.57,1059,2.534,1103,4.698,1227,2.318,1344,3.442,1345,3.787,1407,3.787,1416,2.468,1423,3.442,1427,2.468,1428,4.31,1429,5.882,1430,4.31,1431,4.31,1432,4.31,1433,2.808,1434,4.949,1435,6.482,1436,3.787,1437,2.808,1438,2.808,1439,2.808,1440,2.808,1441,3.787,1442,2.808,1443,4.31,1444,2.808,1445,2.808,1446,4.31,1447,2.808,1448,2.808,1449,2.808,1450,4.31,1451,2.808,1452,2.808,1453,2.808,1454,4.31,1455,2.808,1456,2.808,1457,2.808,1458,2.808,1459,2.808]],["title/interfaces/Student.html",[18,0.551,171,0.811]],["body/interfaces/Student.html",[2,0.361,3,0.431,5,0.395,7,0.232,9,0.778,16,1.238,18,0.961,28,0.523,29,1.132,41,0.011,42,1.135,43,0.617,44,1.53,51,2.026,52,1.008,54,0.658,56,1.145,59,0.683,66,0.568,71,0.709,73,1.358,109,0.758,147,0.008,148,0.008,155,2.353,170,2.849,171,1.348,172,2.026,211,2.136,227,2.94,228,4.04,229,1.738,230,4.804,231,3.733,232,4.804,233,4.045,234,3.78,235,2.714,236,2.714,237,2.277,238,1.155,239,1.464,240,4.247,241,3.286,242,4.432,243,5.143,244,5.2,245,4.367,246,2.714,247,2.714,248,4.367,249,2.204,250,4.367,251,4.367,252,3.377,253,4.367,254,4.367,255,3.377,256,3.377,257,4.367,258,6.008,259,4.367,260,2.353,261,4.367]],["title/interfaces/StudentFridge.html",[171,0.811,894,2.949]],["body/interfaces/StudentFridge.html",[2,0.325,3,0.388,5,0.356,7,0.209,9,0.915,18,0.783,28,0.472,29,1.06,41,0.011,43,0.675,44,1.489,51,1.93,54,0.472,56,1.152,59,0.639,66,0.486,83,0.872,109,0.92,121,0.686,125,0.789,147,0.008,148,0.008,156,2.877,170,1.868,171,1.284,172,2.045,233,4.084,234,3.409,237,2.053,238,1.042,239,1.253,242,4.424,366,1.612,369,3.06,421,1.225,478,1.434,713,3.214,715,1.733,719,2.742,720,3.769,754,3.322,777,1.927,784,3.461,811,2.274,814,3.92,817,3.716,822,2.895,832,1.812,833,1.659,887,3.939,888,5.822,889,3.409,890,3.644,891,2.769,892,5.689,893,3.409,894,4.194,895,3.046,1460,6.436]],["title/components/StudentFridgeComponent.html",[0,0.417,136,1.124]],["body/components/StudentFridgeComponent.html",[0,0.629,1,0.595,2,0.158,3,0.189,4,0.664,5,0.173,7,0.201,9,0.892,16,1.032,18,0.876,20,3.236,21,2.176,22,1.114,23,2.039,24,0.549,25,2.374,26,1.114,28,0.23,29,0.627,30,2.336,32,2.611,33,0.849,34,2.045,35,0.58,37,1.578,38,1.538,40,0.942,41,0.011,42,0.889,43,0.591,44,1.211,47,1.756,48,1.488,52,1.03,53,1.69,54,0.454,56,1.061,57,1.69,58,1.641,59,0.698,60,0.321,61,3.04,62,1.237,63,1.289,64,0.937,66,0.181,67,0.911,71,0.311,73,1.341,74,0.664,75,0.664,76,0.595,77,1.054,78,0.595,79,1.026,80,0.664,81,0.564,82,0.628,83,0.577,84,0.664,85,0.595,86,0.664,87,0.595,88,0.664,89,0.595,90,1.054,91,0.595,92,1.312,93,0.595,94,0.664,95,0.595,96,0.628,97,1.054,98,0.612,99,1.054,100,0.595,101,0.664,102,0.595,103,0.612,104,0.442,105,1.494,106,0.595,107,0.646,108,0.595,109,0.595,110,0.595,111,0.664,112,0.595,113,0.442,114,0.595,115,0.664,116,0.595,117,0.664,118,0.595,119,0.664,120,0.595,121,0.629,122,0.628,123,0.664,124,0.612,125,0.384,126,0.595,127,0.442,128,0.595,129,0.664,130,0.595,131,0.664,132,0.595,133,0.664,134,0.595,135,0.664,136,1.341,137,0.595,138,0.595,139,0.595,140,0.664,141,0.595,142,0.664,143,0.595,144,0.628,145,0.646,146,0.664,147,0.004,148,0.004,156,1.443,159,1.756,163,1.4,168,1.319,171,0.43,172,1.77,173,3.163,174,3.142,175,0.721,176,0.908,177,1.114,187,3.114,188,3.042,193,2.633,197,1.145,207,2.903,227,1.289,238,0.805,244,2.633,249,1.536,281,1.237,298,1.657,314,2.633,344,1.319,366,1.245,369,2.584,375,2.786,377,1.282,379,1.578,380,1.319,407,1.696,421,0.595,478,1.08,483,1.973,488,1.756,490,2.109,492,2.661,493,3.031,494,2.185,501,2.633,502,2.109,510,1.032,511,1.105,513,1.146,515,1.105,536,2.903,537,3.732,546,1.586,547,1.41,555,2.815,556,4.447,557,3.732,559,2.239,562,1.89,566,1.966,567,1.89,568,1.966,577,2.239,579,2.139,590,1.289,591,0.628,592,0.741,593,1.19,596,1.657,597,1.772,600,1.289,609,1.41,623,1.772,636,1.657,637,1.289,638,1.289,640,2.633,719,2.487,720,1.89,723,4.633,727,3.276,737,3.031,755,2.106,763,2.815,768,1.41,783,1.675,785,1.536,787,2.446,788,2.323,791,1.966,796,3.83,813,4.06,814,2.786,817,2.622,822,3.054,833,1.816,840,3.518,872,2.482,891,2.139,894,3.518,935,3.347,975,3.042,1021,2.482,1031,3.042,1038,6.471,1040,4.704,1059,2.239,1071,1.562,1093,6.326,1136,1.821,1211,2.106,1461,5.247,1462,5.609,1463,2.106,1464,3.809,1465,3.809,1466,5.398,1467,4.311,1468,5.398,1469,3.809,1470,3.809,1471,3.809,1472,3.809,1473,2.397,1474,3.809,1475,3.809,1476,3.809,1477,2.397,1478,2.397,1479,3.809,1480,3.809,1481,3.809,1482,2.397,1483,3.809,1484,2.397,1485,2.397,1486,4.739,1487,2.397,1488,2.397,1489,2.397,1490,2.397,1491,2.815,1492,1.772,1493,2.106,1494,2.397,1495,2.397,1496,2.397,1497,2.397,1498,2.397,1499,2.397,1500,3.809,1501,2.397,1502,3.809,1503,2.397,1504,2.397,1505,2.397,1506,2.397,1507,4.739,1508,2.397,1509,3.809,1510,2.397,1511,3.809,1512,2.397,1513,3.809,1514,3.809,1515,3.809,1516,3.809]],["title/components/StudentIndivComponent.html",[0,0.417,137,1.124]],["body/components/StudentIndivComponent.html",[0,0.604,1,0.447,2,0.3,3,0.142,4,0.498,5,0.13,7,0.232,9,0.827,13,1.441,16,1.252,18,1.019,20,2.614,21,1.834,22,1.33,23,1.674,24,0.412,25,2.299,26,0.881,28,0.172,29,0.496,30,2.335,32,2.281,33,0.672,34,1.723,35,0.435,37,1.33,38,1.577,40,0.976,41,0.011,42,1.015,43,0.576,44,1.009,47,1.39,48,2.14,49,1.791,51,1.225,52,1.21,53,1.954,54,0.721,56,1.143,57,1.075,58,1.044,59,0.739,60,0.241,61,2.614,62,0.929,63,0.968,64,0.703,65,0.968,66,0.136,67,0.504,71,0.755,72,1.39,73,1.13,74,0.498,75,0.498,76,0.447,77,0.834,78,0.447,79,0.812,80,0.498,81,0.709,82,1.525,83,0.934,84,0.498,85,0.447,86,0.498,87,0.447,88,0.498,89,0.447,90,0.834,91,0.447,92,1.076,93,0.447,94,0.498,95,0.447,96,0.472,97,0.834,98,0.459,99,0.834,100,0.447,101,0.498,102,0.447,103,0.459,104,0.332,105,1.259,106,0.447,107,0.485,108,0.447,109,0.885,110,0.447,111,0.498,112,0.447,113,0.332,114,0.447,115,0.498,116,0.447,117,0.498,118,0.447,119,0.498,120,0.447,121,0.172,122,1.019,123,0.498,124,0.459,125,0.288,126,0.447,127,0.332,128,0.447,129,0.498,130,0.447,131,0.498,132,0.447,133,0.498,134,0.447,135,0.498,136,0.447,137,1.13,138,0.447,139,0.447,140,0.498,141,0.447,142,0.498,143,0.447,144,0.472,145,0.485,146,0.498,147,0.004,148,0.004,155,3.419,156,2.787,159,1.39,163,1.108,167,2.109,168,1.575,172,1.567,173,3.166,174,3.13,175,0.541,176,0.682,177,1.33,187,2.726,200,0.775,206,0.801,207,2.446,211,1.178,217,0.929,227,2.723,241,1.255,243,1.964,249,1.215,255,1.112,263,1.173,264,1.556,281,2.348,298,1.245,344,1.897,368,1.39,374,1.108,375,1.556,376,0.861,377,1.014,379,1.33,384,1.556,391,1.112,407,1.342,421,0.966,443,2.809,467,1.173,468,1.438,470,3.361,471,1.173,472,1.173,478,1.096,483,1.619,488,1.793,490,1.777,492,2.184,493,2.554,494,1.793,502,1.777,508,1.058,510,0.775,511,0.83,513,0.861,515,2.097,525,2.184,526,2.184,534,3.996,536,2.446,537,3.145,546,1.255,547,1.058,548,3.417,551,2.408,556,4.599,557,4.527,559,2.286,561,2.228,562,3.25,563,3.417,566,1.556,567,1.496,568,1.556,579,1.693,584,1.33,585,1.173,586,1.438,587,1.33,590,0.968,591,0.472,592,0.556,593,0.893,594,1.112,595,2.649,596,1.245,597,1.33,600,2.723,601,1.438,609,1.058,620,1.582,621,1.582,622,1.438,623,2.228,625,2.408,626,1.582,627,1.582,628,1.582,630,1.582,632,2.286,636,1.245,637,0.968,638,0.968,640,2.084,643,1.438,644,2.649,646,2.649,647,2.402,664,3.361,666,1.438,667,1.582,668,1.245,669,1.438,715,0.812,719,0.932,720,3.547,723,4.048,726,2.228,727,2.689,732,2.827,733,3.417,736,2.874,737,1.693,743,1.862,754,2.614,759,2.348,768,2.286,771,1.582,773,2.228,783,0.857,785,1.834,813,3.917,833,0.606,840,1.964,891,1.693,931,1.772,970,1.438,1006,2.084,1031,1.438,1038,5.498,1040,3.106,1041,4.509,1050,2.649,1059,1.772,1136,0.861,1291,1.964,1322,4.375,1435,3.417,1461,5.347,1491,2.228,1492,1.33,1493,1.582,1517,6.178,1518,1.964,1519,3.014,1520,4.548,1521,4.548,1522,4.548,1523,3.014,1524,4.548,1525,3.014,1526,4.548,1527,3.014,1528,3.014,1529,3.014,1530,1.8,1531,1.8,1532,3.014,1533,1.8,1534,2.649,1535,1.8,1536,3.014,1537,1.8,1538,2.228,1539,1.8,1540,4.548,1541,3.014,1542,1.8,1543,1.8,1544,1.8,1545,3.014,1546,1.8,1547,3.889,1548,1.8,1549,1.8,1550,2.649,1551,4.548,1552,3.014,1553,3.014,1554,3.014,1555,3.014,1556,1.8,1557,1.8,1558,3.014,1559,1.8,1560,2.649,1561,1.8,1562,1.8,1563,1.8,1564,1.8,1565,3.106,1566,1.8,1567,1.8,1568,1.8,1569,1.582,1570,1.8,1571,1.8,1572,3.889,1573,1.8,1574,1.8,1575,1.8,1576,1.8,1577,1.8,1578,4.548,1579,3.014,1580,1.8,1581,3.014,1582,1.8,1583,1.8,1584,1.8,1585,1.8,1586,1.8,1587,1.8,1588,1.8,1589,3.014,1590,2.649,1591,3.014,1592,3.014]],["title/components/StudentListComponent.html",[0,0.417,138,1.124]],["body/components/StudentListComponent.html",[0,0.716,1,0.904,2,0.24,3,0.287,4,1.007,5,0.263,7,0.154,9,0.95,16,1.249,18,1.059,22,1.527,23,2.631,24,0.833,25,2.458,26,1.527,28,0.348,29,0.86,30,2.374,32,3.066,33,1.165,34,2.53,35,1.263,37,1.953,38,1.514,40,0.582,41,0.011,42,0.923,43,0.548,44,0.67,47,2.409,49,2.184,52,0.766,53,1.863,54,0.768,56,0.843,57,1.298,58,1.26,59,0.731,60,0.487,61,3.651,62,1.878,64,1.421,66,0.275,67,0.472,71,0.472,73,1.659,74,1.007,75,1.007,76,0.904,77,1.446,78,0.904,79,1.407,80,1.007,81,0.856,82,0.954,83,0.443,84,1.007,85,0.904,86,1.007,87,0.904,88,1.007,89,0.904,90,1.446,91,0.904,92,1.692,93,0.904,94,1.007,95,0.904,96,0.954,97,1.446,98,0.928,99,1.446,100,0.904,101,1.007,102,0.904,103,0.928,104,0.67,105,1.849,106,0.904,107,0.98,108,0.904,109,0.401,110,0.904,111,1.007,112,0.904,113,0.67,114,0.904,115,1.007,116,0.904,117,1.007,118,0.904,119,1.007,120,0.904,121,0.348,122,0.954,123,1.007,124,0.928,125,0.582,126,0.904,127,0.67,128,0.904,129,1.007,130,0.904,131,1.007,132,0.904,133,1.007,134,0.904,135,1.007,136,0.904,137,0.904,138,1.659,139,0.904,140,1.007,141,0.904,142,1.007,143,0.904,144,0.954,145,0.98,146,1.007,147,0.006,148,0.006,154,3.315,155,2.248,163,1.92,172,1.407,187,2.175,197,1.57,207,3.592,227,3.592,249,2.106,256,2.247,375,3.448,377,1.758,379,1.787,380,1.809,407,2.326,421,0.904,478,1.605,483,2.545,490,2.61,494,2.818,501,3.612,502,2.61,510,1.566,511,1.677,513,1.739,515,1.677,525,2.043,526,2.043,536,3.592,579,2.933,587,2.689,590,1.956,591,0.954,592,1.124,593,1.806,600,1.956,637,1.956,638,1.956,641,4.172,663,3.196,664,2.689,665,3.196,675,2.906,676,4.172,715,1.407,727,3.612,1059,3.071,1434,3.861,1461,5.245,1492,2.689,1569,4.59,1590,4.59,1593,6.059,1594,4.59,1595,4.172,1596,3.196,1597,5.224,1598,3.638,1599,3.638,1600,3.638,1601,3.638,1602,3.638]],["title/modules/StudentModule.html",[195,1.522,1603,3.344]],["body/modules/StudentModule.html",[2,0.322,3,0.385,5,0.353,7,0.207,9,0.91,18,1.014,41,0.011,59,0.868,60,0.654,66,0.483,67,0.634,81,1.678,83,0.595,127,0.9,136,2.001,137,2.001,138,2.001,139,2.001,147,0.008,148,0.008,155,2.753,175,1.468,187,2.663,195,2.546,197,1.468,198,2.521,199,3.681,200,2.102,201,3.54,206,3.588,208,3.301,209,1.644,215,3.439,216,2.743,217,2.521,406,2.499,478,1.28,584,3.61,585,3.183,695,5.109,697,4.292,699,4.292,719,1.977,796,3.591,1165,5.571,1196,5.571,1215,5.571,1396,6.266,1462,4.727,1517,3.901,1593,3.901,1603,6.576,1604,4.292,1605,4.292,1606,4.885,1607,4.292,1608,5.571,1609,4.885,1610,6.396,1611,6.396,1612,4.885,1613,4.885,1614,4.885,1615,4.885,1616,4.885,1617,4.885,1618,4.885,1619,4.885,1620,4.885]],["title/interfaces/StudentPhage.html",[171,0.811,814,2.335]],["body/interfaces/StudentPhage.html",[2,0.281,3,0.335,5,0.307,7,0.247,9,0.829,18,0.71,28,0.407,29,0.96,41,0.011,43,0.587,44,1.074,51,1.57,54,0.685,56,0.987,66,0.566,83,1.018,104,0.784,121,0.848,125,0.681,147,0.007,148,0.007,163,1.563,171,1.421,172,1.927,197,1.278,229,1.853,231,3.551,238,1.843,239,1.507,363,1.662,366,1.391,369,1.611,408,2.501,420,2.34,436,1.894,478,1.331,577,2.501,591,2.03,592,2.055,715,1.57,719,2.055,741,3.735,775,2.287,776,2.772,777,2.278,778,2.627,779,2.941,780,3.566,781,2.388,782,2.772,783,1.21,784,3.577,785,2.35,786,2.388,787,2.195,788,3.079,789,2.627,790,2.501,791,2.195,792,3.91,793,2.885,794,2.772,795,2.501,796,3.735,797,1.771,798,2.287,799,4.404,800,4.334,801,3.447,802,2.195,803,2.961,804,3.91,805,2.862,806,4.598,807,4.598,808,4.598,809,4.598,810,4.334,811,3.067,812,2.941,813,2.627,814,3.009,815,4.207,816,4.03,817,3.447]],["title/components/StudentPhageComponent.html",[0,0.417,139,1.124]],["body/components/StudentPhageComponent.html",[0,0.729,1,0.969,2,0.257,3,0.307,4,1.08,5,0.282,7,0.165,9,0.555,16,1.196,18,0.962,24,0.894,25,2.469,26,1.605,28,0.373,33,1.224,35,1.536,38,1.306,41,0.011,42,0.829,43,0.521,52,1.065,54,0.721,56,1.068,59,0.545,60,0.522,66,0.294,67,0.506,71,0.506,73,1.712,74,1.08,75,1.08,76,0.969,77,1.519,78,0.969,79,1.479,80,1.08,81,0.918,82,1.023,83,0.773,84,1.08,85,0.969,86,1.08,87,0.969,88,1.08,89,0.969,90,1.519,91,0.969,92,1.758,93,0.969,94,1.08,95,0.969,96,1.023,97,1.519,98,0.995,99,1.519,100,0.969,101,1.08,102,0.969,103,0.995,104,0.719,105,1.908,106,0.969,107,1.051,108,0.969,109,0.7,110,0.969,111,1.08,112,0.969,113,0.719,114,0.969,115,1.08,116,0.969,117,1.08,118,0.969,119,1.08,120,0.969,121,0.834,122,1.023,123,1.08,124,0.995,125,0.624,126,0.969,127,0.719,128,0.969,129,1.08,130,0.969,131,1.08,132,0.969,133,1.08,134,0.969,135,1.08,136,0.969,137,0.969,138,0.969,139,1.712,140,1.08,141,0.969,142,1.08,143,0.969,144,1.023,145,1.051,146,1.08,147,0.006,148,0.006,167,2.286,187,2.286,260,3.243,366,2.254,420,1.795,461,3.871,577,3.227,591,1.439,718,4.057,719,1.696,732,3.558,736,4.057,786,3.567,787,2.833,788,2.362,791,2.833,796,3.082,814,3.278,817,2.444,822,2.017,840,3.577,1136,2.624,1172,4.823,1189,3.115,1190,4.823,1203,4.823,1217,4.823,1410,4.057,1461,4.765,1462,5.094,1518,3.577,1550,6.056,1621,3.427,1622,5.489,1623,5.489,1624,7.535,1625,5.489,1626,3.901,1627,5.489,1628,3.901,1629,3.901,1630,5.489,1631,3.901,1632,3.901,1633,3.901,1634,3.901,1635,3.901,1636,3.901,1637,3.901,1638,3.901,1639,3.901,1640,5.489,1641,5.489,1642,5.489,1643,5.489]],["title/injectables/StudentResolver.html",[149,1.714,1608,3.128]],["body/injectables/StudentResolver.html",[2,0.331,3,0.395,5,0.363,7,0.276,9,0.714,18,0.931,21,2.625,22,2.113,28,0.481,30,1.468,33,1.452,35,1.214,37,2.235,38,1.339,40,1.223,41,0.011,42,0.983,43,0.534,44,1.2,52,1.121,54,0.623,59,0.806,60,0.672,64,1.961,66,0.379,67,0.651,147,0.008,148,0.008,149,2.737,157,4.723,162,5.477,163,2.983,164,5.477,167,2.711,168,2.812,169,5.2,170,2.897,171,1.167,175,1.509,176,1.902,177,1.904,207,4.112,227,2.7,255,3.101,293,4.022,348,4.709,375,4.265,384,3.361,421,1.247,439,3.101,494,3.332,513,2.4,587,3.71,707,6.484,710,5.2,712,4.022,713,5.29,714,3.828,715,2.06,727,4.501,737,4.294,852,4.243,1492,3.71,1596,4.411,1608,4.501,1644,4.411,1645,5.02,1646,5.02,1647,6.511,1648,7.226,1649,5.02,1650,5.02]],["title/injectables/StudentService.html",[149,1.714,207,2.433]],["body/injectables/StudentService.html",[2,0.201,3,0.24,5,0.22,7,0.304,9,1.094,16,0.755,17,2.365,18,1.07,19,2.986,28,0.291,29,0.755,30,1.611,33,1.022,35,0.736,38,1.517,40,1.147,41,0.011,42,1.082,43,0.605,44,1.321,49,2.643,52,1.237,54,0.774,56,1.104,57,1.086,58,1.909,59,0.609,60,0.407,66,0.23,67,0.395,83,0.898,109,0.762,147,0.005,148,0.005,149,2.087,154,3.817,155,3.58,156,2.716,171,0.546,172,1.651,173,1.972,174,2.191,176,1.153,177,2.363,197,1.377,207,2.464,213,3.387,227,2.464,237,3.529,238,1.87,287,2.105,344,1.587,345,2.573,346,4.531,359,4.531,369,2.323,370,1.908,372,3.168,374,1.684,375,4.268,379,2.314,380,1.587,384,2.365,421,1.138,422,2.786,439,1.881,458,4.026,478,1.227,546,3.202,562,2.274,588,3.66,712,2.831,714,2.694,715,1.234,719,2.538,720,2.274,736,3.387,737,4.719,763,5.299,785,2.472,817,2.04,822,1.684,826,2.675,828,4.026,857,6.071,894,1.984,931,2.694,1299,5.893,1318,3.387,1538,3.387,1595,3.66,1651,2.675,1652,4.583,1653,3.66,1654,3.66,1655,4.583,1656,4.583,1657,4.583,1658,4.583,1659,4.583,1660,3.044,1661,6.131,1662,7.914,1663,4.583,1664,3.044,1665,4.583,1666,3.044,1667,4.583,1668,6.576,1669,3.044,1670,3.66,1671,4.583,1672,3.044,1673,4.583,1674,4.583,1675,3.044,1676,4.583,1677,2.986,1678,4.583,1679,3.044,1680,3.044,1681,3.044,1682,3.044,1683,3.044,1684,3.044,1685,3.044]],["title/components/UpdatePasswordComponent.html",[0,0.417,141,1.124]],["body/components/UpdatePasswordComponent.html",[0,0.689,1,0.676,2,0.382,3,0.214,4,0.753,5,0.197,7,0.115,9,0.387,16,1.03,18,0.704,21,2.332,24,0.623,25,2.403,26,1.229,28,0.26,29,0.692,30,2.388,32,2.753,33,0.938,34,2.191,35,1.017,37,1.691,38,1.535,40,0.435,41,0.011,42,0.776,43,0.584,44,0.501,47,1.939,48,2.443,49,2.162,50,1.872,51,1.133,52,1.114,53,1.834,54,0.787,56,0.951,57,1.5,58,1.456,59,0.707,60,0.364,61,3.228,62,1.404,63,1.463,64,1.063,65,1.463,66,0.205,67,0.353,71,0.667,73,1.437,74,0.753,75,0.753,76,0.676,77,1.164,78,0.676,79,1.133,80,0.753,81,0.64,82,1.992,83,0.331,84,0.753,85,0.676,86,0.753,87,0.676,88,0.753,89,0.676,90,1.164,91,0.676,92,1.423,93,0.676,94,0.753,95,0.676,96,0.713,97,1.164,98,0.694,99,1.164,100,0.676,101,0.753,102,0.676,103,0.694,104,0.501,105,1.601,106,0.676,107,0.733,108,0.676,109,0.3,110,0.676,111,0.753,112,0.676,113,0.501,114,0.676,115,0.753,116,0.676,117,0.753,118,0.676,119,0.753,120,0.676,121,0.26,122,0.713,123,0.753,124,0.694,125,0.435,126,0.676,127,0.501,128,0.676,129,0.753,130,0.676,131,0.753,132,0.676,133,0.753,134,0.676,135,0.753,136,0.676,137,0.676,138,0.676,139,0.676,140,0.753,141,1.437,142,0.753,143,0.676,144,1.348,145,0.733,146,0.753,147,0.005,148,0.008,159,1.939,163,1.545,175,0.817,241,2.753,252,2.597,330,4.386,345,3.248,363,2.008,366,1.375,367,2.597,368,1.939,370,1.751,371,1.872,376,2.01,377,2.396,379,2.222,380,1.456,389,3.694,395,2.472,396,4.571,406,1.643,413,2.907,421,2,453,3.799,465,2.985,490,2.26,494,2.37,498,4.308,502,1.643,510,1.171,511,1.254,513,1.3,515,2.37,525,1.527,526,1.527,536,3.11,546,3.164,547,1.599,566,2.17,567,2.087,568,2.17,590,1.463,591,1.102,592,1.299,593,1.35,600,2.261,632,2.472,637,1.463,638,1.463,679,2.907,723,3.799,759,1.404,785,1.695,811,1.254,864,2.01,866,3.358,920,2.01,931,2.472,1006,2.907,1039,2.01,1081,3.358,1279,3.572,1283,2.172,1286,6.07,1291,2.74,1293,4.619,1303,5.28,1304,3.799,1312,5.082,1325,2.39,1326,3.694,1329,2.39,1331,2.39,1332,3.694,1337,2.39,1340,2.39,1341,2.39,1342,3.694,1343,2.39,1410,4.274,1677,2.74,1686,6.677,1687,6.611,1688,4.516,1689,4.205,1690,2.72,1691,4.205,1692,6.611,1693,4.205,1694,3.358,1695,2.72,1696,3.694,1697,4.205,1698,4.205,1699,2.72,1700,4.205,1701,2.72,1702,2.72,1703,3.694,1704,2.72,1705,4.205,1706,3.694,1707,4.205,1708,4.205,1709,4.205,1710,3.694,1711,2.72,1712,2.39,1713,2.39,1714,2.39,1715,2.72,1716,2.72,1717,2.72,1718,2.72,1719,3.358,1720,2.72,1721,4.205]],["title/interfaces/User.html",[54,0.433,171,0.811]],["body/interfaces/User.html",[2,0.338,3,0.403,5,0.37,7,0.217,9,0.938,11,4.559,18,0.803,28,0.631,29,1.086,41,0.011,42,1.232,43,0.654,49,2.385,50,3.43,54,0.844,56,1.19,66,0.498,67,0.664,147,0.008,148,0.008,154,3.273,155,3.512,167,2.132,171,1.38,231,2.541,233,2.753,235,3.956,236,3.956,237,2.132,238,1.754,239,1.638,240,4.073,241,3.208,246,3.62,247,3.62,249,2.659,260,2.838,380,2.284,465,3.403,562,3.273,591,1.729,592,2.038,715,2.236,801,3.43,848,4.297,1722,4.089,1723,5.794,1724,5.794,1725,5.794,1726,4.498]],["title/components/UserProfileComponent.html",[0,0.417,143,1.124]],["body/components/UserProfileComponent.html",[0,0.738,1,0.796,2,0.415,3,0.253,4,0.887,5,0.232,7,0.202,9,0.456,16,1.107,18,0.766,24,0.735,25,2.436,26,1.393,28,0.307,29,0.784,30,2.386,32,2.933,33,1.062,34,2.383,35,1.521,37,1.965,38,1.541,40,0.513,41,0.011,42,1.156,43,0.552,44,0.591,47,2.196,48,2.626,49,1.557,50,2.121,51,1.695,52,0.833,53,2.027,54,0.802,56,0.784,57,1.144,58,1.111,59,0.724,60,0.429,61,3.47,62,1.655,63,1.724,64,1.253,65,1.724,66,0.242,67,0.737,71,0.416,73,1.563,74,0.887,75,0.887,76,0.796,77,1.318,78,0.796,79,1.283,80,0.887,81,0.755,82,0.841,83,0.39,84,0.887,85,0.796,86,0.887,87,0.796,88,0.887,89,0.796,90,1.318,91,0.796,92,1.573,93,0.796,94,0.887,95,0.796,96,0.841,97,1.318,98,0.818,99,1.318,100,0.796,101,0.887,102,0.796,103,0.818,104,0.591,105,1.741,106,0.796,107,0.864,108,0.796,109,0.353,110,0.796,111,0.887,112,0.796,113,0.591,114,0.796,115,0.887,116,0.796,117,0.887,118,0.796,119,0.887,120,0.796,121,0.307,122,0.841,123,0.887,124,0.818,125,0.513,126,0.796,127,0.591,128,0.796,129,0.887,130,0.796,131,0.887,132,0.796,133,0.887,134,0.796,135,0.887,136,0.796,137,0.796,138,0.796,139,0.796,140,0.887,141,0.796,142,0.887,143,1.563,144,2.007,145,0.864,146,0.887,147,0.006,148,0.006,156,1.804,163,1.751,177,1.393,190,3.52,235,3.122,236,3.122,237,2.62,238,1.201,239,0.927,241,3.12,246,2.364,247,2.364,264,2.459,330,3.496,344,2.595,366,1.557,367,2.942,368,2.196,374,2.312,377,2.117,379,1.965,381,4.185,395,2.801,406,1.861,421,0.796,422,2.537,436,2.121,488,2.196,490,2.458,494,2.901,501,3.293,502,1.861,510,1.38,511,1.478,513,1.533,515,2.196,525,1.8,526,1.8,531,4.1,536,3.383,546,3.244,559,2.801,561,3.52,566,2.459,567,2.364,568,2.459,590,1.724,591,0.841,592,0.991,600,2.562,615,2.817,632,1.885,637,1.724,638,1.724,679,3.293,715,1.283,783,1.789,966,3.805,1086,2.817,1227,2.562,1279,4.152,1283,2.561,1284,5.657,1423,3.805,1688,4.994,1703,4.185,1712,2.817,1713,2.817,1714,2.817,1727,6.726,1728,2.817,1729,4.185,1730,4.763,1731,6.291,1732,6.291,1733,3.206,1734,4.763,1735,3.206,1736,3.206,1737,3.206,1738,3.206,1739,4.763,1740,4.763,1741,3.206,1742,3.206,1743,3.206,1744,5.683,1745,3.206,1746,3.206,1747,3.206,1748,3.206,1749,3.206,1750,3.206,1751,3.206]],["title/interfaces/_User.html",[171,0.811,233,2.433]],["body/interfaces/_User.html",[2,0.351,3,0.419,5,0.384,7,0.225,9,0.756,11,5.4,18,0.647,28,0.711,29,1.112,41,0.011,42,1.244,43,0.609,49,1.738,50,3.007,54,0.845,56,1.181,66,0.51,67,0.876,147,0.008,148,0.008,154,2.638,155,2.907,167,2.812,171,1.445,231,3.352,233,3.632,235,4.002,236,4.002,237,3.253,238,1.704,239,1.679,240,3.283,241,2.213,246,3.685,247,3.685,249,2.143,260,2.287,380,1.841,465,4.032,562,2.638,591,1.393,592,1.642,715,2.104,801,3.007,848,3.464,1722,4.245,1723,4.67,1724,4.67,1725,4.67,1726,5.934]],["title/changelog.html",[681,2.364,803,1.704,1752,3.362]],["body/changelog.html",[0,0.566,2,0.405,9,0.653,16,0.756,18,0.559,41,0.007,44,0.846,54,0.774,71,0.797,83,0.842,109,0.506,113,0.846,121,0.787,122,1.204,125,1.107,127,1.132,144,1.204,147,0.009,148,0.007,156,2.326,157,3.793,166,3.395,168,1.591,171,0.823,209,1.546,238,1.297,240,2.837,241,1.913,330,3.434,363,1.795,366,2.008,368,2.118,369,1.74,370,1.913,371,2.734,373,2.47,378,3.176,379,2.25,380,2.396,385,2.837,391,2.837,399,3.669,400,3.176,401,3.395,408,2.701,412,2.196,414,5.458,420,1.502,421,1.141,423,2.993,433,3.176,434,2.837,436,2.734,461,2.579,465,2.371,467,2.993,474,2.837,478,0.919,499,2.837,546,3.501,556,4.273,558,6.265,567,2.28,619,4.246,651,2.837,681,2.837,715,1.237,719,2.282,720,2.28,777,2.703,788,1.977,793,2.978,810,2.993,811,2.118,822,2.257,832,2.257,833,1.546,836,2.701,837,2.701,842,4.246,854,4.036,874,2.701,901,3.669,926,3.176,930,3.288,951,2.837,1032,3.669,1099,3.669,1103,3.669,1123,2.993,1126,1.977,1132,2.993,1138,3.669,1204,3.176,1251,4.036,1262,2.993,1268,2.837,1269,2.993,1271,2.701,1302,4.036,1305,4.036,1322,3.669,1370,4.036,1410,3.395,1534,4.036,1670,3.669,1706,4.036,1752,4.036,1753,4.593,1754,2.734,1755,2.837,1756,7.92,1757,4.593,1758,7.106,1759,4.593,1760,3.669,1761,6.918,1762,4.593,1763,6.141,1764,4.593,1765,4.593,1766,6.141,1767,4.593,1768,4.593,1769,4.036,1770,4.593,1771,4.593,1772,4.593,1773,4.593,1774,4.593,1775,4.593,1776,4.593,1777,6.141,1778,4.593,1779,4.593,1780,6.918,1781,4.593,1782,4.593,1783,6.141,1784,4.593,1785,4.538,1786,6.141,1787,4.593,1788,4.593,1789,6.141,1790,5.396,1791,5.396,1792,4.036,1793,3.176,1794,4.508,1795,4.593,1796,4.593,1797,4.036,1798,6.078,1799,4.593,1800,4.593,1801,4.593,1802,6.918,1803,4.593,1804,4.593,1805,4.593,1806,4.036,1807,4.593,1808,4.593,1809,4.593,1810,4.593,1811,4.593,1812,4.593,1813,4.593,1814,4.036]],["title/coverage.html",[1815,5.341]],["body/coverage.html",[0,0.817,1,0.898,5,0.261,6,3.177,16,0.595,18,0.44,37,1.057,41,0.011,43,0.297,54,0.346,76,0.898,78,0.898,81,0.851,83,0.44,85,0.898,87,0.898,89,0.898,91,0.898,93,0.898,95,0.898,98,0.923,100,0.898,102,0.898,103,0.923,106,0.898,108,0.898,109,0.399,110,0.898,112,0.898,114,0.898,116,0.898,118,0.898,120,0.898,121,0.346,124,0.923,126,0.898,128,0.898,130,0.898,132,0.898,134,0.898,136,0.898,137,0.898,138,0.898,139,0.898,141,0.898,143,0.898,147,0.006,148,0.006,149,3.072,150,2.5,151,3.177,171,1.512,184,3.177,185,2.888,186,3.177,207,1.945,222,2.888,227,1.945,228,4.502,233,1.945,256,2.234,260,1.556,262,3.177,278,1.945,279,2.5,280,2.5,281,1.866,308,2.888,339,2.888,341,2.888,343,3.177,407,2.966,421,0.898,454,3.177,455,4.154,476,3.177,478,0.724,480,4.599,481,2.888,482,3.177,510,1.556,529,2.888,530,3.177,642,2.888,643,4.154,674,2.888,675,4.154,692,2.5,700,2.888,706,3.177,717,3.177,719,1.118,775,1.945,776,4.599,784,1.945,798,1.945,814,1.866,818,2.5,819,3.177,830,2.357,844,2.357,856,2.357,863,3.177,864,4.502,887,4.154,894,2.357,896,3.177,912,3.177,932,3.177,933,2.888,934,5.321,939,2.357,961,3.177,976,3.177,994,3.177,995,3.177,996,2.888,998,3.177,999,3.177,1016,3.177,1064,2.672,1099,7.031,1102,3.177,1114,3.177,1115,3.177,1119,3.177,1120,3.177,1126,3.163,1127,2.5,1128,3.177,1129,3.177,1159,2.5,1160,3.177,1161,3.177,1165,2.5,1166,4.605,1167,3.177,1174,5.853,1185,3.177,1196,2.5,1197,3.177,1215,2.5,1216,3.177,1218,4.57,1225,2.5,1226,3.177,1257,4.502,1279,2.234,1284,2.672,1286,2.888,1288,3.177,1309,3.177,1346,3.177,1354,3.177,1366,3.177,1402,3.177,1418,3.177,1427,3.177,1461,4.605,1462,3.844,1463,3.177,1517,2.888,1565,2.888,1593,2.888,1608,2.5,1621,3.177,1644,3.177,1651,3.177,1686,3.177,1722,4.154,1727,3.177,1728,3.177,1769,3.177,1815,3.177,1816,1.37,1817,3.616,1818,8.332,1819,6.091,1820,6.091,1821,6.661,1822,6.661,1823,5.201,1824,5.201,1825,6.091,1826,3.616,1827,3.616,1828,3.616,1829,5.201,1830,5.201,1831,3.616,1832,3.616,1833,6.091,1834,3.616,1835,3.616,1836,5.201,1837,5.201,1838,3.616,1839,3.616,1840,5.201,1841,3.177,1842,5.201,1843,3.616,1844,3.616,1845,3.616,1846,5.853,1847,6.091,1848,3.616,1849,4.57,1850,5.201,1851,5.201,1852,5.201,1853,5.201,1854,7.349,1855,5.201,1856,3.616,1857,3.616,1858,5.201,1859,3.616,1860,3.616,1861,3.616,1862,3.616,1863,3.616,1864,3.616,1865,5.201,1866,3.616,1867,3.616,1868,3.616,1869,3.616,1870,3.616,1871,3.616,1872,3.616,1873,3.177,1874,3.616,1875,3.616,1876,3.616,1877,3.177,1878,3.177,1879,3.616]],["title/dependencies.html",[197,1.628,1880,3.826]],["body/dependencies.html",[24,1.147,33,1.116,41,0.011,60,0.67,147,0.008,148,0.008,175,1.505,197,1.505,200,2.797,284,6.341,285,5.191,290,3.7,292,3.999,293,3.092,332,3.999,361,3.999,370,2.706,372,3.461,380,1.734,471,3.262,472,3.262,561,3.7,948,3.7,1359,4.399,1383,4.399,1384,6.341,1388,4.399,1390,5.711,1391,4.399,1814,4.399,1881,5.006,1882,8.597,1883,6.499,1884,5.006,1885,5.006,1886,5.006,1887,8.112,1888,5.006,1889,5.006,1890,5.006,1891,5.006,1892,5.006,1893,6.499,1894,5.006,1895,5.006,1896,5.006,1897,5.006,1898,6.499,1899,5.006,1900,5.006,1901,6.499,1902,5.006,1903,5.006,1904,5.006,1905,5.006,1906,5.006,1907,5.006,1908,5.006,1909,6.499,1910,5.006,1911,5.006,1912,5.006,1913,5.006,1914,5.006,1915,5.006,1916,6.955,1917,5.006,1918,6.499,1919,5.006,1920,5.006,1921,5.006,1922,5.006,1923,5.006,1924,5.006,1925,5.006,1926,5.006,1927,5.006,1928,5.006,1929,5.006,1930,5.006,1931,5.006,1932,5.006,1933,5.006,1934,6.499,1935,5.006,1936,4.399,1937,5.006,1938,5.006,1939,5.006,1940,5.006,1941,5.006,1942,5.006,1943,5.006,1944,5.006,1945,5.006,1946,5.006,1947,6.711,1948,5.006,1949,5.006,1950,5.006,1951,5.006,1952,5.006,1953,5.006,1954,5.006,1955,3.999,1956,5.006,1957,5.006,1958,5.006,1959,5.006,1960,5.006,1961,5.006,1962,5.006,1963,5.006,1964,5.006,1965,5.006,1966,5.006,1967,5.006,1968,5.006,1969,5.006]],["title/index.html",[28,0.366,681,2.364,803,1.704]],["body/index.html",[41,0.01,79,1.871,147,0.009,148,0.009,414,5.134,803,3.093,948,5.134,1970,5.548,1971,6.946]],["title/license.html",[681,2.364,803,1.704,1972,3.362]],["body/license.html",[5,0.466,41,0.009,147,0.009,148,0.009,239,1.254,263,4.197,435,4.197,891,3.616,975,5.144,1696,5.658,1758,5.658,1790,5.658,1797,7.1,1916,5.658,1972,7.715,1973,6.44,1974,6.44,1975,6.44,1976,6.44,1977,6.44,1978,7.597,1979,6.44,1980,6.44,1981,6.44,1982,5.658,1983,6.44,1984,6.44,1985,6.44,1986,6.44,1987,6.44,1988,6.44,1989,7.597,1990,6.44,1991,6.44,1992,6.44,1993,6.44,1994,6.44,1995,6.44,1996,6.44,1997,6.44]],["title/modules.html",[195,2.045]],["body/modules.html",[41,0.009,147,0.009,148,0.009,195,2.155,196,4.429,206,2.852,268,4.734,274,4.429,275,4.429,276,4.429,277,4.429,285,7.081,687,4.734,981,4.429,1603,4.734,1806,7.79,1998,8.866,1999,8.866]],["title/overview.html",[2000,5.341]],["body/overview.html",[0,0.343,1,1.536,37,1.808,41,0.011,66,0.281,76,1.536,78,1.896,81,1.797,85,1.536,87,1.536,89,1.536,91,1.536,93,1.536,95,1.536,98,1.578,100,1.536,102,1.536,103,1.578,106,1.536,108,1.536,110,1.536,112,1.536,114,1.536,116,1.536,118,1.536,120,1.536,124,1.578,126,1.536,127,0.685,128,1.536,130,1.536,132,1.536,134,1.536,136,1.536,137,1.536,138,1.536,139,1.536,141,1.536,143,1.536,147,0.006,148,0.006,149,1.408,150,4.276,171,0.666,195,1.785,196,5.824,197,1.117,198,1.918,199,1.918,200,1.599,201,1.845,202,3.265,203,3.265,204,3.265,205,3.265,206,3.862,207,3.326,208,2.738,209,1.25,268,6.548,269,3.265,270,3.265,271,3.265,272,3.265,273,3.265,274,5.744,275,5.278,276,5.638,277,5.492,278,3.326,279,4.276,280,4.276,281,3.192,322,3.265,323,3.265,687,6.26,688,3.265,689,3.265,691,3.265,692,4.276,818,4.276,904,3.265,905,3.265,981,5.958,982,3.265,983,3.265,985,3.265,1126,1.599,1127,5.278,1159,5.278,1165,4.276,1196,4.276,1204,2.569,1215,4.276,1225,5.278,1238,3.265,1275,3.265,1276,3.265,1278,3.265,1279,3.82,1344,2.968,1355,3.265,1356,3.265,1375,3.265,1376,3.265,1377,3.265,1603,6.369,1604,3.265,1605,3.265,1607,3.265,1608,4.276,1760,2.968,2000,3.265,2001,3.716]],["title/todo.html",[618,3.056,681,2.364,803,1.704]],["body/todo.html",[13,3.186,16,1.276,18,0.811,41,0.009,54,0.638,71,0.865,72,3.073,83,0.944,121,0.742,147,0.009,148,0.009,326,3.919,340,5.324,383,4.926,414,4.926,436,2.967,619,4.608,719,2.06,897,5.324,1284,4.926,1285,5.856,1798,5.856,2002,6.811,2003,6.665,2004,5.856,2005,6.665,2006,6.665,2007,6.665]],["title/miscellaneous/variables.html",[407,2.411,2008,3.362]],["body/miscellaneous/variables.html",[9,0.651,13,2.928,17,2.362,18,0.841,28,0.438,29,0.753,32,2.551,40,0.98,41,0.011,42,1.042,43,0.503,52,1.184,54,0.661,56,0.953,57,2.882,58,2.974,70,3.655,72,2.11,73,1.137,83,0.557,104,1.129,121,0.438,125,0.98,147,0.007,148,0.008,154,2.271,155,1.969,211,2.393,228,3.382,238,1.707,239,1.344,244,4.774,245,3.655,246,2.271,247,2.271,248,3.655,249,1.845,250,3.655,251,3.655,252,2.826,253,3.655,254,3.655,256,4.265,257,3.655,258,5.515,259,3.655,260,2.636,261,3.655,315,4.021,363,1.788,370,2.551,371,2.037,377,1.54,379,2.313,407,2.037,465,2.362,478,0.916,510,2.972,562,2.271,591,1.2,592,1.414,651,2.826,719,2.134,777,2.393,780,1.969,782,2.982,783,1.302,787,2.362,797,3.07,803,2.037,817,2.037,833,2.061,842,4.235,895,4.555,1007,4.021,1020,5.449,1032,3.655,1053,3.655,1054,2.982,1064,5.103,1200,4.021,1204,4.235,1220,4.021,1235,4.021,1266,4.527,1291,3.992,1538,3.382,1565,5.515,1760,3.655,1841,4.021,1873,4.021,1877,4.021,1878,5.382,2004,4.021,2008,6.067,2009,4.576,2010,4.576,2011,4.576,2012,4.576,2013,4.576,2014,4.576,2015,6.125,2016,6.125,2017,6.125,2018,6.125,2019,4.576,2020,4.576,2021,4.576,2022,4.576,2023,4.576,2024,4.576,2025,4.576,2026,2.69,2027,4.576,2028,4.576,2029,4.021,2030,4.576,2031,6.125,2032,4.576,2033,4.576,2034,6.125,2035,4.576,2036,4.576,2037,4.021,2038,4.576,2039,3.655,2040,3.655,2041,4.576,2042,4.576]],["title/additional-documentation/controllers.html",[71,0.496,229,1.216,1754,1.704]],["body/additional-documentation/controllers.html",[9,0.892,16,1.033,41,0.009,54,0.6,109,0.691,147,0.009,148,0.009,347,5.527,353,5.01,355,4.635,356,4.635,357,4.635,370,2.612,478,1.255,489,5.01,543,5.01,544,5.01,719,1.938,726,4.635,824,4.336,930,2.793,1653,5.01,1654,5.01,1754,3.861,1816,2.376,2043,5.511,2044,5.511,2045,5.511,2046,5.511,2047,5.511,2048,5.511,2049,5.511,2050,5.511,2051,5.511,2052,5.511,2053,5.511,2054,5.511,2055,5.511,2056,5.511,2057,5.511,2058,5.511,2059,5.511,2060,5.511,2061,5.511,2062,5.511,2063,5.511,2064,5.511,2065,5.511,2066,5.511,2067,5.511,2068,5.511,2069,5.511,2070,5.511,2071,4.336,2072,5.511,2073,5.511,2074,5.511,2075,4.336,2076,5.511]],["title/additional-documentation/controllers/admin-controller.html",[9,0.471,71,0.43,229,1.054,1754,1.476]],["body/additional-documentation/controllers/admin-controller.html",[7,0.362,9,1.178,16,0.891,17,1.973,18,0.832,28,0.366,40,1.325,41,0.011,43,0.679,48,2.454,49,1.25,50,1.702,51,1.84,52,1.152,54,0.841,72,3.549,83,0.659,147,0.006,148,0.006,154,3.118,155,2.704,177,2.421,189,1.897,211,3.007,237,3.117,347,3.999,363,2.114,371,3.333,373,4.489,377,2.646,379,2.44,380,2.366,425,4.219,443,3.342,478,1.367,546,1.592,715,2.154,737,3.527,759,3.864,783,2.515,785,1.541,832,1.405,874,5.046,1041,5.328,1118,5.048,1136,1.827,1594,3.358,1754,2.797,1816,1.448,2026,4.016,2043,4.755,2044,4.755,2045,4.755,2046,4.755,2047,4.755,2075,5.529,2077,3.822,2078,3.822,2079,4.878,2080,4.878,2081,5.532,2082,4.878,2083,4.878,2084,4.452,2085,4.452,2086,3.053,2087,3.822,2088,3.358,2089,6.282,2090,3.822,2091,6.282,2092,5.411,2093,3.822,2094,3.822,2095,2.643,2096,3.822,2097,3.358,2098,3.822,2099,3.822,2100,3.822,2101,5.436,2102,5.436,2103,5.411,2104,3.999,2105,4.322,2106,5.411,2107,3.822,2108,1.645]],["title/additional-documentation/controllers/course-controller.html",[16,0.546,71,0.43,229,1.054,1754,1.476]],["body/additional-documentation/controllers/course-controller.html",[7,0.367,9,0.788,13,2.337,16,1.447,17,1.298,18,0.906,28,0.241,29,0.805,40,1.321,41,0.01,43,0.677,48,2.165,49,0.822,51,1.493,52,1.139,54,0.79,72,3.433,83,0.779,109,0.539,147,0.005,148,0.005,154,1.248,155,2.385,156,1.498,168,0.871,177,2.413,189,2.426,197,0.756,211,2.5,235,2.426,236,2.426,237,3.152,238,1.543,239,0.77,241,1.047,242,1.412,243,2.577,249,1.594,369,2.1,371,3.498,373,4.46,374,1.453,376,1.202,377,2.852,379,2.524,380,2.529,384,1.298,406,1.545,412,1.202,420,1.293,421,0.982,422,2.876,423,1.638,425,4.51,435,1.638,477,4.003,478,1.427,489,3.158,543,3.904,544,3.158,546,2.509,555,3.612,559,2.325,619,1.738,712,1.553,715,2.093,720,1.248,737,1.412,759,3.843,783,2.52,832,0.924,833,1.645,874,5.067,891,1.412,931,1.478,939,2.577,1021,1.638,1118,2.922,1123,3.185,1152,2.008,1268,1.553,1360,2.008,1491,1.858,1595,2.008,1654,3.158,1754,2.176,1755,1.553,1816,0.952,2002,2.209,2026,4.377,2048,3.475,2049,4.295,2050,3.475,2051,3.475,2052,3.475,2053,3.475,2054,3.475,2055,3.475,2056,6.541,2071,1.738,2075,5.232,2079,4.852,2080,4.852,2081,5.502,2082,4.932,2083,5.002,2084,4.758,2085,4.649,2095,3.379,2097,2.209,2101,4.628,2102,5.048,2104,1.858,2108,1.082,2109,2.514,2110,2.514,2111,2.922,2112,7.134,2113,2.514,2114,3.158,2115,3.954,2116,2.514,2117,3.904,2118,2.514,2119,6.026,2120,2.514,2121,2.514,2122,2.008,2123,3.954,2124,2.514,2125,2.514,2126,2.209,2127,2.514,2128,4.888,2129,3.954,2130,2.514,2131,2.514,2132,2.209,2133,2.514,2134,3.954,2135,2.514,2136,2.514,2137,2.514,2138,2.514,2139,2.514,2140,2.514,2141,2.514,2142,2.514,2143,3.954,2144,2.514,2145,2.514,2146,2.514,2147,2.514,2148,2.514,2149,1.858,2150,2.008,2151,2.514,2152,2.514,2153,2.514,2154,2.209,2155,2.514,2156,2.514,2157,2.514,2158,2.008,2159,2.734,2160,2.008,2161,2.514]],["title/additional-documentation/controllers/fridge-controller.html",[71,0.43,229,1.054,719,1.024,1754,1.476]],["body/additional-documentation/controllers/fridge-controller.html",[2,0.308,7,0.359,17,1.209,20,1.209,28,0.224,29,0.615,33,0.522,40,1.319,41,0.01,43,0.68,48,2.642,50,1.664,51,1.007,52,1.156,54,0.772,83,0.793,104,0.431,109,0.89,113,0.431,121,0.782,125,0.375,147,0.004,148,0.004,156,0.887,163,0.861,167,0.975,170,1.767,177,2.411,189,3.623,211,3.054,237,3.094,242,1.315,363,0.915,366,1.525,369,2.018,371,3.309,373,4.454,374,1.715,376,2.23,377,2.732,379,2.485,380,2.149,384,2.408,406,1.823,420,2.129,421,1.68,422,1.507,423,3.471,425,3.833,436,2.592,443,2.309,546,2.424,551,1.87,555,1.73,558,2.762,562,1.162,619,3.226,712,2.309,715,2.173,718,1.73,719,2.633,720,1.162,732,1.209,737,2.099,754,3.768,759,3.768,781,2.099,783,2.5,789,1.446,790,1.377,791,2.408,793,1.881,795,1.377,797,1.943,817,2.592,822,2.873,832,0.861,833,0.788,838,2.986,874,4.998,888,1.73,889,1.619,892,3.226,901,1.87,931,1.377,939,1.526,951,1.446,966,1.87,1021,4.659,1118,4.813,1299,3.726,1491,2.762,1538,1.73,1653,2.986,1677,2.436,1754,2.077,1755,3.29,1785,1.73,1816,0.887,2026,3.829,2040,1.87,2057,3.284,2058,3.284,2059,3.284,2060,3.284,2061,3.284,2062,3.284,2063,3.284,2064,5.115,2065,5.452,2066,3.284,2067,3.284,2068,4.68,2071,4.942,2075,5.217,2079,4.843,2080,4.757,2081,5.395,2082,4.543,2083,4.843,2084,4.044,2085,3.793,2086,1.87,2095,3.226,2101,5.541,2102,5.701,2104,2.762,2105,2.986,2108,1.008,2111,4.302,2114,4.649,2126,2.057,2132,2.057,2149,3.448,2150,3.726,2158,2.986,2159,3.682,2160,1.87,2162,2.342,2163,2.342,2164,2.342,2165,6.126,2166,2.342,2167,4.665,2168,2.342,2169,4.099,2170,2.342,2171,2.342,2172,2.342,2173,2.342,2174,3.284,2175,2.342,2176,2.342,2177,2.057,2178,3.284,2179,2.342,2180,2.342,2181,2.342,2182,2.342,2183,3.284,2184,5.326,2185,5.326,2186,3.284,2187,4.099,2188,2.342,2189,2.342,2190,2.342,2191,2.342,2192,2.342,2193,2.342,2194,2.342,2195,3.738,2196,4.665,2197,5.326,2198,2.342,2199,2.342,2200,2.342,2201,2.342,2202,2.057,2203,2.342,2204,2.342,2205,2.342,2206,2.342,2207,2.342,2208,2.342,2209,2.342]],["title/additional-documentation/controllers/genetics-controller.html",[71,0.43,229,1.054,930,1.476,1754,1.476]],["body/additional-documentation/controllers/genetics-controller.html",[7,0.338,28,0.489,29,1.085,40,1.232,41,0.01,43,0.632,44,0.942,52,0.965,104,1.214,121,0.698,125,1.232,147,0.009,148,0.008,170,2.496,177,2.251,212,5.788,344,1.771,371,3.428,373,4.14,377,2.792,379,2.484,380,1.771,406,2.574,420,2.154,423,3.331,425,4.069,478,1.023,591,1.34,712,4.069,715,1.963,759,3.4,777,3.008,778,4.756,780,2.835,783,2.437,785,2.061,793,2.061,797,2.743,805,2.2,820,3.158,824,4.555,832,2.928,833,2.453,836,3.873,839,4.069,850,3.778,851,4.083,859,3.534,861,4.555,874,4.796,930,2.933,1123,3.331,1259,3.534,1260,3.534,1265,4.293,1271,3.006,1272,4.293,1274,4.293,1318,3.778,1754,3.245,1755,4.069,1816,1.937,2026,3.873,2069,5.788,2079,4.293,2080,4.293,2082,4.293,2083,4.293,2084,4.293,2085,4.293,2095,4.555,2108,2.2,2117,4.083,2149,3.778,2210,5.112,2211,5.112,2212,5.112,2213,6.588,2214,5.112,2215,5.112,2216,5.112,2217,5.788,2218,5.112,2219,5.112,2220,5.112,2221,5.112]],["title/additional-documentation/controllers/scenario-controller.html",[71,0.43,109,0.365,229,1.054,1754,1.476]],["body/additional-documentation/controllers/scenario-controller.html",[7,0.34,17,2.704,28,0.501,29,1.102,40,1.243,41,0.01,43,0.638,52,1.139,109,0.96,147,0.008,148,0.008,168,1.814,177,2.271,189,2.6,211,2.881,369,1.984,371,2.332,373,4.317,376,2.504,377,2.481,379,2.347,380,1.814,384,2.704,406,2.046,422,2.112,425,3.235,478,1.555,715,1.802,745,4.945,754,3.806,759,3.806,783,2.476,832,1.925,833,1.762,855,4.602,874,4.907,895,4.133,936,4.945,942,4.945,1021,4.361,1347,5.345,1360,4.184,1434,3.871,1754,3.283,1816,1.984,2026,3.08,2070,5.879,2071,5.098,2079,4.805,2080,4.805,2082,4.361,2083,4.361,2084,3.413,2085,3.413,2101,5.676,2102,5.55,2108,2.254,2111,3.871,2159,4.626,2160,4.184,2165,4.602,2187,4.602,2222,5.238,2223,5.238,2224,4.602,2225,4.602,2226,5.238,2227,5.238,2228,5.238,2229,5.238,2230,5.238,2231,5.238,2232,5.238,2233,4.602,2234,5.238,2235,5.238]],["title/additional-documentation/controllers/user-controller.html",[54,0.317,71,0.43,229,1.054,1754,1.476]],["body/additional-documentation/controllers/user-controller.html",[2,0.264,7,0.352,13,2.356,17,1.314,18,0.486,28,0.244,29,0.658,40,1.309,41,0.01,42,0.384,43,0.671,48,1.925,49,2.277,51,1.327,52,1.128,54,0.833,56,0.351,82,1.047,109,0.281,127,1.117,147,0.005,148,0.007,153,1.881,155,1.096,156,2.437,168,0.882,173,1.719,174,1.217,177,2.392,189,3.339,197,0.765,209,0.857,211,2.918,235,2.446,236,2.446,237,2.524,239,0.778,241,3.311,242,1.429,326,1.497,327,1.881,330,4.104,344,0.882,347,2.951,353,3.19,355,2.951,356,2.951,357,2.951,363,0.995,369,0.964,371,3.756,372,4.65,373,4.447,374,0.936,376,3.216,377,2.872,378,2.761,379,2.518,380,2.33,382,2.237,383,1.881,384,2.544,386,2.237,395,1.497,399,3.936,400,4.65,401,2.951,406,2.18,412,1.909,413,2.761,415,2.761,420,0.832,421,1.224,423,3.211,425,3.973,434,1.572,443,1.572,453,1.881,474,1.572,477,1.369,498,1.659,546,3.11,562,1.264,712,3.745,713,2.603,715,2.012,719,0.787,720,2.77,726,2.951,737,2.243,754,1.314,759,3.782,783,2.514,801,1.133,832,0.936,874,5.053,891,2.243,1021,1.659,1041,1.881,1123,2.603,1227,1.369,1229,2.033,1290,2.237,1291,1.659,1293,3.19,1303,3.19,1304,1.881,1413,2.237,1670,2.033,1677,2.603,1754,2.194,1755,1.572,1816,0.964,1947,2.237,2026,4.309,2039,2.033,2040,2.033,2071,1.76,2072,3.509,2073,3.509,2074,3.509,2075,4.65,2076,5.652,2079,4.948,2080,4.776,2081,4.124,2082,4.776,2083,4.868,2084,4.192,2085,3.637,2086,3.936,2088,2.237,2095,4.65,2101,5.388,2102,5.445,2104,1.881,2105,2.033,2108,1.096,2111,3.642,2114,2.033,2117,4.457,2149,3.642,2150,3.19,2154,2.237,2158,2.033,2159,3.407,2169,4.33,2174,2.237,2178,2.237,2186,2.237,2202,2.237,2217,2.237,2233,2.237,2236,2.546,2237,3.994,2238,2.546,2239,2.546,2240,3.994,2241,4.928,2242,2.546,2243,2.546,2244,6.433,2245,3.994,2246,2.546,2247,2.546,2248,2.546,2249,3.994,2250,3.994,2251,2.546,2252,2.546,2253,2.546,2254,2.546,2255,2.546,2256,2.546,2257,2.546,2258,2.546,2259,2.546,2260,2.546,2261,2.546,2262,2.546,2263,2.546,2264,2.546,2265,2.546,2266,2.546,2267,2.546,2268,2.546,2269,2.546,2270,2.546,2271,2.546,2272,2.546,2273,2.546,2274,2.546,2275,2.546,2276,2.546,2277,2.546,2278,2.546,2279,3.994,2280,2.546,2281,2.546,2282,3.994,2283,2.546,2284,2.546]],["title/additional-documentation/genetics.html",[71,0.496,229,1.216,930,1.704]],["body/additional-documentation/genetics.html",[41,0.009,109,0.72,121,0.803,125,1.045,147,0.009,148,0.009,370,2.72,777,2.993,821,3.886,824,4.516,926,4.516,930,2.909,1794,4.257,1816,2.475,2285,5.74,2286,5.74,2287,5.74,2288,5.74,2289,5.74,2290,5.74,2291,6.533,2292,6.533,2293,6.533,2294,6.533,2295,6.533,2296,5.74,2297,5.74,2298,5.74,2299,5.74,2300,5.74,2301,5.74,2302,5.74,2303,6.533,2304,6.533,2305,6.533,2306,5.74,2307,5.74]],["title/additional-documentation/genetics/phage-scenario.html",[71,0.43,109,0.365,121,0.317,229,1.054]],["body/additional-documentation/genetics/phage-scenario.html",[2,0.508,7,0.352,28,0.338,29,1.085,40,1.306,41,0.01,43,0.662,48,1.381,51,0.952,52,1.183,56,0.83,83,1.003,109,0.937,121,0.823,147,0.006,148,0.006,170,1.938,172,1.775,177,2.36,209,1.722,211,1.381,238,1.777,239,1.283,246,1.755,249,1.425,252,2.183,345,4.407,363,2.575,368,1.63,374,1.88,379,1.033,395,3.536,420,2.384,421,1.811,433,2.444,478,1.024,503,1.901,591,0.927,714,2.078,780,2.588,781,4.325,783,2.454,786,2.873,787,3.61,788,3.43,789,2.183,790,4.528,791,3.402,799,4.044,802,1.825,804,4.113,805,2.837,815,3.876,821,1.69,822,2.929,832,2.764,837,3.008,838,5.265,841,2.612,889,2.444,890,3.781,930,1.574,940,4.496,1054,4.558,1123,3.334,1132,2.304,1137,2.823,1269,4.296,1349,2.612,1518,3.334,1677,2.304,1694,2.823,1793,2.444,1794,2.304,1816,1.339,1936,3.106,1955,2.823,1970,2.823,2029,3.106,2108,1.521,2285,4.496,2286,4.496,2287,4.496,2288,4.496,2289,4.496,2290,4.496,2308,5.117,2309,5.117,2310,5.117,2311,5.117,2312,5.117,2313,3.535,2314,3.535,2315,2.823,2316,4.496,2317,5.117,2318,2.823,2319,3.106,2320,4.496,2321,3.535,2322,5.284,2323,3.106,2324,4.803,2325,4.496,2326,2.823,2327,2.823,2328,3.106,2329,5.117,2330,3.106,2331,3.535,2332,3.535,2333,3.535,2334,3.106,2335,3.535,2336,3.535,2337,3.535,2338,3.535,2339,3.535,2340,3.106,2341,3.535,2342,3.535,2343,3.535,2344,3.106,2345,3.535,2346,3.535,2347,3.535,2348,6.448,2349,3.535,2350,7.292,2351,6.592,2352,6.592,2353,3.106,2354,3.535,2355,5.117,2356,3.535,2357,6.014,2358,3.535,2359,5.792,2360,3.535,2361,3.535,2362,3.535,2363,3.535,2364,3.535,2365,3.535,2366,3.535,2367,3.535,2368,3.106,2369,3.535,2370,3.535,2371,3.535,2372,3.535,2373,3.535,2374,3.535,2375,3.535,2376,3.535,2377,3.535,2378,3.106,2379,3.535,2380,3.535,2381,3.535,2382,3.535,2383,3.535,2384,3.535,2385,3.106,2386,3.535,2387,3.535,2388,3.535,2389,3.535,2390,3.535,2391,3.535]],["title/additional-documentation/genetics/phage-logic.html",[71,0.43,121,0.317,229,1.054,926,2.292]],["body/additional-documentation/genetics/phage-logic.html",[7,0.333,20,3.119,28,0.578,40,1.17,41,0.01,43,0.645,52,1.072,56,1.009,83,0.736,121,0.782,147,0.009,148,0.009,167,2.516,177,2.138,197,1.816,211,2.361,238,1.277,239,1.176,374,2.221,478,1.209,783,2.08,785,2.436,788,2.6,799,4.395,802,3.119,804,4.624,822,2.221,832,2.221,833,2.033,926,4.177,930,2.69,1054,3.937,1270,4.766,1793,4.177,1816,2.289,2108,2.6,2296,6.426,2297,6.426,2324,5.841,2325,6.91,2392,5.309,2393,6.042,2394,6.042,2395,7.313,2396,6.042,2397,7.313,2398,6.042,2399,6.042,2400,6.042,2401,6.042,2402,6.042,2403,4.465,2404,6.042,2405,6.042,2406,6.042,2407,6.042,2408,6.042]],["title/additional-documentation/genetics/phage-experiment.html",[71,0.43,121,0.317,229,1.054,821,1.585]],["body/additional-documentation/genetics/phage-experiment.html",[7,0.341,28,0.507,40,1.248,41,0.01,43,0.64,52,1.143,83,1.041,121,0.801,147,0.008,148,0.008,172,1.816,173,2.281,174,2.533,177,2.281,211,2.07,238,1.566,314,3.664,345,2.976,363,2.897,420,2.424,421,1.674,443,3.273,478,1.06,591,1.389,592,2.083,718,4.982,741,4.381,788,2.281,802,4.027,803,2.359,805,3.601,820,3.273,821,3.223,822,2.477,832,2.477,850,3.916,930,2.359,951,3.273,1036,6.514,1271,3.116,1318,3.916,1719,4.233,1793,5.125,1794,5.367,1816,2.007,1982,7.079,2108,2.281,2298,6.514,2299,5.923,2300,5.923,2378,4.656,2409,5.299,2410,5.299,2411,5.299,2412,5.299,2413,6.741,2414,6.514,2415,5.299,2416,5.299,2417,5.299,2418,5.299,2419,4.656,2420,5.299,2421,6.741,2422,5.299,2423,5.299,2424,5.299,2425,5.299,2426,5.299,2427,5.299,2428,5.299,2429,6.741,2430,5.299,2431,6.741,2432,5.299,2433,5.299,2434,7.414,2435,5.299,2436,5.299,2437,5.299]],["title/additional-documentation/genetics/plate-experiment.html",[71,0.43,229,1.054,777,1.295,821,1.585]],["body/additional-documentation/genetics/plate-experiment.html",[7,0.318,13,2.043,28,0.719,40,1.24,41,0.01,43,0.616,51,1.151,52,1.136,56,0.807,104,1.321,109,0.645,121,0.794,125,0.684,147,0.007,148,0.007,172,1.575,177,2.096,211,2.285,238,1.866,239,1.462,252,2.64,385,2.64,391,2.64,420,2.535,421,1.061,461,3.744,478,1.66,660,4.215,715,1.151,777,3.357,783,2.299,792,4.215,793,2.891,797,3.127,801,1.903,805,3.086,822,2.45,824,4.043,832,2.45,833,1.968,835,3.811,836,3.92,839,3.612,840,3.811,841,4.322,842,5.191,849,2.785,930,1.903,1039,3.158,1132,2.785,1236,3.158,1259,4.609,1260,4.957,1262,2.785,1263,2.954,1264,2.954,1265,2.785,1268,3.612,1270,2.785,1271,5.026,1272,3.811,1274,3.811,1317,3.755,1467,3.413,1518,3.811,1710,5.139,1719,3.413,1729,3.755,1785,3.158,1791,5.858,1792,3.755,1793,2.954,1794,4.345,1816,1.619,2108,1.839,2301,5.858,2302,5.858,2334,3.755,2348,3.413,2353,3.755,2368,3.755,2392,5.139,2403,3.158,2414,6.597,2419,3.755,2438,3.755,2439,5.848,2440,5.848,2441,5.848,2442,4.273,2443,3.755,2444,4.273,2445,4.273,2446,4.273,2447,3.755,2448,4.273,2449,4.273,2450,4.273,2451,5.139,2452,4.273,2453,4.273,2454,4.273,2455,4.273,2456,4.273,2457,4.273,2458,4.273,2459,4.273,2460,4.273,2461,5.848,2462,5.848,2463,4.273,2464,4.273,2465,4.273,2466,4.273,2467,4.273,2468,5.848,2469,4.273,2470,4.273,2471,4.273,2472,4.273,2473,4.273,2474,4.273,2475,4.273,2476,4.273,2477,4.273,2478,3.755,2479,4.273,2480,4.273,2481,4.273,2482,4.273,2483,4.273,2484,4.273,2485,4.273,2486,4.273,2487,4.273,2488,4.273,2489,4.273,2490,4.273]],["title/additional-documentation/genetics/plexer-experiment.html",[71,0.43,125,0.53,229,1.054,821,1.585]],["body/additional-documentation/genetics/plexer-experiment.html",[7,0.316,28,0.65,40,1.193,41,0.01,43,0.643,52,0.995,109,0.749,121,0.75,125,1.371,147,0.01,148,0.008,172,1.829,177,1.986,211,2.095,238,1.81,239,1.451,420,2.437,461,3.814,732,2.768,777,3.412,783,2.3,797,2.828,805,2.308,822,1.971,832,1.971,833,2.285,835,3.494,836,4.607,837,3.993,839,4.195,840,4.426,841,5.019,842,5.418,846,3.707,847,3.707,849,4.426,850,3.963,851,4.283,852,4.426,860,3.707,930,2.387,951,3.312,1132,3.494,1262,4.426,1263,4.696,1264,4.696,1265,3.494,1268,4.195,1270,3.494,1271,3.993,1272,4.426,1274,4.426,1467,4.283,1518,3.494,1785,3.963,1816,2.031,2037,4.711,2108,2.308,2306,5.968,2307,5.968,2348,5.425,2359,5.968,2403,3.963,2438,4.711,2443,4.711,2447,4.711,2451,4.711,2491,5.362,2492,5.362,2493,5.362,2494,5.362,2495,5.362,2496,5.362,2497,5.362,2498,5.362,2499,5.362,2500,5.362,2501,5.362]],["title/additional-documentation/models.html",[71,0.496,113,0.705,229,1.216]],["body/additional-documentation/models.html",[41,0.009,113,1.29,147,0.009,148,0.009,370,2.915,1816,2.652]],["title/additional-documentation/models/course-model.html",[16,0.546,71,0.43,113,0.611,229,1.054]],["body/additional-documentation/models/course-model.html",[7,0.363,16,1.409,28,0.629,41,0.01,56,1.061,72,3.873,113,1.416,147,0.009,148,0.009,320,5.771,477,4.381,478,1.314,715,1.769,805,2.827,832,2.414,1116,5.771,1227,3.532,1816,2.488,2108,2.827,2502,4.541,2503,5.771,2504,6.568]],["title/additional-documentation/models/fridge-model.html",[71,0.43,113,0.611,229,1.054,719,1.024]],["body/additional-documentation/models/fridge-model.html",[7,0.238,28,0.538,41,0.01,50,2.502,54,0.729,56,0.965,58,2.423,72,2.591,83,0.852,109,0.921,113,1.289,121,0.729,147,0.008,148,0.008,156,2.129,170,2.129,172,1.884,173,3.597,174,4.232,238,1.478,239,1.094,242,4.277,374,2.065,420,1.838,422,2.266,478,1.125,591,1.473,592,1.737,593,2.789,719,2.583,720,2.789,780,2.419,783,1.99,801,2.502,805,3.011,811,2.591,817,3.722,820,3.471,821,2.687,822,3.072,832,2.799,889,5.266,892,5.266,1020,4.153,1136,2.687,1227,3.022,1816,2.129,1955,4.489,2108,2.419,2183,6.146,2315,4.489,2318,4.489,2326,4.489,2327,4.489,2340,4.938,2344,4.938,2385,4.938,2502,3.885,2505,5.62,2506,5.62,2507,5.62,2508,5.62,2509,5.62]],["title/additional-documentation/models/phage-model.html",[71,0.43,113,0.611,121,0.317,229,1.054]],["body/additional-documentation/models/phage-model.html",[7,0.269,28,0.68,41,0.01,43,0.397,54,0.75,56,0.877,58,1.676,72,2.231,83,1.033,104,1.308,109,0.783,113,1.171,121,0.836,147,0.007,148,0.007,154,2.402,167,2.647,171,0.867,172,1.303,238,1.654,239,1.468,249,2.563,260,3.055,366,2.321,420,2.56,422,1.951,478,1.272,579,3.569,583,4.252,591,1.666,592,1.964,713,3.153,719,1.964,741,3.986,777,1.891,780,2.083,781,3.986,785,2.862,786,2.717,787,2.498,788,3.37,790,4.174,791,3.891,793,3.157,795,4.174,796,2.717,797,2.647,799,4.211,801,2.83,803,2.83,805,3.055,815,4.174,821,3.039,822,2.609,832,1.778,833,2.139,888,3.576,891,2.717,892,4.908,951,3.926,1053,5.077,1054,4.626,1059,3.737,1136,3.842,1205,5.585,1227,2.602,1229,3.865,1236,3.576,1353,4.252,1441,4.252,1560,4.252,1755,2.989,1816,1.833,1846,5.585,1849,5.585,2026,3.737,2108,2.083,2122,5.077,2177,4.252,2403,3.576,2502,3.345,2510,7.099,2511,4.839,2512,4.839,2513,4.839,2514,4.839,2515,4.839,2516,4.839,2517,4.839,2518,4.839,2519,4.839,2520,4.839,2521,4.839,2522,8.037,2523,4.839,2524,4.839,2525,4.839,2526,4.839,2527,6.357,2528,4.252,2529,4.839]],["title/additional-documentation/models/scenario-model.html",[71,0.43,109,0.365,113,0.611,229,1.054]],["body/additional-documentation/models/scenario-model.html",[7,0.321,15,4.309,28,0.47,41,0.01,43,0.526,54,0.684,56,1.134,59,0.487,71,0.636,109,0.956,113,1.182,121,0.814,147,0.008,148,0.008,168,1.699,238,1.761,239,1.249,247,3.183,260,2.111,263,3.196,374,2.785,406,1.916,409,3.625,420,2.756,421,1.218,422,2.586,474,3.029,559,2.884,591,1.681,719,2.208,754,3.688,786,2.754,788,3.472,792,2.884,799,3.449,804,2.884,805,3.075,811,2.957,821,3.066,822,1.802,832,1.802,833,2.646,895,4.681,928,4.309,936,5.281,937,3.917,939,3.196,942,5.281,943,3.917,1054,4.179,1227,2.637,1236,3.625,1269,3.196,1347,5.707,1348,3.917,1349,3.625,1352,4.309,1361,4.309,1434,3.625,1436,6.659,1518,3.196,1677,3.196,1694,3.917,1794,3.196,1816,1.858,1970,3.917,2108,2.111,2122,5.122,2224,4.309,2225,4.309,2315,5.707,2316,5.635,2318,5.707,2319,6.278,2320,4.309,2322,6.278,2323,4.309,2324,3.917,2326,5.707,2327,6.053,2328,6.278,2330,6.278,2502,3.391,2503,4.309,2528,4.309,2530,7.145,2531,7.145,2532,4.904,2533,4.904,2534,4.904,2535,4.904,2536,4.904,2537,6.413,2538,6.413,2539,4.904,2540,6.413,2541,6.413,2542,4.904]],["title/additional-documentation/models/user-model.html",[54,0.317,71,0.43,113,0.611,229,1.054]],["body/additional-documentation/models/user-model.html",[7,0.303,16,1.297,20,3.319,28,0.471,40,1.029,41,0.01,42,0.971,43,0.528,48,1.924,49,1.61,50,3.506,52,0.942,54,0.808,56,1.114,109,0.543,113,1.185,127,1.185,147,0.009,148,0.008,155,3.389,156,2.436,173,2.767,174,2.354,177,1.88,211,3.26,235,3.554,236,3.554,237,2.981,238,1.04,239,0.959,241,3.161,242,4.02,246,3.191,247,2.444,326,3.78,330,4.325,345,3.611,367,3.042,373,2.648,377,2.409,379,2.093,391,3.042,400,4.95,401,3.639,406,1.924,408,2.895,421,1.597,461,3.611,474,4.688,478,0.985,498,3.209,503,2.648,546,2.051,715,1.326,720,2.444,783,1.401,785,1.986,794,3.209,832,2.363,833,1.657,913,4.327,1020,3.639,1136,2.354,1227,3.458,1291,3.209,1304,3.639,1310,4.327,1316,4.327,1755,3.042,1816,1.865,2039,5.136,2108,2.119,2159,5.248,2478,4.327,2502,3.405,2543,6.43,2544,7.16,2545,7.16,2546,7.16,2547,7.59,2548,4.924,2549,7.59,2550,4.924,2551,6.43,2552,4.924,2553,4.924,2554,4.924,2555,4.924,2556,4.924,2557,4.924,2558,4.924,2559,4.924,2560,4.924,2561,4.924,2562,4.924,2563,7.59,2564,4.924]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["0",{"_index":260,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Student.html":{},"components/StudentPhageComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["0.0.1",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["0.0.3",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["0.1.8",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["0.19.39",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["0.8.18",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1802,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":591,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["1.0.0",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["1.0.8",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["1.12.9",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["1.14.1",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1818,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1204,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10/11",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1099,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["106",{"_index":2519,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["11",{"_index":1238,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"overview.html":{}}}],["11/15",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":2525,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["13/14",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["140",{"_index":1176,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["145",{"_index":1175,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["15/18",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["15/19",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":2523,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["1500",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1760,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["163",{"_index":1219,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["178",{"_index":2517,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["190",{"_index":1177,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["2",{"_index":592,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["2.0",{"_index":1978,"title":{},"body":{"license.html":{}}}],["2.1.1",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["2.3.6",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1796,"title":{},"body":{"changelog.html":{}}}],["20/21",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["2018",{"_index":1758,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["208",{"_index":1221,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["213",{"_index":2520,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["23",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["25/26",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["260",{"_index":1178,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["27/27",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["275",{"_index":2526,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["280",{"_index":2527,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["2d",{"_index":850,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["3",{"_index":593,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/models/fridge-model.html":{}}}],["3.1.0",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1820,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1220,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":2001,"title":{},"body":{"overview.html":{}}}],["350",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37/41",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["39;bth",{"_index":1553,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["39;btn",{"_index":1551,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["3a",{"_index":1479,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["3b",{"_index":1480,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["4",{"_index":594,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{}}}],["4.0.0",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1205,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"additional-documentation/models/phage-model.html":{}}}],["400",{"_index":423,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["401",{"_index":2245,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["403",{"_index":2104,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["404",{"_index":2117,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["422",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["43",{"_index":2515,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["5",{"_index":1235,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1174,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"coverage.html":{}}}],["50,145",{"_index":1173,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["500",{"_index":425,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["6",{"_index":1344,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["6/6",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1819,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":2099,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["7/10",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1824,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1240,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["80",{"_index":1849,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{}}}],["83",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1218,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"coverage.html":{}}}],["9",{"_index":1241,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["9/9",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1846,"title":{},"body":{"coverage.html":{},"additional-documentation/models/phage-model.html":{}}}],["92",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["_admin",{"_index":534,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_after_",{"_index":1011,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["_authenticationservic",{"_index":45,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["_authservic",{"_index":494,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_baseurl",{"_index":346,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["_calldelet",{"_index":1521,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["_calldeletecours",{"_index":540,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_calldeletecoursestud",{"_index":541,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["_checkpassword",{"_index":1312,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_checkphagedelet",{"_index":2312,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphagedeletion(keymut",{"_index":2384,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift",{"_index":2309,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_checkphageframeshift(keymut",{"_index":2371,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_computenumoffspr",{"_index":2440,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computenumoffspring(n1",{"_index":2463,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparamet",{"_index":2439,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_computerecombparameters(f1",{"_index":2455,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_copydelet",{"_index":2300,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_copydeletion(spo",{"_index":2432,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_courseservic",{"_index":496,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{}}}],["_error_",{"_index":881,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["_experimentinput",{"_index":1258,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_generatedelet",{"_index":2311,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generatedeletion(useddeletespot",{"_index":2379,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift",{"_index":2308,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_generateframeshift(shifttyp",{"_index":2363,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_genotyp",{"_index":1267,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["_getnewspot",{"_index":2310,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_getnewspot(lastmad",{"_index":2374,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["_http",{"_index":828,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["_modalservic",{"_index":548,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_profileservic",{"_index":1688,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["_reordercours",{"_index":1430,"title":{},"body":{"components/SignupComponent.html":{}}}],["_reordercourses(cours",{"_index":1432,"title":{},"body":{"components/SignupComponent.html":{}}}],["_rout",{"_index":492,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["_router",{"_index":159,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["_scenarioservic",{"_index":647,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["_shuffleplaquelist",{"_index":2441,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_shuffleplaquelist(inlist",{"_index":2484,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["_studentservic",{"_index":727,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["_success_",{"_index":880,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["_user",{"_index":233,"title":{"interfaces/_User.html":{}},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["_validrecombdel",{"_index":2299,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["_validrecombdel(checkpo",{"_index":2428,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["_width",{"_index":1018,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["a.firstname.tolowercase().localecompare(b.firstname.tolowercas",{"_index":261,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.lastname.tolowercase().localecompare(b.lastname.tolowercas",{"_index":259,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["a.strainnum",{"_index":1504,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["a/t",{"_index":2337,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["abil",{"_index":1798,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["abov",{"_index":194,"title":{},"body":{"components/AdminHomeComponent.html":{}}}],["absolut",{"_index":2511,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["acces",{"_index":1725,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["access",{"_index":156,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"injectables/LoggedInGuard.html":{},"components/NotAuthComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["accessgr",{"_index":242,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["account",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"todo.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["acess",{"_index":1008,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["acid",{"_index":2342,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["activ",{"_index":166,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"changelog.html":{}}}],["activatedrout",{"_index":493,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["activatedroutesnapshot",{"_index":162,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["activemod",{"_index":460,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["actual",{"_index":2478,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["actual_compon",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ad",{"_index":558,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["add",{"_index":555,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["adding/remov",{"_index":589,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor",{"_index":542,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addinstructor(this._admin.id",{"_index":613,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["addit",{"_index":229,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{}}}],["addphagetofridg",{"_index":2061,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["addphagetofridge(req",{"_index":2190,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["address",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["adjust",{"_index":1231,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["admin",{"_index":9,"title":{"additional-documentation/controllers/admin-controller.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["admin'},{'nam",{"_index":75,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["admin.compon",{"_index":220,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.guard.servic",{"_index":224,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.rout",{"_index":219,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.template.html",{"_index":27,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.modul",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/course/course.servic",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"components/SignupComponent.html":{}}}],["admin/instr",{"_index":2176,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["admincompon",{"_index":1,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":150,"title":{"injectables/AdminGuard.html":{}},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"coverage.html":{},"overview.html":{}}}],["adminhomecompon",{"_index":76,"title":{"components/AdminHomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminid",{"_index":1662,"title":{},"body":{"injectables/StudentService.html":{}}}],["administr",{"_index":70,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["adminmodul",{"_index":196,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminrout",{"_index":218,"title":{},"body":{"modules/AdminModule.html":{}}}],["adminstud",{"_index":227,"title":{"interfaces/AdminStudent.html":{}},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["adminus",{"_index":31,"title":{},"body":{"components/AdminComponent.html":{}}}],["agre",{"_index":1986,"title":{},"body":{"license.html":{}}}],["aim",{"_index":1729,"title":{},"body":{"components/UserProfileComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["aka",{"_index":2153,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["al",{"_index":924,"title":{},"body":{"components/HomeComponent.html":{}}}],["aliv",{"_index":1708,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["allow",{"_index":13,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["alltransl",{"_index":2399,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["alphabet",{"_index":245,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["alreadi",{"_index":890,"title":{},"body":{"interfaces/Fridge.html":{},"injectables/ProfileService.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["alway",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":1290,"title":{},"body":{"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["andtoken",{"_index":398,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["angular",{"_index":948,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/anim",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["angular/compil",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":60,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":332,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":175,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"modules/HelpModule.html":{},"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"dependencies.html":{}}}],["anoth",{"_index":458,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"injectables/StudentService.html":{}}}],["anyon",{"_index":1647,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["anyth",{"_index":325,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["apach",{"_index":1976,"title":{},"body":{"license.html":{}}}],["apart",{"_index":2538,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["api/admin",{"_index":1678,"title":{},"body":{"injectables/StudentService.html":{}}}],["api/admin/1/students/67mak",{"_index":2098,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/cours",{"_index":2115,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum",{"_index":2128,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/:scenarioid",{"_index":2152,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructor",{"_index":2142,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/instructors/:studentid",{"_index":2146,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/courses/:coursenum/stud",{"_index":2134,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/admin/:userid/stud",{"_index":2078,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid",{"_index":2089,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["api/admin/:userid/students/:studentid/:scenarioid",{"_index":2174,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["api/auth",{"_index":426,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["api/auth/forget",{"_index":2248,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/reset",{"_index":2254,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signin",{"_index":2259,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signout",{"_index":2265,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/auth/signup",{"_index":2262,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/cours",{"_index":2121,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["api/cricket",{"_index":855,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:scenarioid",{"_index":2228,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["api/cricket/:userid/:scenarioid",{"_index":2171,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/:phageid",{"_index":2195,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/delet",{"_index":2182,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/fridg",{"_index":2191,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/:userid/:scenarioid/new",{"_index":2163,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["api/cricket/pl",{"_index":2212,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/cricket/plex",{"_index":2219,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["api/us",{"_index":1307,"title":{},"body":{"injectables/ProfileService.html":{}}}],["api/users/:userid",{"_index":2237,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["api/users/:userid/upd",{"_index":2243,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["app",{"_index":240,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{}}}],["app'},{'nam",{"_index":80,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["app.compon",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["app.rout",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":78,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1767,"title":{},"body":{"changelog.html":{}}}],["appi",{"_index":1476,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["applic",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/ModelRoomComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"license.html":{},"additional-documentation/models/scenario-model.html":{}}}],["application/json",{"_index":449,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["appmodul",{"_index":268,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":1483,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["approut",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["area",{"_index":1724,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["aren't",{"_index":2422,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["aris",{"_index":653,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["array",{"_index":805,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["ask",{"_index":2403,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["aspect",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{}}}],["assign",{"_index":1676,"title":{},"body":{"injectables/StudentService.html":{}}}],["assum",{"_index":1310,"title":{},"body":{"components/ResetPasswordComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["async",{"_index":1359,"title":{},"body":{"modules/ScenarioModule.html":{},"dependencies.html":{}}}],["attempt",{"_index":395,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["auth",{"_index":183,"title":{},"body":{"injectables/AdminGuard.html":{},"components/NotAuthComponent.html":{}}}],["auth'},{'nam",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["auth.compon",{"_index":223,"title":{},"body":{"modules/AdminModule.html":{}}}],["auth.component.t",{"_index":1115,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth.template.html",{"_index":1117,"title":{},"body":{"components/NotAuthComponent.html":{}}}],["auth/not",{"_index":222,"title":{},"body":{"modules/AdminModule.html":{},"components/NotAuthComponent.html":{},"coverage.html":{}}}],["auth/upd",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["authent",{"_index":326,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"todo.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["authenticate(candidatepassword",{"_index":2548,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["authentication.rout",{"_index":335,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.servic",{"_index":879,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["authentication/authentication.modul",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication/authentication.servic",{"_index":64,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["authentication/log",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationmodul",{"_index":274,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":334,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationservic",{"_index":37,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservice]{@link",{"_index":1424,"title":{},"body":{"components/SignoutComponent.html":{}}}],["authetn",{"_index":1112,"title":{},"body":{"components/NavComponent.html":{},"components/SigninComponent.html":{}}}],["author",{"_index":1118,"title":{},"body":{"components/NotAuthComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["auto",{"_index":2556,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["avail",{"_index":657,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{}}}],["away",{"_index":2388,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["b",{"_index":1263,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["b.strainnum",{"_index":1505,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["back",{"_index":499,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/PageNotFoundComponent.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{}}}],["backend",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/genetics.html":{},"additional-documentation/models.html":{}}}],["backend/databas",{"_index":1047,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["bact",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["bacteria",{"_index":1262,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["bad",{"_index":2149,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bade",{"_index":2193,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bar",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["base",{"_index":167,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{}}}],["basepair",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basi",{"_index":1990,"title":{},"body":{"license.html":{}}}],["basic",{"_index":1116,"title":{},"body":{"components/NotAuthComponent.html":{},"additional-documentation/models/course-model.html":{}}}],["bc",{"_index":1773,"title":{},"body":{"changelog.html":{}}}],["bcrypt",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["be",{"_index":577,"title":{},"body":{"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{}}}],["becom",{"_index":1143,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["befor",{"_index":251,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["beforehand",{"_index":1083,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["begin",{"_index":1353,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["behaviorsubject",{"_index":428,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(nul",{"_index":429,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["belong",{"_index":713,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["below",{"_index":875,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["beta.2",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["beta.3",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["beta.6",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":15,"title":{},"body":{"components/AdminComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["bg",{"_index":1042,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["block",{"_index":1032,"title":{},"body":{"components/ModelRoomComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectcours",{"_index":2131,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectdetail",{"_index":2125,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["bodyobjectinfo",{"_index":2213,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["bodyobjectinform",{"_index":2192,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["bodyobjectnew",{"_index":2096,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["bodyobjectrequest",{"_index":2244,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["bodyobjectupd",{"_index":2186,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["boolean",{"_index":172,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["bootstrap",{"_index":200,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":472,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["both",{"_index":1317,"title":{},"body":{"components/ResetPasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["box",{"_index":1186,"title":{},"body":{"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{}}}],["bp",{"_index":2522,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["breadcrumb",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"injectables/CourseResolver.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"injectables/StudentResolver.html":{},"dependencies.html":{}}}],["breadcrumbsconfig.postprocess",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["brigitt",{"_index":1974,"title":{},"body":{"license.html":{}}}],["brows",{"_index":1999,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["brute",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["bth",{"_index":1581,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["btn",{"_index":1038,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["bug",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["bulk",{"_index":2002,"title":{},"body":{"todo.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["button",{"_index":556,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["button/rol",{"_index":1547,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["c",{"_index":1081,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["c'",{"_index":2535,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["c.coursenum",{"_index":1450,"title":{},"body":{"components/SignupComponent.html":{}}}],["call",{"_index":562,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["callback",{"_index":2549,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["callbackfunctioncallback",{"_index":2551,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["canaccessadmin",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["canactiv",{"_index":1001,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivate(rout",{"_index":1003,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["canactivatechild",{"_index":158,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["canactivatechild(rout",{"_index":161,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["cancel",{"_index":475,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{}}}],["candidatepasswordstringus",{"_index":2550,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["capac",{"_index":836,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbercapac",{"_index":2501,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["capacitynumbermax",{"_index":2449,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["capacitynumbermaximum",{"_index":2495,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["card",{"_index":12,"title":{},"body":{"components/AdminComponent.html":{}}}],["case",{"_index":253,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["caus",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["cell",{"_index":851,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["certain",{"_index":941,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["chanc",{"_index":2316,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["chang",{"_index":1291,"title":{},"body":{"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["changelog",{"_index":1752,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changepassword",{"_index":2543,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["changepassword(oldpassword",{"_index":2552,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["charact",{"_index":1345,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["check",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["checkdelet",{"_index":1522,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["checkphagedelet",{"_index":2295,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkphageframeshift",{"_index":2292,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["checkposnumberposit",{"_index":2430,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["child",{"_index":1000,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["child/sub",{"_index":1010,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["chromosom",{"_index":1036,"title":{},"body":{"components/ModelRoomComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["chrosomom",{"_index":2436,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["chunk",{"_index":2434,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["class",{"_index":67,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["class=\"btn",{"_index":1092,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["class=\"row",{"_index":1097,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{}}}],["clean",{"_index":2169,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["cleaner",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["clear",{"_index":1082,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["cli",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":557,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["click)=\"savedata",{"_index":1096,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["clickbutton",{"_index":1523,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["clickbutton(src",{"_index":1532,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["client",{"_index":1370,"title":{},"body":{"injectables/ScenarioResolver.html":{},"changelog.html":{}}}],["clone",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":2378,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["cluster_adminmodul",{"_index":202,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declar",{"_index":203,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_import",{"_index":204,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_provid",{"_index":205,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":322,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":323,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_coursemodul",{"_index":688,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_declar",{"_index":689,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_coursemodule_import",{"_index":690,"title":{},"body":{"modules/CourseModule.html":{}}}],["cluster_coursemodule_provid",{"_index":691,"title":{},"body":{"modules/CourseModule.html":{},"overview.html":{}}}],["cluster_helpmodul",{"_index":904,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_declar",{"_index":905,"title":{},"body":{"modules/HelpModule.html":{},"overview.html":{}}}],["cluster_helpmodule_import",{"_index":906,"title":{},"body":{"modules/HelpModule.html":{}}}],["cluster_locationmodul",{"_index":982,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":983,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":984,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":985,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_profilemodul",{"_index":1275,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declar",{"_index":1276,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_import",{"_index":1277,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_provid",{"_index":1278,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_scenariomodul",{"_index":1355,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_declar",{"_index":1356,"title":{},"body":{"modules/ScenarioModule.html":{},"overview.html":{}}}],["cluster_scenariomodule_import",{"_index":1357,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["cluster_sharedmodul",{"_index":1375,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1376,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1377,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_studentmodul",{"_index":1604,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_declar",{"_index":1605,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["cluster_studentmodule_import",{"_index":1606,"title":{},"body":{"modules/StudentModule.html":{}}}],["cluster_studentmodule_provid",{"_index":1607,"title":{},"body":{"modules/StudentModule.html":{},"overview.html":{}}}],["code",{"_index":745,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ModelRoomComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["codon",{"_index":2324,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["col",{"_index":1094,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["coli",{"_index":849,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["collegu",{"_index":927,"title":{},"body":{"components/HomeComponent.html":{}}}],["colphag",{"_index":860,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["colphage(list",{"_index":2221,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["colphagearraylist",{"_index":2493,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["column",{"_index":847,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["come",{"_index":901,"title":{},"body":{"components/HelpComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["comment",{"_index":791,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["commonmodul",{"_index":333,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["commun",{"_index":1289,"title":{},"body":{"injectables/ProfileService.html":{}}}],["compar",{"_index":1316,"title":{},"body":{"components/ResetPasswordComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["comparison",{"_index":258,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":1350,"title":{},"body":{"interfaces/Scenario.html":{}}}],["complianc",{"_index":1980,"title":{},"body":{"license.html":{}}}],["compoen",{"_index":1707,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["compon",{"_index":0,"title":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":74,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["compress",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["comput",{"_index":2392,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["computenumoffspr",{"_index":2304,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["computerecombparamet",{"_index":2303,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["concat(x",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["condit",{"_index":1696,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"license.html":{}}}],["config",{"_index":2350,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["configur",{"_index":2377,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["confirm",{"_index":82,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["confirmdeletedialogcompon",{"_index":81,"title":{"components/ConfirmDeleteDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmpassword",{"_index":453,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["connect",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["consist",{"_index":2040,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["consitut",{"_index":2343,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["consol",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["console.log(json.stringify(error",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":255,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(_authenticationservic",{"_index":36,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["constructor(_authservic",{"_index":1107,"title":{},"body":{"components/NavComponent.html":{},"components/SignoutComponent.html":{}}}],["constructor(_courseservic",{"_index":491,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{}}}],["constructor(_http",{"_index":826,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["constructor(_profileservic",{"_index":1733,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["constructor(_rout",{"_index":547,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["constructor(_scenarioservic",{"_index":1367,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["constructor(_studentservic",{"_index":1596,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["constructor(activemod",{"_index":462,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["constructor(breadcrumbsconfig",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(http",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["constructor(priv",{"_index":176,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["constructor(publ",{"_index":473,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["contain",{"_index":1380,"title":{},"body":{"modules/SharedModule.html":{}}}],["content",{"_index":19,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseIndivComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/StudentService.html":{}}}],["content'},{'nam",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["control",{"_index":1754,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}},"body":{"changelog.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["controller.html#deletestudentfridg",{"_index":2269,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["contructor",{"_index":947,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["cooki",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["copi",{"_index":1982,"title":{},"body":{"license.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["copyright",{"_index":1973,"title":{},"body":{"license.html":{}}}],["core",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":2039,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["correctli",{"_index":1324,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["correspond",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["count",{"_index":853,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["courenum",{"_index":571,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["cours",{"_index":16,"title":{"interfaces/Course.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["course.coursenum",{"_index":686,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["course.interfac",{"_index":232,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["course.resolv",{"_index":704,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.rout",{"_index":703,"title":{},"body":{"modules/CourseModule.html":{}}}],["course.servic",{"_index":509,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{}}}],["course.touppercas",{"_index":757,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["coursebynum",{"_index":2056,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["coursebynum(req",{"_index":2156,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecoursecours",{"_index":2112,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["coursecreatecompon",{"_index":85,"title":{"components/CourseCreateComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursedetail",{"_index":487,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["courseeditcompon",{"_index":87,"title":{"components/CourseEditComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseindivcompon",{"_index":89,"title":{"components/CourseIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseinfo",{"_index":535,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.coursenum",{"_index":639,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["courseinfo.descript",{"_index":670,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courseinfo.instructor",{"_index":671,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["courselistcompon",{"_index":91,"title":{"components/CourseListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coursemodul",{"_index":687,"title":{"modules/CourseModule.html":{}},"body":{"modules/CourseModule.html":{},"modules.html":{},"overview.html":{}}}],["coursenum",{"_index":477,"title":{},"body":{"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{}}}],["courseresolv",{"_index":692,"title":{"injectables/CourseResolver.html":{}},"body":{"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"coverage.html":{},"overview.html":{}}}],["courserout",{"_index":702,"title":{},"body":{"modules/CourseModule.html":{}}}],["courses.filter((c",{"_index":1451,"title":{},"body":{"components/SignupComponent.html":{}}}],["courses.filter((c)=>{return",{"_index":1449,"title":{},"body":{"components/SignupComponent.html":{}}}],["coursescenariocompon",{"_index":93,"title":{"components/CourseScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseservic",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverag",{"_index":1815,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpassword",{"_index":1429,"title":{},"body":{"components/SignupComponent.html":{}}}],["crate",{"_index":2357,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["creat",{"_index":420,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["create'},{'nam",{"_index":86,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["create.compon",{"_index":696,"title":{},"body":{"modules/CourseModule.html":{}}}],["create.component.t",{"_index":482,"title":{},"body":{"components/CourseCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:24",{"_index":506,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:25",{"_index":507,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:30",{"_index":505,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:34",{"_index":495,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:47",{"_index":504,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:58",{"_index":497,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.component.ts:75",{"_index":500,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.style.css",{"_index":485,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create.template.html",{"_index":486,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["create/cours",{"_index":481,"title":{},"body":{"components/CourseCreateComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["createcours",{"_index":489,"title":{},"body":{"components/CourseCreateComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(req",{"_index":2124,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["createcourse(this.admin.id",{"_index":518,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["createpl",{"_index":824,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(phage1",{"_index":2442,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["createplate(pl",{"_index":829,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["createplate(req",{"_index":2211,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["createplatephag",{"_index":2301,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["createplexerpl",{"_index":2306,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["createplexerplate(rowphag",{"_index":2491,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["creating/sav",{"_index":2263,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["creation",{"_index":1423,"title":{},"body":{"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{}}}],["credenti",{"_index":396,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["crick",{"_index":922,"title":{},"body":{"components/HomeComponent.html":{}}}],["cricket",{"_index":79,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["cross",{"_index":792,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["crosses/manipul",{"_index":2210,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["crossov",{"_index":2413,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["css",{"_index":1031,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["cummul",{"_index":2408,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["current",{"_index":48,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["curus",{"_index":2280,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["curuseruserlog",{"_index":2081,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["dark",{"_index":1043,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["dat",{"_index":1091,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["data",{"_index":837,"title":{},"body":{"injectables/ExperimentService.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["databas",{"_index":1227,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["date",{"_index":2563,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["db",{"_index":1755,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["deal",{"_index":213,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"injectables/StudentService.html":{}}}],["debug",{"_index":1814,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["decim",{"_index":2317,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["declar",{"_index":199,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlabdilut",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultplexerdilut",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defin",{"_index":38,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["defofdiff",{"_index":2531,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["degofdiff",{"_index":2230,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degofdifficulti",{"_index":2226,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["degre",{"_index":2224,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["del",{"_index":1073,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["deleet",{"_index":816,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["delet",{"_index":83,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["delete(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1682,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletecours",{"_index":543,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestud",{"_index":544,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["deletecoursestudents(req",{"_index":2135,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["deletedis",{"_index":1524,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["deletephag",{"_index":2063,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletephage(req",{"_index":2198,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletes",{"_index":2506,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletespot",{"_index":2507,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["deletestud",{"_index":1652,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudent(adminid",{"_index":1659,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudentfridg",{"_index":2060,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge(req",{"_index":2188,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["deletestudentfridge]{@link",{"_index":2268,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["deleteus",{"_index":2044,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["deleteuser(req",{"_index":2093,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["deletion.length",{"_index":1182,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i",{"_index":1183,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletion[i+1",{"_index":1184,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletionguesslength",{"_index":1200,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"miscellaneous/variables.html":{}}}],["deletionlist",{"_index":1171,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["deletions.pip",{"_index":1619,"title":{},"body":{"modules/StudentModule.html":{}}}],["deletions.pipe.t",{"_index":1167,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"coverage.html":{}}}],["deletions.pipe.ts:16",{"_index":1180,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["dellist",{"_index":2429,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["dellistarraylist",{"_index":2431,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["depend",{"_index":197,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["describ",{"_index":2528,"title":{},"body":{"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["descript",{"_index":7,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["desctruct",{"_index":1407,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["destori",{"_index":501,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["destroy",{"_index":743,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["destruct",{"_index":679,"title":{},"body":{"components/CourseListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["detail",{"_index":422,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["determin",{"_index":20,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/user-model.html":{}}}],["dialog",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["dialog'},{'nam",{"_index":84,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialog.compon",{"_index":585,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["dialog.component.t",{"_index":455,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:18",{"_index":464,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1187,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":469,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1188,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["dialog.template.html",{"_index":459,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["didn't",{"_index":1326,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["differ",{"_index":1694,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["difficulti",{"_index":2225,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dilut",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dimens",{"_index":2426,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["direct",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["directli",{"_index":1765,"title":{},"body":{"changelog.html":{}}}],["disabl",{"_index":1322,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["discov",{"_index":928,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dismiss",{"_index":630,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["display",{"_index":465,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["distanc",{"_index":2537,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["distribut",{"_index":1989,"title":{},"body":{"license.html":{}}}],["dnd",{"_index":1384,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["dndmodul",{"_index":1382,"title":{},"body":{"modules/SharedModule.html":{}}}],["dndmodule.forroot",{"_index":1398,"title":{},"body":{"modules/SharedModule.html":{}}}],["document",{"_index":1816,"title":{},"body":{"coverage.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["doesn't",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"components/ForgetPasswordComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["don't",{"_index":2257,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["donald",{"_index":1141,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["dopheno",{"_index":2296,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["dopheno(mutantlist",{"_index":2394,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["doubl",{"_index":2461,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["drag",{"_index":812,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["drop",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["duck",{"_index":1142,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["dure",{"_index":2122,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["dynam",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":848,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["each",{"_index":833,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["easier",{"_index":579,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["edit",{"_index":531,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/UserProfileComponent.html":{}}}],["edit'},{'nam",{"_index":88,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["edit.compon",{"_index":698,"title":{},"body":{"modules/CourseModule.html":{}}}],["edit.component.t",{"_index":530,"title":{},"body":{"components/CourseEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:105",{"_index":574,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:122",{"_index":554,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:145",{"_index":560,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:161",{"_index":550,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:178",{"_index":564,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:195",{"_index":553,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:209",{"_index":565,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:33",{"_index":576,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:37",{"_index":581,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:41",{"_index":582,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:45",{"_index":575,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:46",{"_index":580,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:50",{"_index":578,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:54",{"_index":549,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:71",{"_index":569,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.component.ts:97",{"_index":572,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.style.css",{"_index":532,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit.template.html",{"_index":533,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["edit/cours",{"_index":529,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["editcours",{"_index":2052,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(req",{"_index":2130,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["editcourse(this._admin.id",{"_index":610,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["editprofil",{"_index":1292,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editprofile(userid",{"_index":1295,"title":{},"body":{"injectables/ProfileService.html":{}}}],["editus",{"_index":2072,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["edituser(req",{"_index":2239,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["ej",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":807,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["elm.userid",{"_index":617,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["email",{"_index":241,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["email/name/rol",{"_index":1519,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["empti",{"_index":714,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["encompass",{"_index":1622,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["end",{"_index":951,"title":{},"body":{"components/LandingRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["enough",{"_index":2387,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["enrol",{"_index":659,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["ensur",{"_index":252,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"interfaces/Student.html":{},"components/UpdatePasswordComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["enter",{"_index":498,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["entir",{"_index":2003,"title":{},"body":{"todo.html":{}}}],["entityif",{"_index":2252,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["entranc",{"_index":8,"title":{},"body":{"components/AdminComponent.html":{}}}],["entrycompon",{"_index":695,"title":{},"body":{"modules/CourseModule.html":{},"modules/LocationModule.html":{},"modules/StudentModule.html":{}}}],["enum",{"_index":2564,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["epo",{"_index":2433,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["eposnumberend",{"_index":2437,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["equal",{"_index":2539,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["err",{"_index":525,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["err2",{"_index":607,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["error",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["error.error.messag",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.error.text",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.messag",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.t",{"_index":1878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errordatabas",{"_index":2155,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["errorerror",{"_index":2168,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["errorif",{"_index":2249,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["errormessag",{"_index":32,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["erroron",{"_index":2085,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["errror",{"_index":424,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["eslint",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["et",{"_index":923,"title":{},"body":{"components/HomeComponent.html":{}}}],["even",{"_index":1441,"title":{},"body":{"components/SignupComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["everyth",{"_index":1698,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["exampl",{"_index":1136,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["except",{"_index":1979,"title":{},"body":{"license.html":{}}}],["exeri",{"_index":2438,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["exisit",{"_index":1298,"title":{},"body":{"injectables/ProfileService.html":{}}}],["exist",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["exit",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["expect",{"_index":1710,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["experi",{"_index":821,"title":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["experiment.servic",{"_index":989,"title":{},"body":{"modules/LocationModule.html":{}}}],["experimentphag",{"_index":775,"title":{"interfaces/ExperimentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["experimentservic",{"_index":818,"title":{"injectables/ExperimentService.html":{}},"body":{"injectables/ExperimentService.html":{},"modules/LocationModule.html":{},"coverage.html":{},"overview.html":{}}}],["expir",{"_index":401,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"overview.html":{}}}],["express",{"_index":1916,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extend",{"_index":231,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Student.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["f1numberfract",{"_index":2457,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2",{"_index":2456,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["f2numberfract",{"_index":2458,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["facebook",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":174,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["far",{"_index":2386,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["featur",{"_index":10,"title":{},"body":{"components/AdminComponent.html":{}}}],["fetch",{"_index":966,"title":{},"body":{"components/ListComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["field",{"_index":1692,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"license.html":{}}}],["filecod",{"_index":2530,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["fill",{"_index":1693,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["find",{"_index":712,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["findfridgebyscenown",{"_index":2065,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["findfridgebyscenowner(req",{"_index":2203,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["finish",{"_index":2137,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["first",{"_index":247,"title":{},"body":{"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["firstnam",{"_index":235,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["fix",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["fname",{"_index":1153,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["follow",{"_index":2233,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["for(let",{"_index":1071,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["forbiddencurr",{"_index":2113,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["forbiddenif",{"_index":2105,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["forc",{"_index":1792,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["forget",{"_index":96,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["forgetpassword",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["forgetpassword(bodi",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{}}}],["forgetpasswordcompon",{"_index":95,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotten",{"_index":329,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["form",{"_index":872,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["format",{"_index":732,"title":{},"body":{"components/CourseScenarioComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["formataccess",{"_index":724,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(isgr",{"_index":729,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formataccess(student.statu",{"_index":774,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["formatphagetyp",{"_index":1624,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["formsmodul",{"_index":331,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":1123,"title":{},"body":{"components/PageNotFoundComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["found')if",{"_index":2202,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["found'},{'nam",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["found.compon",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["found.component.t",{"_index":1120,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1125,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.template.html",{"_index":1124,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/pag",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["foundif",{"_index":2250,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundphag",{"_index":2215,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["foundther",{"_index":2123,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["foundun",{"_index":2240,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["foundus",{"_index":2118,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["frame",{"_index":2325,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["framelist",{"_index":2407,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frameshift",{"_index":799,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["frameshift(",{"_index":2372,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["frameshift/phenotyp",{"_index":2393,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["framesstoplist",{"_index":2509,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["framestoplist",{"_index":2345,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["framshift",{"_index":2405,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["frequenc",{"_index":2473,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["fridg",{"_index":719,"title":{"interfaces/Fridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["fridge')if",{"_index":2205,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridge'},{'nam",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["fridge.accessgr",{"_index":1516,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.compon",{"_index":1614,"title":{},"body":{"modules/StudentModule.html":{}}}],["fridge.component.t",{"_index":1463,"title":{},"body":{"components/StudentFridgeComponent.html":{},"coverage.html":{}}}],["fridge.component.ts:118",{"_index":1473,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:133",{"_index":1482,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:154",{"_index":1477,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:30",{"_index":1484,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:34",{"_index":1485,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:38",{"_index":1487,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:42",{"_index":1488,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:51",{"_index":1490,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:55",{"_index":1489,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:59",{"_index":1471,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.component.ts:76",{"_index":1478,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.own",{"_index":1513,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.label",{"_index":1515,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.scenario.scencod",{"_index":1514,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.strain",{"_index":1497,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge.template.html",{"_index":1465,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["fridge/fridge.compon",{"_index":990,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/phag",{"_index":991,"title":{},"body":{"modules/LocationModule.html":{}}}],["fridge/stud",{"_index":1462,"title":{},"body":{"components/StudentFridgeComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["fridgecompon",{"_index":98,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fridgefridgefridg",{"_index":2209,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgefridgelog",{"_index":2184,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["fridgephag",{"_index":784,"title":{"interfaces/FridgePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["frist",{"_index":1130,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["front",{"_index":1785,"title":{},"body":{"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["full",{"_index":839,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["function",{"_index":211,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["function(a,b",{"_index":257,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["function(error",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["futur",{"_index":944,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["g",{"_index":2534,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["g/c",{"_index":2335,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["g/c'",{"_index":2321,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gcprob",{"_index":2319,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["gcprobnumbergc",{"_index":2333,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["gene",{"_index":1054,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["genear",{"_index":1019,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["genelength",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gener",{"_index":832,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["generatedelet",{"_index":2294,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generateframeshift",{"_index":2291,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["generatepl",{"_index":2302,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["generateplexerpl",{"_index":2307,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["generateplexerplate(lawntypestr",{"_index":2497,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["generatescenario",{"_index":2285,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["generatescenario(scenario",{"_index":2313,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["genet",{"_index":930,"title":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolist",{"_index":2451,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genolistarraylist",{"_index":2499,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotyp",{"_index":1271,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["genotypephag",{"_index":798,"title":{"interfaces/GenotypePhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["geonotyp",{"_index":2480,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["get",{"_index":681,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"components/CourseListComponent.html":{},"components/NavComponent.html":{},"changelog.html":{}}}],["get(`${this._baseurl}/${adminid}/stud",{"_index":1679,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1680,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1684,"title":{},"body":{"injectables/StudentService.html":{}}}],["getblockclass",{"_index":1023,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getblockclass(strain",{"_index":1028,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["getbuttonclass",{"_index":1469,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('al",{"_index":1474,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass('grad",{"_index":1475,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getbuttonclass(src",{"_index":1472,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["getcours",{"_index":2051,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getcourse(req",{"_index":2127,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getfram",{"_index":2297,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["getframes(whosay",{"_index":2400,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["getfridg",{"_index":1653,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridge(adminid",{"_index":1663,"title":{},"body":{"injectables/StudentService.html":{}}}],["getfridge(req",{"_index":2170,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo",{"_index":2068,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getfridgeinfo(fridg",{"_index":2208,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getnewspot",{"_index":2293,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["getpossibleinstructor",{"_index":2053,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getpossibleinstructors(req",{"_index":2141,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenario",{"_index":953,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenario(scenid",{"_index":957,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["getscenariostatu",{"_index":2055,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getscenariostatus(req",{"_index":2151,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getscenstatu",{"_index":1525,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scenario.scencod",{"_index":1592,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getscenstatus(scencod",{"_index":1536,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstud",{"_index":1654,"title":{},"body":{"injectables/StudentService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["getstudent(adminid",{"_index":1665,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentcours",{"_index":1526,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["getstudentfridg",{"_index":2058,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudentfridge(req",{"_index":2173,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["getstudents(req",{"_index":2133,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["getus",{"_index":347,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuser(req",{"_index":2088,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo",{"_index":2076,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["getuserinfo(us",{"_index":2281,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["give",{"_index":1321,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["given",{"_index":940,"title":{},"body":{"components/LandingRoomComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["global",{"_index":1199,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["global]{@link",{"_index":1210,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["go",{"_index":189,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseCreateComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["goal",{"_index":937,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["goe",{"_index":1121,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["googl",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["gotofridg",{"_index":725,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["gotofridge(studentid",{"_index":734,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["govern",{"_index":1996,"title":{},"body":{"license.html":{}}}],["grace",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["grade",{"_index":796,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["grant",{"_index":720,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["grantaccess",{"_index":726,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(req",{"_index":2267,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["grantaccess(scencod",{"_index":1541,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["grantaccess(studentindex",{"_index":738,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["grantscenaccess",{"_index":1655,"title":{},"body":{"injectables/StudentService.html":{}}}],["grantscenaccess(adminid",{"_index":1667,"title":{},"body":{"injectables/StudentService.html":{}}}],["greater",{"_index":1560,"title":{},"body":{"components/StudentIndivComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["group",{"_index":1192,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["gt",{"_index":1550,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{}}}],["guard",{"_index":152,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["guess",{"_index":817,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["guesses.pip",{"_index":1617,"title":{},"body":{"modules/StudentModule.html":{}}}],["guesses.pipe.t",{"_index":1197,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"coverage.html":{}}}],["guesses.pipe.ts:22",{"_index":1208,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[i",{"_index":1212,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesses[strain.strainnum",{"_index":1501,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["guesslist",{"_index":1202,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["guesss",{"_index":1198,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["handl",{"_index":1132,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["handleplex",{"_index":2069,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["handleplexer(req",{"_index":2218,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["happen",{"_index":1328,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["hasauthor",{"_index":2046,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["hasauthorization(req",{"_index":2100,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["hasfridg",{"_index":1466,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["hasfridgeauthor",{"_index":2066,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasfridgeauthorization(req",{"_index":2206,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["hashlocationstrategi",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["hasphageauthor",{"_index":2067,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["hasphageauthorization(req",{"_index":2207,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["have",{"_index":212,"title":{},"body":{"modules/AdminModule.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["header",{"_index":448,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["helmet",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":897,"title":{},"body":{"components/HelpComponent.html":{},"components/NavComponent.html":{},"todo.html":{}}}],["help'},{'nam",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["help.compon",{"_index":910,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.rout",{"_index":909,"title":{},"body":{"modules/HelpModule.html":{}}}],["help.style.css",{"_index":898,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.template.html",{"_index":899,"title":{},"body":{"components/HelpComponent.html":{}}}],["help/help.modul",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["helpcompon",{"_index":100,"title":{"components/HelpComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["helper",{"_index":551,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["helpinform",{"_index":903,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpmodul",{"_index":275,"title":{"modules/HelpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelpModule.html":{},"modules.html":{},"overview.html":{}}}],["helprout",{"_index":908,"title":{},"body":{"modules/HelpModule.html":{}}}],["hidden",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["hofmeist",{"_index":1975,"title":{},"body":{"license.html":{}}}],["home",{"_index":191,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["home'},{'nam",{"_index":77,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.compon",{"_index":221,"title":{},"body":{"modules/AdminModule.html":{}}}],["home.component.t",{"_index":186,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["home.style.css",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.template.html",{"_index":192,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/HomeComponent.html":{}}}],["home/admin",{"_index":185,"title":{},"body":{"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["home/home.compon",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["homecompon",{"_index":102,"title":{"components/HomeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hopefulli",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":977,"title":{},"body":{"components/LocationComponent.html":{}}}],["hour",{"_index":1804,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":1540,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["html5",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["http",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["http://www.apache.org/licenses/licens",{"_index":1983,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/StudentService.html":{}}}],["httpclientmodul",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":438,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["https://github.com/iconic/open",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["human",{"_index":1348,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/models/scenario-model.html":{}}}],["i.",{"_index":327,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"injectables/ExperimentService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["icon",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["iconic.git",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":715,"title":{},"body":{"injectables/CourseResolver.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/user-model.html":{}}}],["id'",{"_index":2452,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["id')if",{"_index":2161,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["id1",{"_index":1234,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id2",{"_index":1237,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id3",{"_index":1239,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["id=\"model",{"_index":1100,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["id=\"viewpar",{"_index":1191,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["ident",{"_index":2468,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identicalbooleanar",{"_index":2475,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["identif",{"_index":2504,"title":{},"body":{"additional-documentation/models/course-model.html":{}}}],["identifi",{"_index":939,"title":{},"body":{"components/LandingRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["iderr",{"_index":1713,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["idstringcours",{"_index":2157,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["idstringmongodb",{"_index":2200,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["idstringscenario",{"_index":2234,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["idstringuser'",{"_index":2274,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["if(c",{"_index":1343,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(error",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(error.error",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isloggedin",{"_index":1013,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["if(n",{"_index":1721,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(numpar",{"_index":1245,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(out",{"_index":1157,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageGuessesPipe.html":{}}}],["if(p",{"_index":1342,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["if(parents.length",{"_index":1246,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(r",{"_index":767,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["if(result",{"_index":628,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["if(revers",{"_index":1158,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["if(rol",{"_index":180,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["if(sorted.length",{"_index":1254,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["if(strain.phagetyp",{"_index":1511,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this._admin",{"_index":1584,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.coursedetails.coursenum",{"_index":514,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["if(this.credentials.token",{"_index":1335,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.errormessag",{"_index":1338,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(this.getus",{"_index":445,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["if(this.hasfridg",{"_index":1498,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(this.keys.length",{"_index":1077,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["if(this.passwordmessag",{"_index":1716,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["if(this.phag",{"_index":1634,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.phage.phagetyp",{"_index":1637,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["if(this.selectedadd",{"_index":612,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["if(this.ssubscript",{"_index":973,"title":{},"body":{"components/ListComponent.html":{}}}],["if(this.student.rol",{"_index":1586,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.student.userid",{"_index":1585,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["if(this.subscript",{"_index":527,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["if(this.user.cours",{"_index":1456,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.user.password",{"_index":1457,"title":{},"body":{"components/SignupComponent.html":{}}}],["if(this.viewstrain",{"_index":1508,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["if(x",{"_index":1211,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{}}}],["if(x.length",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["ignor",{"_index":1261,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["implement",{"_index":22,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["impli",{"_index":1994,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["in.guard.servic",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["in.guard.service.t",{"_index":999,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["in.guard.service.ts:28",{"_index":1004,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:49",{"_index":1009,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in.guard.service.ts:9",{"_index":1002,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["in/out",{"_index":328,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{}}}],["inact",{"_index":1080,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["includ",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["incorrect",{"_index":1305,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["increment",{"_index":2557,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["index",{"_index":28,"title":{"index.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["indic",{"_index":801,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["indiv",{"_index":644,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv'},{'nam",{"_index":90,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["indiv.compon",{"_index":697,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["indiv.component.t",{"_index":643,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{}}}],["indiv.component.ts:114",{"_index":1537,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:132",{"_index":1539,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:148",{"_index":1542,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:168",{"_index":1559,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:195",{"_index":1546,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:211",{"_index":1533,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:227",{"_index":1535,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:246",{"_index":1531,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:264",{"_index":1530,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:279",{"_index":1543,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:30",{"_index":658,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:34",{"_index":652,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:37",{"_index":1568,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:38",{"_index":656,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:41",{"_index":1567,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:42",{"_index":654,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:43",{"_index":655,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:46",{"_index":1562,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:48",{"_index":648,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:50",{"_index":1564,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:54",{"_index":1561,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:58",{"_index":1566,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:62",{"_index":1563,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:66",{"_index":650,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.component.ts:67",{"_index":1529,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:85",{"_index":1544,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["indiv.component.ts:93",{"_index":649,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.style.css",{"_index":645,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["indiv.template.html",{"_index":646,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["indiv/cours",{"_index":642,"title":{},"body":{"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["indiv/stud",{"_index":1517,"title":{},"body":{"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["individu",{"_index":660,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/SharedModule.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["inform",{"_index":51,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Course.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["init",{"_index":570,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["initi",{"_index":47,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["inject",{"_index":149,"title":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["inlist.length+1",{"_index":2427,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraymut",{"_index":2424,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["inlistarraystrain",{"_index":2488,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["input",{"_index":461,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"injectables/ExperimentService.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["input/par",{"_index":2490,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["insensit",{"_index":254,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["insert",{"_index":2366,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["instr",{"_index":154,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["instr'",{"_index":2087,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["instrctor",{"_index":2144,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrcutor",{"_index":2143,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["instrs.sort(sortstud",{"_index":606,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["instructor",{"_index":72,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Course.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"components/StudentIndivComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["instuctor",{"_index":2147,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["integ",{"_index":2533,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["interest",{"_index":1491,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["interfac",{"_index":171,"title":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/models/phage-model.html":{}}}],["interfaces/course.interfac",{"_index":586,"title":{},"body":{"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/phage.interfac",{"_index":1189,"title":{},"body":{"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["interfaces/scenario.interfac",{"_index":970,"title":{},"body":{"components/ListComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentIndivComponent.html":{}}}],["interfaces/student.interfac",{"_index":587,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["interfaces/user.interfac",{"_index":65,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["intermutedist",{"_index":2327,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["intern",{"_index":2084,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["intial",{"_index":919,"title":{},"body":{"components/HomeComponent.html":{}}}],["intramutedist",{"_index":2326,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["invalid",{"_index":399,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["isadmin",{"_index":2047,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["isadmin(req",{"_index":2107,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["isdestroy",{"_index":536,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["isdis",{"_index":1311,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isgrant",{"_index":733,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["isinstructor",{"_index":2048,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["isinstructor(req",{"_index":2109,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["isloggedin",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LoggedInGuard.html":{}}}],["isn't",{"_index":1677,"title":{},"body":{"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["issu",{"_index":1761,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1436,"title":{},"body":{"components/SignupComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["itself",{"_index":2139,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["jqueri",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["jsdoc2md",{"_index":2108,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["json",{"_index":2082,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["json.parse(dat",{"_index":1089,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.parse(this.fridge.guess",{"_index":1499,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["json.stringify(credenti",{"_index":447,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(this.guess",{"_index":1084,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["json.stringify(us",{"_index":451,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["k",{"_index":1264,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["karma",{"_index":1971,"title":{},"body":{"index.html":{}}}],["keep",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UpdatePasswordComponent.html":{}}}],["key",{"_index":1020,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["keymutesarraydelet",{"_index":2389,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["keymutesarraymut",{"_index":2373,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["kind",{"_index":1993,"title":{},"body":{"license.html":{}}}],["know",{"_index":2177,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["known",{"_index":789,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["lab",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["label",{"_index":895,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["labroomcompon",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["land",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["landingroomcompon",{"_index":106,"title":{"components/LandingRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["languag",{"_index":1995,"title":{},"body":{"license.html":{}}}],["larg",{"_index":841,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["largeplaqu",{"_index":1274,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["last",{"_index":246,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["lastlogin",{"_index":2544,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["lastmadenumberth",{"_index":2375,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["lastnam",{"_index":236,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["later",{"_index":2331,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["law",{"_index":1985,"title":{},"body":{"license.html":{}}}],["lawn",{"_index":834,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["lawntyp",{"_index":1265,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestring",{"_index":2447,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["lawntypestrstring",{"_index":2498,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["lead",{"_index":1308,"title":{},"body":{"injectables/ProfileService.html":{}}}],["leak",{"_index":568,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["learn",{"_index":943,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["left",{"_index":1768,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":198,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["length",{"_index":1053,"title":{},"body":{"components/ModelRoomComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/phage-model.html":{}}}],["licens",{"_index":1972,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1790,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["link",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/CourseIndivComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["list",{"_index":478,"title":{},"body":{"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"modules/SharedModule.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["list'},{'nam",{"_index":92,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["list(req",{"_index":2222,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["list.compon",{"_index":699,"title":{},"body":{"modules/CourseModule.html":{},"modules/StudentModule.html":{}}}],["list.component.t",{"_index":675,"title":{},"body":{"components/CourseListComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{}}}],["list.component.ts:22",{"_index":682,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:23",{"_index":1601,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:26",{"_index":677,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:27",{"_index":1600,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:31",{"_index":1597,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:36",{"_index":680,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:46",{"_index":1599,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:47",{"_index":678,"title":{},"body":{"components/CourseListComponent.html":{}}}],["list.component.ts:60",{"_index":1598,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.template.html",{"_index":676,"title":{},"body":{"components/CourseListComponent.html":{},"components/ListComponent.html":{},"components/StudentListComponent.html":{}}}],["list/cours",{"_index":674,"title":{},"body":{"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"coverage.html":{}}}],["list/list.compon",{"_index":1364,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["list/stud",{"_index":1593,"title":{},"body":{"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"coverage.html":{}}}],["listcompon",{"_index":108,"title":{"components/ListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listcours",{"_index":2049,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum",{"_index":2050,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["listcoursenum(req",{"_index":2120,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["liststud",{"_index":1656,"title":{},"body":{"injectables/StudentService.html":{}}}],["liststudents(adminid",{"_index":1671,"title":{},"body":{"injectables/StudentService.html":{}}}],["listus",{"_index":2043,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["listusers(req",{"_index":2077,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["liter",{"_index":1460,"title":{},"body":{"interfaces/StudentFridge.html":{}}}],["lname",{"_index":1155,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["load",{"_index":1360,"title":{},"body":{"modules/ScenarioModule.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["loadash",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["locat",{"_index":780,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LocationComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ScenarioComponent.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["location'},{'nam",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["location.compon",{"_index":992,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.rout",{"_index":988,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.style.css",{"_index":979,"title":{},"body":{"components/LocationComponent.html":{}}}],["location.template.html",{"_index":980,"title":{},"body":{"components/LocationComponent.html":{}}}],["locationcompon",{"_index":110,"title":{"components/LocationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locationmodul",{"_index":981,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules/ScenarioModule.html":{},"modules.html":{},"overview.html":{}}}],["locationrout",{"_index":987,"title":{},"body":{"modules/LocationModule.html":{}}}],["locationstrategi",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":49,"title":{},"body":{"components/AdminComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["loggedinguard",{"_index":279,"title":{"injectables/LoggedInGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggedInGuard.html":{},"coverage.html":{},"overview.html":{}}}],["logic",{"_index":926,"title":{"additional-documentation/genetics/phage-logic.html":{}},"body":{"components/HomeComponent.html":{},"changelog.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-logic.html":{}}}],["login",{"_index":1413,"title":{},"body":{"components/SigninComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["long",{"_index":403,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{}}}],["longer",{"_index":794,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/models/user-model.html":{}}}],["look",{"_index":1538,"title":{},"body":{"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["lot",{"_index":2175,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["lowercas",{"_index":250,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2376,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mail",{"_index":1723,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["main",{"_index":190,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/UserProfileComponent.html":{}}}],["mainli",{"_index":11,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"modules/ScenarioModule.html":{},"interfaces/User.html":{},"interfaces/_User.html":{}}}],["maintain",{"_index":1739,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["make",{"_index":249,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["makedeletionphag",{"_index":2290,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makedeletionphage(phag",{"_index":2360,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphag",{"_index":2289,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makeframeshiftphage(phag",{"_index":2358,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makegen",{"_index":2286,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makegene(gcprob",{"_index":2332,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makephag",{"_index":2287,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makephage(phagedetail",{"_index":2347,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphag",{"_index":2288,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["makewtphage(phag",{"_index":2354,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mani",{"_index":2419,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["manner",{"_index":2283,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["match",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["math.abs(x",{"_index":1224,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["math.ceil(scenarioglobals.genelength/this.steps",{"_index":1070,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["maximum",{"_index":1266,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"miscellaneous/variables.html":{}}}],["mb",{"_index":1193,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["mcbreadcrumbsconfig",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["mcbreadcrumbsmodul",{"_index":1386,"title":{},"body":{"modules/SharedModule.html":{}}}],["mcbreadcrumbsmodule.forroot",{"_index":1400,"title":{},"body":{"modules/SharedModule.html":{}}}],["md",{"_index":1095,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["memcach",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["memori",{"_index":567,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["messag",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["met",{"_index":1697,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["method",{"_index":33,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["mickey",{"_index":1139,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["middl",{"_index":2524,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["middlewar",{"_index":2102,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["minim",{"_index":1772,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":2323,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstop",{"_index":2322,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["minstopsnumberminimum",{"_index":2338,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["minu",{"_index":2516,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["minumum",{"_index":2536,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["miscellan",{"_index":2008,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["miss",{"_index":1145,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["mlength",{"_index":1181,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["modal",{"_index":625,"title":{},"body":{"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["model",{"_index":113,"title":{"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["modelref",{"_index":620,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.componentinstance.messag",{"_index":626,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelref.result.then((result",{"_index":627,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["modelroomcompon",{"_index":112,"title":{"components/ModelRoomComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modul",{"_index":195,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":169,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/StudentResolver.html":{}}}],["mongo",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":782,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{}}}],["mongoos",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":806,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["morgan",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["mous",{"_index":1140,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["multipl",{"_index":1059,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["mut",{"_index":2329,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutagen",{"_index":2298,"title":{},"body":{"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["mutagenize(inlist",{"_index":2420,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["mutant",{"_index":1793,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["mutantlist",{"_index":2401,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymut",{"_index":2396,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutantlistarraymutat",{"_index":2404,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["mutants/recombin",{"_index":2486,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutat",{"_index":788,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutation(",{"_index":2370,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["mutationfreq",{"_index":2315,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["mutationlist",{"_index":815,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["mutations.pip",{"_index":1618,"title":{},"body":{"modules/StudentModule.html":{}}}],["mutations.pipe.t",{"_index":1216,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"coverage.html":{}}}],["mutations.pipe.ts:18",{"_index":1223,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["mutations/delet",{"_index":2540,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["mutatnt",{"_index":1273,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{}}}],["mutfreq",{"_index":2466,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["mutfreqnumbermut",{"_index":2472,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n",{"_index":1719,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["n1.strainnum",{"_index":1249,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n1numbernumb",{"_index":2469,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2",{"_index":2464,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["n2)=>{return",{"_index":1248,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2.strainnum",{"_index":1250,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["n2numbernumb",{"_index":2470,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["na",{"_index":1435,"title":{},"body":{"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{}}}],["na.concat(oth",{"_index":1452,"title":{},"body":{"components/SignupComponent.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["name.pip",{"_index":1393,"title":{},"body":{"modules/SharedModule.html":{}}}],["name.pipe.t",{"_index":1161,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["name.pipe.ts:20",{"_index":1164,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["names.pip",{"_index":1395,"title":{},"body":{"modules/SharedModule.html":{}}}],["names.pipe.t",{"_index":1129,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["names.pipe.ts:20",{"_index":1148,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["nav",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["nav'},{'nam",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["nav.style.css",{"_index":1105,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.template.html",{"_index":1106,"title":{},"body":{"components/NavComponent.html":{}}}],["nav/nav.compon",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["navcompon",{"_index":114,"title":{"components/NavComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":14,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LocationComponent.html":{},"components/NavComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["nblock",{"_index":1069,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["necessari",{"_index":503,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/user-model.html":{}}}],["necessarili",{"_index":2090,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["need",{"_index":170,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/PageNotFoundComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"modules/SharedModule.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentResolver.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["neg",{"_index":800,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{}}}],["new",{"_index":421,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["newli",{"_index":838,"title":{},"body":{"injectables/ExperimentService.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["newpassword",{"_index":1304,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["newpasswordstringth",{"_index":2555,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["newrol",{"_index":1520,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["next",{"_index":2101,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next('fail",{"_index":2160,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["next('invalid",{"_index":2275,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next('phag",{"_index":2201,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["next('us",{"_index":2277,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()abl",{"_index":2278,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next()go",{"_index":2106,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["next()if",{"_index":2114,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next()on",{"_index":2260,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["next(error)if",{"_index":2158,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["next(error)on",{"_index":2235,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["nextfunctionnext",{"_index":2111,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["nextfunctionth",{"_index":2103,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["nextobjectnext",{"_index":2273,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["nfridgeshelf",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nfridgespot",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":471,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":1383,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":463,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{}}}],["ngbmodal",{"_index":470,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/PhageDialogComponent.html":{},"components/StudentIndivComponent.html":{}}}],["ngbmodul",{"_index":1385,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngbmodule.forroot",{"_index":1399,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngmodul",{"_index":215,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["ngondestori",{"_index":1024,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["ngondestroy",{"_index":490,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngx",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nme",{"_index":1297,"title":{},"body":{"injectables/ProfileService.html":{}}}],["nnumbertot",{"_index":2460,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nodemail",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":433,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{},"components/SigninComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["none",{"_index":1206,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["normal",{"_index":1137,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["notauthcompon",{"_index":116,"title":{"components/NotAuthComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["note",{"_index":1229,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["noth",{"_index":563,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["nr",{"_index":2465,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nrnumberratio",{"_index":2471,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nshift",{"_index":2364,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nshiftsnumbernumb",{"_index":2367,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleic",{"_index":2341,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["nucleotid",{"_index":2339,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["null",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["nullsecond",{"_index":2446,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["num",{"_index":1251,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"changelog.html":{}}}],["number",{"_index":238,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["number.parseint(k",{"_index":1076,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["numbers/typ",{"_index":2476,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numdesir",{"_index":2421,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numdesirednumbernumb",{"_index":2425,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numer",{"_index":2041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numgeno",{"_index":2479,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinput",{"_index":2485,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numinputnumbernumb",{"_index":2489,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nummber",{"_index":1037,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["nummut",{"_index":2481,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numoffspr",{"_index":2477,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["numpar",{"_index":795,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["numphag",{"_index":778,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["numphage:1000000",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["numrecomb",{"_index":2482,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["nums[0",{"_index":1255,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["nums[1",{"_index":1256,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["numtodo",{"_index":2412,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numtodonumberhow",{"_index":2418,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxov",{"_index":2411,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["numxovernumbernumb",{"_index":2417,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["nxm",{"_index":2220,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["o",{"_index":1695,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["oauth",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":783,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["object.keys(dels).map((k",{"_index":1075,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["observ",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["obtain",{"_index":1981,"title":{},"body":{"license.html":{}}}],["occur",{"_index":2346,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["odd",{"_index":2521,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["offspr",{"_index":2414,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["okclean",{"_index":2092,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["okif",{"_index":2086,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okinform",{"_index":2132,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["oklist",{"_index":2119,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oknewli",{"_index":2126,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["okon",{"_index":2241,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okreturn",{"_index":2187,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["oksend",{"_index":2266,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["oksuccessfulli",{"_index":2217,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["okth",{"_index":2129,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["oktrim",{"_index":2238,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["okupd",{"_index":2097,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["okuser'",{"_index":2172,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["old",{"_index":1303,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["oldpassword",{"_index":2553,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["oldpasswordstringus",{"_index":2554,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["on",{"_index":785,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/user-model.html":{}}}],["onc",{"_index":1302,"title":{},"body":{"injectables/ProfileService.html":{},"changelog.html":{}}}],["oncancel",{"_index":545,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["ondestroy",{"_index":483,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["oninit",{"_index":23,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["open",{"_index":561,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["opposit",{"_index":2518,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["option",{"_index":44,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["order",{"_index":1434,"title":{},"body":{"components/SignupComponent.html":{},"components/StudentListComponent.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["origin",{"_index":2453,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["otherphag",{"_index":2330,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["otherwis",{"_index":443,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["ouput",{"_index":1144,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["out",{"_index":209,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SignoutComponent.html":{},"modules/StudentModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["outlin",{"_index":1040,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["outline&#39",{"_index":1555,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["output",{"_index":1138,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"changelog.html":{}}}],["over",{"_index":1268,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["overflow",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["overload",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["overrid",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["overview",{"_index":2000,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["own",{"_index":2505,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["owner",{"_index":892,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["owner/scenario",{"_index":2179,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["p",{"_index":1039,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["packag",{"_index":1880,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":71,"title":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/models/scenario-model.html":{}}}],["page'",{"_index":437,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pagenotfoundcompon",{"_index":118,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pair",{"_index":809,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["param",{"_index":177,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["parameet",{"_index":708,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["paramet",{"_index":40,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["paramobserv",{"_index":537,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["params['coursenum",{"_index":598,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["params['scenid",{"_index":755,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["params['studentid",{"_index":1493,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["parent",{"_index":793,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["parent(",{"_index":2529,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["parents.length",{"_index":1228,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.pip",{"_index":1397,"title":{},"body":{"modules/SharedModule.html":{}}}],["parents.pipe.t",{"_index":1226,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["parents.pipe.ts:26",{"_index":1244,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parents.sort((n1",{"_index":1247,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parentslist",{"_index":1232,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["parser",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2558,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["particular",{"_index":2136,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["pass",{"_index":2159,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["passport",{"_index":1947,"title":{},"body":{"dependencies.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["passsword",{"_index":1446,"title":{},"body":{"components/SignupComponent.html":{}}}],["password",{"_index":330,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["password'},{'nam",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["password,confirmpassword",{"_index":397,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["password.compon",{"_index":340,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ProfileModule.html":{},"todo.html":{}}}],["password.component.t",{"_index":864,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:106",{"_index":1690,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:111",{"_index":1319,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:129",{"_index":1699,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1327,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":877,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1331,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:27",{"_index":878,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":876,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1325,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:35",{"_index":869,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":1329,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:40",{"_index":1704,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:41",{"_index":1314,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1689,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:45",{"_index":871,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:58",{"_index":1320,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:63",{"_index":870,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:64",{"_index":1701,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:73",{"_index":1323,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:81",{"_index":1702,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["password.component.ts:94",{"_index":1315,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.template.html",{"_index":866,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["password/forget",{"_index":339,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":341,"title":{},"body":{"modules/AuthenticationModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password/upd",{"_index":1286,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["passwordmessag",{"_index":1687,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["path",{"_index":153,"title":{},"body":{"injectables/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/ProfileService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["peoplelist",{"_index":1134,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnam",{"_index":672,"title":{},"body":{"components/CourseIndivComponent.html":{},"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnames:isrevers",{"_index":1135,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["peoplelistnamespip",{"_index":1127,"title":{"pipes/PeopleListNamesPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["per",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["percent",{"_index":2320,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["perform",{"_index":820,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{}}}],["performplex",{"_index":825,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["performplexer(data",{"_index":843,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["permiss",{"_index":1997,"title":{},"body":{"license.html":{}}}],["person",{"_index":1152,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["person.firstnam",{"_index":1154,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["person.lastnam",{"_index":1156,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["personlist",{"_index":1149,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["personnam",{"_index":640,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"pipes/PersonNamePipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["personname:isrevers",{"_index":1162,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["personname:tru",{"_index":641,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["personnamepip",{"_index":1159,"title":{"pipes/PersonNamePipe.html":{}},"body":{"pipes/PersonNamePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phage",{"_index":121,"title":{"interfaces/Phage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["phage'",{"_index":1464,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["phage'},{'nam",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["phage(1|2",{"_index":2216,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["phage+1",{"_index":1101,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["phage.com",{"_index":1640,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.compon",{"_index":1615,"title":{},"body":{"modules/StudentModule.html":{}}}],["phage.component.t",{"_index":1621,"title":{},"body":{"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["phage.component.ts:19",{"_index":1625,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.component.ts:35",{"_index":1626,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.delet",{"_index":1642,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.guess",{"_index":1643,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.interfac",{"_index":893,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{}}}],["phage.mutationlist",{"_index":1641,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage.par",{"_index":1194,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phage.strainnum",{"_index":1190,"title":{},"body":{"components/PhageDialogComponent.html":{},"components/StudentPhageComponent.html":{}}}],["phage.strainnum+1).tostr",{"_index":1253,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phage.template.html",{"_index":1623,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["phage1",{"_index":1259,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage1objectfirst",{"_index":2444,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2",{"_index":1260,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["phage2object",{"_index":2445,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["phagebyid",{"_index":2064,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["phagebyid(req",{"_index":2199,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagedelet",{"_index":1172,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagedeletionspip",{"_index":1165,"title":{"pipes/PhageDeletionsPipe.html":{}},"body":{"pipes/PhageDeletionsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagedetailsobjectphag",{"_index":2349,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagedialogcompon",{"_index":120,"title":{"components/PhageDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phagegeno1objectgenotyp",{"_index":2415,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2",{"_index":2410,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phagegeno2objectgenotyp",{"_index":2416,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["phageguess",{"_index":1203,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phageguessespip",{"_index":1196,"title":{"pipes/PhageGuessesPipe.html":{}},"body":{"pipes/PhageGuessesPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageid",{"_index":2197,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["phagemut",{"_index":1217,"title":{},"body":{"pipes/PhageMutationsPipe.html":{},"components/StudentPhageComponent.html":{}}}],["phagemutationspip",{"_index":1215,"title":{"pipes/PhageMutationsPipe.html":{}},"body":{"pipes/PhageMutationsPipe.html":{},"modules/StudentModule.html":{},"coverage.html":{},"overview.html":{}}}],["phageobjectconfigur",{"_index":2361,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phageobjectphag",{"_index":2355,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phagepar",{"_index":1242,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phageparents:numpar",{"_index":1233,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["phageparents:phage.numpar",{"_index":1195,"title":{},"body":{"components/PhageDialogComponent.html":{}}}],["phageparentspip",{"_index":1225,"title":{"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PhageParentsPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["phagetyp",{"_index":790,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["phagetypestringrefer",{"_index":2352,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["phenotyp",{"_index":1270,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["pipe",{"_index":1126,"title":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"modules/SharedModule.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({nam",{"_index":1151,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["pipes/modules/compon",{"_index":1381,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/peopl",{"_index":1394,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/person",{"_index":1392,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/phag",{"_index":1396,"title":{},"body":{"modules/SharedModule.html":{},"modules/StudentModule.html":{}}}],["pipetransform",{"_index":1150,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["plaqu",{"_index":842,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plate",{"_index":777,"title":{"additional-documentation/genetics/plate-experiment.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["platecapac",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plateinput",{"_index":830,"title":{"interfaces/PlateInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plateresult",{"_index":856,"title":{"interfaces/PlateResults.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["play",{"_index":2391,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["plexer",{"_index":125,"title":{"additional-documentation/genetics/plexer-experiment.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["plexercapac",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plexerinput",{"_index":844,"title":{"interfaces/PlexerInput.html":{}},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["plexerroomcompon",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plu",{"_index":2514,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["plus/minu",{"_index":2513,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["pnumberrecombin",{"_index":2459,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["po",{"_index":1029,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["point",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"components/LandingRoomComponent.html":{}}}],["popper.j",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["posguess",{"_index":1078,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["posit",{"_index":741,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageMutationsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["positive/neg",{"_index":2512,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["possibl",{"_index":559,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"pipes/PhageGuessesPipe.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["possibleinstr",{"_index":538,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["post",{"_index":2095,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid",{"_index":1681,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/${adminid}/students/${studentid}/${scenid",{"_index":1685,"title":{},"body":{"injectables/StudentService.html":{}}}],["post(`${this._baseurl}/pl",{"_index":858,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["post(`${this._baseurl}/plex",{"_index":862,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["potenti",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["present",{"_index":1169,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["preset",{"_index":2380,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["press",{"_index":573,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["prevent",{"_index":566,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["previou",{"_index":2204,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["primari",{"_index":1093,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["privat",{"_index":30,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["probabl",{"_index":2334,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["problem",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UserProfileComponent.html":{}}}],["proce",{"_index":2110,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["produc",{"_index":1627,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["profil",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{}}}],["profile.compon",{"_index":1285,"title":{},"body":{"modules/ProfileModule.html":{},"todo.html":{}}}],["profile.component.t",{"_index":1728,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:24",{"_index":1741,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1742,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1738,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1734,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:57",{"_index":1736,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:77",{"_index":1737,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:94",{"_index":1735,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.rout",{"_index":1282,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.servic",{"_index":1283,"title":{},"body":{"modules/ProfileModule.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.template.html",{"_index":1730,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/profile.modul",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["profile/upd",{"_index":2005,"title":{},"body":{"todo.html":{}}}],["profile/us",{"_index":1284,"title":{},"body":{"modules/ProfileModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"todo.html":{}}}],["profilemodul",{"_index":276,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerout",{"_index":1281,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profileservic",{"_index":1279,"title":{"injectables/ProfileService.html":{}},"body":{"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["prominantli",{"_index":1705,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["properti",{"_index":29,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["protect",{"_index":723,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["provid",{"_index":201,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}],["pswd",{"_index":865,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["pswd'},{'name",{"_index":97,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["public",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"injectables/CourseResolver.html":{},"components/PhageDialogComponent.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["public/.../read",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../scenario.globals.t",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.interface.t",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/.../student.roles.t",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public/app/admin/admin",{"_index":184,"title":{},"body":{"components/AdminHomeComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.t",{"_index":6,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["public/app/admin/admin.component.ts:23",{"_index":55,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:24",{"_index":39,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.component.ts:33",{"_index":46,"title":{},"body":{"components/AdminComponent.html":{}}}],["public/app/admin/admin.guard.service.t",{"_index":151,"title":{},"body":{"injectables/AdminGuard.html":{},"coverage.html":{}}}],["public/app/admin/admin.guard.service.ts:10",{"_index":160,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.guard.service.ts:23",{"_index":165,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["public/app/admin/admin.module.t",{"_index":210,"title":{},"body":{"modules/AdminModule.html":{}}}],["public/app/admin/course/cours",{"_index":480,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["public/app/admin/course/course.module.t",{"_index":693,"title":{},"body":{"modules/CourseModule.html":{}}}],["public/app/admin/course/course.resolver.t",{"_index":706,"title":{},"body":{"injectables/CourseResolver.html":{},"coverage.html":{}}}],["public/app/admin/course/course.resolver.ts:13",{"_index":709,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.resolver.ts:28",{"_index":711,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["public/app/admin/course/course.service.t",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["public/app/admin/not",{"_index":1114,"title":{},"body":{"components/NotAuthComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/stud",{"_index":1461,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["public/app/admin/student/student.module.t",{"_index":1609,"title":{},"body":{"modules/StudentModule.html":{}}}],["public/app/admin/student/student.resolver.t",{"_index":1644,"title":{},"body":{"injectables/StudentResolver.html":{},"coverage.html":{}}}],["public/app/admin/student/student.resolver.ts:13",{"_index":1645,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.resolver.ts:28",{"_index":1646,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["public/app/admin/student/student.roles.t",{"_index":1841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/admin/student/student.service.t",{"_index":1651,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["public/app/admin/student/student.service.ts:105",{"_index":1669,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:14",{"_index":1658,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:29",{"_index":1672,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:43",{"_index":1666,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:59",{"_index":1675,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:74",{"_index":1660,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/admin/student/student.service.ts:90",{"_index":1664,"title":{},"body":{"injectables/StudentService.html":{}}}],["public/app/app.component.t",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["public/app/app.component.ts:11",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["public/app/app.module.t",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["public/app/authentication/authentication.module.t",{"_index":324,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["public/app/authentication/authentication.service.t",{"_index":343,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["public/app/authentication/authentication.service.ts:111",{"_index":417,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:129",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:143",{"_index":394,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:15",{"_index":430,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:16",{"_index":432,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:18",{"_index":427,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:24",{"_index":360,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:35",{"_index":405,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:46",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:56",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:66",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:83",{"_index":411,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/authentication.service.ts:99",{"_index":419,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["public/app/authentication/forget",{"_index":863,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/log",{"_index":998,"title":{},"body":{"injectables/LoggedInGuard.html":{},"coverage.html":{}}}],["public/app/authentication/reset",{"_index":1309,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.t",{"_index":1402,"title":{},"body":{"components/SigninComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signin/signin.component.ts:20",{"_index":1414,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:24",{"_index":1412,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:28",{"_index":1405,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:42",{"_index":1408,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signin/signin.component.ts:59",{"_index":1406,"title":{},"body":{"components/SigninComponent.html":{}}}],["public/app/authentication/signout/signout.component.t",{"_index":1418,"title":{},"body":{"components/SignoutComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signout/signout.component.ts:18",{"_index":1420,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signout/signout.component.ts:31",{"_index":1422,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signout/signout.component.ts:42",{"_index":1421,"title":{},"body":{"components/SignoutComponent.html":{}}}],["public/app/authentication/signup/signup.component.t",{"_index":1427,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["public/app/authentication/signup/signup.component.ts:114",{"_index":1437,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:26",{"_index":1444,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:31",{"_index":1440,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:40",{"_index":1445,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:44",{"_index":1442,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:48",{"_index":1431,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:63",{"_index":1433,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:74",{"_index":1438,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/authentication/signup/signup.component.ts:92",{"_index":1439,"title":{},"body":{"components/SignupComponent.html":{}}}],["public/app/help/help.component.t",{"_index":896,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["public/app/help/help.component.ts:9",{"_index":900,"title":{},"body":{"components/HelpComponent.html":{}}}],["public/app/help/help.module.t",{"_index":907,"title":{},"body":{"modules/HelpModule.html":{}}}],["public/app/home/home.component.t",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["public/app/home/home.component.ts:23",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:30",{"_index":918,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/home/home.component.ts:37",{"_index":917,"title":{},"body":{"components/HomeComponent.html":{}}}],["public/app/interfaces/course.interface.t",{"_index":476,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["public/app/interfaces/experiment.interface.t",{"_index":1257,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"coverage.html":{}}}],["public/app/interfaces/fridge.interface.t",{"_index":887,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"coverage.html":{}}}],["public/app/interfaces/phage.interface.t",{"_index":776,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"coverage.html":{}}}],["public/app/interfaces/scenario.interface.t",{"_index":1346,"title":{},"body":{"interfaces/Scenario.html":{},"coverage.html":{}}}],["public/app/interfaces/student.interface.t",{"_index":228,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/interfaces/user.interface.t",{"_index":1722,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.t",{"_index":1102,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["public/app/nav/nav.component.ts:20",{"_index":1113,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:24",{"_index":1108,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:32",{"_index":1110,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/nav/nav.component.ts:42",{"_index":1109,"title":{},"body":{"components/NavComponent.html":{}}}],["public/app/pag",{"_index":1119,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["public/app/pipes/peopl",{"_index":1128,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"coverage.html":{}}}],["public/app/pipes/person",{"_index":1160,"title":{},"body":{"pipes/PersonNamePipe.html":{},"coverage.html":{}}}],["public/app/pipes/phag",{"_index":1166,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"coverage.html":{}}}],["public/app/profile/profile.module.t",{"_index":1280,"title":{},"body":{"modules/ProfileModule.html":{}}}],["public/app/profile/profile.service.t",{"_index":1288,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["public/app/profile/profile.service.ts:16",{"_index":1294,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:33",{"_index":1296,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/profile.service.ts:49",{"_index":1301,"title":{},"body":{"injectables/ProfileService.html":{}}}],["public/app/profile/upd",{"_index":1686,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"coverage.html":{}}}],["public/app/profile/us",{"_index":1727,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["public/app/scenario/fridge/fridge.component.t",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/fridge/phag",{"_index":1185,"title":{},"body":{"components/PhageDialogComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.t",{"_index":961,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["public/app/scenario/list/list.component.ts:20",{"_index":969,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:24",{"_index":968,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:25",{"_index":967,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:26",{"_index":963,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:36",{"_index":965,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/list/list.component.ts:48",{"_index":964,"title":{},"body":{"components/ListComponent.html":{}}}],["public/app/scenario/location/experiment.service.t",{"_index":819,"title":{},"body":{"injectables/ExperimentService.html":{},"coverage.html":{}}}],["public/app/scenario/location/experiment.service.ts:14",{"_index":827,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:28",{"_index":831,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/experiment.service.ts:47",{"_index":845,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["public/app/scenario/location/lab",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/location/land",{"_index":932,"title":{},"body":{"components/LandingRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.component.t",{"_index":976,"title":{},"body":{"components/LocationComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/location.module.t",{"_index":986,"title":{},"body":{"modules/LocationModule.html":{}}}],["public/app/scenario/location/model",{"_index":1016,"title":{},"body":{"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["public/app/scenario/location/plex",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["public/app/scenario/scenario.component.t",{"_index":1354,"title":{},"body":{"components/ScenarioComponent.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.globals.t",{"_index":1873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/scenario/scenario.module.t",{"_index":1358,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["public/app/scenario/scenario.resolver.t",{"_index":1366,"title":{},"body":{"injectables/ScenarioResolver.html":{},"coverage.html":{}}}],["public/app/scenario/scenario.resolver.ts:14",{"_index":1368,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.resolver.ts:28",{"_index":1369,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["public/app/scenario/scenario.service.t",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["public/app/shared/confirm",{"_index":454,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"coverage.html":{}}}],["public/app/shared/read",{"_index":1877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public/app/shared/shared.module.t",{"_index":1378,"title":{},"body":{"modules/SharedModule.html":{}}}],["pupros",{"_index":2542,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["purpos",{"_index":936,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["push",{"_index":1534,"title":{},"body":{"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["quot;reference&quot",{"_index":1628,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;student&quot",{"_index":1548,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["quot;submission&quot",{"_index":1632,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;unkown&quot",{"_index":1629,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["quot;user&quot",{"_index":1631,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["random",{"_index":1955,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["rang",{"_index":1201,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["rare",{"_index":1726,"title":{},"body":{"interfaces/User.html":{},"interfaces/_User.html":{}}}],["rate",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":759,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/NavComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["react",{"_index":1390,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["read",{"_index":2070,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["read(req",{"_index":2227,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["readabl",{"_index":1349,"title":{},"body":{"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["readablestringshould",{"_index":2369,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["readerrormessag",{"_index":510,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["readerrormessage(err",{"_index":526,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["readerrormessage(err2",{"_index":608,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["readerrormessage(error",{"_index":609,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["readerrormessage(iderr",{"_index":1714,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["realstop",{"_index":2344,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["reason",{"_index":1351,"title":{},"body":{"interfaces/Scenario.html":{}}}],["recfreq",{"_index":2467,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recfreqnumberfrequ",{"_index":2474,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recomb",{"_index":2483,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["recombin",{"_index":1794,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombinationfreq",{"_index":2318,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["recombine(phagegeno1",{"_index":2409,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["redirect",{"_index":1006,"title":{},"body":{"injectables/LoggedInGuard.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["redirecturl",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refer",{"_index":786,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["referencephag",{"_index":2328,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reflect",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["regul",{"_index":1610,"title":{},"body":{"modules/StudentModule.html":{}}}],["regular",{"_index":214,"title":{},"body":{"modules/AdminModule.html":{}}}],["rel",{"_index":2532,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["relat",{"_index":17,"title":{},"body":{"components/AdminComponent.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/ScenarioModule.html":{},"injectables/StudentService.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["relativeto",{"_index":523,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["relev",{"_index":942,"title":{},"body":{"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["reliv",{"_index":925,"title":{},"body":{"components/HomeComponent.html":{}}}],["rememb",{"_index":583,"title":{},"body":{"components/CourseEditComponent.html":{},"additional-documentation/models/phage-model.html":{}}}],["remov",{"_index":619,"title":{},"body":{"components/CourseEditComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["render",{"_index":2180,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["repres",{"_index":852,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/StudentResolver.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["represent",{"_index":2454,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["req",{"_index":2236,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["req.curus",{"_index":2279,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["reqobjectexpress",{"_index":2079,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["request",{"_index":373,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["requesterror",{"_index":2166,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["requestif",{"_index":2256,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["requestnumb",{"_index":2214,"title":{},"body":{"additional-documentation/controllers/genetics-controller.html":{}}}],["requeston",{"_index":2150,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requir",{"_index":435,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"license.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["requireslogin",{"_index":2074,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["requireslogin(req",{"_index":2270,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["res.accessgranted[scenid",{"_index":770,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["res.email",{"_index":1712,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["res.firstnam",{"_index":1745,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.id",{"_index":1743,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.lastnam",{"_index":1746,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["reset",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["resetpassword",{"_index":353,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(credenti",{"_index":393,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword(req",{"_index":2253,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpassword(this.credenti",{"_index":1339,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcompon",{"_index":126,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpasswordemail",{"_index":2073,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordemail(req",{"_index":2247,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["resetpasswordexpir",{"_index":2546,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resetpasswordtoken",{"_index":2545,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["resobjectexpress",{"_index":2080,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["resolv",{"_index":707,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["resolve(rout",{"_index":710,"title":{},"body":{"injectables/CourseResolver.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["respons",{"_index":874,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["rest",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["result.coursenum",{"_index":522,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["result.messag",{"_index":886,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ret",{"_index":1330,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["retreiv",{"_index":2232,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["return",{"_index":52,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["returns{observ",{"_index":1683,"title":{},"body":{"injectables/StudentService.html":{}}}],["revers",{"_index":1131,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{}}}],["revok",{"_index":1670,"title":{},"body":{"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["role",{"_index":155,"title":{},"body":{"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"components/CourseListComponent.html":{},"components/HomeComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["role.label",{"_index":1591,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass",{"_index":1527,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;admin&#39",{"_index":1556,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(&#39;student&#39",{"_index":1549,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass('admin",{"_index":1582,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolebuttonclass(src",{"_index":1545,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledis",{"_index":1528,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["roledisabled(src",{"_index":1558,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["rolesenum",{"_index":2547,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["rolesenum]{@link",{"_index":2562,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["room",{"_index":797,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["room'},{'nam",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["room.compon",{"_index":993,"title":{},"body":{"modules/LocationModule.html":{}}}],["room.component.t",{"_index":934,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room.component.ts:107",{"_index":1044,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:123",{"_index":1030,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:140",{"_index":1049,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:150",{"_index":1046,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:23",{"_index":952,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:26",{"_index":1058,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:27",{"_index":946,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:30",{"_index":1060,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:34",{"_index":1057,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:38",{"_index":1062,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:42",{"_index":1061,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:46",{"_index":1063,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:47",{"_index":950,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:50",{"_index":1056,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:54",{"_index":1051,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:59",{"_index":1027,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.component.ts:63",{"_index":949,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["room.component.ts:82",{"_index":1045,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.style.css",{"_index":1017,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["room.template.html",{"_index":945,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["room/lab",{"_index":994,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["room/land",{"_index":933,"title":{},"body":{"components/LandingRoomComponent.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["room/model",{"_index":996,"title":{},"body":{"modules/LocationModule.html":{},"components/ModelRoomComponent.html":{},"coverage.html":{}}}],["room/plex",{"_index":995,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["root",{"_index":1371,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["rout",{"_index":157,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"changelog.html":{}}}],["route.params['coursenum",{"_index":716,"title":{},"body":{"injectables/CourseResolver.html":{}}}],["route.params['scenid",{"_index":1374,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["route.params['studentid",{"_index":1649,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["router",{"_index":21,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{}}}],["routermodul",{"_index":216,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/StudentModule.html":{}}}],["routermodule.forchild(adminrout",{"_index":226,"title":{},"body":{"modules/AdminModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":342,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["routermodule.forchild(courserout",{"_index":705,"title":{},"body":{"modules/CourseModule.html":{}}}],["routermodule.forchild(helprout",{"_index":911,"title":{},"body":{"modules/HelpModule.html":{}}}],["routermodule.forchild(locationrout",{"_index":997,"title":{},"body":{"modules/LocationModule.html":{}}}],["routermodule.forchild(profilerout",{"_index":1287,"title":{},"body":{"modules/ProfileModule.html":{}}}],["routermodule.forchild(scenariorout",{"_index":1365,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["routermodule.forchild(studentrout",{"_index":1620,"title":{},"body":{"modules/StudentModule.html":{}}}],["routermodule.forroot(approut",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesanpshot",{"_index":1372,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["routerstatesnapshot",{"_index":164,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/CourseResolver.html":{},"injectables/LoggedInGuard.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{}}}],["row",{"_index":846,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["rowphag",{"_index":859,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["rowphagearraylist",{"_index":2492,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["run",{"_index":1970,"title":{},"body":{"index.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["rxj",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/operator/concat",{"_index":1448,"title":{},"body":{"components/SignupComponent.html":{}}}],["rxjs/add/operator/filt",{"_index":1447,"title":{},"body":{"components/SignupComponent.html":{}}}],["rxjs/add/operator/takeuntil",{"_index":63,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["rxjs/behaviorsubject",{"_index":440,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["rxjs/observ",{"_index":439,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/CourseResolver.html":{},"injectables/ExperimentService.html":{},"injectables/ProfileService.html":{},"injectables/ScenarioResolver.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{}}}],["rxjs/subject",{"_index":62,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["rxjs/subscript",{"_index":508,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ListComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentIndivComponent.html":{}}}],["s",{"_index":1574,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["s.cours",{"_index":1575,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["s.course.coursenum",{"_index":1576,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["same",{"_index":811,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["save",{"_index":436,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"interfaces/StudentPhage.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedata",{"_index":1025,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["savedelet",{"_index":2059,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(req",{"_index":2181,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["savedeletions(this.guess",{"_index":1085,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["sceanrio",{"_index":2223,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scen",{"_index":669,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scen'},{'nam",{"_index":94,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scen.label",{"_index":673,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["scen1",{"_index":2559,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen2",{"_index":2560,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scen3",{"_index":2561,"title":{},"body":{"additional-documentation/models/user-model.html":{}}}],["scenario",{"_index":109,"title":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["scenario'},{'nam",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["scenario.compon",{"_index":701,"title":{},"body":{"modules/CourseModule.html":{},"modules/ScenarioModule.html":{}}}],["scenario.component.t",{"_index":717,"title":{},"body":{"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario.component.ts:110",{"_index":730,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:122",{"_index":739,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:144",{"_index":735,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:151",{"_index":742,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:32",{"_index":751,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:36",{"_index":747,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:40",{"_index":750,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:44",{"_index":748,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:48",{"_index":749,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:52",{"_index":746,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:56",{"_index":728,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.component.ts:75",{"_index":744,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.glob",{"_index":1065,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["scenario.label",{"_index":773,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenario.purpos",{"_index":958,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.relev",{"_index":959,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.resolv",{"_index":2006,"title":{},"body":{"todo.html":{}}}],["scenario.rout",{"_index":1363,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenario.scencod",{"_index":772,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.servic",{"_index":954,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["scenario.startingpoint",{"_index":960,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["scenario.style.css",{"_index":721,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["scenario.template.html",{"_index":722,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/ScenarioComponent.html":{}}}],["scenario/cours",{"_index":700,"title":{},"body":{"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"coverage.html":{}}}],["scenario/experi",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scenario/location/experiment.servic",{"_index":2007,"title":{},"body":{"todo.html":{}}}],["scenario/scenario.glob",{"_index":1209,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenario/scenario.modul",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.resolv",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["scenario/scenario.servic",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["scenariobycod",{"_index":2071,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariobycode(req",{"_index":2231,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["scenariocompon",{"_index":128,"title":{"components/ScenarioComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scenariodata",{"_index":861,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{}}}],["scenariodetail",{"_index":889,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["scenarioexternal:scneariocurr",{"_index":2189,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["scenarioglob",{"_index":1064,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenarioglobals.deletionguesslength",{"_index":1067,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["scenarioglobals.genelength",{"_index":1214,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["scenarioid",{"_index":1021,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenariomodul",{"_index":277,"title":{"modules/ScenarioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScenarioModule.html":{},"modules.html":{},"overview.html":{}}}],["scenarioobjectparamet",{"_index":2314,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scenarioorigin",{"_index":2510,"title":{},"body":{"additional-documentation/models/phage-model.html":{}}}],["scenarioresolv",{"_index":280,"title":{"injectables/ScenarioResolver.html":{}},"body":{"modules/AppModule.html":{},"injectables/ScenarioResolver.html":{},"coverage.html":{},"overview.html":{}}}],["scenariorout",{"_index":1362,"title":{},"body":{"modules/ScenarioModule.html":{}}}],["scenarios/fridg",{"_index":1403,"title":{},"body":{"components/SigninComponent.html":{}}}],["scenarioscenariocurr",{"_index":2165,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{}}}],["scenarioscenarioscenario",{"_index":2154,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["scenarioservic",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ScenarioResolver.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scencod",{"_index":754,"title":{},"body":{"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/LandingRoomComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"interfaces/StudentFridge.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["scendata",{"_index":2348,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectcomput",{"_index":2356,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectconfigur",{"_index":2362,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["scendataobjectcurr",{"_index":2359,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["scendataobjectscenario",{"_index":2353,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["scenid",{"_index":763,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{}}}],["schema",{"_index":2502,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["second",{"_index":2255,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["secondari",{"_index":1041,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["secondary&#39",{"_index":1554,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["section",{"_index":1035,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["see",{"_index":975,"title":{},"body":{"components/ListComponent.html":{},"components/StudentFridgeComponent.html":{},"license.html":{}}}],["select",{"_index":193,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseEditComponent.html":{},"components/LocationComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["selectedadd",{"_index":539,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["selector",{"_index":25,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["semest",{"_index":2138,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["send",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["sendforget",{"_index":868,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["sendreset",{"_index":1313,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sensit",{"_index":457,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["sent",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/ForgetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["separ",{"_index":810,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{}}}],["sequenc",{"_index":1936,"title":{},"body":{"dependencies.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["server",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"interfaces/_User.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["server/databas",{"_index":1299,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["server/database/authent",{"_index":416,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["servic",{"_index":344,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["services/stream",{"_index":1700,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["session",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":406,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"modules/StudentModule.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["setinstructor",{"_index":2054,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["setinstructor(req",{"_index":2145,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["setphag",{"_index":1470,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setphage(src",{"_index":1481,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["setrol",{"_index":2045,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["setrole(req",{"_index":2094,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["setstudentrol",{"_index":1657,"title":{},"body":{"injectables/StudentService.html":{}}}],["setstudentrole(adminid",{"_index":1674,"title":{},"body":{"injectables/StudentService.html":{}}}],["setus",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setuser(us",{"_index":404,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sever",{"_index":651,"title":{},"body":{"components/CourseIndivComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/SignupComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["share",{"_index":1379,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/confirm",{"_index":584,"title":{},"body":{"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["shared/read",{"_index":511,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/shared.modul",{"_index":217,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{}}}],["sharedmodul",{"_index":206,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/CourseEditComponent.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"components/StudentIndivComponent.html":{},"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["shelf",{"_index":2004,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["shelv",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":802,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["shifttypenumbershould",{"_index":2365,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["short",{"_index":1352,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["show",{"_index":935,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/StudentFridgeComponent.html":{}}}],["shuffl",{"_index":1791,"title":{},"body":{"changelog.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["shuffleplaquelist",{"_index":2305,"title":{},"body":{"additional-documentation/genetics.html":{}}}],["sign",{"_index":412,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SigninComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signin'},{'nam",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signin(credenti",{"_index":410,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signin(req",{"_index":2258,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signin(this.credenti",{"_index":1415,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin.template.html",{"_index":1404,"title":{},"body":{"components/SigninComponent.html":{}}}],["signin/signin.compon",{"_index":336,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signincompon",{"_index":130,"title":{"components/SigninComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signout",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignoutComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signout'},{'nam",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signout(req",{"_index":2264,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signout/signout.compon",{"_index":338,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signoutcompon",{"_index":132,"title":{"components/SignoutComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signup",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SignupComponent.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["signup'},{'nam",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["signup(req",{"_index":2261,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["signup(this.us",{"_index":1459,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup(us",{"_index":418,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["signup.template.html",{"_index":1428,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":337,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["signupcompon",{"_index":134,"title":{"components/SignupComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpl",{"_index":731,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["singl",{"_index":1518,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/scenario-model.html":{}}}],["site",{"_index":1104,"title":{},"body":{"components/NavComponent.html":{}}}],["size",{"_index":622,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["skyhook",{"_index":1388,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["skyhookdndmodul",{"_index":1387,"title":{},"body":{"modules/SharedModule.html":{}}}],["skyhookdndmodule.forroot",{"_index":1401,"title":{},"body":{"modules/SharedModule.html":{}}}],["sm",{"_index":623,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ModelRoomComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["small",{"_index":840,"title":{},"body":{"injectables/ExperimentService.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["small&#39",{"_index":1552,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["small/larg",{"_index":854,"title":{},"body":{"injectables/ExperimentService.html":{},"changelog.html":{}}}],["smaller",{"_index":1787,"title":{},"body":{"changelog.html":{}}}],["smallplaqu",{"_index":1272,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["snapshot",{"_index":1373,"title":{},"body":{"injectables/ScenarioResolver.html":{}}}],["softwar",{"_index":1988,"title":{},"body":{"license.html":{}}}],["someth",{"_index":456,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["soon",{"_index":902,"title":{},"body":{"components/HelpComponent.html":{}}}],["sort",{"_index":244,"title":{},"body":{"interfaces/AdminStudent.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"miscellaneous/variables.html":{}}}],["sorted.map((phage)=>{return",{"_index":1252,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["sortstud",{"_index":256,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/Student.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"modules/HelpModule.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"modules/LocationModule.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"modules/SharedModule.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{}}}],["special",{"_index":835,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialobjectoth",{"_index":2494,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["specialsobjectoth",{"_index":2448,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["specif",{"_index":891,"title":{},"body":{"interfaces/Fridge.html":{},"modules/ScenarioModule.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"license.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["specifc",{"_index":2229,"title":{},"body":{"additional-documentation/controllers/scenario-controller.html":{}}}],["specifi",{"_index":1318,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["spinner",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["sposnumberstart",{"_index":2435,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["spot",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{}}}],["spots/length",{"_index":2381,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["src",{"_index":813,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"interfaces/StudentPhage.html":{}}}],["ssl",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["ssubscript",{"_index":962,"title":{},"body":{"components/ListComponent.html":{}}}],["start",{"_index":803,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"pipes/PhageGuessesPipe.html":{},"interfaces/StudentPhage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/phage-model.html":{}}}],["start/stop",{"_index":808,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["startingpoint",{"_index":1347,"title":{},"body":{"interfaces/Scenario.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stat",{"_index":762,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["state",{"_index":163,"title":{},"body":{"injectables/AdminGuard.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"injectables/ScenarioResolver.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["state.url",{"_index":178,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{}}}],["statement",{"_index":1817,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":243,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Student.html":{},"components/StudentIndivComponent.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["statusdescript",{"_index":2083,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["step",{"_index":1055,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["stepsiz",{"_index":1022,"title":{},"body":{"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{}}}],["stock",{"_index":2164,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridg",{"_index":2057,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["stockfridge(req",{"_index":2162,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stop",{"_index":804,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/models/scenario-model.html":{}}}],["stoplist",{"_index":2395,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["stoplistarrayloc",{"_index":2397,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["store",{"_index":408,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{},"changelog.html":{},"additional-documentation/models/user-model.html":{}}}],["strain",{"_index":822,"title":{},"body":{"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/Scenario.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["strain'",{"_index":1170,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["strain.guess",{"_index":1502,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strain.submit",{"_index":1512,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["strainlist",{"_index":1467,"title":{},"body":{"components/StudentFridgeComponent.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainlistarraylist",{"_index":2500,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["strainnum",{"_index":781,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/StudentPhage.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["strainnumnumberstrain",{"_index":2351,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["strainphagephag",{"_index":2196,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["stream",{"_index":1111,"title":{},"body":{"components/NavComponent.html":{}}}],["string",{"_index":56,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/course-model.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["stringifi",{"_index":2183,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{}}}],["student",{"_index":18,"title":{"interfaces/Student.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["student'",{"_index":736,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentService.html":{}}}],["student.course.coursenum",{"_index":1590,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.email",{"_index":1589,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["student.interfac",{"_index":479,"title":{},"body":{"interfaces/Course.html":{}}}],["student.resolv",{"_index":1616,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.rol",{"_index":1569,"title":{},"body":{"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["student.rout",{"_index":1613,"title":{},"body":{"modules/StudentModule.html":{}}}],["student.servic",{"_index":1492,"title":{},"body":{"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{}}}],["student/student.servic",{"_index":225,"title":{},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{}}}],["student/us",{"_index":1661,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentfridg",{"_index":894,"title":{"interfaces/StudentFridge.html":{}},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["studentfridgecompon",{"_index":136,"title":{"components/StudentFridgeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentid",{"_index":737,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentindex",{"_index":740,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["studentindivcompon",{"_index":137,"title":{"components/StudentIndivComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentlistcompon",{"_index":138,"title":{"components/StudentListComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentmodul",{"_index":1603,"title":{"modules/StudentModule.html":{}},"body":{"modules/StudentModule.html":{},"modules.html":{},"overview.html":{}}}],["studentnum",{"_index":1648,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["studentphag",{"_index":814,"title":{"interfaces/StudentPhage.html":{}},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"coverage.html":{}}}],["studentphagecompon",{"_index":139,"title":{"components/StudentPhageComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentresolv",{"_index":1608,"title":{"injectables/StudentResolver.html":{}},"body":{"modules/StudentModule.html":{},"injectables/StudentResolver.html":{},"coverage.html":{},"overview.html":{}}}],["studentrolesarray",{"_index":1565,"title":{},"body":{"components/StudentIndivComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["studentrout",{"_index":1612,"title":{},"body":{"modules/StudentModule.html":{}}}],["students.sort(sortstud",{"_index":665,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["students/us",{"_index":1673,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservic",{"_index":207,"title":{"injectables/StudentService.html":{}},"body":{"modules/AdminModule.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"coverage.html":{},"overview.html":{}}}],["studentuserstud",{"_index":2178,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["studentuserth",{"_index":2091,"title":{},"body":{"additional-documentation/controllers/admin-controller.html":{}}}],["studentuserus",{"_index":2148,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["styleurl",{"_index":484,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{}}}],["subject",{"_index":61,"title":{},"body":{"components/AdminComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["submiss",{"_index":1410,"title":{},"body":{"components/SigninComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"changelog.html":{}}}],["submit",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/ModelRoomComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["subscrib",{"_index":520,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{}}}],["subscribe((cours",{"_index":684,"title":{},"body":{"components/CourseListComponent.html":{}}}],["subscribe((dat",{"_index":1088,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["subscribe((fridg",{"_index":1495,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["subscribe((info",{"_index":601,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((instr",{"_index":604,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["subscribe((r",{"_index":632,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe((result",{"_index":885,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["subscribe((scen",{"_index":667,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentIndivComponent.html":{}}}],["subscribe((scenario",{"_index":972,"title":{},"body":{"components/ListComponent.html":{}}}],["subscribe((stat",{"_index":761,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscribe((stud",{"_index":663,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["subscribe((upd",{"_index":615,"title":{},"body":{"components/CourseEditComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe(param",{"_index":753,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["subscript",{"_index":488,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["successfulli",{"_index":415,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["successlist",{"_index":2140,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["successmessag",{"_index":867,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":588,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"injectables/StudentService.html":{}}}],["sumit",{"_index":1630,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["support",{"_index":1806,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sure",{"_index":467,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ResetPasswordComponent.html":{},"components/StudentIndivComponent.html":{},"changelog.html":{}}}],["svg",{"_index":1998,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["synchron",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["system",{"_index":1594,"title":{},"body":{"components/StudentListComponent.html":{},"additional-documentation/controllers/admin-controller.html":{}}}],["systemj",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":1635,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["tab",{"_index":978,"title":{},"body":{"components/LocationComponent.html":{}}}],["tabl",{"_index":1769,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1007,"title":{},"body":{"injectables/LoggedInGuard.html":{},"miscellaneous/variables.html":{}}}],["taken",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["takeuntil(this.isdestroy",{"_index":600,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["task",{"_index":694,"title":{},"body":{"modules/CourseModule.html":{}}}],["teach",{"_index":1595,"title":{},"body":{"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/course-controller.html":{}}}],["teacher",{"_index":2116,"title":{},"body":{"additional-documentation/controllers/course-controller.html":{}}}],["tell",{"_index":552,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":414,"title":{},"body":{"injectables/AuthenticationService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["text",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/models/course-model.html":{}}}],["textual",{"_index":1168,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["there'",{"_index":1703,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["thing",{"_index":1611,"title":{},"body":{"modules/StudentModule.html":{}}}],["think",{"_index":1034,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._admin",{"_index":595,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._admin.id",{"_index":1579,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._admin.rol",{"_index":1580,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._authenticationservic",{"_index":884,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authenticationservice.canaccessadmin",{"_index":179,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._authenticationservice.getus",{"_index":69,"title":{},"body":{"components/AdminComponent.html":{},"components/HomeComponent.html":{},"components/ListComponent.html":{}}}],["this._authenticationservice.isloggedin",{"_index":1012,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._authenticationservice.redirecturl",{"_index":181,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/LoggedInGuard.html":{},"components/SigninComponent.html":{}}}],["this._authenticationservice.setuser(result",{"_index":1416,"title":{},"body":{"components/SigninComponent.html":{},"components/SignupComponent.html":{}}}],["this._authservice.getus",{"_index":513,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/NavComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentResolver.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this._authservice.setuser(nul",{"_index":1426,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._authservice.setuser(upd",{"_index":1751,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._authservice.signout",{"_index":1425,"title":{},"body":{"components/SignoutComponent.html":{}}}],["this._calldelet",{"_index":1587,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._calldeletecours",{"_index":629,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._calldeletecoursestud",{"_index":634,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._checkpassword",{"_index":1337,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this._courseservic",{"_index":517,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._courseservice.deletecourse(this._admin.id",{"_index":631,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.deletestudents(this._admin.id",{"_index":635,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourse(admin.id",{"_index":661,"title":{},"body":{"components/CourseIndivComponent.html":{},"injectables/CourseResolver.html":{}}}],["this._courseservice.getcourse(this._admin.id",{"_index":599,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getcourselist",{"_index":1453,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._courseservice.getpossibleinstructors(this._admin.id",{"_index":603,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._courseservice.getscenariostatus(this.admin.id",{"_index":760,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._courseservice.getstudents(admin.id",{"_index":662,"title":{},"body":{"components/CourseIndivComponent.html":{}}}],["this._courseservice.listcourses(admin.id",{"_index":683,"title":{},"body":{"components/CourseListComponent.html":{}}}],["this._http",{"_index":857,"title":{},"body":{"injectables/ExperimentService.html":{},"injectables/StudentService.html":{}}}],["this._modalservice.open(confirmdeletedialogcompon",{"_index":621,"title":{},"body":{"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._profileservice.editprofile(this.userid",{"_index":1747,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._profileservice.updatepassword(this.user.id",{"_index":1717,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._reordercourses(r",{"_index":1455,"title":{},"body":{"components/SignupComponent.html":{}}}],["this._rout",{"_index":524,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{}}}],["this._route.param",{"_index":752,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._route.params.subscribe(param",{"_index":597,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._route.parent.snapshot.parammap.get('scenid",{"_index":955,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["this._route.snapshot.parammap.get('token",{"_index":1334,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._router.navig",{"_index":521,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/LandingRoomComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{}}}],["this._router.navigate(['/admin/cours",{"_index":633,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this._router.navigate(['/admin/not",{"_index":182,"title":{},"body":{"injectables/AdminGuard.html":{}}}],["this._router.navigate(['/admin/stud",{"_index":771,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._router.navigate(['/profil",{"_index":1718,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this._router.navigate(['authentication/signin",{"_index":1014,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this._router.navigate([redirect",{"_index":1417,"title":{},"body":{"components/SigninComponent.html":{}}}],["this._scenarioservic",{"_index":956,"title":{},"body":{"components/LandingRoomComponent.html":{},"components/ModelRoomComponent.html":{}}}],["this._scenarioservice.getscenario(scencod",{"_index":758,"title":{},"body":{"components/CourseScenarioComponent.html":{},"injectables/ScenarioResolver.html":{}}}],["this._scenarioservice.listscenario",{"_index":666,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this._scenarioservice.setscenario(nul",{"_index":1090,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this._studentservice.deletestudent(this._admin.id",{"_index":1588,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.getfridge(admin.id",{"_index":1494,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this._studentservice.getstudent(admin.id",{"_index":1650,"title":{},"body":{"injectables/StudentResolver.html":{}}}],["this._studentservice.getstudent(this._admin.id",{"_index":1570,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this._admin.id",{"_index":1577,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._studentservice.grantscenaccess(this.admin.id",{"_index":766,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this._studentservice.liststudents(admin.id",{"_index":1602,"title":{},"body":{"components/StudentListComponent.html":{}}}],["this._studentservice.setstudentrole(this._admin.id",{"_index":1583,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this._user.asobserv",{"_index":431,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.getvalu",{"_index":442,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._user.next(us",{"_index":441,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.admin",{"_index":512,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseScenarioComponent.html":{}}}],["this.adminus",{"_index":68,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.canactivate(rout",{"_index":1015,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["this.cours",{"_index":685,"title":{},"body":{"components/CourseListComponent.html":{},"components/SignupComponent.html":{}}}],["this.coursedetail",{"_index":519,"title":{},"body":{"components/CourseCreateComponent.html":{}}}],["this.courseinfo",{"_index":602,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{}}}],["this.courseinfo.coursenum",{"_index":611,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.coursenum",{"_index":756,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.cpassword",{"_index":1458,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.credenti",{"_index":1332,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.confirmpassword",{"_index":1341,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.newpassword",{"_index":1720,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.credentials.password",{"_index":1340,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.credentials.token",{"_index":1333,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.credentials['usernam",{"_index":1711,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.email",{"_index":883,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.errormessag",{"_index":515,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fridg",{"_index":1486,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strain",{"_index":1500,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.filter((strain",{"_index":1510,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.fridge.strains.sort((a,b)=>{return",{"_index":1503,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.genear",{"_index":1068,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.getus",{"_index":444,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.getuser().rol",{"_index":446,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.guess",{"_index":1072,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.guesses[strain][po",{"_index":1079,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.hasfridg",{"_index":1496,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.http.get(this._baseurl",{"_index":452,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(this._baseurl",{"_index":450,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProfileService.html":{}}}],["this.isdestroy",{"_index":590,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.next(tru",{"_index":637,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdestroyed$.unsubscrib",{"_index":638,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ModelRoomComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.isdis",{"_index":1336,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.key",{"_index":1074,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.newrol",{"_index":1571,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.paramobserv",{"_index":596,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.paramobserver.unsubscrib",{"_index":636,"title":{},"body":{"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.passwordmessag",{"_index":1715,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["this.phage.phagetyp",{"_index":1636,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.phagetype.touppercas",{"_index":1639,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.phage.submit",{"_index":1638,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["this.possibleinstr",{"_index":605,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.possibleinstr.filter((elm",{"_index":616,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.scenario",{"_index":668,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/StudentIndivComponent.html":{}}}],["this.scenario.scencod",{"_index":764,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.scenarioid",{"_index":1087,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.selectedadd",{"_index":614,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["this.setphage('al",{"_index":1506,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.ssubscript",{"_index":971,"title":{},"body":{"components/ListComponent.html":{}}}],["this.ssubscription.unsubscrib",{"_index":974,"title":{},"body":{"components/ListComponent.html":{}}}],["this.steps",{"_index":1066,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["this.strainlist",{"_index":1509,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["this.stud",{"_index":664,"title":{},"body":{"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{}}}],["this.student.accessgranted[scencod",{"_index":1573,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.rol",{"_index":1572,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.student.userid",{"_index":1578,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["this.students[studentindex].statu",{"_index":769,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.students[studentindex].userid",{"_index":765,"title":{},"body":{"components/CourseScenarioComponent.html":{}}}],["this.subscript",{"_index":516,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.subscription.unsubscrib",{"_index":528,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseListComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{}}}],["this.successmessag",{"_index":882,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.us",{"_index":920,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/NavComponent.html":{},"components/UpdatePasswordComponent.html":{}}}],["this.userid",{"_index":1086,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.userinfo",{"_index":1744,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.viewstrain",{"_index":1507,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["through",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":2383,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["ti",{"_index":248,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":474,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/PhageDialogComponent.html":{},"modules/SharedModule.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["tmp",{"_index":1454,"title":{},"body":{"components/SignupComponent.html":{}}}],["todo",{"_index":618,"title":{"todo.html":{}},"body":{"components/CourseEditComponent.html":{},"components/SigninComponent.html":{}}}],["togeth",{"_index":2423,"title":{},"body":{"additional-documentation/genetics/phage-experiment.html":{}}}],["toggl",{"_index":1050,"title":{},"body":{"components/ModelRoomComponent.html":{},"components/StudentIndivComponent.html":{}}}],["toggleblock",{"_index":1026,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["toggleblock(strain",{"_index":1048,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["token",{"_index":400,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["told",{"_index":2541,"title":{},"body":{"additional-documentation/models/scenario-model.html":{}}}],["took",{"_index":402,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["top",{"_index":1103,"title":{},"body":{"components/NavComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{}}}],["total",{"_index":2368,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/plate-experiment.html":{}}}],["touch",{"_index":1391,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["touchbackend",{"_index":1389,"title":{},"body":{"modules/SharedModule.html":{}}}],["toward",{"_index":2487,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["track",{"_index":1706,"title":{},"body":{"components/UpdatePasswordComponent.html":{},"changelog.html":{}}}],["transfer",{"_index":1788,"title":{},"body":{"changelog.html":{}}}],["transform",{"_index":1146,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["transform(delet",{"_index":1179,"title":{},"body":{"pipes/PhageDeletionsPipe.html":{}}}],["transform(guess",{"_index":1207,"title":{},"body":{"pipes/PhageGuessesPipe.html":{}}}],["transform(mut",{"_index":1222,"title":{},"body":{"pipes/PhageMutationsPipe.html":{}}}],["transform(par",{"_index":1243,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["transform(person",{"_index":1163,"title":{},"body":{"pipes/PersonNamePipe.html":{}}}],["transform(personlist",{"_index":1147,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{}}}],["transport",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["tri",{"_index":434,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"injectables/LoggedInGuard.html":{},"components/NotAuthComponent.html":{},"components/SigninComponent.html":{},"changelog.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["trim",{"_index":2282,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["tripl",{"_index":2462,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["true",{"_index":173,"title":{},"body":{"injectables/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"components/CourseScenarioComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"components/ResetPasswordComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["true/fals",{"_index":1557,"title":{},"body":{"components/StudentIndivComponent.html":{}}}],["tslib",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1764,"title":{},"body":{"changelog.html":{}}}],["tube/pl",{"_index":779,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"interfaces/Phage.html":{},"interfaces/StudentPhage.html":{}}}],["two",{"_index":1236,"title":{},"body":{"pipes/PhageParentsPipe.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"interfaces/Phage.html":{},"pipes/PhageDeletionsPipe.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/genetics-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["ui",{"_index":1230,"title":{},"body":{"pipes/PhageParentsPipe.html":{}}}],["unabl",{"_index":2167,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["unauthorizederror",{"_index":2246,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unauthorizedif",{"_index":2271,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["undefin",{"_index":768,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageParentsPipe.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{}}}],["under",{"_index":1797,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["uneven",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniqu",{"_index":2503,"title":{},"body":{"additional-documentation/models/course-model.html":{},"additional-documentation/models/scenario-model.html":{}}}],["unknown",{"_index":787,"title":{},"body":{"interfaces/ExperimentPhage.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"interfaces/Phage.html":{},"components/StudentFridgeComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/phage-model.html":{}}}],["unkown",{"_index":1633,"title":{},"body":{"components/StudentPhageComponent.html":{}}}],["unless",{"_index":1984,"title":{},"body":{"license.html":{}}}],["unprocess",{"_index":2251,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["unreleas",{"_index":1753,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":409,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HomeComponent.html":{},"components/SignoutComponent.html":{},"additional-documentation/models/scenario-model.html":{}}}],["unsubscrib",{"_index":502,"title":{},"body":{"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["unsuccess",{"_index":1411,"title":{},"body":{"components/SigninComponent.html":{}}}],["until",{"_index":1740,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["up",{"_index":931,"title":{},"body":{"components/HomeComponent.html":{},"components/ListComponent.html":{},"components/SignupComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updat",{"_index":546,"title":{},"body":{"components/CourseEditComponent.html":{},"components/ForgetPasswordComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"changelog.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["updated.email",{"_index":1750,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.firstnam",{"_index":1748,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated.lastnam",{"_index":1749,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatedst",{"_index":1668,"title":{},"body":{"injectables/StudentService.html":{}}}],["updatepassword",{"_index":1293,"title":{},"body":{"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(req",{"_index":2242,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["updatepassword(userid",{"_index":1300,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatepasswordcompon",{"_index":141,"title":{"components/UpdatePasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["updatephag",{"_index":2062,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/fridge-controller.html":{}}}],["updatephage(req",{"_index":2194,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["updateprofil",{"_index":1732,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["upon",{"_index":1409,"title":{},"body":{"components/SigninComponent.html":{}}}],["url",{"_index":168,"title":{},"body":{"injectables/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"injectables/CourseResolver.html":{},"components/CourseScenarioComponent.html":{},"components/LandingRoomComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"injectables/StudentResolver.html":{},"changelog.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/scenario-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/scenario-model.html":{}}}],["us",{"_index":239,"title":{},"body":{"interfaces/AdminStudent.html":{},"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"interfaces/ExperimentPhage.html":{},"injectables/ExperimentService.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"interfaces/Scenario.html":{},"components/ScenarioComponent.html":{},"modules/ScenarioModule.html":{},"injectables/ScenarioResolver.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"interfaces/StudentPhage.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-logic.html":{},"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["usag",{"_index":1133,"title":{},"body":{"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageDeletionsPipe.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"pipes/PhageParentsPipe.html":{}}}],["useddeletespot",{"_index":2385,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["useddeletespotsarraydelet",{"_index":2390,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["useddeletespotsarraylist",{"_index":2382,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["usedshiftspot",{"_index":2508,"title":{},"body":{"additional-documentation/models/fridge-model.html":{}}}],["user",{"_index":54,"title":{"interfaces/User.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AdminGuard.html":{},"components/AdminHomeComponent.html":{},"modules/AdminModule.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/ExperimentPhage.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/Fridge.html":{},"interfaces/FridgePhage.html":{},"interfaces/GenotypePhage.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"injectables/LoggedInGuard.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Phage.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"interfaces/StudentPhage.html":{},"components/StudentPhageComponent.html":{},"injectables/StudentResolver.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{},"additional-documentation/models/scenario-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user'",{"_index":50,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ForgetPasswordComponent.html":{},"pipes/PeopleListNamesPipe.html":{},"pipes/PersonNamePipe.html":{},"pipes/PhageGuessesPipe.html":{},"injectables/ProfileService.html":{},"components/UpdatePasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/user-model.html":{}}}],["user')if",{"_index":2276,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["user.interfac",{"_index":234,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Course.html":{},"interfaces/Fridge.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{}}}],["user.password",{"_index":1443,"title":{},"body":{"components/SignupComponent.html":{}}}],["user/scenario",{"_index":888,"title":{},"body":{"interfaces/Fridge.html":{},"interfaces/StudentFridge.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/models/phage-model.html":{}}}],["user/stud",{"_index":230,"title":{},"body":{"interfaces/AdminStudent.html":{},"interfaces/Student.html":{}}}],["userbyid",{"_index":2075,"title":{},"body":{"additional-documentation/controllers.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["userbyid(req",{"_index":2272,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["userid",{"_index":237,"title":{},"body":{"interfaces/AdminStudent.html":{},"components/CourseEditComponent.html":{},"components/CourseScenarioComponent.html":{},"interfaces/Fridge.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Student.html":{},"interfaces/StudentFridge.html":{},"injectables/StudentService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"interfaces/_User.html":{},"additional-documentation/controllers/admin-controller.html":{},"additional-documentation/controllers/course-controller.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/controllers/user-controller.html":{},"additional-documentation/models/user-model.html":{}}}],["userinfo",{"_index":1731,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["usernam",{"_index":413,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/controllers/user-controller.html":{}}}],["userprofilecompon",{"_index":143,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"modules/ProfileModule.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users'",{"_index":2185,"title":{},"body":{"additional-documentation/controllers/fridge-controller.html":{}}}],["useruserus",{"_index":2284,"title":{},"body":{"additional-documentation/controllers/user-controller.html":{}}}],["usual",{"_index":938,"title":{},"body":{"components/LandingRoomComponent.html":{}}}],["v1.0.2",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["v1.0.3",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["v1.0.4",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["v1.0.5",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["v1.0.6",{"_index":1795,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":1782,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":345,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/genetics/phage-experiment.html":{},"additional-documentation/models/user-model.html":{}}}],["valu",{"_index":58,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/ModelRoomComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/models/fridge-model.html":{},"additional-documentation/models/phage-model.html":{}}}],["var",{"_index":73,"title":{},"body":{"components/AdminComponent.html":{},"components/AdminHomeComponent.html":{},"interfaces/AdminStudent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteDialogComponent.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"injectables/ExperimentService.html":{},"components/ForgetPasswordComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/LocationComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/NotAuthComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PhageDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ScenarioComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"interfaces/Student.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/StudentPhageComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["vari",{"_index":2398,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["variabl",{"_index":407,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/ModelRoomComponent.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageParentsPipe.html":{},"components/SignoutComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":1691,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["version",{"_index":1977,"title":{},"body":{"license.html":{}}}],["via",{"_index":1361,"title":{},"body":{"modules/ScenarioModule.html":{},"additional-documentation/models/scenario-model.html":{}}}],["view",{"_index":187,"title":{},"body":{"components/AdminHomeComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"modules/CourseModule.html":{},"components/CourseScenarioComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/LocationComponent.html":{},"components/NotAuthComponent.html":{},"components/PhageDialogComponent.html":{},"pipes/PhageParentsPipe.html":{},"components/ScenarioComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"modules/StudentModule.html":{},"components/StudentPhageComponent.html":{}}}],["view/templ",{"_index":1419,"title":{},"body":{"components/SignoutComponent.html":{}}}],["viewstrain",{"_index":1468,"title":{},"body":{"components/StudentFridgeComponent.html":{}}}],["virtual",{"_index":823,"title":{},"body":{"injectables/ExperimentService.html":{}}}],["visibl",{"_index":188,"title":{},"body":{"components/AdminHomeComponent.html":{},"interfaces/Scenario.html":{},"components/StudentFridgeComponent.html":{}}}],["visit",{"_index":1005,"title":{},"body":{"injectables/LoggedInGuard.html":{}}}],["visual",{"_index":1122,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["void",{"_index":53,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthenticationService.html":{},"components/CourseCreateComponent.html":{},"components/CourseEditComponent.html":{},"components/CourseIndivComponent.html":{},"components/CourseListComponent.html":{},"components/CourseScenarioComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LandingRoomComponent.html":{},"components/ListComponent.html":{},"components/ModelRoomComponent.html":{},"components/NavComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SigninComponent.html":{},"components/SignoutComponent.html":{},"components/SignupComponent.html":{},"components/StudentFridgeComponent.html":{},"components/StudentIndivComponent.html":{},"components/StudentListComponent.html":{},"components/UpdatePasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["vs",{"_index":2336,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{}}}],["w",{"_index":1098,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["wait",{"_index":873,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["want",{"_index":468,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{},"components/CourseEditComponent.html":{},"components/StudentIndivComponent.html":{}}}],["warranti",{"_index":1992,"title":{},"body":{"license.html":{}}}],["way",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["webpag",{"_index":2042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["websit",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{},"additional-documentation/models/user-model.html":{}}}],["welcom",{"_index":921,"title":{},"body":{"components/HomeComponent.html":{}}}],["went",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["weren't",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["wheater",{"_index":1033,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["whocal",{"_index":2443,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{},"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringloc",{"_index":2496,"title":{},"body":{"additional-documentation/genetics/plexer-experiment.html":{}}}],["whocalledstringlocation/room",{"_index":2450,"title":{},"body":{"additional-documentation/genetics/plate-experiment.html":{}}}],["whole",{"_index":2406,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["whosaysstringwho",{"_index":2402,"title":{},"body":{"additional-documentation/genetics/phage-logic.html":{}}}],["width",{"_index":1052,"title":{},"body":{"components/ModelRoomComponent.html":{}}}],["window",{"_index":466,"title":{},"body":{"components/ConfirmDeleteDialogComponent.html":{}}}],["windowclass",{"_index":624,"title":{},"body":{"components/CourseEditComponent.html":{}}}],["within",{"_index":718,"title":{},"body":{"components/CourseScenarioComponent.html":{},"components/StudentPhageComponent.html":{},"additional-documentation/controllers/fridge-controller.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["without",{"_index":1991,"title":{},"body":{"license.html":{}}}],["word",{"_index":929,"title":{},"body":{"components/HomeComponent.html":{}}}],["work",{"_index":1709,"title":{},"body":{"components/UpdatePasswordComponent.html":{}}}],["write",{"_index":1987,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1306,"title":{},"body":{"injectables/ProfileService.html":{}}}],["wt",{"_index":1269,"title":{},"body":{"interfaces/PlateInput.html":{},"interfaces/PlateResults.html":{},"interfaces/PlexerInput.html":{},"changelog.html":{},"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/scenario-model.html":{}}}],["wtgene",{"_index":2340,"title":{},"body":{"additional-documentation/genetics/phage-scenario.html":{},"additional-documentation/models/fridge-model.html":{}}}],["x",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{},"components/StudentFridgeComponent.html":{},"additional-documentation/genetics/phage-experiment.html":{}}}],["x[0].text",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["y",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["z",{"_index":1213,"title":{},"body":{"pipes/PhageGuessesPipe.html":{},"pipes/PhageMutationsPipe.html":{}}}],["zone.j",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":208,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/CourseModule.html":{},"modules/HelpModule.html":{},"modules/LocationModule.html":{},"modules/ProfileModule.html":{},"modules/ScenarioModule.html":{},"modules/SharedModule.html":{},"modules/StudentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Entrance component for admin features\nMainly, it is a card that allows navigation between course-related\ninfo and student-related info\nContent of the card is determined by router\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin\n            \n\n\n\n\n            \n                templateUrl\n                ./admin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adminUser\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the currently logged in user's information\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            adminUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adminUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/admin.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Entrance component for admin features\n * Mainly, it is a card that allows navigation between course-related\n * info and student-related info\n * Content of the card is determined by router\n */\n@Component({\n  selector: 'admin',\n  templateUrl: './admin.template.html'\n})\n\nexport class AdminComponent implements OnInit {\n  /**\n   * Logged in user\n   */\n  private adminUser: User;\n  private errorMessage: string = '';\n\n  constructor(\n    private _authenticationService: AuthenticationService\n  ){}\n\n  /**\n   * When initializing the component, get the currently logged in user's information\n   */\n  ngOnInit(){\n    this.adminUser = this._authenticationService.getUser();\n  }\n\n}\n\n    \n\n    \n        \n\n  Administrator Page\n  Instructor Page\n  \n    \n      \n        \n          \n             \n            Courses\n            \n            \n            \n              \n            Students\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Administrator Page  Instructor Page                                                       Courses                                                              Students                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminGuard.html":{"url":"injectables/AdminGuard.html","title":"injectable - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/admin.guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Guard the admin paths so only users with admin or instr\nrole can access the route\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/admin.guard.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/admin.guard.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            Determine if user can activate the route based on their role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is admin or instr\nfalse if user is only a student\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n/**\n * Guard the admin paths so only users with `admin` or `instr`\n * role can access the route\n */\n@Injectable()\nexport class AdminGuard implements CanActivateChild {\n\n  constructor(private _authenticationService: AuthenticationService, private _router: Router) {}\n\n  /**\n   * Determine if user can activate the route based on their role\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {boolean} - `true` if user is `admin` or `instr`\n   * - `false` if user is only a `student`\n   */\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    let role: boolean = this._authenticationService.canAccessAdmin();\n    if(role)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['/admin/not-auth']);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminHomeComponent.html":{"url":"components/AdminHomeComponent.html","title":"component - AdminHomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminHomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/admin-home/admin-home.component.ts\n\n\n    \n        Description\n    \n    \n        A view component that is visible when going to the main admin page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                admin-home\n            \n\n\n\n\n            \n                templateUrl\n                ./admin-home.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A view component that is visible when going to the main admin page\n */\n@Component({\n  selector: 'admin-home',\n  templateUrl: './admin-home.template.html'\n})\n\nexport class AdminHomeComponent{}\n\n    \n\n    \n        \n  Select Courses or Students above.\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Select Courses or Students above.'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminHomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/admin.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for admin functions having to deal with students and courses that should not be accessed by a regular user\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminComponent\n                            \n                            \n                                AdminHomeComponent\n                            \n                            \n                                NotAuthComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AdminGuard\n                            \n                            \n                                     StudentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AdminRoutes } from './admin.routes';\nimport { AdminComponent } from './admin.component';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { NotAuthComponent } from './not-auth/not-auth.component';\n\nimport { AdminGuard } from './admin.guard.service';\n\nimport { StudentService } from './student/student.service';\n\n/**\n * Module for admin functions having to deal with students and courses that should not be accessed by a regular user\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(AdminRoutes)\n  ],\n  declarations: [\n    AdminComponent,\n    AdminHomeComponent,\n    NotAuthComponent\n  ],\n  providers: [\n    AdminGuard,\n    StudentService\n  ]\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminStudent.html":{"url":"interfaces/AdminStudent.html","title":"interface - AdminStudent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AdminStudent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information needed for admin pages about a user/student\n\n            \n\n            \n                Extends\n            \n            \n                    Student\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:     Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main application component;\nLinks the nav bar to the content needed based on the url\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-app\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/app.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The main application component;\n * Links the nav bar to the content needed based on the url\n */\n@Component({\n    selector: 'cricket-app',\n    template: ''\n})\nexport class AppComponent {\n    constructor() { }\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The main bootstrapped module\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                NavComponent\n                            \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthenticationService\n                            \n                            \n                                     CourseService\n                            \n                            \n                                     LoggedInGuard\n                            \n                            \n                                     ScenarioResolver\n                            \n                            \n                                     ScenarioService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AdminModule\n                            \n                            \n                                    AuthenticationModule\n                            \n                            \n                                    HelpModule\n                            \n                            \n                                    ProfileModule\n                            \n                            \n                                    ScenarioModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { McBreadcrumbsConfig } from 'ngx-breadcrumbs';\n\nimport { AppRoutes } from './app.routes';\n\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { LoggedInGuard } from './authentication/logged-in.guard.service';\nimport { ScenarioService } from './scenario/scenario.service';\nimport { CourseService } from './admin/course/course.service';\nimport { ScenarioResolver } from './scenario/scenario.resolver';\n\nimport { SharedModule } from './shared/shared.module';\nimport { AdminModule } from './admin/admin.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { HelpModule } from './help/help.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { ScenarioModule } from './scenario/scenario.module';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { HomeComponent } from './home/home.component';\n\n/**\n * The main bootstrapped module\n */\n@NgModule({\n    imports: [\n        BrowserModule,\n      SharedModule,\n        HttpClientModule,\n      HelpModule,\n      AdminModule,\n      ProfileModule,\n        AuthenticationModule,\n      ScenarioModule,\n      RouterModule.forRoot(AppRoutes)\n    ],\n    declarations: [\n        AppComponent,\n        NavComponent,\n      HomeComponent,\n      PageNotFoundComponent\n    ],\n    providers: [\n      AuthenticationService,\n      LoggedInGuard,\n      ScenarioService,\n      CourseService,\n      ScenarioResolver\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\nconstructor(breadcrumbsConfig: McBreadcrumbsConfig) {\n\n    breadcrumbsConfig.postProcess = (x) => {\n\n      // Ensure that the first breadcrumb always points to home\n\n      let y = x;\n\n      if(x.length && x[0].text !== 'Home') {\n        y = [\n          {\n            text: 'Home',\n            path: ''\n          }\n        ].concat(x);\n      }\n\n      return y;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/authentication/authentication.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module which deals with anything related to authenticating users,\ni.e. logging in/out users and resetting forgotten passwords\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ForgetPasswordComponent\n                            \n                            \n                                ResetPasswordComponent\n                            \n                            \n                                SigninComponent\n                            \n                            \n                                SignoutComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticationRoutes } from './authentication.routes';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SignoutComponent } from './signout/signout.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n/**\n * Module which deals with anything related to authenticating users,\n * i.e. logging in/out users and resetting forgotten passwords\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(AuthenticationRoutes)\n    ],\n    declarations: [\n        SigninComponent,\n        SignupComponent,\n      SignoutComponent,\n      ForgetPasswordComponent,\n      ResetPasswordComponent\n    ]\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that deals with validating and logging in/out users and\nresetting forgotten passwords\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                            \n                                    Private\n                                _user\n                            \n                            \n                                getUser$\n                            \n                            \n                                    Public\n                                redirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAccessAdmin\n                            \n                            \n                                forgetPassword\n                            \n                            \n                                getUser\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                resetPassword\n                            \n                            \n                                setUser\n                            \n                            \n                                signin\n                            \n                            \n                                signout\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/authentication.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAccessAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanAccessAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:66\n                            \n                        \n\n\n                \n                    \n                            Checks if the current user can access the admin pages\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is instr or admin\nfalse if user is only a student\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nforgetPassword(body: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:129\n                            \n                        \n\n\n                \n                    \n                            Submit email address of potential user to allow that user\nto reset their password if the user exists\nThe backend then sends a password reset email to the\nemail address\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrequest body that includes email of user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nSuccess message if password reset email sent\nerror message Error with server email service if problem with email transporter\nerror message No account with that email. if email address doesn't correspond to an existing user\nerror 422 for other server errors\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Get the current user information not as an observable\nso it is synchronous and keeps the app components' ngOnInit\nfunctions cleaner\n\n\n                            \n                            \n                            \n                                Returns :     User\n\n                            \n                                \n                                    the current user or null if no user logged in\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Checks if a user is logged in\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            Attempts to reset a user's password using the credentials\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninfo needed to reset password: password,confirmPassword, andtoken`\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nIf successful, sends success message Passwords has been reset.\nerror message Invalid token if token doesn't match a user\nerror message Token has expired for valid tokens but user took too long to attempt to reset\nerror message for all other errors\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUser(user: User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:35\n                            \n                        \n\n\n                \n                    \n                            Sets the services user variable which is stored after user logs in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    User\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ncurrent user who logged in\nor null to unset the user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin(credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Attempts to sign a user in using the provided credentials\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nusername (as email) and password to be tested for logging in\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe successfully logged in user\nor error message for server/database/authentication error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signout\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:111\n                            \n                        \n\n\n                \n                    \n                            Signs out the user\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    returns true if successfully signed out\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Attempts to create a new user using the provided user details\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuser details including firstName, lastName, username (email), course, and password\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe new logged-in user when successfully create new user\nor error 400 if errror logging in\nor error 500 if error creating user\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/auth/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this._user.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/authentication.service.ts:24\n                            \n                        \n\n                \n                    \n                        When a non-logged in user tries to access a page which requires logging in,\nsave that page's url and direct user there after they log in\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Service that deals with validating and logging in/out users and\n * resetting forgotten passwords\n */\n@Injectable()\nexport class AuthenticationService {\n    private _user: BehaviorSubject = new BehaviorSubject(null);\n    getUser$ = this._user.asObservable();\n\n    private _baseUrl = '/api/auth/'\n\n  /**\n   * When a non-logged in user tries to access a page which requires logging in,\n   * save that page's url and direct user there after they log in\n   */\n    public redirectUrl: string = '/';\n\n    constructor(private http: HttpClient) {\n    }\n\n  /**\n   * Sets the services `user` variable which is stored after user logs in\n   *\n   * @param {User} user - current user who logged in\n   * - or `null` to unset the user\n   */\n  setUser(user: User){\n    this._user.next(user);\n  }\n\n  /**\n   * Get the current user information not as an observable\n   * so it is synchronous and keeps the app components' `ngOnInit`\n   * functions cleaner\n   *\n   * @returns {User} the current user or `null` if no user logged in\n   */\n  getUser(): User{\n    return this._user.getValue();\n  }\n\n  /**\n   * Checks if a user is logged in\n   *\n   * @requires {boolean} - `true` if a user is logged in\n   * - `false` otherwise\n   */\n  isLoggedIn(): boolean{\n    return (!!this.getUser());\n  }\n\n  /**\n   * Checks if the current user can access the admin pages\n   *\n   * @returns {boolean} - `true` if user is instr or admin\n   * - `false` if user is only a student\n   */\n  canAccessAdmin(): boolean{\n    if(this.getUser()){\n      return this.getUser().role > 0\n    }\n    else{\n      return false;\n    }\n  }\n\n  /**\n   * Attempts to sign a user in using the provided credentials\n   *\n   * @param {any} credentials - `username` (as email) and `password` to be tested for logging in\n   *\n   * @returns {Observable} - the successfully logged in user\n   * - or error message for server/database/authentication error\n   */\n  signin(credentials: any): Observable {\n      let body = JSON.stringify(credentials);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signin', body, { headers: headers });\n  }\n\n  /**\n   * Attempts to create a new user using the provided user details\n   *\n   * @param {any} user - user details including `firstName`, `lastName`, `username` (email), `course`, and `password`\n   *\n   * @returns {Observable} - The new logged-in user when successfully create new user\n   * - or error 400 if errror logging in\n   * - or error 500 if error creating user\n   */\n  signup(user: any): Observable {\n      let body = JSON.stringify(user);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post(this._baseUrl + 'signup', body, { headers: headers });\n  }\n\n  /**\n   * Signs out the user\n   *\n   * @returns {Observable} returns `true` if successfully signed out\n   */\n  signout(): Observable{\n    return this.http.get(this._baseUrl + 'signout');\n  }\n\n  /**\n   * Submit email address of potential user to allow that user\n   * to reset their password if the user exists\n   *\n   * The backend then sends a password reset email to the\n   * email address\n   *\n   * @param {any} body - request body that includes `email` of user\n   *\n   * @returns {Observable} - Success message if password reset email sent\n   * - error message `Error with server email service` if problem with email transporter\n   * - error message `No account with that email.` if email address doesn't correspond to an existing user\n   * - error 422 for other server errors\n   */\n  forgetPassword(body: any): Observable{\n    return this.http.post(this._baseUrl + 'forget-password', body);\n  }\n\n  /**\n   * Attempts to reset a user's password using the credentials\n   *\n   * @param {any} credentials - info needed to reset password: `password, `confirmPassword`, and `token`\n   *\n   * @returns {Observable} - If successful, sends success message `Passwords has been reset`.\n   * - error message `Invalid token` if token doesn't match a user\n   * - error message `Token has expired` for valid tokens but user took too long to attempt to reset\n   * - error message for all other errors\n   */\n  resetPassword(credentials: any): Observable{\n    return this.http.post(this._baseUrl + 'reset-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDeleteDialogComponent.html":{"url":"components/ConfirmDeleteDialogComponent.html","title":"component - ConfirmDeleteDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDeleteDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/shared/confirm-delete-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        This is a confirmation dialog when user wants to delete\nsomething sensitive, i.e. another user\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                confirm-delete-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./confirm-delete-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/shared/confirm-delete-dialog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                        Message to be displayed in the dialog window\n\n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: 'Are you sure you want to delete?'\n                        \n                    \n                \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/shared/confirm-delete-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * This is a confirmation dialog when user wants to delete\n * something sensitive, i.e. another user\n */\n@Component({\n  selector: 'confirm-delete-dialog',\n  templateUrl: './confirm-delete-dialog.template.html'\n})\n\nexport class ConfirmDeleteDialogComponent{\n\n  /**\n   * Message to be displayed in the dialog window\n   */\n  @Input() message: string = 'Are you sure you want to delete?'\n\n  constructor(public activeModal: NgbActiveModal){\n\n  }\n}\n\n    \n\n    \n        \n  \n      &times;\n    \n\n\n\n  \n    {{ message }}\n  \n\n\n\n  \n    Cancel\n  \n  \n    Confirm\n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        ×          {{ message }}        Cancel        Confirm  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDeleteDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/course.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information about a course\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courseNum\n                                \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        instructors\n                                \n                                \n                                            Optional\n                                        students\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseNum\n                                    \n                                \n                                \n                                    \n                                        courseNum:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Course number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the course\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instructors\n                                    \n                                \n                                \n                                    \n                                        instructors:     _User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Instructors of the course, if any\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                    \n                                \n                                \n                                    \n                                        students:     Student[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Student[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of students in the course, if any\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Student } from './student.interface';\nimport { _User } from './user.interface';\n\n/**\n * Information about a course\n */\nexport interface Course {\n  /**\n   * Course number\n   */\n  courseNum: string;\n  /**\n   * Description of the course\n   */\n  description: string;\n  /**\n   * List of students in the course, if any\n   */\n  students?: Student[];\n  /**\n   * Instructors of the course, if any\n   */\n  instructors?: _User[]\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseCreateComponent.html":{"url":"components/CourseCreateComponent.html","title":"component - CourseCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-create/course-create.component.ts\n\n\n    \n        Description\n    \n    \n        Component to create a new course\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-create\n            \n\n            \n                styleUrls\n                course-create.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-create.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseDetails\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCourse\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _router: Router, _route: ActivatedRoute, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-create/course-create.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Check that a course number has been entered then\nsubmit course details to backend\nIf course successfully created, go back to list of courses\nIf error, display error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            On component destory, unsubscribe from services if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the currently logged\nin user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:34\n                            \n                        \n\n                \n                    \n                        Logged in admin user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseDetails:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:30\n                            \n                        \n\n                \n                    \n                        \nCourse details to be sent to the backend server\nIncludes courseNum and description\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:24\n                            \n                        \n\n                \n                    \n                        Potential error message from the backend server when trying to\ncreate the course\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-create/course-create.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { User } from '../../../interfaces';\nimport { readErrorMessage } from '../../../shared/read-error'\n\n/**\n * Component to create a new course\n */\n@Component({\n  selector: 'course-create',\n  templateUrl: './course-create.template.html',\n  styleUrls: ['./course-create.style.css']\n})\n\nexport class CourseCreateComponent implements OnInit, OnDestroy {\n  /**\n   * Potential error message from the backend server when trying to\n   * create the course\n   */\n  private errorMessage: string = '';\n  private subscription: Subscription;\n  /**\n   * - Course details to be sent to the backend server\n   * - Includes `courseNum` and `description`\n   */\n  private courseDetails: any = {};\n  /**\n   * Logged in admin user\n   */\n  private admin: User;\n\n  constructor(\n    private _courseService: CourseService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n     private _authService: AuthenticationService\n  ){}\n\n  /**\n   * When initializing the component, get the currently logged\n   * in user\n   */\n  ngOnInit(){\n    this.admin = this._authService.getUser();\n  }\n\n  /**\n   * Check that a course number has been entered then\n   * submit course details to backend\n   *\n   * If course successfully created, go back to list of courses\n   * If error, display error message\n   */\n  createCourse(){\n    if(this.courseDetails.courseNum===''){\n      this.errorMessage = 'Course number is required'\n    } else {\n      this.subscription = this._courseService\n      .createCourse(this.admin.id, this.courseDetails)\n    .subscribe( (result)=>{\n      this._router.navigate(['../', result.courseNum], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n    }\n  }\n\n  /**\n   * On component destory, unsubscribe from services if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Create Course\n  \n  \n    Course Number\n  \n  \n\n  \n    Course Description\n  \n  \n\n  \n    Submit\n  \n  \n    {{errorMessage}}\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create Course        Course Number          Course Description          Submit        {{errorMessage}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseEditComponent.html":{"url":"components/CourseEditComponent.html","title":"component - CourseEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-edit/course-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-edit\n            \n\n            \n                styleUrls\n                course-edit.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-edit.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                possibleInstr\n                            \n                            \n                                selectedAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _callDeleteCourse\n                            \n                            \n                                _callDeleteCourseStudents\n                            \n                            \n                                addInstructor\n                            \n                            \n                                deleteCourse\n                            \n                            \n                                deleteCourseStudents\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-edit/course-edit.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:161\n                            \n                        \n\n\n                \n                    \n                            Helper method which uses service to tell server to delete the course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _callDeleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n_callDeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Helper method with tells service to delete all of the\nstudents in this course\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addInstructor\n                            \n                            \n                        \n                    \n                \n                \n                    \naddInstructor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            \nWhen add instructor button is clicked, send the selected\ninstructor (by userId) to the backend to be added as an instructor\nIf successful, update list of possible instructors\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:145\n                            \n                        \n\n\n                \n                    \n                            \nWhen clicking delete course button, open a dialog\nto confirm deletion\nIf confirmed, call helper method\nIf cancel, do nothing\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteCourseStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteCourseStudents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:178\n                            \n                        \n\n\n                \n                    \n                            \nWhen delete students button is click,\nopen a dialog to confirm deletion\nIf confirm, call helper method\nIf cancel, do nothing\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:209\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from services to prevent a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:71\n                            \n                        \n\n\n                \n                    \n                            On init\n\nget the logged in user\nUse the url param to get course number\nGet course details (using coureNum)\nGet possible instructors (using courseNum)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            When the cancel button is pressed, navigate back to course view page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            When submit button is clicked, submit the updates to be\nsaved in the backend\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:45\n                            \n                        \n\n                \n                    \n                        The logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:33\n                            \n                        \n\n                \n                    \n                        Course being edited\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:54\n                            \n                        \n\n                \n                    \n                        Potential error messages from the backend server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:50\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            possibleInstr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        possibleInstr:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:37\n                            \n                        \n\n                \n                    \n                        List of possible instructors who could be added\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAdd:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-edit/course-edit.component.ts:41\n                            \n                        \n\n                \n                    \n                        Variable used to remember instr selected when adding\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { User } from '../../../interfaces/user.interface';\nimport { Student, AdminStudent, sortStudents } from '../../../interfaces/student.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n@Component({\n  selector: 'course-edit',\n  templateUrl: './course-edit.template.html',\n  styleUrls: ['./course-edit.style.css']\n})\n\n/**\n * Component for editting course details such as\n * adding/removing instructors, updating course description\n */\nexport class CourseEditComponent implements OnInit, OnDestroy{\n\n  /**\n   * Course being edited\n   */\n  courseInfo: Course;\n  /**\n   * List of possible instructors who could be added\n   */\n  private possibleInstr: AdminStudent[];\n  /**\n   * Variable used to remember instr selected when adding\n   */\n  selectedAdd: number;\n  /**\n   * The logged in user\n   */\n  private _admin: User;\n  private paramObserver: any;\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential error messages from the backend server\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _courseService: CourseService,\n    private _authService: AuthenticationService,\n    private _modalService: NgbModal){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * On init\n   * 1. get the logged in user\n   * 2. Use the url param to get course number\n   * 3. Get course details (using coureNum)\n   * 4. Get possible instructors (using courseNum)\n   */\n  ngOnInit(){\n    this._admin = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n\n            this._courseService.getCourse(this._admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n                this.courseInfo = info;\n                this._courseService.getPossibleInstructors(this._admin.id, course)\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((instrs)=>{\n                    this.possibleInstr = instrs.sort(sortStudents);\n                }, (err2)=>{\n                  this.errorMessage = readErrorMessage(err2);\n                  this.possibleInstr = [];\n                });\n              },(error) => {\n                this.errorMessage = readErrorMessage(error);\n              });\n        });\n  }\n\n  /**\n   * When the cancel button is pressed, navigate back to course view page\n   */\n  onCancel(){\n    this._router.navigate(['../'], {relativeTo: this._route});\n  }\n\n  /**\n   * When submit button is clicked, submit the updates to be\n   * saved in the backend\n   */\n  update(){\n    this._courseService\n      .editCourse(this._admin.id, this.courseInfo.courseNum, this.courseInfo)\n    .takeUntil(this.isDestroyed$)\n    .subscribe( (result)=>{\n      // success\n      this._router.navigate(['../'], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * - When add instructor button is clicked, send the selected\n   * instructor (by userId) to the backend to be added as an instructor\n   * - If successful, update list of possible instructors\n   */\n  addInstructor(){\n    if(this.selectedAdd){\n    this._courseService\n      .addInstructor(this._admin.id, this.courseInfo.courseNum, this.selectedAdd)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.courseInfo = updated;\n      this.possibleInstr = this.possibleInstr.filter((elm)=>{\n        return elm.userId != this.selectedAdd\n      });\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n    }\n  }\n  // TODO: remove instructor\n\n  /**\n   * - When clicking delete course button, open a dialog\n   * to confirm deletion\n   * - If confirmed, call helper method\n   * - If cancel, do nothing\n   */\n  deleteCourse(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm', windowClass: 'delete-modal'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourse()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method which uses service to tell server to delete the course\n   */\n  _callDeleteCourse(){\n    this._courseService.deleteCourse(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * - When delete students button is click,\n   * open a dialog to confirm deletion\n   * - If confirm, call helper method\n   * - If cancel, do nothing\n   */\n  deleteCourseStudents(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete all students in course ' + this.courseInfo.courseNum + '?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDeleteCourseStudents()\n      }\n    }, (dismiss)=>{\n      // do nothing\n    })\n  }\n\n  /**\n   * Helper method with tells service to delete all of the\n   * students in this course\n   */\n  _callDeleteCourseStudents(){\n    this._courseService.deleteStudents(this._admin.id, this.courseInfo.courseNum)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/courses/', this.courseInfo.courseNum]);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * Unsubscribe from services to prevent a memory leak\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    {{ courseInfo.courseNum }}\n\n    \n      \n        Instructors\n      \n      \n        {{ instr | personName }}\n      \n    \n\n    \n      \n        Add Instructor\n      \n      \n        \n        Instructor to add\n        {{instr | personName:true }}\n      \n        \n          Add\n        \n      \n    \n    \n      Description\n    \n    \n    \n      \n        Submit\n        Cancel\n      \n    \n    \n      Delete course\n      Delete students in course\n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}        {{ courseInfo.courseNum }}                  Instructors                    {{ instr | personName }}                            Add Instructor                            Instructor to add        {{instr | personName:true }}                        Add                            Description                          Submit        Cancel                    Delete course      Delete students in course        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseIndivComponent.html":{"url":"components/CourseIndivComponent.html","title":"component - CourseIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-indiv/course-indiv.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-indiv\n            \n\n            \n                styleUrls\n                course-indiv.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseInfo\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _courseService: CourseService, _authService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from subscriptions to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Initialize all content on the page using several services\n\nGet the logged in user\nGet the course information (description, instructors)\nGet the list of students in the course\nGet the list of scenarios\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseInfo:     Course\n\n                    \n                \n                    \n                        \n                            Type :     Course\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:34\n                            \n                        \n\n                \n                    \n                        Course info including courseNum, description, instructors\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:48\n                            \n                        \n\n                \n                    \n                        Potential error message that could arise\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:42\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:38\n                            \n                        \n\n                \n                    \n                        list of available scenarios (used for linking)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-indiv/course-indiv.component.ts:30\n                            \n                        \n\n                \n                    \n                        List of students enrolled in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { Course, Student, sortStudents, Scenario, User } from '../../../interfaces';\n\n@Component({\n  selector: 'course-indiv',\n  templateUrl: './course-indiv.template.html',\n  styleUrls: ['./course-indiv.style.css']\n})\n\n\n/**\n * Component to view an individual course\n * Includes information such as course number, description, instructors, and students\n */\nexport class CourseIndivComponent implements OnInit, OnDestroy{\n\n  /**\n   * List of students enrolled in the course\n   */\n  private students: Student[] = [];\n  /**\n   * Course info including `courseNum`, `description`, `instructors`\n   */\n  courseInfo: Course;\n  /**\n   * list of available scenarios (used for linking)\n   */\n  private scenarios: Scenario[];\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  private paramObserver: any;\n\n  /**\n   * Potential error message that could arise\n   */\n  private errorMessage: string = '';\n\n  constructor(\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _courseService: CourseService,\n    private _authService: AuthenticationService,\n    private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize all content on the page using several services\n   * 1. Get the logged in user\n   * 2. Get the course information (description, instructors)\n   * 3. Get the list of students in the course\n   * 4. Get the list of scenarios\n   */\n  ngOnInit(){\n    let admin: User = this._authService.getUser();\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n            this._courseService.getCourse(admin.id, course)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n              this.courseInfo = info;\n              this._courseService.getStudents(admin.id, course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((students)=>{\n                this.students = students.sort(sortStudents);\n                this._scenarioService.listScenarios()\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((scens)=>{\n                    this.scenarios = scens;\n                });\n              });\n            },(error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Unsubscribe from subscriptions to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          {{ courseInfo.courseNum }}\n        \n      \n      Edit\n    \n\n    \n      \n          Description\n        \n        {{ courseInfo.description }}\n     \n    \n      \n          Instructors\n        \n        {{ courseInfo.instructors | peopleListNames }}\n     \n  \n  \n  \n      View Scenario Status \n    \n      \n        By Student\n        \n          {{ student | personName:true }}\n        \n        \n      \n      \n      \n        By Scenario\n        \n          {{ scen.label }}\n        \n      \n      \n    \n    \n     \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                {{ courseInfo.courseNum }}                    Edit                        Description                {{ courseInfo.description }}                         Instructors                {{ courseInfo.instructors | peopleListNames }}                 View Scenario Status                   By Student                  {{ student | personName:true }}                                          By Scenario                  {{ scen.label }}                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseListComponent.html":{"url":"components/CourseListComponent.html","title":"component - CourseListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-list/course-list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists available courses based on logged-in user role\n\nIf admin, lists all available courses\nIf instr, list courses which instructor of\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-list\n            \n\n\n\n\n            \n                templateUrl\n                ./course-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-list/course-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from services if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initialize component by getting list of courses\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     Course[]\n\n                    \n                \n                    \n                        \n                            Type :     Course[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:22\n                            \n                        \n\n                \n                    \n                        List of courses\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-list/course-list.component.ts:26\n                            \n                        \n\n                \n                    \n                        Subscription to course service\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CourseService } from '../course.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\n\nimport { Course, User } from '../../../interfaces';\n\n/**\n * Component which lists available courses based on logged-in user role\n * - If admin, lists all available courses\n * - If instr, list courses which instructor of\n */\n@Component({\n    selector: 'course-list',\n    templateUrl: './course-list.template.html'\n})\nexport class CourseListComponent implements OnInit, OnDestroy{\n  /**\n   * List of courses\n   */\n    private courses: Course[];\n  /**\n   * Subscription to course service\n   */\n  private subscription: Subscription;\n\n    constructor(\n      private _courseService: CourseService,\n      private _authService: AuthenticationService\n    ) {}\n\n    /**\n     * Initialize component by getting list of courses\n     */\n    ngOnInit() {\n      let admin: User = this._authService.getUser();\n      this.subscription = this._courseService.listCourses(admin.id)\n        .subscribe((courses) => {\n        this.courses = courses\n      });\n    }\n\n  /**\n   * On component destruction, unsubscribe from services if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \nCourses\n\n  Create new course\n  \n      {{course.courseNum}}\n   \n \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Courses  Create new course        {{course.courseNum}}    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CourseModule.html":{"url":"modules/CourseModule.html","title":"module - CourseModule","body":"\n                   \n\n\n\n\n  Modules\n  CourseModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_imports\n\n\n\ncluster_CourseModule_providers\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/course/course.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for course-related tasks like adding, editing, \ndeleting, and viewing a course and the students in a course\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CourseCreateComponent\n                            \n                            \n                                CourseEditComponent\n                            \n                            \n                                CourseIndivComponent\n                            \n                            \n                                CourseListComponent\n                            \n                            \n                                CourseScenarioComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CourseResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CourseCreateComponent } from './course-create/course-create.component';\nimport { CourseIndivComponent } from './course-indiv/course-indiv.component';\nimport { CourseEditComponent } from './course-edit/course-edit.component';\nimport { CourseListComponent } from './course-list/course-list.component';\nimport { CourseScenarioComponent } from './course-scenario/course-scenario.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { CourseRoutes } from './course.routes';\nimport { CourseResolver } from './course.resolver';\n\n/**\n * Module for course-related tasks like adding, editing, \n * deleting, and viewing a course and the students in a course\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(CourseRoutes)\n  ],\n  declarations: [\n    CourseCreateComponent,\n    CourseIndivComponent,\n    CourseEditComponent,\n    CourseListComponent,\n    CourseScenarioComponent\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    CourseResolver\n  ]\n})\nexport class CourseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseResolver.html":{"url":"injectables/CourseResolver.html","title":"injectable - CourseResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CourseResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/course/course.resolver.ts\n        \n\n            \n                Description\n            \n            \n                For the navigation breadcrumb, resolves a URL courseNum parameeter\nto the course number\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_courseService: CourseService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Based on the URL courseNum parameter, find the course\nit belongs to\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The course info for the courseNum\nor an empty observable if the id doesn't belong to any course\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { CourseService } from './course.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { Course } from '../../interfaces/course.interface';\n\n/**\n * For the navigation breadcrumb, resolves a URL courseNum parameeter\n * to the course number\n */\n@Injectable()\nexport class CourseResolver implements Resolve {\n\n  constructor(private _courseService: CourseService,\n              private _authService: AuthenticationService\n              ) { }\n  /**\n   * Based on the URL `courseNum` parameter, find the course\n   * it belongs to\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {Observable} The course info for the courseNum\n   * or an empty observable if the id doesn't belong to any course\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n    const courseNum = route.params['courseNum'];\n\n    if (courseNum) {\n      return this._courseService.getCourse(admin.id, courseNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseScenarioComponent.html":{"url":"components/CourseScenarioComponent.html","title":"component - CourseScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CourseScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/course/course-scenario/course-scenario.component.ts\n\n\n    \n        Description\n    \n    \n        This component displays the scenario status of all students\nwithin the course and allows for navigation to student fridges\nand grant access for a student\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                course-scen\n            \n\n            \n                styleUrls\n                course-scenario.style.css\n            \n\n\n\n            \n                templateUrl\n                ./course-scenario.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                admin\n                            \n                            \n                                    Private\n                                courseNum\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Protected\n                                scenario\n                            \n                            \n                                    Protected\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatAccess\n                            \n                            \n                                goToFridge\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _courseService: CourseService, _studentService: StudentService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatAccess(isGranted: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Simple formatting function which returns formatted string\ndepending on if student has access granted or not\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        isGranted\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nhas access been granted\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \nformatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goToFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoToFridge(studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:144\n                            \n                        \n\n\n                \n                    \n                            On \"View Fridge\" button, navigates to that student's fridge\nfor this scenario\nCalled on (click) of \"View Fridge\" button of a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe student's userID\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(studentIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Calls service to grant the student access to the scenario\nCalled on (click) of \"Grant access\" button for a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        studentIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npositional index of student in the list of students; \nThis is NOT the student's userId\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:151\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from services to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Initalize the component\n\nGet the logged in user\nBased on the URL, get the course number and scenario code\nGet the scenario information\nGet the scenario status of students in the course\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:52\n                            \n                        \n\n                \n                    \n                        The logged in admin user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courseNum\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courseNum:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:36\n                            \n                        \n\n                \n                    \n                        The course number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:56\n                            \n                        \n\n                \n                    \n                        Potential backend error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:44\n                            \n                        \n\n                \n                    \n                        State variable to make unsubscribing from services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:48\n                            \n                        \n\n                \n                    \n                        Subscription to observe url courseNum parameter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:40\n                            \n                        \n\n                \n                    \n                        Information about the scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     Student[]\n\n                    \n                \n                    \n                        \n                            Type :     Student[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/course/course-scenario/course-scenario.component.ts:32\n                            \n                        \n\n                \n                    \n                        List of students in the course\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../../student/student.service';\n\nimport { Course, Student, Scenario, User } from '../../../interfaces/';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * This component displays the scenario status of all students\n * within the course and allows for navigation to student fridges\n * and grant access for a student\n */\n@Component({\n  selector: 'course-scen',\n  templateUrl: './course-scenario.template.html',\n  styleUrls: ['./course-scenario.style.css']\n})\n\nexport class CourseScenarioComponent implements OnInit, OnDestroy {\n\n  /**\n   * List of students in the course\n   */\n  protected students: Student[] = [];\n  /**\n   * The course number\n   */\n  private courseNum: string;\n  /**\n   * Information about the scenario\n   */\n  protected scenario: Scenario;\n  /**\n   * State variable to make unsubscribing from services easier\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Subscription to observe url `courseNum` parameter\n   */\n  private paramObserver: any;\n  /**\n  * The logged in admin user\n  */\n  private admin: User;\n  /**\n   * Potential backend error messages\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _authService: AuthenticationService,\n    private _courseService: CourseService,\n    private _studentService: StudentService,\n    private _scenarioService: ScenarioService\n              ){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initalize the component\n   * 1. Get the logged in user\n   * 2. Based on the URL, get the course number and scenario code\n   * 3. Get the scenario information\n   * 4. Get the scenario status of students in the course\n   */\n  ngOnInit() {\n    this.admin = this._authService.getUser();\n    this.paramObserver = this._route.params\n      .subscribe(params => {\n          let course = params['courseNum'];\n          let scenCode = params['scenId'];\n      this.courseNum = course.toUpperCase();\n      this._scenarioService.getScenario(scenCode)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n          // success\n          this.scenario = res;\n        this._courseService.getScenarioStatus(this.admin.id, course, scenCode)\n          .takeUntil(this.isDestroyed$)\n          .subscribe((stats)=>{\n\n            this.students = stats;\n        }, (err2)=>{\n          this.errorMessage = readErrorMessage(err2);\n        });\n\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n        });\n  }\n\n  /**\n   * Simple formatting function which returns formatted string\n   * depending on if student has access granted or not\n   *\n   * @param {boolean} isGranted - has access been granted\n   *\n   * @returns {string} - formatted string; \"Access granted\" if access has been granted, \"Access not granted\" otherwise\n   */\n  formatAccess(isGranted: boolean): string{\n    return (isGranted ? 'Access granted' : 'Access not granted');\n  }\n\n  /**\n   * Calls service to grant the student access to the scenario\n   *\n   * Called on `(click)` of \"Grant access\" button for a student\n   * \n   * @param {number} studentIndex - positional index of student in the list of students; \n   * This is **NOT** the student's userId\n   */\n  grantAccess(studentIndex: number){\n    let scenId = this.scenario.scenCode;\n    let studentId = this.students[studentIndex].userId;\n    this._studentService.grantScenAccess(this.admin.id, studentId, scenId, true)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        if(res !== undefined && res !== null){\n          this.students[studentIndex].status = res.accessGranted[scenId];\n        }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * On \"View Fridge\" button, navigates to that student's fridge\n   * for this scenario\n   *\n   * Called on `(click)` of \"View Fridge\" button of a student\n   *\n   * @param {number} studentId - the student's userID\n   */\n  goToFridge(studentId: number){\n    this._router.navigate(['/admin/students/', studentId, this.scenario.scenCode]);\n  }\n\n  /**\n   * When destroying component, unsubscribe from services to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      {{ courseNum }} \n    \n\n    \n      {{scenario.scenCode}}\n      {{ scenario.label }}\n    \n\n    \n      \n        \n        {{student | personName}}: {{ formatAccess(student.status) }}\n        \n        \n          Grant access\n          View fridge\n        \n         \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}              {{ courseNum }}               {{scenario.scenCode}}      {{ scenario.label }}                              {{student | personName}}: {{ formatAccess(student.status) }}                          Grant access          View fridge                             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CourseScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExperimentPhage.html":{"url":"interfaces/ExperimentPhage.html","title":"interface - ExperimentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExperimentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage interface used for plating and plexer\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        numPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numPhage\n                                    \n                                \n                                \n                                    \n                                        numPhage:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of this phage in the tube/plate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExperimentService.html":{"url":"injectables/ExperimentService.html","title":"injectable - ExperimentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ExperimentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/location/experiment.service.ts\n        \n\n            \n                Description\n            \n            \n                This service performs the plate and plexer experiments used\nwhen crossing or mutating phage strains, i.e. performing a\nvirtual experiment\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPlate\n                            \n                            \n                                performPlexer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/experiment.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPlate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreatePlate(plate: PlateInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            With valid input for the plate, calls the backend to generate\na new plate that is displayed in the lab room\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        plate\n                                                        \n                                                                    PlateInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninformation needed to generate the new plate\nIncludes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nnewly generate plate with info about parents and (is plate full or list of small and large plaques)\nor error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            performPlexer\n                            \n                            \n                        \n                    \n                \n                \n                    \nperformPlexer(data: PlexerInput)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            With valid input, call the backend to generate valid results for the plexer\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    PlexerInput\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ninformation needed to generate the\nplexer results\nInputs a list of phage IDs for the rows and columns, E. coli\nlawn type, location, specials, individual plexer plate capacity\nand scenario data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    the results of the plexer as a 2D array\nwere each cell in the array represents a plate and has\nis plate full or counts of small/large plaques\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api/cricket'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/experiment.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PlateInput, PlateResults, PlexerInput } from '../../interfaces';\n\n/**\n * This service performs the plate and plexer experiments used\n * when crossing or mutating phage strains, i.e. performing a\n * virtual experiment\n */\n@Injectable()\nexport class ExperimentService {\n\n  private _baseURL = 'api/cricket';\n\n  constructor(private _http: HttpClient) { }\n\n  /**\n   * With valid input for the plate, calls the backend to generate\n   * a new plate that is displayed in the lab room\n   *\n   * @param {PlateInput} plate - information needed to generate the new plate\n   * - Includes 1-2 phage with numPhage each, lawn type, location, specials, plate capacity, and scenario data\n   *\n   * @returns {Observable} - newly generate plate with info about parents and (is plate full or list of small and large plaques)\n   * - or error\n   */\n  createPlate(plate: PlateInput): Observable{\n    var res = this._http\n    .post(`${this._baseURL}/plate`, plate)\n    return res;\n  }\n\n  /**\n   * With valid input, call the backend to generate valid results for the plexer\n   *\n   * @param {PlexerInput} data - information needed to generate the\n   * plexer results\n   * - Inputs a list of phage IDs for the rows and columns, E. coli\n   * lawn type, location, specials, individual plexer plate capacity\n   * and scenario data\n   *\n   * @returns {Observable} the results of the plexer as a 2D array\n   * were each cell in the array represents a plate and has\n   * is plate full or counts of small/large plaques\n   */\n  performPlexer(data: PlexerInput): Observable{\n    // data will have rowPhage, colPhage, lawn type, location, specials, capacity, scenarioData\n    var res = this._http\n    .post(`${this._baseURL}/plexer`, data);\n    return res;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/forget-password/forget-password.component.ts\n\n\n    \n        Description\n    \n    \n        If user forgets their password, they can enter\nthere email address. If there is an account with the email address,\nan email is sent with a link that allows user to reset their password\nThis component is for entering email address and\ninforming if email address was valid and reset * password email was successfully sent\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                forget-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./forget-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                email\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                sendForget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/forget-password/forget-password.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from authentication service to prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendForget\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendForget()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            After submitting form, reset success and error messages, send email to the server, and wait for response\n\nIf password reset email successfully set, success message is updated\nIf there was an error (server error, email doesn't below to any user), error message is set with description of the error\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:31\n                            \n                        \n\n                \n                    \n                        User's email to check if an account exists\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:23\n                            \n                        \n\n                \n                    \n                        Possible error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:35\n                            \n                        \n\n                \n                    \n                        Authentication service subscription\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/forget-password/forget-password.component.ts:27\n                            \n                        \n\n                \n                    \n                        Message when reset password email was successfully sent\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * If user forgets their password, they can enter\n * there email address. If there is an account with the email address,\n * an email is sent with a link that allows user to reset their password\n *\n * This component is for entering email address and\n * informing if email address was valid and reset * password email was successfully sent\n */\n@Component({\n    selector: 'forget-pswd',\n    templateUrl: './forget-password.template.html'\n})\nexport class ForgetPasswordComponent implements OnDestroy{\n  /**\n   * Possible error messages\n   */\n  private errorMessage: string = '';\n  /**\n   * Message when reset password email was successfully sent\n   */\n  private successMessage: string = '';\n  /**\n   * User's email to check if an account exists\n   */\n  private email: string;\n  /**\n   * Authentication service subscription\n   */\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService) { }\n\n  /**\n   * After submitting form, reset _success_ and _error_ messages, send email to the server, and wait for response\n   *\n   * - If password reset email successfully set, _success_ message is updated\n   * - If there was an error (server error, email doesn't below to any user), _error_ message is set with description of the error\n   */\n    sendForget() {\n      this.successMessage = '';\n      this.errorMessage = '';\n      let body = {email: this.email};\n        this.subscription = this._authenticationService\n          .forgetPassword(body)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  /**\n   * When destroying component, unsubscribe from authentication service to prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Forget Password?\n    \n    Email\n    \n      \n    Submit\n  {{ successMessage }}\n  {{ errorMessage }}\n      \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forget Password?        Email              Submit  {{ successMessage }}  {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fridge.html":{"url":"interfaces/Fridge.html","title":"interface - Fridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Fridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                A user/scenario fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessGranted\n                                \n                                \n                                        guesses\n                                \n                                \n                                        scenarioDetails\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        strains\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Has access already been granted for this user/scenario;\nFridges for each scenario are the same when access not granted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Deletion guesses\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioDetails\n                                    \n                                \n                                \n                                    \n                                        scenarioDetails:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information for this specific user/scenario needed when\nsubmitting the plexer or generating a new plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario id this fridge belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     FridgePhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FridgePhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User id for owner of this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FridgePhage.html":{"url":"interfaces/FridgePhage.html","title":"interface - FridgePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FridgePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage stored in the fridge\n\n            \n\n            \n                Extends\n            \n            \n                    Phage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                            Optional\n                                        numParents\n                                \n                                \n                                            Optional\n                                        parents\n                                \n                                \n                                        phageType\n                                \n                                \n                                            Optional\n                                        submitted\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description for this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numParents\n                                    \n                                \n                                \n                                    \n                                        numParents:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If user phage, number of parents in the cross to create this phage;\nused to check if one of the parents no longer exists\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If a user phage, the phage used in the cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phageType\n                                    \n                                \n                                \n                                    \n                                        phageType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage type; one of \"reference\", \"unknown\", and \"user\" depending\non who created it and if mutation state is known\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                    \n                                \n                                \n                                    \n                                        submitted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For user phage, should this phage be graded\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GenotypePhage.html":{"url":"interfaces/GenotypePhage.html","title":"interface - GenotypePhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GenotypePhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Phage on the lab room plate that will be saved to\nthe fridge\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                        parents\n                                \n                                \n                                        shifts\n                                \n                                \n                                            Optional\n                                        src\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop locations of deletion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Phage used in cross to create this phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shifts\n                                    \n                                \n                                \n                                    \n                                        shifts:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                    \n                                \n                                \n                                    \n                                        src:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Where the phage is being dragged from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/help/help.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                help\n            \n\n            \n                styleUrls\n                help.style.css\n            \n\n\n\n            \n                templateUrl\n                ./help.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/help/help.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'help',\n  templateUrl: './help.template.html',\n  styleUrls: ['./help.style.css']\n})\n\nexport class HelpComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n\n  Help\nInformation coming soon\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  HelpInformation coming soon'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelpModule.html":{"url":"modules/HelpModule.html","title":"module - HelpModule","body":"\n                   \n\n\n\n\n  Modules\n  HelpModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_HelpModule_imports\n\n\n\n\nHelpComponent\n\nHelpComponent\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/help/help.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HelpComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HelpRoutes } from './help.routes';\nimport { HelpComponent } from './help.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(HelpRoutes)\n  ],\n  declarations: [\n    HelpComponent\n  ]\n})\nexport class HelpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        The home landing page when going to the website\nMainly a view component, but some aspects are dependent\non if a user is logged in and the user role\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n            \n                styleUrls\n                home.style.css\n            \n\n\n\n            \n                templateUrl\n                ./home.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/home/home.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            When destroying the component, unset the user variable\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/home/home.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            When intializing component, get the logged in user, if any\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/home/home.component.ts:23\n                            \n                        \n\n                \n                    \n                        The logged in user, if any\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\n\nimport { User } from '../interfaces/user.interface';\n\n/**\n * The home landing page when going to the website\n *\n * Mainly a view component, but some aspects are dependent\n * on if a user is logged in and the user role\n */\n@Component({\n  selector: 'home',\n  templateUrl: './home.template.html',\n  styleUrls: ['./home.style.css']\n})\n\nexport class HomeComponent implements OnInit, OnDestroy{\n  /**\n   * The logged in user, if any\n   */\n  private user: User;\n\n  constructor(private _authenticationService: AuthenticationService){}\n\n  /**\n   * When intializing component, get the logged in user, if any\n   */\n  ngOnInit(){\n    this.user = this._authenticationService.getUser();\n  }\n\n  /**\n   * When destroying the component, unset the user variable\n   */\n  ngOnDestroy(){\n    this.user = undefined;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Welcome to Crick et al.\n\n    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.\n    \n    \n      \n        Instructor Page\n        Administrator Page\n      \n      \n        Sign out\n      \n    \n    \n    \n      \n        Sign in\n        \n      \n        Sign up\n      \n    \n    \n\n  \n    \n  \n\n\n  Go to Scenarios\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome to Crick et al.    Relive the logic of Crick and collegues as they discover the \"words\" of the genetic code.                      Instructor Page        Administrator Page                    Sign out                                Sign in                      Sign up                        Go to Scenarios'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingRoomComponent.html":{"url":"components/LandingRoomComponent.html","title":"component - LandingRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/landing-room/landing-room.component.ts\n\n\n    \n        Description\n    \n    \n        This component shows the scenario details including\n\npurpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\nrelevance - why the scenario is relevant for learning and future scenarios\nstarting point - description of the phage students start the scenario with\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                landing-room\n            \n\n\n\n\n            \n                templateUrl\n                ./landing-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scenario\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                            Component contructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Angular router\n\n                                                        \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The current URL route to get scenario id\n\n                                                        \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get scenario information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            When destroying the component, unsubscribe if necessary to\nprevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\nGet the details for scenarios\nIf error, go back to home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenario:     Scenario\n\n                    \n                \n                    \n                        \n                            Type :     Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:23\n                            \n                        \n\n                \n                    \n                        The current scenario we are viewing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/landing-room/landing-room.component.ts:27\n                            \n                        \n\n                \n                    \n                        Subscription to the getScenario method of scenario service\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ScenarioService } from '../../scenario.service';\nimport { Scenario } from '../../../interfaces';\n\n/**\n * This component shows the scenario details including\n * 1. purpose - the goal of the scenario, usually either identify mutations of given unknown phage or create phage with certain mutation\n * 2. relevance - why the scenario is relevant for learning and future scenarios\n * 3. starting point - description of the phage students start the scenario with\n */\n@Component({\n  selector: 'landing-room',\n  templateUrl: './landing-room.template.html'\n})\n\nexport class LandingRoomComponent implements OnInit, OnDestroy {\n\n  /**\n   * The current scenario we are viewing\n   */\n  scenario: Scenario;\n  /**\n   * Subscription to the getScenario method of scenario service\n   */\n  private subscription: any;\n\n  /**\n   * Component contructor\n   * @param {Router} _router Angular router\n   * @param {ActivatedRoute} _route The current URL route to get scenario id\n   * @param {ScenarioService} _scenarioService Service to get scenario information\n   */\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _scenarioService: ScenarioService){\n\n  }\n\n  /**\n   * Initialize the component\n   * 1. Get scenCode from the url (use parameter from parent route because this route ends \"/landing-room\")\n   * 2. Get the details for scenarios\n   * If error, go back to home page\n   */\n  ngOnInit(){\n    let scenId = this._route.parent.snapshot.paramMap.get('scenId');\n    this.subscription = this._scenarioService\n      .getScenario(scenId)\n      .subscribe(\n      scenario => {\n        this.scenario = scenario;\n      },\n      error => this._router.navigate(['/'])\n    );\n  }\n\n  /**\n   * When destroying the component, unsubscribe if necessary to\n   * prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{scenario.label}} \n  Purpose\n  {{scenario.purpose}}\n\n  Relevance\n  {{scenario.relevance}}\n\n  Starting Point\n  {{scenario.startingPoint}}\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{scenario.label}}   Purpose  {{scenario.purpose}}  Relevance  {{scenario.relevance}}  Starting Point  {{scenario.startingPoint}}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        Component which lists all available scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario-list\n            \n\n\n\n\n            \n                templateUrl\n                ./list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                scenarios\n                            \n                            \n                                    Private\n                                sSubscription\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            When destroying component, unsubscribe from service if necessary\nto prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initialize the component by using the service to fetch the\nlist of scenarios\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:24\n                            \n                        \n\n                \n                    \n                        list of available scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/list/list.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object of logged in user, if available\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { ScenarioService } from '../scenario.service';\n\nimport { User } from '../../interfaces/user.interface';\nimport { Scenario } from '../../interfaces/scenario.interface';\n\n/**\n * Component which lists all available scenarios\n */\n@Component({\n    selector: 'scenario-list',\n    templateUrl: './list.template.html'\n})\nexport class ListComponent implements OnInit, OnDestroy{\n  /**\n   * User object of logged in user, if available\n   */\n    user: User;\n  /**\n  * list of available scenarios\n  */\n    scenarios: Scenario[];\n    errorMessage: string;\n  private sSubscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService, private _scenarioService: ScenarioService) {\n\n    }\n\n  /**\n   * Initialize the component by using the service to fetch the\n   * list of scenarios\n   */\n    ngOnInit() {\n      this.user = this._authenticationService.getUser();\n      this.sSubscription = this._scenarioService.listScenarios()\n        .subscribe((scenarios) => {\n        this.scenarios = scenarios\n      });\n    }\n\n  /**\n   * When destroying component, unsubscribe from service if necessary\n   * to prevent memory leaks\n   */\n  ngOnDestroy(){\n    if(this.sSubscription)\n    this.sSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  Available Scenarios\n  \n    \n      {{scenario.label}}\n    \n    \n  \n  \n    \n      Sign in or Sign up to see scenarios.\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Available Scenarios            {{scenario.label}}                      Sign in or Sign up to see scenarios.  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationComponent.html":{"url":"components/LocationComponent.html","title":"component - LocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/location.component.ts\n\n\n    \n        Description\n    \n    \n        This is a view component which hosts the location\ntab selection navigator\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                location\n            \n\n            \n                styleUrls\n                location.style.css\n            \n\n\n\n            \n                templateUrl\n                ./location.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * This is a view component which hosts the location\n * tab selection navigator\n */\n@Component({\n  selector: 'location',\n  templateUrl: './location.template.html',\n  styleUrls: ['./location.style.css']\n})\n\nexport class LocationComponent {\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      \n        \n          \n             \n            Info\n            \n            \n            \n              \n            Lab\n          \n            \n            \n              \n            Plexer\n          \n            \n            \n              \n            Model\n          \n            \n          \n        \n        \n        \n          \n        \n        \n      \n      \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                               Info                                                              Lab                                                            Plexer                                                            Model                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/location/location.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FridgeComponent\n                            \n                            \n                                LabRoomComponent\n                            \n                            \n                                LandingRoomComponent\n                            \n                            \n                                LocationComponent\n                            \n                            \n                                ModelRoomComponent\n                            \n                            \n                                PhageDialogComponent\n                            \n                            \n                                PlexerRoomComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                PhageDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ExperimentService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { LocationRoutes } from './location.routes';\n\nimport { ExperimentService } from './experiment.service';\n\nimport { FridgeComponent } from '../fridge/fridge.component';\nimport { PhageDialogComponent } from '../fridge/phage-dialog.component';\n\nimport { LocationComponent } from './location.component';\nimport { LandingRoomComponent } from './landing-room/landing-room.component';\nimport { LabRoomComponent } from './lab-room/lab-room.component';\nimport { PlexerRoomComponent } from './plexer-room/plexer-room.component';\nimport { ModelRoomComponent } from './model-room/model-room.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(LocationRoutes)\n  ],\n  declarations: [\n    FridgeComponent,\n    PhageDialogComponent,\n    LocationComponent,\n    LabRoomComponent,\n    PlexerRoomComponent,\n    ModelRoomComponent,\n    LandingRoomComponent\n  ],\n   entryComponents: [\n    PhageDialogComponent\n  ],\n  providers: [\n    ExperimentService\n  ]\n})\nexport class LocationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggedInGuard.html":{"url":"injectables/LoggedInGuard.html","title":"injectable - LoggedInGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoggedInGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/authentication/logged-in.guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Router guard that makes sure only logged in users can access the page and all child pages\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/logged-in.guard.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Determines if user can activate (visit) a page\nbased on if a user is logged in\nIf not logged in, sets the redirect url to take user back to this page after logging in and\nsends the user to the sign in page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ncurrent URL\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state including the url trying to acess\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if user is logged in\nfalse if user is not logged in\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivateChild\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/logged-in.guard.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Determines if user can activate all child/sub pages depending if user is logged in\nOnly logged in users can activate the pages\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Router guard that makes sure only logged in users can access the page and all child pages\n */\n@Injectable()\nexport class LoggedInGuard implements CanActivate, CanActivateChild {\n\n  constructor(\n    private _authenticationService: AuthenticationService,\n    private _router: Router) {}\n\n  /**\n   * Determines if user can activate (visit) a page\n   * based on if a user is logged in\n   *\n   * If not logged in, sets the redirect url to take user back to this page _after_ logging in and\n   * sends the user to the sign in page\n   *\n   * @param {ActivatedRouteSnapshot} route - current URL\n   * @param {RouterStatesnapshot} state - router state including the url trying to acess\n   *\n   * @returns {boolean} - `true` if user is logged in\n   * - `false` if user is not logged in\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n     state: RouterStateSnapshot\n  ): boolean {\n    let url: string = state.url;\n\n    let isLoggedIn: boolean = this._authenticationService.isLoggedIn();\n    if(isLoggedIn)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['authentication/signin']);\n      return false;\n    }\n  }\n\n  /**\n   * Determines if user can activate all child/sub pages depending if user is logged in\n   *\n   * Only logged in users can activate the pages\n   */\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModelRoomComponent.html":{"url":"components/ModelRoomComponent.html","title":"component - ModelRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModelRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/location/model-room/model-room.component.ts\n\n\n    \n        Description\n    \n    \n        This room is used for students to submit their deletion guesses\nfor phage\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                model-room\n            \n\n            \n                styleUrls\n                model-room.style.css\n            \n\n\n\n            \n                templateUrl\n                ./model-room.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                geneAr\n                            \n                            \n                                    Private\n                                guesses\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                keys\n                            \n                            \n                                    Private\n                                scenarioId\n                            \n                            \n                                    Private\n                                stepSize\n                            \n                            \n                                    Private\n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockClass\n                            \n                            \n                                ngOnDestory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveData\n                            \n                            \n                                toggleBlock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authenticationService: AuthenticationService, _scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/location/model-room/model-room.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBlockClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBlockClass(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Get the CSS classes for a strain guess block\nBlock indicates wheater user thinks that section of the chromosome\nis deleted in the strain\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { 'guess-block btn p-0': boolean; 'btn-outline-secondary': boolean; 'bg-dark': any; }\n\n                            \n                                \n                                    applicable CSS classes in the form\n{'class': boolean, ...}\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestory\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:107\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet user id\nGet the scenario id from parent URL\nGet user guesses from scenario service (set by fridge)\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveData\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Saves the guesses to the backend/database using the service\nCalled on (click) of Save Button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleBlock\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleBlock(strain: number, pos: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Toggle block guess from true to false OR false to true\nCalled on (click) of the block\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        strain\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nstrain number (matches nummber is fridge)\n\n\n                                                        \n                                                \n                                                \n                                                        pos\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nblock index\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _width:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:54\n                            \n                        \n\n                \n                    \n                        CSS width of each block dependent on length of gene and step size\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:50\n                            \n                        \n\n                \n                    \n                        Potential backend error messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geneAr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geneAr:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            guesses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guesses:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:26\n                            \n                        \n\n                \n                    \n                        Current user guesses as object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:59\n                            \n                        \n\n                \n                    \n                        Boolean state variable used to make unsubscribing from\nmultiple services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keys:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of strain numbers included\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarioId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarioId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:42\n                            \n                        \n\n                \n                    \n                        Scenario code\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stepSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stepSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:38\n                            \n                        \n\n                \n                    \n                        Size of each block\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/location/model-room/model-room.component.ts:46\n                            \n                        \n\n                \n                    \n                        User id\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../scenario.service';\nimport { ScenarioGlobals } from '../../scenario.globals';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * This room is used for students to submit their deletion guesses\n * for phage\n */\n@Component({\n    selector: 'model-room',\n    templateUrl: './model-room.template.html',\n  styleUrls: ['./model-room.style.css']\n})\n\nexport class ModelRoomComponent {\n\n  /**\n   * Current user guesses as object\n   */\n  private guesses: any;\n  /**\n   * Array of strain numbers included\n   */\n  private keys: number[];\n  /**\n   *\n   */\n  private geneAr: number[];\n  /**\n   * Size of each block\n   */\n  private stepSize: number;\n  /**\n   * Scenario code\n   */\n  private scenarioId: string;\n  /**\n   * User id\n   */\n  private userId: number;\n  /**\n   * Potential backend error messages\n   */\n  private errorMessage: string = '';\n  /**\n   * CSS width of each block dependent on length of gene and step size\n   */\n  private _width: string;\n  /**\n   * Boolean state variable used to make unsubscribing from\n   * multiple services easier\n   */\n  private isDestroyed$: Subject;\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _authenticationService: AuthenticationService,\n              private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject();\n\n    this.stepSize = ScenarioGlobals.deletionGuessLength;\n    this.geneAr = [];\n    let nBlocks: number = Math.ceil(ScenarioGlobals.geneLength/this.stepSize);\n    for(let i = 0; i  {\n      this.guesses = dels;\n\n      this.keys = Object.keys(dels).map((k)=> {return Number.parseInt(k);});\n      if(this.keys.length === 0){\n        this.errorMessage = 'No phage available for modelling'\n      } else {\n        this.errorMessage = '';\n      }\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * Destroy the component by unsubscribing\n   */\n  ngOnDestory(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  /**\n   * Get the CSS classes for a strain guess block\n   * Block indicates wheater user thinks that section of the chromosome\n   * is deleted in the strain\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   *\n   * @returns {Object} applicable CSS classes in the form\n   * `{'class': boolean, ...}`\n   */\n  getBlockClass(strain: number, pos: number){\n    let posGuess = this.guesses[strain][pos];\n    return {\n      'guess-block btn p-0': true,\n      'btn-outline-secondary': !posGuess, // inactive\n      'bg-dark': posGuess // active\n    }\n  }\n\n  /**\n   * Toggle block guess from true to false OR false to true\n   *\n   * Called on `(click)` of the block\n   *\n   * @param {number} strain - strain number (matches nummber is fridge)\n   * @param {number} pos - block index\n   */\n  toggleBlock(strain: number, pos: number){\n    let c = this.guesses[strain][pos];\n    this.guesses[strain][pos] = !c;\n  }\n\n  /**\n   * Saves the guesses to the backend/database using the service\n   *\n   * Called on `(click)` of Save Button\n   */\n  saveData(){\n    // clear error message beforehand\n    this.errorMessage = '';\n    // use service and save data (as a string)\n    let out = JSON.stringify(this.guesses)\n    this._scenarioService\n      .saveDeletions(this.guesses, this.userId, this.scenarioId)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((dat)=>{\n      this.guesses = JSON.parse(dat);\n      this._scenarioService.setScenario(null, dat);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n}\n\n    \n\n    \n        \n\n  {{errorMessage}}\n   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">\n      Save\n  \n \n 0\" class=\"row w-100\" id=\"modeller\">\n  \n    \n      {{phage+1}}\n    \n  \n  \n    \n      \n         \n      \n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{errorMessage}}   0\" class=\"btn btn-primary col-4 col-sm-3 col-md-2\" (click)=\"saveData()\">      Save    0\" class=\"row w-100\" id=\"modeller\">            {{phage+1}}                                         '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModelRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/nav/nav.component.ts\n\n\n    \n        Description\n    \n    \n        Navigation bar at the top of the site\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cricket-nav\n            \n\n            \n                styleUrls\n                nav.style.css\n            \n\n\n\n            \n                templateUrl\n                ./nav.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing, if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Initiate the component by getting the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:24\n                            \n                        \n\n                \n                    \n                        Subscription stream for the authetnication service\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/nav/nav.component.ts:20\n                            \n                        \n\n                \n                    \n                        User object used to determine if profile link should be\nincluded in the nav bar\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Navigation bar at the top of the site\n */\n@Component({\n    selector: 'cricket-nav',\n    templateUrl: './nav.template.html',\n    styleUrls: ['./nav.style.css']\n})\nexport class NavComponent implements OnInit, OnDestroy {\n\n  /**\n   * User object used to determine if profile link should be\n   * included in the nav bar\n   */\n  private user: User;\n  /**\n   * Subscription stream for the authetnication service\n   */\n  private subscription: any;\n\n  constructor(private _authService: AuthenticationService) {\n    }\n\n  /**\n   * Initiate the component by getting the current user\n   */\n  ngOnInit(){\n    this.subscription = this._authService.getUser$\n    .subscribe((res)=>{\n      this.user = res\n    });\n  }\n\n  /**\n   * Destory the component by unsubscribing, if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n    \n  \n-->\n\n  \n    \n    Cricket\n  \n  \n    \n  \n\n  \n    \n      \n        Scenarios\n      \n      \n        Help\n      \n      \n        Profile\n        \n          Sign out\n        \n      \n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Cricket                              Scenarios            -->          Cricket                              Scenarios                    Help                    Profile                  Sign out                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotAuthComponent.html":{"url":"components/NotAuthComponent.html","title":"component - NotAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/not-auth/not-auth.component.ts\n\n\n    \n        Description\n    \n    \n        A basic view component when user tries to access an admin\npage but does not have admin access\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-auth\n            \n\n\n\n\n            \n                templateUrl\n                ./not-auth.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A basic view component when user tries to access an admin\n * page but does not have admin access\n */\n@Component({\n  selector: 'not-auth',\n  templateUrl: './not-auth.template.html'\n})\n\nexport class NotAuthComponent{\n\n}\n\n    \n\n    \n        \n  \n    NOT AUTHORIZED\n    Return\n      Home\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      NOT AUTHORIZED    Return      Home      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/page-not-found/page-not-found.component.ts\n\n\n    \n        Description\n    \n    \n        When URL goes to a page that doesn't exist;\nThis is simple, visual component needed to get the template\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-not-found\n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.template.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/page-not-found/page-not-found.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * When URL goes to a page that doesn't exist;\n * This is simple, visual component needed to get the template\n */\n@Component({\n  selector: 'page-not-found',\n  templateUrl: './page-not-found.template.html',\n})\n\nexport class PageNotFoundComponent{\n\n  constructor(){}\n}\n\n    \n\n    \n        \n  Page Not Found\n\n  Go Back Home\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Page Not Found  Go Back Home'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PeopleListNamesPipe.html":{"url":"pipes/PeopleListNamesPipe.html","title":"pipe - PeopleListNamesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PeopleListNamesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/people-list-names.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format a list of user's or students frist and last name as \"firstName lastName\"\n\nWhen reverse is true, format as \"lastName, firstName\"\nAble to handle when only first or last name is set\n\nUsage: {{ peopleList | peopleListNames:isReverse }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            Normal output :  \n[{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mickey Mouse, Donald Duck\"\n                        \n                        \n                            Reverse ouput :  \n[{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mouse, Mickey; Duck, Donald\"\n                        \n                        \n                            Missing names :  \n[{firstName: undefined, lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: undefined}] becomes \"Mouse, Donald\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        peopleListNames\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(personList: any[], reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/people-list-names.pipe.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personList\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format a list of user's or students frist and last name as \"firstName lastName\"\n * - When reverse is true, format as \"lastName, firstName\"\n * - Able to handle when only first or last name is set\n *\n * **Usage:** `{{ peopleList | peopleListNames:isReverse }}`\n *\n * @example Normal output :  \n * [{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mickey Mouse, Donald Duck\"\n * @example Reverse ouput :  \n * [{firstName: \"Mickey\", lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: \"Duck\"}] becomes \"Mouse, Mickey; Duck, Donald\"\n * @example Missing names :  \n * [{firstName: undefined, lastName: \"Mouse\"}, {firstName: \"Donald\", lastName: undefined}] becomes \"Mouse, Donald\"\n */\n@Pipe({name: 'peopleListNames'})\nexport class PeopleListNamesPipe implements PipeTransform {\n\n  transform(personList: any[], reverse: boolean): string {\n    let out = '';\n    for(let person of personList){\n      let fName: string = person.firstName || '';\n      let lName: string = person.lastName || '';\n      if(out !== '' && (fName !== '' || lName !== '')){\n        out += (reverse ? '; ' : ', ');\n      }\n    if(reverse){\n      out += lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n      } else {\n    out += fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n      }\n    }// end for\n    return out\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PersonNamePipe.html":{"url":"pipes/PersonNamePipe.html","title":"pipe - PersonNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PersonNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/person-name.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format a user's or students frist and last name as \"firstName lastName\"\n\nWhen reverse is true, format as \"lastName, firstName\"\nAble to handle when only first or last name is set\n\nUsage: {{ person | personName:isReverse }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            Normal output :  \n{firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mickey Mouse\"\n                        \n                        \n                            Reverse output :  \n{firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mouse, Mickey\"\n                        \n                        \n                            First name only :  \n{firstName: \"Mickey\", lastName: undefined} becomes \"Mickey\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        personName\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(person: any, reverse: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/person-name.pipe.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        reverse\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format a user's or students frist and last name as \"firstName lastName\"\n * - When reverse is true, format as \"lastName, firstName\"\n * - Able to handle when only first or last name is set\n *\n * **Usage:** `{{ person | personName:isReverse }}`\n *\n * @example Normal output :  \n * {firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mickey Mouse\"\n * @example Reverse output :  \n * {firstName: \"Mickey\", lastName: \"Mouse\"} becomes \"Mouse, Mickey\"\n * @example First name only :  \n * {firstName: \"Mickey\", lastName: undefined} becomes \"Mickey\"\n*/\n@Pipe({name: 'personName'})\nexport class PersonNamePipe implements PipeTransform {\n\n  transform(person: any, reverse: boolean): string {\n    let fName: string = person.firstName || '';\n    let lName: string = person.lastName || '';\n  if(reverse){\n    return lName + (fName!=='' && lName !== '' ? ', ' : '')+fName;\n  } else {\n    return fName + (fName!=='' && lName !== '' ? ' ' : '')+lName;\n  }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Phage.html":{"url":"interfaces/Phage.html","title":"interface - Phage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Phage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Base phage interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        strainNum\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    MongoDB object ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strainNum\n                                    \n                                \n                                \n                                    \n                                        strainNum:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Location in fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageDeletionsPipe.html":{"url":"pipes/PhageDeletionsPipe.html","title":"pipe - PhageDeletionsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageDeletionsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-deletions.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's deletions (if any)\nUsage: {{ deletionlist | phageDeletions }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One deletion:  \n[50,145] becomes \"50 - 145\"\n                        \n                        \n                            Multiple deletions:  \n[50, 140, 190, 260] becomes \"50 - 140, 190 - 260\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageDeletions\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(deletion: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-deletions.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deletion\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format the textual presentation of a phage strain's deletions (if any)\n *\n * **Usage:** `{{ deletionlist | phageDeletions }}`\n *\n * @example One deletion:  \n * [50,145] becomes \"50 - 145\"\n * @example Multiple deletions:  \n * [50, 140, 190, 260] becomes \"50 - 140, 190 - 260\"\n */\n@Pipe({name: 'phageDeletions'})\nexport class PhageDeletionsPipe implements PipeTransform {\n\n  transform(deletion: number[]): string {\n    let out = '';\n    let mLength = (deletion.length % 2 === 0 ? deletion.length : deletion.length -1);\n\n    for(let i = 0; i  1 ? ', ' : '');\n      out += deletion[i] + ' - ' + deletion[i+1];\n    }\n\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhageDialogComponent.html":{"url":"components/PhageDialogComponent.html","title":"component - PhageDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhageDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/fridge/phage-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Modal dialog box for individual phage strains\nUsed to edit phage comment, view phage parents, or delete phage\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                phage-dialog-content\n            \n\n\n\n\n            \n                templateUrl\n                ./phage-dialog.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/fridge/phage-dialog.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                        The phage we are viewing\n\n                            \n                            Type:    FridgePhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeModal:     NgbActiveModal\n\n                    \n                \n                    \n                        \n                            Type :     NgbActiveModal\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/scenario/fridge/phage-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\nimport { FridgePhage } from '../../interfaces/phage.interface';\n\n/**\n * Modal dialog box for individual phage strains\n * Used to edit phage comment, view phage parents, or delete phage\n */\n@Component({\n  selector: 'phage-dialog-content',\n  templateUrl: './phage-dialog.template.html'\n})\nexport class PhageDialogComponent {\n  /**\n   * The phage we are viewing\n   */\n  @Input() phage: FridgePhage;\n\n  constructor(public activeModal: NgbActiveModal) {\n  }\n\n}\n\n    \n\n    \n        \n  Strain {{phage.strainNum + 1}}\n  \n        &times;\n      \n\n\n  \n    \n      Type\n      \n        \n      \n    \n    \n    \n      Comment\n      \n        \n      \n    \n    \n    \n      Submitted\n      \n        \n      \n    \n    \n\n     0\" id=\"viewParents\" class=\"row form-group mb-1\">\n      Parents\n      \n        {{phage.parents | phageParents:phage.numParents}}\n      \n    \n    \n  \n\n\n\n  Delete\n  Cancel\n  Save\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Strain {{phage.strainNum + 1}}          ×                  Type                                      Comment                                      Submitted                                 0\" id=\"viewParents\" class=\"row form-group mb-1\">      Parents              {{phage.parents | phageParents:phage.numParents}}                  Delete  Cancel  Save'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PhageDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageGuessesPipe.html":{"url":"pipes/PhageGuessesPipe.html","title":"pipe - PhageGuessesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageGuessesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-guesses.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of the deletion guessses for\na user's phage strain; uses a scenario global variable deletionGuessLength to determine\nthe ranges\nUsage: {{ guessList | phageGuesses }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One deletion guess:  \n[false, true, true, true, false, ...] becomes \"10-40\"\n                        \n                        \n                            No deletion guesses:  \n[false, ..., false] becomes \"None\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageGuesses\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(guesses: boolean[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-guesses.pipe.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        guesses\n                                                        \n                                                                    boolean[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { ScenarioGlobals } from '../scenario/scenario.globals';\n\n/**\n * Format the textual presentation of the deletion guessses for\n * a user's phage strain; uses a [scenario global]{@link\n * ScenarioGlobals} variable `deletionGuessLength` to determine\n * the ranges\n *\n * **Usage:** `{{ guessList | phageGuesses }}`\n *\n * @example One deletion guess:  \n * [false, true, true, true, false, ...] becomes \"10-40\"\n * @example No deletion guesses:  \n * [false, ..., false] becomes \"None\"\n */\n\n@Pipe({name: 'phageGuesses'})\nexport class PhageGuessesPipe implements PipeTransform {\n\n  transform(guesses: boolean[]): string {\n    let stepSize = ScenarioGlobals.deletionGuessLength;\n    let out = '';\n    let x=-1;\n    for(let i in guesses){\n      let y: number = +i;\n      // start new deletion\n      if(x = 0 && guesses[y] === false){\n        let z = (stepSize * y);\n        out += (out === '' ? '' : ', ');\n        out += x + ' - ' + z;\n        x = -1;\n      }\n    }\n    // check for the last possible deletion\n    if(x != -1){\n      out += (out === '' ? '' : ', ');\n      out += x + ' - ' + ScenarioGlobals.geneLength;\n    }\n    if(out === ''){\n      return 'None';\n    } else {\n    return out;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageMutationsPipe.html":{"url":"pipes/PhageMutationsPipe.html","title":"pipe - PhageMutationsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageMutationsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-mutations.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's frameshift mutations (if any)\nUsage: {{ mutationList | phageMutations }}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One negative frameshift mutation:  \n[-87] becomes \"-1 at 87\"\n                        \n                        \n                            One positive frameshift mutation:  \n[163] becomes \"+1 at 163\"\n                        \n                        \n                            Multiple frameshift mutations:  \n[32, -208] becomes \"+1 at 32, -1 at 208\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageMutations\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(mutations: number[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-mutations.pipe.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mutations\n                                                        \n                                                                    number[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Format the textual presentation of a phage strain's frameshift mutations (if any)\n *\n * **Usage:** `{{ mutationList | phageMutations }}`\n *\n * @example One negative frameshift mutation:  \n * [-87] becomes \"-1 at 87\"\n * @example One positive frameshift mutation:  \n * [163] becomes \"+1 at 163\"\n * @example Multiple frameshift mutations:  \n * [32, -208] becomes \"+1 at 32, -1 at 208\"\n */\n@Pipe({name: 'phageMutations'})\nexport class PhageMutationsPipe implements PipeTransform {\n\n  transform(mutations: number[]): string {\n    let out = '';\n    for(let x of mutations){\n      out += (out === '' ? '' : ', ');\n      let y = (x > 0 ? '+1' : '-1');\n      let z = Math.abs(x);\n      out += y + ' at ' + z;\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PhageParentsPipe.html":{"url":"pipes/PhageParentsPipe.html","title":"pipe - PhageParentsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  PhageParentsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/pipes/phage-parents.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Format the textual presentation of a phage strain's parents\n(if any) when viewing the dialog box for a phage\nThe numParents variable is used to determine if one of the\nparents had been deleted from the database when parents.length != numParents\nNote: the phage strainNum are 0-based but UI is 1-based so\nthe strain number is adjusted\nUsage: {{parentsList | phageParents:numParents}}\n\n            \n\n            \n                Example\n            \n            \n                        \n                            One parent :  \n{parents: [{id: 'id1', strainNum: '4'}], numParents: 1} becomes \"Strain 5\"\n                        \n                        \n                            Two parents:  \n{parents: [{id: 'id1', strainNum: 4}, {id: 'id2', strainNum: 10}], numParents: 2} becomes \"Strains 5 and 11\"\n                        \n                        \n                            Two parents but missing one:  \n{parents: [{id: 'id3', strainNum: 8}], numParents: 2} becomes \"Strains 9 and ?\"\n                        \n            \n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        phageParents\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(parents: Phage[], numParents: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/pipes/phage-parents.pipe.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parents\n                                                        \n                                                                    Phage[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        numParents\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Phage } from '../interfaces/phage.interface';\n\n/**\n * Format the textual presentation of a phage strain's parents\n * (if any) when viewing the dialog box for a phage\n *\n * The `numParents` variable is used to determine if one of the\n * parents had been deleted from the database when `parents.length != numParents`\n *\n * Note: the phage `strainNum` are 0-based but UI is 1-based so\n * the strain number is adjusted\n *\n * **Usage:** `{{parentsList | phageParents:numParents}}`\n *\n * @example One parent :  \n * {parents: [{id: 'id1', strainNum: '4'}], numParents: 1} becomes \"Strain 5\"\n * @example Two parents:  \n * {parents: [{id: 'id1', strainNum: 4}, {id: 'id2', strainNum: 10}], numParents: 2} becomes \"Strains 5 and 11\"\n * @example Two parents but missing one:  \n * {parents: [{id: 'id3', strainNum: 8}], numParents: 2} becomes \"Strains 9 and ?\"\n */\n@Pipe({name: 'phageParents'})\nexport class PhageParentsPipe implements PipeTransform {\n\n  transform(parents: Phage[], numParents: number): string {\n    let out = '';\n    if(numParents === undefined){\n      numParents = parents.length\n    }\n    if(parents.length === 0){\n      return out;\n    }\n    let sorted: Phage[] = parents.sort((n1, n2)=>{return n1.strainNum - n2.strainNum});\n    let nums = sorted.map((phage)=>{return (phage.strainNum+1).toString()});\n\n    if(sorted.length === 1 && numParents === 1){\n      out = 'Strain ' + nums[0];\n    } else if(sorted.length === 1 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ?';\n    } else if(sorted.length === 2 && numParents === 2){\n      out = 'Strains ' + nums[0] + ' and ' + nums[1];\n    }\n    return out;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateInput.html":{"url":"interfaces/PlateInput.html","title":"interface - PlateInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to create a new plate\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        phage1\n                                \n                                \n                                        phage2\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phage1\n                                    \n                                \n                                \n                                    \n                                        phage1:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phage2\n                                    \n                                \n                                \n                                    \n                                        phage2:     ExperimentPhage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlateResults.html":{"url":"interfaces/PlateResults.html","title":"interface - PlateResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlateResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Data from server representing the lab room plate\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        full\n                                \n                                \n                                        genotypes\n                                \n                                \n                                        largePlaque\n                                \n                                \n                                        parents\n                                \n                                \n                                        smallPlaque\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        full\n                                    \n                                \n                                \n                                    \n                                        full:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is the plate over capacity?\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genotypes\n                                    \n                                \n                                \n                                    \n                                        genotypes:     _genotype[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _genotype[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of genotypes of the phage of the plate; several individual\nphage from \"smallPlaque\" and \"largePlaque\" can correspond to the\nsame genotype\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        largePlaque\n                                    \n                                \n                                \n                                    \n                                        largePlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    mutatnt phenotype phage on the plate; each number indicates\nthe index of the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     Phage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Phage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage used to create this plate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smallPlaque\n                                    \n                                \n                                \n                                    \n                                        smallPlaque:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    WT-phenotype phage on the plate; each number indicates the index\nof the phage genotype in genotypes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlexerInput.html":{"url":"interfaces/PlexerInput.html","title":"interface - PlexerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlexerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/experiment.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed to submit the plexer\n\n            \n\n            \n                Extends\n            \n            \n                    _experimentInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        colPhage\n                                \n                                \n                                        rowPhage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colPhage\n                                    \n                                \n                                \n                                    \n                                        colPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the columns of the plexer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowPhage\n                                    \n                                \n                                \n                                    \n                                        rowPhage:     ExperimentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExperimentPhage[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of phage in the rows of the plexer\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExperimentPhage, GenotypePhage, Phage } from './phage.interface';\n\n/**\n * @ignore\n */\nexport interface _experimentInput {\n  /**\n   * E. coli bacteria type; either \"B\" or \"K\"\n   */\n  lawnType: string;\n  /**\n   * Not used - empty object\n   */\n  specials: Object;\n  /**\n   * Room that performing the experient; either \"lab\" or \"plexer\"\n   */\n  location: string;\n  /**\n   * Scenario details needed to for genetics to create phage on the plate\n   */\n  scenarioData: string;\n  /**\n   * Maximum number of phage that can be plated\n   */\n  capacity: number;\n}\n/**\n * Information needed to create a new plate\n */\nexport interface PlateInput extends _experimentInput {\n  phage1: ExperimentPhage;\n  phage2: ExperimentPhage;\n}\n\n/**\n * @ignore\n */\nexport interface _genotype {\n  shifts: number[];\n  deletion: number[];\n}\n/**\n * Data from server representing the lab room plate\n */\nexport interface PlateResults {\n  /**\n   * Is the plate over capacity?\n   */\n  full: boolean;\n  /**\n   * WT-phenotype phage on the plate; each number indicates the index\n   * of the phage genotype in genotypes\n   */\n  smallPlaque: number[];\n  /**\n   * mutatnt phenotype phage on the plate; each number indicates\n   * the index of the phage genotype in genotypes\n   */\n  largePlaque: number[];\n  /**\n   * List of genotypes of the phage of the plate; several individual\n   * phage from \"smallPlaque\" and \"largePlaque\" can correspond to the\n   * same genotype\n   */\n  genotypes: _genotype[];\n  /**\n   * List of phage used to create this plate\n   */\n  parents: Phage[];\n}\n\n/**\n * Information needed to submit the plexer\n */\nexport interface PlexerInput extends _experimentInput {\n  /**\n   * List of phage in the rows of the plexer\n   */\n  rowPhage: ExperimentPhage[];\n  /**\n   * List of phage in the columns of the plexer\n   */\n  colPhage: ExperimentPhage[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  ProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/profile/profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                UpdatePasswordComponent\n                            \n                            \n                                UserProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProfileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ProfileRoutes } from './profile.routes';\nimport { ProfileService } from './profile.service';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ProfileRoutes)\n  ],\n  declarations: [\n    UserProfileComponent,\n    UpdatePasswordComponent\n  ],\n  providers: [\n    ProfileService\n  ]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Functions which communicate to backend to allow\nusers to update their profile and/or change the password\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editProfile\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \neditProfile(userId: number, details: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Edit details about the user profile including\n\nNme\nEmail address\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of the logged in user\n\n                                                        \n                                                \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                user details to update with\nexisiting information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe updated user information\nor error \"User does not exist\" if non-existant user\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword(userId: number, credentials: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Update the user's password once already signed in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                userID of logged in user\n\n                                                        \n                                                \n                                                \n                                                        credentials\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \npassword information\nincludes: \"password\" (old password) and \"newPassword\"  (password to update to)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about the user just updated\nor error \"User does not exist\" if non-existant user\nor error \"Incorrect password\" if wrong old password\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/users/'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                        Leading backend url path\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { User } from '../interfaces/user.interface';\n\n/**\n * Functions which communicate to backend to allow\n * users to update their profile and/or change the password\n */\n@Injectable()\nexport class ProfileService {\n\n  /**\n   * Leading backend url path\n   */\n  private _baseUrl: string = '/api/users/';\n\n  constructor(private http: HttpClient){}\n\n  /**\n   * Edit details about the user profile including\n   * 1. Nme\n   * 2. Email address\n   *\n   * @param {number} userId userID of the logged in user\n   * @param {any} details user details to update with\n   * exisiting information\n   *\n   * @returns {Observable} - The updated user information\n   * - or error \"User does not exist\" if non-existant user\n   * - or other server/database error\n   */\n  editProfile(userId: number, details: any): Observable{\n    return this.http.post(this._baseUrl + userId, details);\n  }\n\n  /**\n   * Update the user's password once already signed in\n   *\n   * @param {number} userId userID of logged in user\n   * @param {any} credentials - password information\n   * - includes: \"password\" (old password) and \"newPassword\"  (password to update to)\n   *\n   * @returns {Observable} - information about the user just updated\n   * - or error \"User does not exist\" if non-existant user\n   * - or error \"Incorrect password\" if wrong old password\n   * - or other server/database error\n   */\n  updatePassword(userId: number, credentials: any): Observable{\n    return this.http.post(this._baseUrl + userId + '/update-password', credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/reset-password/reset-password.component.ts\n\n\n    \n        Description\n    \n    \n        After user requests to reset password and they have a token,\nthis component allows them to set the password to a new password\n(assuming token is valid)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                reset-pswd\n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDisabled\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/reset-password/reset-password.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n_checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Compares the input passwords to make sure they are both specified and that they match each other\n\n\n                            \n                                Returns :     \"Enter new password\" | \"Confirm new password\" | \"Confirm password does not match\" | \"\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from authentication service if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            When initializing the component, get the token from the URL\nIf there is no token, give error message and disable submit button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendReset\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendReset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Attempts to reset the new password\n\nCheck the input passwords for errors\nIf no errors, send credentials to server\nPassword correctly reset, displays the success message\nIf error reseting the password, displays error message\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        Email and new passwords to be able to update the database\n\npassword - the new password to set\nconfirmPassword - confirm password typed correctly\ntoken - password reset token to confirm user had access to the email and didn't wait too long\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                        Potential error message from server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:41\n                            \n                        \n\n                \n                    \n                        Is the submit button disabled; this would happen when\nthere is no token\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:36\n                            \n                        \n\n                \n                    \n                        Subscription to AuthenticationService when retting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            successMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        successMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/reset-password/reset-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        Message when new password successfully saved\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * After user requests to reset password and they have a token,\n * this component allows them to set the password to a new password\n * (assuming token is valid)\n */\n@Component({\n    selector: 'reset-pswd',\n    templateUrl: './reset-password.template.html'\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  /**\n   * Potential error message from server\n   */\n    private errorMessage: string = '';\n  /**\n   * Message when new password successfully saved\n   */\n  private successMessage: string = '';\n  /**\n   * Email and new passwords to be able to update the database\n   * - `password` - the new password to set\n   * - `confirmPassword` - confirm password typed correctly\n   * - `token` - password reset token to confirm user had access to the email and didn't wait too long\n   */\n    private credentials: any;\n  /**\n   * Subscription to {@link AuthenticationService} when retting\n   */\n  private subscription: Subscription;\n  /**\n   * Is the submit button disabled; this would happen when\n   * there is no token\n   */\n  private isDisabled: boolean = false;\n\n    constructor(\n      private _authenticationService: AuthenticationService,\n      private _route: ActivatedRoute\n    ) {\n      this.credentials = {\n        password: '',\n        confirmPassword: '',\n        token: null\n      }\n    }\n  /**\n   * When initializing the component, get the token from the URL\n   *\n   * If there is no token, give error message and disable submit button\n   */\n  ngOnInit(){\n    this.credentials.token = this._route.snapshot.paramMap.get('token');\n    if(this.credentials.token === ''){\n      this.errorMessage = 'No token specified';\n      this.isDisabled = true;\n    }\n  }\n\n  /**\n   * Attempts to reset the new password\n   * 1. Check the input passwords for errors\n   * 2. If no errors, send credentials to server\n   * 3. Password correctly reset, displays the success message\n   * 4. If error reseting the password, displays error message\n   */\n    sendReset() {\n      this.successMessage = '';\n       this.errorMessage = this._checkPasswords();\n      if(this.errorMessage === ''){ // able to submit\n        this.subscription = this._authenticationService\n          .resetPassword(this.credentials)\n          .subscribe((result) => {\n          // if successful, should get success message\n          this.credentials.password = '';\n          this.credentials.confirmPassword = '';\n          this.successMessage = result.message;\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n      }\n    }\n\n  /**\n   * Compares the input passwords to make sure they are both specified and that they match each other\n   */\n  _checkPasswords(){\n    let p = this.credentials.password;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * On component destruction, unsubscribe from authentication service if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Reset Password\n    \n      New Password\n      \n        \n        \n        Must have at least 6 characters\n        \n      \n    \n    \n    \n      Confirm\n      \n        \n\n      \n    \n    \n    Submit\n\n    \n      {{ successMessage }} Go sign in.\n    \n    \n      {{ errorMessage }}\n    \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Reset Password          New Password                              Must have at least 6 characters                                Confirm                                Submit          {{ successMessage }} Go sign in.              {{ errorMessage }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenario.html":{"url":"interfaces/Scenario.html","title":"interface - Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/scenario.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed about each scenario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        purpose\n                                \n                                \n                                        relevance\n                                \n                                \n                                        scenCode\n                                \n                                \n                                        startingPoint\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Human-readable visible label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        purpose\n                                    \n                                \n                                \n                                    \n                                        purpose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Goal for completing the scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relevance\n                                    \n                                \n                                \n                                    \n                                        relevance:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The reason this scenario is important for learning\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenCode\n                                    \n                                \n                                \n                                    \n                                        scenCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Short string ID for the scenario; used in the URL and for linking\nscenario to other objects\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startingPoint\n                                    \n                                \n                                \n                                    \n                                        startingPoint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of phage strains to begin the scenario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Scenario{\n  /**\n   * Human-readable visible label\n   */\n  label: string;\n  /**\n   * Short string ID for the scenario; used in the URL and for linking\n   * scenario to other objects\n   */\n  scenCode: string;\n  /**\n   * Goal for completing the scenario\n   */\n  purpose: string;\n  /**\n   * Description of phage strains to begin the scenario\n   */\n  startingPoint: string;\n  /**\n   * The reason this scenario is important for learning\n   */\n  relevance: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScenarioComponent.html":{"url":"components/ScenarioComponent.html","title":"component - ScenarioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ScenarioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/scenario/scenario.component.ts\n\n\n    \n        Description\n    \n    \n        View component used to link the breadcrumb with the location\nmodule components or scenario list\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scenario\n            \n\n\n\n\n            \n                templateUrl\n                ./scenario.template.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * View component used to link the breadcrumb with the location\n * module components or scenario list\n */\n@Component({\n  selector: 'scenario',\n  templateUrl: './scenario.template.html'\n})\n\nexport class ScenarioComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScenarioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScenarioModule.html":{"url":"modules/ScenarioModule.html","title":"module - ScenarioModule","body":"\n                   \n\n\n\n\n  Modules\n  ScenarioModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_ScenarioModule_imports\n\n\n\n\nListComponent\n\nListComponent\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/scenario/scenario.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for scenario-related components and modules\nMainly used to be able to async load the specific scenarios via the LocationModule\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ListComponent\n                            \n                            \n                                ScenarioComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ScenarioRoutes } from './scenario.routes';\nimport { ScenarioComponent } from './scenario.component';\nimport { ListComponent } from './list/list.component';\n\n/**\n * Module for scenario-related components and modules\n *\n * Mainly used to be able to async load the specific scenarios via the {@link LocationModule}\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(ScenarioRoutes)\n  ],\n  declarations: [\n    ScenarioComponent,\n    ListComponent\n  ]\n})\nexport class ScenarioModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScenarioResolver.html":{"url":"injectables/ScenarioResolver.html","title":"injectable - ScenarioResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ScenarioResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/scenario/scenario.resolver.ts\n        \n\n            \n                Description\n            \n            \n                Resolves a route URL to get the scenario id (from the url)\nthen uses that to get the scenario label using scenario service\nThis is used to generate human-readable breadcrumb labels\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_scenarioService: ScenarioService)\n                    \n                \n                        \n                            \n                                Defined in public/app/scenario/scenario.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/scenario/scenario.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Method required by implementation\nBased on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                current root URL\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nThe scenario object corresponding to do the url param ID if it exists\nor empty scenario if it does not exist\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { ScenarioService } from './scenario.service';\nimport { Scenario } from '../interfaces/scenario.interface';\n\n/**\n * Resolves a route URL to get the scenario id (from the url)\n * then uses that to get the scenario label using scenario service\n *\n * This is used to generate human-readable breadcrumb labels\n */\n@Injectable()\nexport class ScenarioResolver implements Resolve {\n\n  constructor(private _scenarioService: ScenarioService) { }\n\n  /**\n   * Method required by implementation\n   * Based on the identified scenCode from the URL, use the service go get the scenario details and send back to client\n   *\n   * @param {ActivatedRouteSnapshot} route current root URL\n   * @param {RouterStateSanpshot} current route snapshot\n   *\n   * @returns {Scenario} - The scenario object corresponding to do the url param ID if it exists\n   - or empty scenario if it does not exist\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n\n    const scenCode = route.params['scenId'];\n\n    if (scenCode) {\n      return this._scenarioService.getScenario(scenCode);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/shared/shared.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The Shared Module contains modules, pipes, and components\nthat are needed across the application\nSaves time by importing this module rather than the\npipes/modules/components individually\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                            \n                                PeopleListNamesPipe\n                            \n                            \n                                PersonNamePipe\n                            \n                            \n                                PhageParentsPipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ConfirmDeleteDialogComponent\n                            \n                            \n                                    PeopleListNamesPipe\n                            \n                            \n                                    PersonNamePipe\n                            \n                            \n                                    PhageParentsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DndModule } from 'ng2-dnd';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { McBreadcrumbsModule } from 'ngx-breadcrumbs';\nimport { SkyhookDndModule } from 'angular-skyhook';\nimport { default as TouchBackend } from 'react-dnd-touch-backend';\n\nimport { ConfirmDeleteDialogComponent } from './confirm-delete-dialog.component';\n\nimport { PersonNamePipe } from '../pipes/person-name.pipe';\nimport { PeopleListNamesPipe } from '../pipes/people-list-names.pipe';\nimport { PhageParentsPipe } from '../pipes/phage-parents.pipe';\n\n/**\n * The Shared Module contains modules, pipes, and components\n * that are needed across the application\n *\n * Saves time by importing this module rather than the\n * pipes/modules/components individually\n */\n@NgModule({\n    imports: [\n      CommonModule,\n      FormsModule,\n      DndModule.forRoot(),\n      NgbModule.forRoot(),\n      McBreadcrumbsModule.forRoot(),\n      SkyhookDndModule.forRoot({ backend: TouchBackend })\n    ],\n  declarations: [\n    PersonNamePipe,\n    PeopleListNamesPipe,\n    PhageParentsPipe,\n    ConfirmDeleteDialogComponent\n  ],\n    exports: [\n      CommonModule,\n      FormsModule,\n      DndModule,\n      NgbModule,\n      McBreadcrumbsModule,\n      PersonNamePipe,\n      PeopleListNamesPipe,\n      PhageParentsPipe,\n      SkyhookDndModule,\n      ConfirmDeleteDialogComponent\n    ],\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SigninComponent.html":{"url":"components/SigninComponent.html","title":"component - SigninComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SigninComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signin/signin.component.ts\n\n\n    \n        Description\n    \n    \n        Component for existing users to sign in and be able\nto access their scenarios/fridges\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signin\n            \n\n\n\n\n            \n                templateUrl\n                ./signin.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                signin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signin/signin.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            On component desctruction, unsubscribe from the authentication service if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signin\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Upon form submission, attempts to sign in the user with credentials (using the service)\nWhen successful, navigate to\n\nthe redirect URL if set (when non-logged in user tries to access a page that required logging in)\nthe home page if redirect URL is not set\n\nWhen unsuccessful, display error message\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:24\n                            \n                        \n\n                \n                    \n                        Login credentials for user including username (email) and password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:20\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signin/signin.component.ts:28\n                            \n                        \n\n                \n                    \n                        Authetnication service subscription from when trying to login the user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Component for existing users to sign in and be able\n * to access their scenarios/fridges\n */\n@Component({\n    selector: 'signin',\n    templateUrl: './signin.template.html'\n})\nexport class SigninComponent implements OnDestroy {\n  /**\n   * Potential error message\n   */\n  errorMessage: string;\n  /**\n   * Login credentials for user including `username` (email) and `password`\n   */\n    credentials: any = {};\n  /**\n   * Authetnication service subscription from when trying to login the user\n   */\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService,\n        private _router: Router) { }\n\n  /**\n   * Upon form submission, attempts to sign in the user with `credentials` (using the service)\n   *\n   * When successful, navigate to\n   * - the redirect URL if set (when non-logged in user tries to access a page that required logging in)\n   * - the home page if redirect URL is not set\n   *\n   * When unsuccessful, display error message\n   */\n    signin() {\n        this.subscription = this._authenticationService\n          .signin(this.credentials)\n          .subscribe((result) => {\n          // TODO: update\n          this._authenticationService.setUser(result);\n          let redirect = this._authenticationService.redirectUrl ? this._authenticationService.redirectUrl : '/';\n          this._router.navigate([redirect]);\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n    }\n\n  /**\n   * On component desctruction, unsubscribe from the authentication service if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign in\n    \n      Email\n      \n        \n      \n    \n    \n    \n      Password\n      \n        \n      \n     \n    {{errorMessage}}\n    \n      \n        Sign in \n      \n      \n        Forget password?\n      \n     \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign in          Email                                      Password                             {{errorMessage}}                  Sign in                     Forget password?             '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SigninComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignoutComponent.html":{"url":"components/SignoutComponent.html","title":"component - SignoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signout/signout.component.ts\n\n\n    \n        Description\n    \n    \n        Component that a user signs out. Has no view/template--resets\nvariables and navigate to home page\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signout\n            \n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signout/signout.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from authentication service if necessary\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            On component creation\n\nSign out user on server\nUnset AuthenticationService user\nRedirect to home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signout/signout.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\n\n/**\n * Component that a user signs out. Has no view/template--resets\n * variables and navigate to home page\n */\n@Component({\n  selector: 'signout',\n  template: ''\n})\n\nexport class SignoutComponent implements OnInit, OnDestroy{\n\n  private subscription: Subscription;\n\n  constructor(\n    private _authService: AuthenticationService,\n    private _router: Router\n  ){}\n\n  /**\n   * On component creation\n   * 1. Sign out user on server\n   * 2. Unset [AuthenticationService]{@link AuthenticationService} user\n   * 3. Redirect to home page\n   */\n  ngOnInit(){\n    this.subscription = this._authService.signout()\n      .subscribe((res)=>{\n        this._authService.setUser(null);\n        this._router.navigate(['/']);\n    })\n  }\n\n  /**\n   * On component destruction, unsubscribe from authentication service if necessary\n   */\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/authentication/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        This component allows new users to sign up to use Cricket.\nUses email as username and includes several error\nchecks\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                signup\n            \n\n\n\n\n            \n                templateUrl\n                ./signup.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                courses\n                            \n                            \n                                    Private\n                                cPassword\n                            \n                            \n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _reorderCourses\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _courseService: CourseService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in public/app/authentication/signup/signup.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _courseService\n                                                  \n                                                        \n                                                                    CourseService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _reorderCourses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _reorderCourses(courses: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Order the courses so the \"NA\" course is at the top\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        courses\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                list of currently available courses; each item in list has courseNum and id\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    the list ordered so the \"NA\" course is at the top\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            On component desctruction, unsubscribe from services to prevent a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            On component creation, get the list of available courses and order them\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            \nAttempts to sign the user up when they submit the form\nIncludes error checks for selecting a course and passwords match\nWhen sign-up is successful, sets the [logged in user]\n{@link authentication.service} and navigates to the home page\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            courses\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        courses:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:31\n                            \n                        \n\n                \n                    \n                        List of courses available to sign up for;\nAll users must select a course, even if the course is \"NA\"\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:44\n                            \n                        \n\n                \n                    \n                        Confirmation password; must match user.password to submit the signup form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:26\n                            \n                        \n\n                \n                    \n                        Potential backend error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:48\n                            \n                        \n\n                \n                    \n                        Boolean state object to make unsubscribing from multiple services easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in public/app/authentication/signup/signup.component.ts:40\n                            \n                        \n\n                \n                    \n                        User details used for signup\n\nfirstName\nlastName\nusername (email address)\ncourse (database course ID not course name)\npasssword\n\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/concat'\n\nimport { AuthenticationService } from '../authentication.service';\nimport { CourseService } from '../../admin/course/course.service';\nimport { readErrorMessage } from '../../shared/read-error'\n\n/**\n * This component allows new users to sign up to use Cricket.\n * Uses email as username and includes several error\n * checks\n */\n@Component({\n    selector: 'signup',\n    templateUrl: './signup.template.html'\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n  /**\n   * Potential backend error message\n   */\n  errorMessage: string = '';\n  /**\n   * List of courses available to sign up for;\n   * All users must select a course, even if the course is \"NA\"\n   */\n  private courses: string[] = [];\n  /**\n   * User details used for signup\n   * - `firstName`\n   * - `lastName`\n   * - `username` (email address)\n   * - `course` (database course ID not course name)\n   * - `passsword`\n   */\n  user: any = {};\n  /**\n   * Confirmation password; must match `user.password` to submit the signup form\n   */\n  private cPassword: string;\n  /**\n   * Boolean state object to make unsubscribing from multiple services easier\n   */\n  private isDestroyed$: Subject;\n\n  constructor(private _authenticationService: AuthenticationService,\n        private _courseService: CourseService,\n        private _router: Router) {\n      this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Order the courses so the \"NA\" course is at the top\n   *\n   * @param {any[]} courses list of currently available courses; each item in list has `courseNum` and `id`\n   *\n   * @returns {any[]} the list ordered so the \"NA\" course is at the top\n   */\n  private _reorderCourses(courses: any[]): any[]{\n    let na = courses.filter((c)=>{return c.courseNum === 'NA'});\n    let other = courses.filter((c)=>{\n      return c.courseNum !== 'NA'\n    });\n    return na.concat(other);\n  }\n\n  /**\n   * On component creation, get the list of available courses and order them\n   */\n  ngOnInit(){\n    this._courseService.getCourseList()\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        let tmp = this._reorderCourses(res);\n        this.courses = tmp;\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n      this.courses = [];\n    });\n  }\n\n  /**\n   * - Attempts to sign the user up when they submit the form\n   * - Includes error checks for selecting a course and passwords match\n   * - When sign-up is successful, sets the [logged in user]\n   * {@link authentication.service} and navigates to the home page\n   */\n  signup() {\n      if(this.user.course === undefined){\n        this.errorMessage = 'Select a course'\n      } else if(this.user.password !== this.cPassword){\n        this.errorMessage = 'Passwords must match'\n      } else {\n          this._authenticationService\n          .signup(this.user)\n      .takeUntil(this.isDestroyed$)\n          .subscribe((result) => {\n          this._authenticationService.setUser(result);\n          this._router.navigate(['/'])\n        },\n            (error) => {\n          this.errorMessage = readErrorMessage(error)\n        });\n      }\n    }\n\n  /**\n   * On component desctruction, unsubscribe from services to prevent a memory leak\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign up \n\n    \n      \n        First name\n        \n      \n\n      \n        Last name\n        \n      \n    \n    \n\n    \n      Email address\n      \n    \n    \n\n    \n      Course\n      \n        Select course\n        {{ course.courseNum }}\n      \n    \n    \n\n    \n      \n        Password\n        \n        \n        Must have at least 6 characters\n        \n      \n      \n          \n        \n      \n     \n    {{errorMessage}}\n    Sign up\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign up                   First name                            Last name                                Email address                        Course              Select course        {{ course.courseNum }}                                Password                        Must have at least 6 characters                                                     {{errorMessage}}    Sign up  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Student.html":{"url":"interfaces/Student.html","title":"interface - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/student.interface.ts\n        \n\n            \n                Description\n            \n            \n                Information needed as a user using the app in scenarios\n\n            \n\n            \n                Extends\n            \n            \n                    _User\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Course } from './course.interface';\nimport { _User } from './user.interface';\n//  firstName: string;\n//  lastName: string;\n//  userId: number;\n\n/**\n * Information needed as a user using the app in scenarios\n */\nexport interface Student extends _User {\n  email?: string;\n  accessGranted?: any;\n  status?: boolean;\n}\n\n/**\n * Additional information needed for admin pages about a user/student\n */\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\n/**\n * Function to sort students alphabetically by last name;\n * Uses first name for ties\n *\n * Makes the name lowercase before sorting to ensure sort is\n * case insensitive\n */\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentFridge.html":{"url":"interfaces/StudentFridge.html","title":"interface - StudentFridge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentFridge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/fridge.interface.ts\n        \n\n            \n                Description\n            \n            \n                Fridge information used by admin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessGranted\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        owner\n                                \n                                \n                                        scenario\n                                \n                                \n                                            Optional\n                                        strains\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGranted\n                                    \n                                \n                                \n                                    \n                                        accessGranted:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, has access been granted for this user/scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the fridge exists, the deletion guesses by the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:     _User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Owner of the fridge\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenario\n                                    \n                                \n                                \n                                    \n                                        scenario:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenario this fridge is for\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strains\n                                    \n                                \n                                \n                                    \n                                        strains:     StudentPhage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StudentPhage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If fridge exists, the list of phage that are in this fridge\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FridgePhage, StudentPhage } from './phage.interface';\nimport { _User } from './user.interface';\n\n/**\n * A user/scenario fridge\n */\nexport interface Fridge {\n  /**\n   * Information for this specific user/scenario needed when\n   * submitting the plexer or generating a new plate\n   */\n  scenarioDetails: string;\n  /**\n   * Deletion guesses\n   */\n  guesses: string;\n  /**\n   * List of phage in the fridge\n   */\n  strains: FridgePhage[];\n  /**\n   * Has access already been granted for this user/scenario;\n   * Fridges for each scenario are the same when access not granted\n   */\n  accessGranted: boolean;\n  /**\n   * User id for owner of this fridge\n   */\n  userId: number;\n  /**\n   * Scenario id this fridge belongs to\n   */\n  scenCode: string;\n}\n\n/**\n * Fridge information used by admin\n */\nexport interface StudentFridge {\n  /**\n   * Owner of the fridge\n   */\n  owner: _User;\n  /**\n   * Scenario this fridge is for\n   */\n  scenario: {scenCode: string, label: string};\n  /**\n   * If fridge exists, the list of phage that are in this fridge\n   */\n  strains?: StudentPhage[];\n  /**\n   * If the fridge exists, has access been granted for this user/scenario\n   */\n  accessGranted?: boolean;\n  /**\n   * If the fridge exists, the deletion guesses by the student\n   */\n  guesses?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentFridgeComponent.html":{"url":"components/StudentFridgeComponent.html","title":"component - StudentFridgeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentFridgeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-fridge.component.ts\n\n\n    \n        Description\n    \n    \n        Component to view the phage strains for a specific student\nand scenario\nAdmin is able to see each phage's mutations, deletions, comments, and possibly mutation guesses\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-fridge\n            \n\n\n\n\n            \n                templateUrl\n                ./student-fridge.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Protected\n                                fridge\n                            \n                            \n                                    Protected\n                                hasFridge\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                strainList\n                            \n                            \n                                    Private\n                                viewStrains\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getButtonClass\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setPhage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Determine the CSS class for the view strains button depending on selected option\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton determining classes for\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            View strains is \"all\"\ngetButtonClass('all') -> {'btn btn-small': true, 'btn-primary': true, 'btn-primary-outline': false}\ngetButtonClass('graded') -> {'btn btn-small': true, 'btn-primary': false, 'btn-primary-outline': true}\n\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    classes which appy to this button in the form {\"class\": boolean, ...}\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            When destorying the component, unsubscribe from services and\nobservables to prevent memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nGet studentId, scenarioId, and admin\nGet the fridge\nIf the fridge exists\n3a. add the \"guesses\" to each strain\n3b. sort the strains by strain number\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPhage\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPhage(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            update the list of visible phage appropriately\nCalled on (click) of \"View Strain\" button\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nbutton which was clicked;\nShould be one of [\"all\", \"graded\"]\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:59\n                            \n                        \n\n                \n                    \n                        Error message from the server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            fridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fridge:     StudentFridge\n\n                    \n                \n                    \n                        \n                            Type :     StudentFridge\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:30\n                            \n                        \n\n                \n                    \n                        Fridge object (if it exists)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            hasFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasFridge:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:34\n                            \n                        \n\n                \n                    \n                        If fridge exists determine by if this.fridge has strains\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:38\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:42\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            strainList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        strainList:     StudentPhage[]\n\n                    \n                \n                    \n                        \n                            Type :     StudentPhage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:55\n                            \n                        \n\n                \n                    \n                        List of phage currently being viewed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewStrains\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewStrains:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-fridge.component.ts:51\n                            \n                        \n\n                \n                    \n                        Option to show all strains in fridge or\nonly strains of interest for grading (unknown\nand submitted)\nShould be \"all\" or \"graded\"\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\n\nimport { Course, AdminStudent, Scenario, StudentPhage, StudentFridge } from '../../../interfaces';\n\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * Component to view the phage strains for a specific student\n * and scenario\n *\n * Admin is able to see each phage's mutations, deletions, comments, and possibly mutation guesses\n */\n@Component({\n  selector: 'student-fridge',\n  templateUrl: './student-fridge.template.html'\n})\n\nexport class StudentFridgeComponent implements OnInit, OnDestroy {\n  /**\n   * Fridge object (if it exists)\n   */\n  protected fridge: StudentFridge;\n  /**\n   * If fridge exists determine by if this.fridge has strains\n   */\n  protected hasFridge: boolean = false;\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n  private isDestroyed$: Subject;\n   /**\n   * Subscription for URL parameters\n   */\n  private paramObserver: any;\n\n  /**\n   * Option to show all strains in fridge or\n   * only strains of interest for grading (unknown\n   * and submitted)\n   *\n   * Should be `\"all\"` or `\"graded\"`\n   */\n  private viewStrains: string = 'all';\n  /**\n   * List of phage currently being viewed\n   */\n  private strainList: StudentPhage[];\n  /**\n   * Error message from the server\n   */\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n    private _route: ActivatedRoute,\n    private _studentService: StudentService,\n    private _authService: AuthenticationService){\n    this.isDestroyed$ = new Subject();\n  }\n\n  /**\n   * Initialize the view\n   * 1. Get studentId, scenarioId, and admin\n   * 2. Get the fridge\n   * 3. If the fridge exists\n   * 3a. add the \"guesses\" to each strain\n   * 3b. sort the strains by strain number\n   */\n  ngOnInit(){\n    this.paramObserver = this._route.params.subscribe(params => {\n      let studentId = params['studentId'];\n      let scenId = params['scenId'];\n      let admin = this._authService.getUser();\n\n      this._studentService.getFridge(admin.id, studentId, scenId)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((fridge) => {\n              this.fridge = fridge;\n              this.hasFridge = (fridge.strains !== undefined);\n              if(this.hasFridge){\n                let guesses = JSON.parse(this.fridge.guesses);\n                for(let strain of this.fridge.strains){\n                  let x = guesses[strain.strainNum];\n                  if(x){\n                    strain.guesses = x;\n                  } else{\n                    strain.guesses = [];\n                  }\n                }\n                this.fridge.strains.sort((a,b)=>{return a.strainNum - b.strainNum});\n              }\n              this.setPhage('all');\n            },\n                (error) => {\n              this.errorMessage = readErrorMessage(error);\n            });\n        });\n  }\n\n  /**\n   * Determine the CSS class for the view strains button depending on selected option\n   *\n   * @param {string} src - button determining classes for\n   *\n   * @returns {Object} classes which appy to this button in the form {\"class\": boolean, ...}\n   *\n   * @example View strains is \"all\"\n   * getButtonClass('all') -> {'btn btn-small': true, 'btn-primary': true, 'btn-primary-outline': false}\n   * getButtonClass('graded') -> {'btn btn-small': true, 'btn-primary': false, 'btn-primary-outline': true}\n   */\n  getButtonClass(src: string): Object{\n    return {\n      'btn btn-sm': true,\n      'btn-primary': (src === this.viewStrains),\n      'btn-outline-primary': (src !== this.viewStrains)\n    }\n  }\n\n  /**\n   * update the list of visible phage appropriately\n   *\n   * Called on `(click)` of \"View Strain\" button\n   * @param {string} src - button which was clicked;\n   * Should be one of `[\"all\", \"graded\"]`\n   */\n  setPhage(src: string){\n    this.viewStrains = src;\n    if(this.viewStrains === 'all'){\n      this.strainList = this.fridge.strains;\n    } else {\n      this.strainList = this.fridge.strains.filter((strain)=>{\n        if(strain.phageType === 'unknown'){\n          return true;\n        } else if(strain.phageType === 'user' && strain.submitted){\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n\n  /**\n   * When destorying the component, unsubscribe from services and\n   * observables to prevent memory leak\n   */\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        {{ fridge.owner | personName }}\n      \n    \n\n    \n      {{ fridge.scenario.scenCode }}\n      {{ fridge.scenario.label }}\n      \n        Access granted: {{ fridge.accessGranted }}\n      \n    \n\n    \n      Fridge does not exist yet\n    \n    \n    \n      \n        \n          All Strains\n          Graded Strains\n        \n      \n      \n        \n          \n        \n       \n    \n    \n  \n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                      {{ fridge.owner | personName }}                    {{ fridge.scenario.scenCode }}      {{ fridge.scenario.label }}              Access granted: {{ fridge.accessGranted }}                    Fridge does not exist yet                                    All Strains          Graded Strains                                                                 '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentFridgeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentIndivComponent.html":{"url":"components/StudentIndivComponent.html","title":"component - StudentIndivComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentIndivComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-indiv/student-indiv.component.ts\n\n\n    \n        Description\n    \n    \n        Component to view information for a single student\nThis includes email/name/role information and access status\nfor all scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-indiv\n            \n\n\n\n\n            \n                templateUrl\n                ./student-indiv.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _admin\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                newRole\n                            \n                            \n                                    Private\n                                paramObserver\n                            \n                            \n                                    Private\n                                roles\n                            \n                            \n                                    Private\n                                scenarios\n                            \n                            \n                                    Protected\n                                student\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _callDelete\n                            \n                            \n                                checkDelete\n                            \n                            \n                                clickButton\n                            \n                            \n                                deleteDisabled\n                            \n                            \n                                getScenStatus\n                            \n                            \n                                getStudentCourse\n                            \n                            \n                                grantAccess\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                roleButtonClass\n                            \n                            \n                                roleDisabled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _route: ActivatedRoute, _authService: AuthenticationService, _studentService: StudentService, _scenarioService: ScenarioService, _modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _scenarioService\n                                                  \n                                                        \n                                                                    ScenarioService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _callDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _callDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:264\n                            \n                        \n\n\n                \n                    \n                            Helper function which implements delete student after user\nconfirmed deletion\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:246\n                            \n                        \n\n\n                \n                    \n                            \nwhen clicking delete button, open a modal dialog to confirm delete\nif confirm, delete and redirect to students\notherwise, do nothing\n\nCalled on (click) of the \"Delete\" button\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickButton\n                            \n                            \n                        \n                    \n                \n                \n                    \nclickButton(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:211\n                            \n                        \n\n\n                \n                    \n                            When clicking a role button, update the student role\nby calling student service\nCalled on (click) of one of the role buttons\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrole of button pushed\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:227\n                            \n                        \n\n\n                \n                    \n                            Determine if delete button should be disabled\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \ntrue if viewing page of logged in user or if student is an admin\nfalse otherwise\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getScenStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetScenStatus(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            Return formatted string based on if access granted for scenario\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario to look up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \"Access granted\", \"Access not granted\", or \"NA\"\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudentCourse\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudentCourse()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            \nGet a formatted HTML string based on the student\nIf student has a course, returns link to the course page\nIf student doesn't have a course, returns 'No course'\n\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    formatted HTML\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantAccess(scenCode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:148\n                            \n                        \n\n\n                \n                    \n                            Grant access for a specific scenario by calling student service\nCalled on (click) of one of the scenario buttons\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scenCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                scenario to grant access for\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:279\n                            \n                        \n\n\n                \n                    \n                            Destroy the component by unsubscribing to the services\nThis prevents a memory leak\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Initialize component\n\nGet logged in user\nGet id of student of interest from URL\nGet the student's info\nGet list of all scenarios\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleButtonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleButtonClass(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:195\n                            \n                        \n\n\n                \n                    \n                            Determine CSS classes for each role button based on the\nstudent's current role\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Current student has role &quot;student&quot;\nroleButtonClass(&#39;student&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: true, &#39;btn-secondary-outline&#39;: false}\nroleButtonClass(&#39;admin&#39;) -&gt; {&#39;btn btn-small&#39;: true, &#39;bth-secondary&#39;: false, &#39;btn-secondary-outline&#39;: true}\n                                        \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    possible classes with true/false as applicable\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roleDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nroleDisabled(src: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Determine if a role toggle button should be disabled\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        src\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nname of button/role\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    disable for roles greater than current user\nand if viewing page of current user\n\n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _admin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _admin:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:54\n                            \n                        \n\n                \n                    \n                        Logged in user who must be an admin or instructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:67\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:46\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple\nobservables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:62\n                            \n                        \n\n                \n                    \n                        New role to change to if allowed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paramObserver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        paramObserver:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:50\n                            \n                        \n\n                \n                    \n                        Subscription for URL parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            roles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roles:     \n\n                    \n                \n                    \n                        \n                            Default value : StudentRolesArray\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:58\n                            \n                        \n\n                \n                    \n                        List of possible roles\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scenarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scenarios:     Scenario[]\n\n                    \n                \n                    \n                        \n                            Type :     Scenario[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:41\n                            \n                        \n\n                \n                    \n                        List of all scenarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            student\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        student:     AdminStudent\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-indiv/student-indiv.component.ts:37\n                            \n                        \n\n                \n                    \n                        Student we are viewing\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil';\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { StudentService } from '../student.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { StudentRolesArray } from '../student.roles';\nimport { ConfirmDeleteDialogComponent } from '../../../shared/confirm-delete-dialog.component';\n\nimport { User } from '../../../interfaces/user.interface';\nimport { Course } from '../../../interfaces/course.interface';\nimport { AdminStudent } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\nimport { readErrorMessage } from '../../../shared/read-error';\n\n/**\n * Component to view information for a single student\n * This includes email/name/role information and access status\n * for all scenarios\n */\n@Component({\n    selector: 'student-indiv',\n    templateUrl: './student-indiv.template.html'\n})\n\nexport class StudentIndivComponent implements OnInit, OnDestroy {\n\n  /**\n   * Student we are viewing\n   */\n    protected student: AdminStudent;\n  /**\n   * List of all scenarios\n   */\n    private scenarios: Scenario[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple\n   * observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Subscription for URL parameters\n   */\n    private paramObserver: any;\n  /**\n   * Logged in user who must be an admin or instructor\n   */\n    private _admin: User;\n  /**\n   * List of possible roles\n   */\n    private roles = StudentRolesArray;\n  /**\n   * New role to change to if allowed\n   */\n    private newRole: string;\n\n  /**\n   * Potential error message\n   */\n    private errorMessage: string = '';\n\n    constructor(private _router: Router,\n        private _route: ActivatedRoute,\n        private _authService: AuthenticationService,\n        private _studentService: StudentService,\n        private _scenarioService: ScenarioService,\n        private _modalService: NgbModal) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize component\n   * 1. Get logged in user\n   * 2. Get id of student of interest from URL\n   * 3. Get the student's info\n   * 4. Get list of all scenarios\n   */\n    ngOnInit() {\n        this._admin = this._authService.getUser();\n        this.paramObserver = this._route.params.subscribe(params => {\n            let studentId = params['studentId'];\n            this._studentService.getStudent(this._admin.id, studentId)\n                .takeUntil(this.isDestroyed$)\n                .subscribe((info) => {\n                    this.student = info;\n                    this.newRole = this.student.role;\n                    this._scenarioService.listScenarios()\n                        .takeUntil(this.isDestroyed$)\n                        .subscribe((scens) => {\n                            this.scenarios = scens;\n                        });\n                },\n                (error) => {\n                    this.errorMessage = readErrorMessage(error);\n                });\n\n        });\n    }\n\n  /**\n   * Return formatted string based on if access granted for scenario\n   *\n   * @param {string} scenCode - scenario to look up\n   *\n   * @returns {string} `\"Access granted\"`, `\"Access not granted\"`, or `\"NA\"`\n   */\n    getScenStatus(scenCode: string): string {\n        let isGranted = this.student.accessGranted[scenCode];\n        if (isGranted === true) {\n            return 'Access granted'\n        } else if (isGranted === false) {\n            return 'Access not granted'\n        } else {\n            return 'NA'\n        }\n    }\n\n  /**\n   * - Get a formatted HTML string based on the student\n   * - If student has a course, returns link to the course page\n   * - If student doesn't have a course, returns 'No course'\n   *\n   * @returns {string} formatted HTML\n   */\n    getStudentCourse(): string {\n        let s: AdminStudent = this.student;\n        if (s.course) {\n            return 's.course.courseNum';\n        } else {\n            return 'No course';\n        }\n    }\n\n  /**\n   * Grant access for a specific scenario by calling student service\n   *\n   * Called on `(click)` of one of the scenario buttons\n   *\n   * @param {string} scenCode scenario to grant access for\n   */\n    grantAccess(scenCode: string) {\n        this._studentService.grantScenAccess(this._admin.id, this.student.userId, scenCode, true)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                if (res !== undefined && res !== null) {\n                  this.student = res;\n                }\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if a role toggle button should be disabled\n   *\n   * @param {string} src - name of button/role\n   *\n   * @returns {boolean} disable for roles greater than current user\n   * and if viewing page of current user\n   */\n    roleDisabled(src: string): boolean {\n        if (this._admin === undefined) {\n            return false\n        } else if (this.student.userId === this._admin.id) {\n            return true;\n        } else if (src === 'admin' && this._admin.role  {'btn btn-small': true, 'bth-secondary': true, 'btn-secondary-outline': false}\n   * roleButtonClass('admin') -> {'btn btn-small': true, 'bth-secondary': false, 'btn-secondary-outline': true}\n   */\n    roleButtonClass(src: string): Object {\n        return {\n            'btn btn-sm': true,\n            'btn-outline-secondary': src !== this.student.role,\n            'btn-secondary': src === this.student.role\n        }\n    }\n\n  /**\n   * When clicking a role button, update the student role\n   * by calling student service\n   *\n   * Called on `(click)` of one of the role buttons\n   *\n   * @param {string} src - role of button pushed\n   */\n    clickButton(src: string) {\n        this._studentService.setStudentRole(this._admin.id, this.student.userId, src)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((res) => {\n                this.student = res;\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Determine if delete button should be disabled\n   *\n   * @returns {boolean} - `true` if viewing page of logged in user or if student is an admin\n   * `false` otherwise\n   */\n  deleteDisabled(){\n    if(this._admin === undefined){\n      return true;\n    } else if(this.student.userId === this._admin.id){\n      return false;\n    } else if(this.student.role === 'admin'){\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * - when clicking delete button, open a modal dialog to confirm delete\n   * - if confirm, delete and redirect to students\n   * - otherwise, do nothing\n   *\n   * Called on `(click)` of the \"Delete\" button\n   */\n  checkDelete(){\n    const modelRef = this._modalService.open(ConfirmDeleteDialogComponent, {size: 'sm'});\n    modelRef.componentInstance.message = 'Are you sure you want to delete?';\n\n    modelRef.result.then((result)=>{\n      if(result === 'delete'){\n        this._callDelete();\n      }\n    }, (dismiss)=>{\n      // do nothing\n      return;\n    });\n  }\n\n  /**\n   * Helper function which implements delete student after user\n   * confirmed deletion\n   */\n  protected _callDelete(){\n    this._studentService.deleteStudent(this._admin.id, this.student.userId)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this._router.navigate(['/admin/students']);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * Destroy the component by unsubscribing to the services\n   * This prevents a memory leak\n   */\n    ngOnDestroy() {\n        this.paramObserver.unsubscribe();\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n\n    }\n\n}\n\n    \n\n    \n        \n  \n    {{ errorMessage }}\n  \n  \n    \n      \n        \n          \n            {{ student | personName }}\n          \n        \n        \n          Delete\n        \n      \n\n      \n        \n          Email\n        \n        {{ student.email }}\n      \n\n      \n        \n          Course\n        \n        \n          {{ student.course.courseNum }}\n          No course\n        \n      \n\n      \n        Role\n        \n          \n          {{ role.label }}\n        \n        \n      \n      \n\n    \n    \n\n    \n      Scenarios\n      \n        \n          \n            {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}\n          \n          \n            Grant access\n            View fridge\n          \n        \n        \n      \n      \n    \n    \n  \n  \n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ errorMessage }}                                            {{ student | personName }}                                    Delete                                      Email                {{ student.email }}                              Course                          {{ student.course.courseNum }}          No course                            Role                            {{ role.label }}                                              Scenarios                                    {{scenario.label}}:  {{ getScenStatus(scenario.scenCode) }}                                Grant access            View fridge                                                  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentIndivComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentListComponent.html":{"url":"components/StudentListComponent.html","title":"component - StudentListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-list/student-list.component.ts\n\n\n    \n        Description\n    \n    \n        \nComponent which lists students dependent on the role of logged in user;\nif \"admin\", all users in the system\nif \"instr\", all users in courses instr teaches\n\n\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-list\n            \n\n\n\n\n            \n                templateUrl\n                ./student-list.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                students\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Destory the component by unsubscribing from all observables\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Initialize the view\n\nget logged in user id\nget the list of students\norder the list of students\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:31\n                            \n                        \n\n                \n                    \n                        Error message from server\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:27\n                            \n                        \n\n                \n                    \n                        Boolean state variable to make unsubscribing from multiple observables easier\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            students\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        students:     AdminStudent[]\n\n                    \n                \n                    \n                        \n                            Type :     AdminStudent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student-list/student-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        List of students\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { StudentService } from '../student.service';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { readErrorMessage } from '../../../shared/read-error';\n\nimport { AdminStudent, sortStudents } from '../../../interfaces/student.interface';\n\n/**\n * - Component which lists students dependent on the role of logged in user;\n  * - if `\"admin\"`, all users in the system\n  * - if `\"instr\"`, all users in courses instr teaches\n */\n@Component({\n    selector: 'student-list',\n    templateUrl: './student-list.template.html'\n})\nexport class StudentListComponent implements OnInit, OnDestroy {\n  /**\n   * List of students\n   */\n    private students: AdminStudent[];\n  /**\n   * Boolean state variable to make unsubscribing from multiple observables easier\n   */\n    private isDestroyed$: Subject;\n  /**\n   * Error message from server\n   */\n    private errorMessage: string = '';\n\n    constructor(\n        private _studentService: StudentService,\n        private _authService: AuthenticationService\n    ) {\n        this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the view\n   * 1. get logged in user id\n   * 2. get the list of students\n   * 3. order the list of students\n   */\n    ngOnInit() {\n        let admin = this._authService.getUser();\n        this._studentService.listStudents(admin.id)\n            .takeUntil(this.isDestroyed$)\n            .subscribe((students) => {\n                this.students = students.sort(sortStudents);\n            }, (err) => {\n                this.errorMessage = readErrorMessage(err);\n            });\n    }\n\n  /**\n   * Destory the component by unsubscribing from all observables\n   */\n    ngOnDestroy() {\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n    }\n}\n\n    \n\n    \n        \nStudents\n\n  {{ errorMessage }}\n  \n      \n      \n        {{student | personName:true}}\n        {{student.course.courseNum}}\n        {{student.role}}\n      \n    \n   \n \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Students  {{ errorMessage }}                      {{student | personName:true}}        {{student.course.courseNum}}        {{student.role}}              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudentModule.html":{"url":"modules/StudentModule.html","title":"module - StudentModule","body":"\n                   \n\n\n\n\n  Modules\n  StudentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_imports\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            public/app/admin/student/student.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for admin-regulated student things like setting the\nrole, viewing fridges for grading, and listing all students\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PhageDeletionsPipe\n                            \n                            \n                                PhageGuessesPipe\n                            \n                            \n                                PhageMutationsPipe\n                            \n                            \n                                StudentFridgeComponent\n                            \n                            \n                                StudentIndivComponent\n                            \n                            \n                                StudentListComponent\n                            \n                            \n                                StudentPhageComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ConfirmDeleteDialogComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     StudentResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { StudentRoutes } from './student.routes';\n\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { StudentIndivComponent } from './student-indiv/student-indiv.component';\nimport { StudentFridgeComponent } from './student-fridge/student-fridge.component';\nimport { StudentPhageComponent } from './student-fridge/student-phage.component';\nimport { ConfirmDeleteDialogComponent } from '../../shared/confirm-delete-dialog.component';\n\nimport { StudentResolver } from './student.resolver';\nimport { PhageGuessesPipe } from '../../pipes/phage-guesses.pipe';\nimport { PhageMutationsPipe } from '../../pipes/phage-mutations.pipe';\nimport { PhageDeletionsPipe } from '../../pipes/phage-deletions.pipe';\n\n/**\n * Module for admin-regulated student things like setting the\n * role, viewing fridges for grading, and listing all students\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(StudentRoutes)\n  ],\n  declarations: [\n    StudentListComponent,\n    StudentIndivComponent,\n    StudentFridgeComponent,\n    StudentPhageComponent,\n    PhageGuessesPipe,\n    PhageMutationsPipe,\n    PhageDeletionsPipe\n  ],\n  entryComponents: [\n    ConfirmDeleteDialogComponent\n  ],\n  providers: [\n    StudentResolver\n  ]\n})\nexport class StudentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StudentPhage.html":{"url":"interfaces/StudentPhage.html","title":"interface - StudentPhage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StudentPhage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/phage.interface.ts\n        \n\n            \n                Description\n            \n            \n                Additional information about the phage used for admin\nand grading\n\n            \n\n            \n                Extends\n            \n            \n                    FridgePhage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deletion\n                                \n                                \n                                            Optional\n                                        guesses\n                                \n                                \n                                        mutationList\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletion\n                                    \n                                \n                                \n                                    \n                                        deletion:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start and stop location of deleetion; if array\nhas more than 2 elements, start/stop are paired for separate\ndeletions in the same phage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guesses\n                                    \n                                \n                                \n                                    \n                                        guesses:     boolean[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deletion guesses from the student\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutationList\n                                    \n                                \n                                \n                                    \n                                        mutationList:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of frameshift mutations; negative numbers indicate -1\nframeshift at the location; positive numbers indicate +1\nframeshift at the location\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Phage {\n  /**\n   * Location in fridge\n   */\n  strainNum: number;\n  /**\n   * MongoDB object ID\n   */\n  id: string;\n}\n\n/**\n * Phage stored in the fridge\n */\nexport interface FridgePhage extends Phage {\n  /**\n   * Phage type; one of \"reference\", \"unknown\", and \"user\" depending\n   * on who created it and if mutation state is known\n   */\n  phageType: string;\n  /**\n   * Description for this phage\n   */\n  comment: string;\n  /**\n   * If a user phage, the phage used in the cross to create this phage\n   */\n  parents?: Phage[];\n  /**\n   * If user phage, number of parents in the cross to create this phage;\n   * used to check if one of the parents no longer exists\n   */\n  numParents?: number;\n  /**\n   * For user phage, should this phage be graded\n   */\n  submitted?: boolean;\n}\n\n/**\n * Phage interface used for plating and plexer\n */\nexport interface ExperimentPhage extends Phage {\n  /**\n   * Number of this phage in the tube/plate\n   */\n    numPhage: number;\n}\n\n/**\n * Phage on the lab room plate that will be saved to\n * the fridge\n */\nexport interface GenotypePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  shifts: number[];\n  /**\n   * Start and stop locations of deletion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Phage used in cross to create this phage\n   */\n  parents: Phage[];\n  /**\n   * Where the phage is being dragged from\n   */\n  src?: string;\n}\n\n/**\n * Additional information about the phage used for admin\n * and grading\n */\nexport interface StudentPhage extends FridgePhage {\n  /**\n   * List of frameshift mutations; negative numbers indicate -1\n   * frameshift at the location; positive numbers indicate +1\n   * frameshift at the location\n   */\n  mutationList: number[];\n  /**\n   * Start and stop location of deleetion; if array\n   * has more than 2 elements, start/stop are paired for separate\n   * deletions in the same phage\n   */\n  deletion: number[];\n  /**\n   * Deletion guesses from the student\n   */\n  guesses?: boolean[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentPhageComponent.html":{"url":"components/StudentPhageComponent.html","title":"component - StudentPhageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentPhageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/admin/student/student-fridge/student-phage.component.ts\n\n\n    \n        Description\n    \n    \n        Small component which encompasses a single phage strain being viewed\nwithin a student's fridge\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                student-phage\n            \n\n\n\n\n            \n                templateUrl\n                ./student-phage.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatPhageType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                phage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student-fridge/student-phage.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        phage\n                    \n                    \n                        The phage which the component is created for\n\n                            \n                            Type:    StudentPhage\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatPhageType\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatPhageType()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student-fridge/student-phage.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Produces formatted string based on phage type and if phage is\nsubmitted to be graded\n\n\n                            \n                                    Example :\n                                        \n                                            reference phage -&gt; &quot;REFERENCE&quot;\nscenario unknown phage -&gt; &quot;UNKOWN&quot;\nuser phage, not sumitted -&gt; &quot;USER&quot;\nsubmitted phage -&gt; &quot;SUBMISSION&quot;\n                                        \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    formatted string\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input} from '@angular/core';\n\nimport { StudentPhage } from '../../../interfaces/phage.interface';\n\n/**\n * Small component which encompasses a single phage strain being viewed\n * within a student's fridge\n */\n@Component({\n  selector: 'student-phage',\n  templateUrl: './student-phage.template.html'\n})\n\nexport class StudentPhageComponent{\n\n  /**\n   * The phage which the component is created for\n   */\n  @Input() phage: StudentPhage;\n\n  constructor(){}\n\n  /**\n   * Produces formatted string based on phage type and if phage is\n   * submitted to be graded\n   *\n   * @returns {string} formatted string\n   *\n   * @example\n   * reference phage -> \"REFERENCE\"\n   * scenario unknown phage -> \"UNKOWN\"\n   * user phage, not sumitted -> \"USER\"\n   * submitted phage -> \"SUBMISSION\"\n   */\n  formatPhageType(): string{\n    if(this.phage){\n      let t = this.phage.phageType;\n      if(this.phage.phageType === 'user' && this.phage.submitted){\n        return 'SUBMISSION'\n      } else {\n        return this.phage.phageType.toUpperCase();\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n    \n        \n\n  {{ phage.strainNum + 1 }}\n\n\n\n    \n      {{ formatPhageType() }}\n    \n  \n    \n  \n \n\n  \n    Comment\n    {{ phage.comment }}\n  \n   0\">\n    Mutations\n    \n      {{ phage.mutationList | phageMutations }}\n    \n  \n  \n   0\">\n    Deletion\n    \n      {{phage.deletion | phageDeletions}}\n    \n  \n  \n   0\">\n    Guess\n    \n      {{ phage.guesses | phageGuesses }}\n    \n  \n  \n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ phage.strainNum + 1 }}          {{ formatPhageType() }}                   Comment    {{ phage.comment }}     0\">    Mutations          {{ phage.mutationList | phageMutations }}           0\">    Deletion          {{phage.deletion | phageDeletions}}           0\">    Guess          {{ phage.guesses | phageGuesses }}        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentPhageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentResolver.html":{"url":"injectables/StudentResolver.html","title":"injectable - StudentResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.resolver.ts\n        \n\n            \n                Description\n            \n            \n                \nNeeded for breadcrumbs\nResolves the studentId in the URL to the student it represents\n\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_studentService: StudentService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _studentService\n                                                  \n                                                        \n                                                                    StudentService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.resolver.ts:28\n                            \n                        \n\n\n                \n                    \n                            Based on the URL studentId parameter, find the user\nit belongs to\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nroute URL at the moment\n\n\n                                                        \n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrouter state; needed to implement interface\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The student the id belongs to\nor an empty observable if the id doesn't belong to anyone\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { StudentService } from './student.service';\nimport { AdminStudent } from '../../interfaces/student.interface';\n\n/**\n * - Needed for breadcrumbs\n * - Resolves the studentId in the URL to the student it represents\n */\n@Injectable()\nexport class StudentResolver implements Resolve {\n\n  constructor(private _studentService: StudentService,\n              private _authService: AuthenticationService) { }\n\n  /**\n   * Based on the URL `studentId` parameter, find the user\n   * it belongs to\n   *\n   * @param {ActivatedRouteSnapshot} route - route URL at the moment\n   * @param {RouterStateSnapshot} state - router state; needed to implement interface\n   *\n   * @returns {Observable} The student the id belongs to\n   * or an empty observable if the id doesn't belong to anyone\n   */\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    let admin = this._authService.getUser();\n\n    const studentNum = route.params['studentId'];\n\n    if (studentNum) {\n      return this._studentService.getStudent(admin.id, studentNum);\n    } else {\n      return new Observable();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/admin/student/student.service.ts\n        \n\n            \n                Description\n            \n            \n                Service which deals with all student-related backend calls\nfrom an admin\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _baseURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteStudent\n                            \n                            \n                                getFridge\n                            \n                            \n                                getStudent\n                            \n                            \n                                grantScenAccess\n                            \n                            \n                                listStudents\n                            \n                            \n                                setStudentRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in public/app/admin/student/student.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Delete a student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student to delete\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nstudent who was just deleted\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFridge\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFridge(adminId: number, studentId: number, scenId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:90\n                            \n                        \n\n\n                \n                    \n                            Get scenario fridge for a student; includes fridge details such as\nfridge strains and guesses\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nscenario Id for fridge to find\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe student's fridge\nan empty fridge if the fridge doesn't exist yet\nor other server error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStudent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStudent(adminId: number, studentId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Get details about a student\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to be looked up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ndetails about specified student\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grantScenAccess\n                            \n                            \n                        \n                    \n                \n                \n                    \ngrantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:105\n                            \n                        \n\n\n                \n                    \n                            Update scenario access for a student; this deletes the existing\nfridge\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of student\n\n\n                                                        \n                                                \n                                                \n                                                        scenId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        updatedState\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \ntrue to grant access, false to revoke access\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    updated student\n\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \nlistStudents(adminId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            List of students, content is dependent of logged in user role\nIf admin, return all students/users\nIf instr, returns students of courses instr teachs\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId of logged in user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nlist of students\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStudentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStudentRole(adminId: number, studentId: number, role: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Update the role (admin, instr, student) of another student/user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for logged in user\n\n\n                                                        \n                                                \n                                                \n                                                        studentId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nuserId for student to update\n\n\n                                                        \n                                                \n                                                \n                                                        role\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nnew role to be assigned; one of: \"admin\", \"instr\", \"student\"\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe updated student\nerror Value \"role\" is not a valid role if role isn't one of admin, instr, student\nor other server/database error\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _baseURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _baseURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/api/admin'\n                        \n                    \n                        \n                            \n                                    Defined in public/app/admin/student/student.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AdminStudent, StudentFridge } from '../../interfaces';\n\n/**\n * Service which deals with all student-related backend calls\n * from an admin\n */\n@Injectable()\nexport class StudentService {\n  \n  private _baseURL = '/api/admin';\n\n  constructor(private _http: HttpClient) {}\n\n  /**\n   * List of students, content is dependent of logged in user role\n   *\n   * If `admin`, return all students/users\n   * \n   * If `instr`, returns students of courses instr teachs\n   *\n   * @param {number} adminId - userId of logged in user\n   *\n   * @returns {AdminStudent[]} - list of students\n   */\n  listStudents(adminId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students`);\n  }\n\n  /**\n   * Get details about a student\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to be looked up\n   *\n   * @returns {Observable} - details about specified student\n   * - or other server/database error\n   */\n  getStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Update the role (admin, instr, student) of another student/user\n   *\n   * @param {number} adminId - userId for logged in user\n   * @param {number} studentId - userId for student to update\n   * @param {string} role - new role to be assigned; one of: `\"admin\", \"instr\", \"student\"`\n   *\n   * @returns {Observable} - the updated student\n   * - error `Value \"role\" is not a valid role` if role isn't one of `admin`, `instr`, `student`\n   * - or other server/database error\n   */\n  setStudentRole(adminId: number, studentId: number, role: string): Observable{\n    let body = {role: role};\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}`, body);\n  }\n\n  /**\n   * Delete a student/user\n   *\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student to delete\n   *\n   * @returns {Observable} - student who was just deleted\n   * - or other server/database error\n   */\n  deleteStudent(adminId: number, studentId: number): Observable{\n    return this._http\n            .delete(`${this._baseURL}/${adminId}/students/${studentId}`);\n  }\n\n  /**\n   * Get scenario fridge for a student; includes fridge details such as\n   * fridge strains and guesses\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {string} scenId - scenario Id for fridge to find\n   *\n   * @returns{Observable} - the student's fridge\n   * - an empty fridge if the fridge doesn't exist yet\n   * - or other server error\n   */\n  getFridge(adminId: number, studentId: number, scenId: string): Observable{\n    return this._http\n            .get(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`);\n  }\n\n  /**\n   * Update scenario access for a student; this deletes the existing\n   * fridge\n   * @param {number} adminId - userId of logged in user\n   * @param {number} studentId - userId of student\n   * @param {boolean} updatedState - true to grant access, false to revoke access\n   *\n   * @returns {Observable} updated student\n   * - or other server/database error\n   */\n  grantScenAccess(adminId: number, studentId: number, scenId: string, updatedState: boolean): Observable{\n    return this._http\n            .post(`${this._baseURL}/${adminId}/students/${studentId}/${scenId}`, {access: updatedState});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdatePasswordComponent.html":{"url":"components/UpdatePasswordComponent.html","title":"component - UpdatePasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UpdatePasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/update-password/update-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component for a logged in user to update their password\nby entering their current password then the new password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-password\n            \n\n\n\n\n            \n                templateUrl\n                ./update-password.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                credentials\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                passwordMessage\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _checkPasswords\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/update-password/update-password.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _checkPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _checkPasswords()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Does various checks to ensure the password fields are valid\n\nAll fields are filled in\nNew password is different from old password\nConfirm password matches new password\n\n\n\n                            \n                            \n                            \n                                Returns :     \"Enter new password\" | \"Confirm new password\" | \"Confirm password does not match\" | \"\" | \"Enter o...\n\n                            \n                                \n                                    error message if at least one condition isn't met or '' if everything is valid\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe to services/streams\nto prevent memory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Initialize the component\n\nGet the logged in user info\nSet up the credentials with email address\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Attempt to update the password\n\nIf successful, redirects to profile page\nIf there's an error, displays error message\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        \nPassword information to send to server to update password\nHas fields password (current password), newPassword (password to change to), \nconfirmPassword (confirms typing of new password), and \nusername (user's email)\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:40\n                            \n                        \n\n                \n                    \n                        Potential backend error message displayed prominantly\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:36\n                            \n                        \n\n                \n                    \n                        State to keep track of compoenent alive\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            passwordMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:44\n                            \n                        \n\n                \n                    \n                        Error message about submission and why the submission didn't work as expected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/update-password/update-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        The logged in user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Component for a logged in user to update their password\n * by entering their current password then the new password\n */\n@Component({\n  selector: 'user-password',\n  templateUrl: './update-password.template.html'\n})\n\nexport class UpdatePasswordComponent{\n\n  /**\n   * The logged in user\n   */\n  private user: User;\n  /**\n   * - Password information to send to server to update password\n   * - Has fields `password` (current password), `newPassword` (password to change to), \n   * `confirmPassword` (confirms typing of new password), and \n   * `username` (user's email)\n   */\n  private credentials: any;\n  /**\n   * State to keep track of compoenent alive\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential backend error message displayed prominantly\n   */\n  private errorMessage: string = '';\n  /**\n   * Error message about submission and why the submission didn't work as expected\n   */\n  private passwordMessage: string = '';\n\n  constructor(\n    private _router: Router,\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n      this.credentials = {\n        password: '',\n        newPassword: '',\n        confirmPassword: ''\n      };\n    }\n\n  /**\n   * Initialize the component\n   * 1. Get the logged in user info\n   * 2. Set up the credentials with email address\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.user = res;\n      this.credentials['username'] = res.email;\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempt to update the password\n   * - If successful, redirects to profile page\n   * - If there's an error, displays error message\n   */\n  updatePassword(){\n    // do checks\n    this.passwordMessage = this._checkPasswords();\n    if(this.passwordMessage === ''){\n      // can update\n      this._profileService.updatePassword(this.user.id, this.credentials)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n        this._router.navigate(['/profile']);\n      }, (err)=>{\n        this.errorMessage = readErrorMessage(err);\n      });\n    } else {\n      this.errorMessage = '';\n    }\n  }\n\n  /**\n   * Does various checks to ensure the password fields are valid\n   * 1. All fields are filled in\n   * 2. New password is different from old password\n   * 3. Confirm password matches new password\n   *\n   * @returns {string} error message if at least one condition isn't met or `''` if everything is valid\n   */\n  protected _checkPasswords(){\n    let p = this.credentials.password;\n    let n = this.credentials.newPassword;\n    let c = this.credentials.confirmPassword;\n    if(p === ''){\n      return 'Enter old password';\n    } else if(n === ''){\n      return 'Enter new password';\n    } else if(c === ''){\n      return 'Confirm new password';\n    } else if(p === n){\n      return 'New password cannot the same as the old password';\n    } else if(n !== c){\n      return 'Confirm password does not match';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * On component destruction, unsubscribe to services/streams\n   * to prevent memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Update Password\n  \n  {{ errorMessage }}\n  \n    \n      Email\n      \n        \n      \n     \n    \n      Old Password\n      \n        \n      \n     \n    \n      New Password\n      \n        \n      \n     \n    \n      Confirm Password\n      \n        \n      \n     \n    {{passwordMessage}}\n    Submit\n  \n\n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Update Password    {{ errorMessage }}            Email                                   Old Password                                   New Password                                   Confirm Password                             {{passwordMessage}}    Submit  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdatePasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                The logged in user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User e-mail; also used for logging in\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to indicate user when making calls to\nthe server\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Role to indicate what areas of the app are accesible to the user;\n0 = student, 1 = instr, 2 = admin\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n\n\n\n    \n    File\n\n\n    public/app/profile/user-profile/user-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Main user profile component; aimed for use to edit name and\nemail address. Also access update password link to update password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                user-profile\n            \n\n\n\n\n            \n                templateUrl\n                ./user-profile.template.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                    Private\n                                isDestroyed$\n                            \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_profileService: ProfileService, _authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                            Class constructor; includes services to fetch info\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service for updating the information\n\n                                                        \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Service to get the current user information\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            On component destruction, unsubscribe from services to prevent\nmemory leaks\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:57\n                            \n                        \n\n\n                \n                    \n                            Initialize the component on creation\n\nGet the logged in user\nSave the user's details to object to be able to edit\n\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateProfile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Attempts to update the profile if possible or set error\nmessage if there's a problem\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:37\n                            \n                        \n\n                \n                    \n                        Potential error message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDestroyed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDestroyed$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                        State to maintain open subscriptions until component is destoryed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:24\n                            \n                        \n\n                \n                    \n                        Database user id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in public/app/profile/user-profile/user-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                        User details (as an object)\nCurrently includes: firstName, lastName, and email\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { ProfileService } from '../profile.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { User } from '../../interfaces/user.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n/**\n * Main user profile component; aimed for use to edit name and\n * email address. Also access update password link to update password\n */\n@Component({\n  selector: 'user-profile',\n  templateUrl: './user-profile.template.html'\n})\n\nexport class UserProfileComponent{\n\n  /**\n   * Database user id\n   */\n  private userId: number;\n  /**\n   * User details (as an object)\n   * Currently includes: firstName, lastName, and email\n   */\n  private userInfo: any;\n  /**\n   * State to maintain open subscriptions until component is destoryed\n   */\n  private isDestroyed$: Subject;\n  /**\n   * Potential error message\n   */\n  private errorMessage: string = '';\n\n  /**\n   * Class constructor; includes services to fetch info\n   *\n   * @param {ProfileService} _profileService Service for updating the information\n   * @param {AuthenticationService} _authService Service to get the current user information\n   */\n  constructor(\n    private _profileService: ProfileService,\n    private _authService: AuthenticationService\n  ){\n      this.isDestroyed$ = new Subject();\n    }\n\n  /**\n   * Initialize the component on creation\n   * 1. Get the logged in user\n   * 2. Save the user's details to object to be able to edit\n   */\n  ngOnInit(){\n    // get current user info\n    this._authService.getUser$\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        this.userId = res.id;\n      this.userInfo = {\n        firstName: res.firstName,\n        lastName: res.lastName,\n        email: res.email\n      }\n    }, (idErr)=>{\n      this.errorMessage = readErrorMessage(idErr);\n    });\n  }\n\n  /**\n   * Attempts to update the profile if possible or set error\n   * message if there's a problem\n   */\n  updateProfile(){\n    this._profileService.editProfile(this.userId, this.userInfo)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((updated)=>{\n      this.userInfo = {firstName: updated.firstName,\n                      lastName: updated.lastName,\n                      email: updated.email};\n      this._authService.setUser(updated);\n    }, (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    });\n  }\n\n  /**\n   * On component destruction, unsubscribe from services to prevent\n   * memory leaks\n   */\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n  Profile\n  \n    {{ errorMessage }}\n  \n  \n  Update Password\n    \n  \n    \n      \n        First Name\n        \n       \n\n      \n        Last Name\n        \n       \n     \n    \n      \n        Email\n        \n       \n     \n    Submit\n   \n\n\n \n\n    \n\n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Profile      {{ errorMessage }}      Update Password                        First Name                             Last Name                                      Email                        Submit    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'admin'},{'name': 'AdminHomeComponent', 'selector': 'admin-home'},{'name': 'AppComponent', 'selector': 'cricket-app'},{'name': 'ConfirmDeleteDialogComponent', 'selector': 'confirm-delete-dialog'},{'name': 'CourseCreateComponent', 'selector': 'course-create'},{'name': 'CourseEditComponent', 'selector': 'course-edit'},{'name': 'CourseIndivComponent', 'selector': 'course-indiv'},{'name': 'CourseListComponent', 'selector': 'course-list'},{'name': 'CourseScenarioComponent', 'selector': 'course-scen'},{'name': 'ForgetPasswordComponent', 'selector': 'forget-pswd'},{'name': 'FridgeComponent', 'selector': 'fridge'},{'name': 'HelpComponent', 'selector': 'help'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'LabRoomComponent', 'selector': 'lab-room'},{'name': 'LandingRoomComponent', 'selector': 'landing-room'},{'name': 'ListComponent', 'selector': 'scenario-list'},{'name': 'LocationComponent', 'selector': 'location'},{'name': 'ModelRoomComponent', 'selector': 'model-room'},{'name': 'NavComponent', 'selector': 'cricket-nav'},{'name': 'NotAuthComponent', 'selector': 'not-auth'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PhageDialogComponent', 'selector': 'phage-dialog-content'},{'name': 'PlexerRoomComponent', 'selector': 'plexer-room'},{'name': 'ResetPasswordComponent', 'selector': 'reset-pswd'},{'name': 'ScenarioComponent', 'selector': 'scenario'},{'name': 'SigninComponent', 'selector': 'signin'},{'name': 'SignoutComponent', 'selector': 'signout'},{'name': 'SignupComponent', 'selector': 'signup'},{'name': 'StudentFridgeComponent', 'selector': 'student-fridge'},{'name': 'StudentIndivComponent', 'selector': 'student-indiv'},{'name': 'StudentListComponent', 'selector': 'student-list'},{'name': 'StudentPhageComponent', 'selector': 'student-phage'},{'name': 'UpdatePasswordComponent', 'selector': 'user-password'},{'name': 'UserProfileComponent', 'selector': 'user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_User.html":{"url":"interfaces/_User.html","title":"interface - _User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  _User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            public/app/interfaces/user.interface.ts\n        \n\n            \n                Description\n            \n            \n                base user class which is extended by other interfaces\nand rarely used on its own\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User first name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User last name; mainly used for display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID used to index users\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n  /**\n   * User ID used to indicate user when making calls to\n   * the server\n   */\n  id: number;\n  /**\n   * User's first name\n   */\n  firstName: string;\n  /**\n   * User's last name\n   */\n  lastName: string;\n  /**\n   * User e-mail; also used for logging in\n   */\n  email: string;\n  /**\n   * Role to indicate what areas of the app are accesible to the user;\n   * 0 = student, 1 = instr, 2 = admin\n   */\n  role: number;\n}\n\n/**\n * base user class which is extended by other interfaces\n * and rarely used on its own\n */\nexport interface _User{\n  /**\n   * User ID used to index users\n   */\n  userId: number;\n  /**\n   * User first name; mainly used for display\n   */\n  firstName: string;\n  /**\n   * User last name; mainly used for display\n   */\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n[unreleased]\n\nUPDATED responses on error in app controllers\nADDED check for null phage from DB when trying to create a plate\nFIXED testing error with deleting fridge\n\n[v1.0.9] - 2018-04-16\n\nFIXED issue with potential incorrect error dropping bact tube to plate directly\nUPDATED plexer submission\nwhen submit button is pushed, a spinner appears in the top left of the results table and the submit button is disabled\nspinner is hidden and button is active once the results come back from the server\nthis will hopefully minimize students sending the same plexer request several times bc they weren't sure if it went through--this causes server overload\n\n\n\n[v1.0.8] - 2018-02-26\n\nADDED track new phage strains parent info\nSave parent id of phage from plate to fridge\nGet parent info about phage when getting fridge\nDisplay phage parent strain number in dialog\n\n\n\n[v1.0.7] - 2018-02-23\n\nUPDATED the way phage mutations are stored to save memory\nUpdated all genetics components\nUpdated model\nUpdated front end interface and pipe\n\n\nUPDATED on rest bacteria, only WT-like genotypes sent to client so smaller data transfer\nREMOVED rate limiting (causing server errors)\nFIXED over capacity for plexer\nADDED \"Page not found\" component for invalid URL\nADDED shuffle plaque lists to force mutants and recombinants to the front\nWhen small/large plaques 100-400\nHandle and shuffle each separately\n\n\n\n[v1.0.6] - 2018-02-20\n\nFIXED recombination error which was under-generating recombinants\nADDED ability to delete non-admin users\nADDED ability to delete course\nREMOVED revoke access option on user fridges\n\n[v1.0.5]\n\nADDED rate limiting\ngenetics routes\nuser auth/update routes\n\n\nUPDATED backend genetics testing\n\n[v1.0.4] - 2018-01-24\n\nADDED Ability to reset password\nsends email to user if user exists\npassword reset token expires after an hour\n\n\nADDED SSL support\nFIXED bugs\ngrant scenario access\nSign out blocking issue\n\n\n\n[v1.0.3] - 2018-01-23\n\nADDED User profile and update password pages\nADDED user controller tests\n\n[v1.0.2] - 2018-01-10\n\nFIXED issues with genetics logic\noverflow on REST bact\nnum phage generated with uneven input phage numbers\nupdated corresponding tests\n\n\nswitched console output to debug\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    public/app/admin/admin-home/admin-home.component.ts\n            \n            \n                component\n            \n            \n                AdminHomeComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/admin/admin.guard.service.ts\n            \n            \n                injectable\n            \n            \n                AdminGuard\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-create/course-create.component.ts\n            \n            \n                component\n            \n            \n                CourseCreateComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-edit/course-edit.component.ts\n            \n            \n                component\n            \n            \n                CourseEditComponent\n            \n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-indiv/course-indiv.component.ts\n            \n            \n                component\n            \n            \n                CourseIndivComponent\n            \n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-list/course-list.component.ts\n            \n            \n                component\n            \n            \n                CourseListComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course-scenario/course-scenario.component.ts\n            \n            \n                component\n            \n            \n                CourseScenarioComponent\n            \n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.resolver.ts\n            \n            \n                injectable\n            \n            \n                CourseResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/course/course.service.ts\n            \n            \n                injectable\n            \n            \n                CourseService\n            \n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                    public/app/admin/not-auth/not-auth.component.ts\n            \n            \n                component\n            \n            \n                NotAuthComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-fridge.component.ts\n            \n            \n                component\n            \n            \n                StudentFridgeComponent\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-fridge/student-phage.component.ts\n            \n            \n                component\n            \n            \n                StudentPhageComponent\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-indiv/student-indiv.component.ts\n            \n            \n                component\n            \n            \n                StudentIndivComponent\n            \n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student-list/student-list.component.ts\n            \n            \n                component\n            \n            \n                StudentListComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.resolver.ts\n            \n            \n                injectable\n            \n            \n                StudentResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.roles.ts\n            \n            \n                variable\n            \n            \n                StudentRolesArray\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/admin/student/student.service.ts\n            \n            \n                injectable\n            \n            \n                StudentService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    public/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/authentication/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                    public/app/authentication/forget-password/forget-password.component.ts\n            \n            \n                component\n            \n            \n                ForgetPasswordComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    public/app/authentication/logged-in.guard.service.ts\n            \n            \n                injectable\n            \n            \n                LoggedInGuard\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    public/app/authentication/reset-password/reset-password.component.ts\n            \n            \n                component\n            \n            \n                ResetPasswordComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    public/app/authentication/signin/signin.component.ts\n            \n            \n                component\n            \n            \n                SigninComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    public/app/authentication/signout/signout.component.ts\n            \n            \n                component\n            \n            \n                SignoutComponent\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/authentication/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    public/app/help/help.component.ts\n            \n            \n                component\n            \n            \n                HelpComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    public/app/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/course.interface.ts\n            \n            \n                interface\n            \n            \n                Course\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateInput\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlateResults\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/experiment.interface.ts\n            \n            \n                interface\n            \n            \n                PlexerInput\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                Fridge\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    public/app/interfaces/fridge.interface.ts\n            \n            \n                interface\n            \n            \n                StudentFridge\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                ExperimentPhage\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                FridgePhage\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                GenotypePhage\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                Phage\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/phage.interface.ts\n            \n            \n                interface\n            \n            \n                StudentPhage\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/scenario.interface.ts\n            \n            \n                interface\n            \n            \n                Scenario\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                AdminStudent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                interface\n            \n            \n                Student\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    public/app/interfaces/student.interface.ts\n            \n            \n                variable\n            \n            \n                sortStudents\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/interfaces/user.interface.ts\n            \n            \n                interface\n            \n            \n                _User\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    public/app/nav/nav.component.ts\n            \n            \n                component\n            \n            \n                NavComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    public/app/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    public/app/pipes/people-list-names.pipe.ts\n            \n            \n                pipe\n            \n            \n                PeopleListNamesPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/person-name.pipe.ts\n            \n            \n                pipe\n            \n            \n                PersonNamePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-deletions.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageDeletionsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-guesses.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageGuessesPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-mutations.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageMutationsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/pipes/phage-parents.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhageParentsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/profile/profile.service.ts\n            \n            \n                injectable\n            \n            \n                ProfileService\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    public/app/profile/update-password/update-password.component.ts\n            \n            \n                component\n            \n            \n                UpdatePasswordComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    public/app/profile/user-profile/user-profile.component.ts\n            \n            \n                component\n            \n            \n                UserProfileComponent\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/fridge.component.ts\n            \n            \n                component\n            \n            \n                FridgeComponent\n            \n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                    public/app/scenario/fridge/phage-dialog.component.ts\n            \n            \n                component\n            \n            \n                PhageDialogComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    public/app/scenario/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/experiment.service.ts\n            \n            \n                injectable\n            \n            \n                ExperimentService\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/lab-room/lab-room.component.ts\n            \n            \n                component\n            \n            \n                LabRoomComponent\n            \n            \n                90 %\n                (37/41)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/landing-room/landing-room.component.ts\n            \n            \n                component\n            \n            \n                LandingRoomComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/location.component.ts\n            \n            \n                component\n            \n            \n                LocationComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/model-room/model-room.component.ts\n            \n            \n                component\n            \n            \n                ModelRoomComponent\n            \n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                    public/app/scenario/location/plexer-room/plexer-room.component.ts\n            \n            \n                component\n            \n            \n                PlexerRoomComponent\n            \n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.component.ts\n            \n            \n                component\n            \n            \n                ScenarioComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.globals.ts\n            \n            \n                variable\n            \n            \n                ScenarioGlobals\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.resolver.ts\n            \n            \n                injectable\n            \n            \n                ScenarioResolver\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    public/app/scenario/scenario.service.ts\n            \n            \n                injectable\n            \n            \n                ScenarioService\n            \n            \n                78 %\n                (15/19)\n            \n        \n        \n            \n                \n                    public/app/shared/confirm-delete-dialog.component.ts\n            \n            \n                component\n            \n            \n                ConfirmDeleteDialogComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                    public/app/shared/read-error.ts\n            \n            \n                variable\n            \n            \n                readErrorMessage\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.0.0\n        \n            @angular/common : ^5.0.0\n        \n            @angular/compiler : ^5.0.0\n        \n            @angular/compiler-cli : ^5.0.0\n        \n            @angular/core : ^5.0.0\n        \n            @angular/forms : ^5.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : ^5.0.0\n        \n            @angular/platform-browser-dynamic : ^5.0.0\n        \n            @angular/platform-server : ^5.0.0\n        \n            @angular/router : ^5.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^1.0.0-beta.6\n        \n            angular-skyhook : ^1.0.0-beta.2\n        \n            async : ^2.6.0\n        \n            bcrypt : ^1.0.3\n        \n            body-parser : ^1.15.2\n        \n            bootstrap : ^4.0.0-beta.3\n        \n            clone : ^2.1.1\n        \n            compression : ^1.6.0\n        \n            connect-flash : ^0.1.1\n        \n            connect-mongo : ^1.3.2\n        \n            cookie-parser : ^1.4.3\n        \n            core-js : 2.4.1\n        \n            debug : ^3.1.0\n        \n            ejs : ^2.5.2\n        \n            eslint : ^4.1.1\n        \n            express : ^4.14.0\n        \n            express-brute : ^1.0.1\n        \n            express-brute-memcached : ^0.0.1\n        \n            express-graceful-exit : ^0.4.0\n        \n            express-session : ^1.14.1\n        \n            helmet : ^3.10.0\n        \n            https : ^1.0.0\n        \n            jquery : ^3.2.1\n        \n            loadash : ^1.0.0\n        \n            method-override : ^2.3.6\n        \n            mongoose : ^5.0.7\n        \n            mongoose-sequence : ^4.0.1\n        \n            morgan : ^1.7.0\n        \n            ng2-dnd : ^5.0.2\n        \n            ngx-breadcrumbs : ^0.0.3\n        \n            nodemailer : ^4.4.2\n        \n            open-iconic : https://github.com/iconic/open-iconic.git\n        \n            passport : ^0.3.2\n        \n            passport-facebook : ^2.1.1\n        \n            passport-google-oauth : ^1.0.0\n        \n            passport-local : ^1.0.0\n        \n            popper.js : ^1.12.9\n        \n            random-js : ^1.0.8\n        \n            react-dnd-html5-backend : ^2.5.4\n        \n            react-dnd-touch-backend : ^0.3.20\n        \n            reflect-metadata : ^0.1.8\n        \n            rxjs : ^5.5.2\n        \n            systemjs : ^0.19.39\n        \n            tslib : ^1.8.0\n        \n            zone.js : ^0.8.18\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncricket\nRun angular tests with : karma start\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n   Copyright 2018 Brigitte Hofmeister\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CourseModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelpModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScenarioModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudentModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_CourseModule\n\n\n\ncluster_CourseModule_declarations\n\n\n\ncluster_CourseModule_providers\n\n\n\ncluster_HelpModule\n\n\n\ncluster_HelpModule_declarations\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ScenarioModule\n\n\n\ncluster_ScenarioModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_StudentModule\n\n\n\ncluster_StudentModule_declarations\n\n\n\ncluster_StudentModule_providers\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminHomeComponent\n\nAdminHomeComponent\n\nAdminModule -->\n\nAdminHomeComponent->AdminModule\n\n\n\n\n\nNotAuthComponent\n\nNotAuthComponent\n\nAdminModule -->\n\nNotAuthComponent->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nHelpModule\n\nHelpModule\n\nHelpModule -->\n\nSharedModule->HelpModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nSharedModule->ProfileModule\n\n\n\n\n\nScenarioModule\n\nScenarioModule\n\nScenarioModule -->\n\nSharedModule->ScenarioModule\n\n\n\n\n\nCourseModule\n\nCourseModule\n\nCourseModule -->\n\nSharedModule->CourseModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nSharedModule->LocationModule\n\n\n\n\n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent \n\nConfirmDeleteDialogComponent  -->\n\nSharedModule->ConfirmDeleteDialogComponent \n\n\n\n\n\nPeopleListNamesPipe \n\nPeopleListNamesPipe \n\nPeopleListNamesPipe  -->\n\nSharedModule->PeopleListNamesPipe \n\n\n\n\n\nPersonNamePipe \n\nPersonNamePipe \n\nPersonNamePipe  -->\n\nSharedModule->PersonNamePipe \n\n\n\n\n\nPhageParentsPipe \n\nPhageParentsPipe \n\nPhageParentsPipe  -->\n\nSharedModule->PhageParentsPipe \n\n\n\n\n\nStudentModule\n\nStudentModule\n\nStudentModule -->\n\nSharedModule->StudentModule\n\n\n\n\n\nAdminGuard\n\nAdminGuard\n\nAdminModule -->\n\nAdminGuard->AdminModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAdminModule -->\n\nStudentService->AdminModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\nAppModule -->\n\nHelpModule->AppModule\n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nScenarioModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nCourseService\n\nCourseService\n\nAppModule -->\n\nCourseService->AppModule\n\n\n\n\n\nLoggedInGuard\n\nLoggedInGuard\n\nAppModule -->\n\nLoggedInGuard->AppModule\n\n\n\n\n\nScenarioResolver\n\nScenarioResolver\n\nAppModule -->\n\nScenarioResolver->AppModule\n\n\n\n\n\nScenarioService\n\nScenarioService\n\nAppModule -->\n\nScenarioService->AppModule\n\n\n\n\n\nForgetPasswordComponent\n\nForgetPasswordComponent\n\nAuthenticationModule -->\n\nForgetPasswordComponent->AuthenticationModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthenticationModule -->\n\nResetPasswordComponent->AuthenticationModule\n\n\n\n\n\nSigninComponent\n\nSigninComponent\n\nAuthenticationModule -->\n\nSigninComponent->AuthenticationModule\n\n\n\n\n\nSignoutComponent\n\nSignoutComponent\n\nAuthenticationModule -->\n\nSignoutComponent->AuthenticationModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthenticationModule -->\n\nSignupComponent->AuthenticationModule\n\n\n\n\n\nCourseCreateComponent\n\nCourseCreateComponent\n\nCourseModule -->\n\nCourseCreateComponent->CourseModule\n\n\n\n\n\nCourseEditComponent\n\nCourseEditComponent\n\nCourseModule -->\n\nCourseEditComponent->CourseModule\n\n\n\n\n\nCourseIndivComponent\n\nCourseIndivComponent\n\nCourseModule -->\n\nCourseIndivComponent->CourseModule\n\n\n\n\n\nCourseListComponent\n\nCourseListComponent\n\nCourseModule -->\n\nCourseListComponent->CourseModule\n\n\n\n\n\nCourseScenarioComponent\n\nCourseScenarioComponent\n\nCourseModule -->\n\nCourseScenarioComponent->CourseModule\n\n\n\n\n\nCourseResolver\n\nCourseResolver\n\nCourseModule -->\n\nCourseResolver->CourseModule\n\n\n\n\n\nHelpComponent\n\nHelpComponent\n\nHelpModule -->\n\nHelpComponent->HelpModule\n\n\n\n\n\nFridgeComponent\n\nFridgeComponent\n\nLocationModule -->\n\nFridgeComponent->LocationModule\n\n\n\n\n\nLabRoomComponent\n\nLabRoomComponent\n\nLocationModule -->\n\nLabRoomComponent->LocationModule\n\n\n\n\n\nLandingRoomComponent\n\nLandingRoomComponent\n\nLocationModule -->\n\nLandingRoomComponent->LocationModule\n\n\n\n\n\nLocationComponent\n\nLocationComponent\n\nLocationModule -->\n\nLocationComponent->LocationModule\n\n\n\n\n\nModelRoomComponent\n\nModelRoomComponent\n\nLocationModule -->\n\nModelRoomComponent->LocationModule\n\n\n\n\n\nPhageDialogComponent\n\nPhageDialogComponent\n\nLocationModule -->\n\nPhageDialogComponent->LocationModule\n\n\n\n\n\nPlexerRoomComponent\n\nPlexerRoomComponent\n\nLocationModule -->\n\nPlexerRoomComponent->LocationModule\n\n\n\n\n\nExperimentService\n\nExperimentService\n\nLocationModule -->\n\nExperimentService->LocationModule\n\n\n\n\n\nUpdatePasswordComponent\n\nUpdatePasswordComponent\n\nProfileModule -->\n\nUpdatePasswordComponent->ProfileModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nProfileModule -->\n\nUserProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nScenarioModule -->\n\nListComponent->ScenarioModule\n\n\n\n\n\nScenarioComponent\n\nScenarioComponent\n\nScenarioModule -->\n\nScenarioComponent->ScenarioModule\n\n\n\n\n\nConfirmDeleteDialogComponent\n\nConfirmDeleteDialogComponent\n\nSharedModule -->\n\nConfirmDeleteDialogComponent->SharedModule\n\n\n\n\n\nPeopleListNamesPipe\n\nPeopleListNamesPipe\n\nSharedModule -->\n\nPeopleListNamesPipe->SharedModule\n\n\n\n\n\nPersonNamePipe\n\nPersonNamePipe\n\nSharedModule -->\n\nPersonNamePipe->SharedModule\n\n\n\n\n\nPhageParentsPipe\n\nPhageParentsPipe\n\nSharedModule -->\n\nPhageParentsPipe->SharedModule\n\n\n\n\n\nPhageDeletionsPipe\n\nPhageDeletionsPipe\n\nStudentModule -->\n\nPhageDeletionsPipe->StudentModule\n\n\n\n\n\nPhageGuessesPipe\n\nPhageGuessesPipe\n\nStudentModule -->\n\nPhageGuessesPipe->StudentModule\n\n\n\n\n\nPhageMutationsPipe\n\nPhageMutationsPipe\n\nStudentModule -->\n\nPhageMutationsPipe->StudentModule\n\n\n\n\n\nStudentFridgeComponent\n\nStudentFridgeComponent\n\nStudentModule -->\n\nStudentFridgeComponent->StudentModule\n\n\n\n\n\nStudentIndivComponent\n\nStudentIndivComponent\n\nStudentModule -->\n\nStudentIndivComponent->StudentModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nStudentModule -->\n\nStudentListComponent->StudentModule\n\n\n\n\n\nStudentPhageComponent\n\nStudentPhageComponent\n\nStudentModule -->\n\nStudentPhageComponent->StudentModule\n\n\n\n\n\nStudentResolver\n\nStudentResolver\n\nStudentModule -->\n\nStudentResolver->StudentModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            10 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        34 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTO DO\n\nAbility to remove instructor from a course\nBulk delete phage as an entire shelf\nBulk save phage to the fridge\nAllow user to delete account\nHelp pages\nTesting\nprofile/update-password.component\nprofile/user-profile.component\nauthentication\nstudent-course-scenario.resolver\nscenario/location/experiment.service\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            readErrorMessage   (public/.../read-error.ts)\n                        \n                        \n                            ScenarioGlobals   (public/.../scenario.globals.ts)\n                        \n                        \n                            sortStudents   (public/.../student.interface.ts)\n                        \n                        \n                            StudentRolesArray   (public/.../student.roles.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    public/app/shared/read-error.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            readErrorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        readErrorMessage:     \n\n                    \n                \n                    \n                        \n                            Default value : function(error: any): string {\n  console.log(JSON.stringify(error));\n  let errorMessage = 'Unknown error';\n  if(error.error && error.error.message){\n   return error.error.message\n  } else if(error.error && error.error.text){\n   return error.error.text\n  } else if (error && error.message){\n   return error.message;\n  } else if(error){\n    return error;\n  }\n  return errorMessage;\n}\n                        \n                    \n\n                \n                    \n                        This function takes an error object and looks for\nthe error message; it checks several properties because\nerrors are not always uniform\n\n                    \n                \n\n            \n        \n\n    public/app/scenario/scenario.globals.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ScenarioGlobals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ScenarioGlobals:     miscellaneou\n\n                    \n                \n                    \n                        \n                            Type :     miscellaneou\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /**\n   * Number of starting phage when taken from fridge\n   */\n  numPhage:1000000,\n  /**\n   * Maximum number of plaques allowed on lab room plate\n   */\n  plateCapacity: 1500,\n  /**\n   * Maximum number of plaques allowed on each plexer room plate\n   */\n  plexerCapacity: 200,\n  /**\n   * Number of shelves in the fridge\n   */\n  nFridgeShelf: 32,\n  /**\n   * Number of spots on each shelf of the fridge\n   */\n  nFridgeSpots: 16,\n  /**\n   * Default dilution value for lab room; can be changed by user\n   */\n  defaultLabDilution: 10,\n  /**\n   * Default dilution value for plexer room; can be changed by user\n   */\n  defaultPlexerDilution: 5,\n  /**\n   * Length of the gene in number of basepairs\n   */\n  geneLength: 350,\n  /**\n   * Number of basepairs per \"block\" when guessing deletion location\n   */\n  deletionGuessLength: 10\n}\n                        \n                    \n\n                \n                    \n                        Scenario/experiement-related values used to\n\nSend the correct parameters to backend calls\nMatch some backend parameters\nHave consistent defaults\n\n\n                    \n                \n\n            \n        \n\n    public/app/interfaces/student.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortStudents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortStudents:     \n\n                    \n                \n                    \n                        \n                            Default value : function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n                        \n                    \n\n                \n                    \n                        Function to sort students alphabetically by last name;\nUses first name for ties\nMakes the name lowercase before sorting to ensure sort is\ncase insensitive\n\n                    \n                \n\n            \n        \n\n    public/app/admin/student/student.roles.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StudentRolesArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        StudentRolesArray:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    key: 'student',\n    label: 'Student',\n    value: 0\n  }, {\n    key: 'instr',\n    label: 'Instructor',\n    value: 1\n  }, {\n    key: 'admin',\n    label: 'Administrator',\n    value: 2\n  }\n]\n                        \n                    \n\n                \n                    \n                        List of user roles with their numeric value (value), string value\nused by MongoDB (key), and string displayed on webpage (label)\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers.html":{"url":"additional-documentation/controllers.html","title":"additional-page - Controllers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Controllers\n\n\n\n  \n    \n      Admin Controller\n    \n    \n      listUsers\n      getUser\n      deleteUser\n      setRole\n      hasAuthorization\n      isAdmin\n    \n  \n  \n  \n    \n      Course Controller\n    \n    \n      isInstructor\n      listCourses\n      listCourseNum\n      createCourse\n      getCourse\n      editCourse\n      deleteCourse\n      getStudents\n      deleteCourseStudents\n      getPossibleInstructors\n      setInstructor\n      getScenarioStatus\n      courseByNum\n    \n  \n  \n  \n    \n      Fridge Controller\n    \n    \n      stockFridge\n      getFridge\n      getStudentFridge\n      saveDeletions\n      deleteStudentFridge\n      addPhageToFridge\n      updatePhage\n      deletePhage\n      phageById\n      findFridgeByScenOwner\n      hasFridgeAuthorization\n      hasPhageAuthorization\n      getFridgeInfo\n    \n  \n  \n  \n    \n      Genetics Controller\n    \n    \n      createPlate\n      handlePlexer\n    \n  \n  \n  \n    \n      Scenario Controller\n    \n    \n      list\n      read\n      scenarioByCode\n    \n  \n  \n  \n    \n      User Controller\n    \n    \n      getUser\n      editUser\n      resetPasswordEmail\n      resetPassword\n      signin\n      signup\n      signout\n      grantAccess\n      requiresLogin\n      userById\n      getUserInfo\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/admin-controller.html":{"url":"additional-documentation/controllers/admin-controller.html","title":"additional-page - Admin Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Admin Controller\n\n  \n    Description\n  \n  \n    The Admin-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                listUsers\n              \n\n                getUser\n              \n\n                deleteUser\n              \n\n                setRole\n              \n\n                hasAuthorization\n              \n\n                isAdmin\n              \n          \n        \n      \n    \n  \n\n  \n  \n    listUsers\n  \n    \n      \n        listUsers(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/students\n\n        \n        \n          \n            list all users in the system for admin OR\nlist all students for instructor courses for instructor\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error\n\n    \n    200 OKIf user is admin, returns list of all users\nIf user is instr, returns list of students in instr's courses\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getUser\n  \n    \n      \n        getUser(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/students/:studentId\n\n        \n        \n          \n            Get information about a secondary user (not necessarily the user currently logged in)\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteUser\n  \n    \n      \n        deleteUser(req, res) ⇒ Object\n      \n        \n              DELETE\n\n    /api/admin/:userId/students/:studentId\n\n        \n        \n          \n            Delete a secondary user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKCleaned information about the user\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    setRole\n  \n    \n      \n        setRole(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/students/:studentId\n\n        \n        \n          \n            Update a user's role to \"student\", \"instructor\", or \"admin\"\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERthe secondary user from userById with id studentId\n\n      \n      bodyObjectnew role; one of \"student\", \"instr\", \"admin\"\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated user information\n\n      \n\n\n\n          \n        \n        \n          \n            \n    Request Example :\n    /api/admin/1/students/67Make user 67 an instructor \n  {\n  role: \"instr\"\n}\n \n  \n          \n        \n    \n  \n\n  \n  \n    hasAuthorization\n  \n    \n      \n        hasAuthorization(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user is instructor or admin\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionthe next middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object to response if not authorized otherwise go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin or instructor, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to the next middleware if user is admin or instructor\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    isAdmin\n  \n    \n      \n        isAdmin(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user is admin\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionthe next middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object to response if not authorized otherwise next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf user is not an admin, sends error as {message: 'Not authorized'}\n\n    \n    next()Go to next middleware if user is an admin\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/course-controller.html":{"url":"additional-documentation/controllers/course-controller.html","title":"additional-page - Course Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Course Controller\n\n  \n    Description\n  \n  \n    The Course-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                isInstructor\n              \n\n                listCourses\n              \n\n                listCourseNum\n              \n\n                createCourse\n              \n\n                getCourse\n              \n\n                editCourse\n              \n\n                deleteCourse\n              \n\n                getStudents\n              \n\n                deleteCourseStudents\n              \n\n                getPossibleInstructors\n              \n\n                setInstructor\n              \n\n                getScenarioStatus\n              \n\n                courseByNum\n              \n          \n        \n      \n    \n  \n\n  \n  \n    isInstructor\n  \n    \n      \n        isInstructor(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to allow only admin and the instructor of the course to proceed\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n      \n      courseCOURSEcourse details from courseByNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object to response not allowed or next middleware if allowed\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 Forbiddencurrent user not authorized, send error as {message: 'Not instructor of this course'}\n\n    \n    next()If user authorized, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    listCourses\n  \n    \n      \n        listCourses() ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses\n\n        \n        \n          \n            get list of courses\nis user is admin, list all\nif user is instructor, list courses for teacher\n          \n        \n        \n          \n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUser is admin and there are no courses OR user is instr role but not the instructor of any courses; sends message as {message: 'No courses found'}\n\n    \n    200 OKList of courses; courses in the list depend on user role\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    listCourseNum\n  \n    \n      \n        listCourseNum(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/courses\n\n        \n        \n          \n            Return the list of course numbers that currently exist\n\nThis is used during sign-up and does not require a user to be logged in\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not Foundthere are no courses; sends message as {message: \"No courses found\"}\n\n    \n    200 OKList of courses with properties courseNum and id (DB id)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    createCourse\n  \n    \n      \n        createCourse(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/courses\n\n        \n        \n          \n            Create a new course and set current user as instructor\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectdetails about new course: courseNum and description\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKNewly created course\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getCourse\n  \n    \n      \n        getCourse(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum\n\n        \n        \n          \n            Get information about an existing course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKthe course information including courseNum, description, and list of instructors\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    editCourse\n  \n    \n      \n        editCourse(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/courses/:courseNum\n\n        \n        \n          \n            Update the description of an existing course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      bodyObjectcourse information to update - the description\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKUpdated course information\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteCourse\n  \n    \n      \n        deleteCourse() ⇒ Object\n      \n        \n              DELETE\n\n    /api/admin/:userId/courses/:courseNum\n\n        \n        \n          \n            Delete a course\n          \n        \n        \n          \n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about course just deleted\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getStudents\n  \n    \n      \n        getStudents(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum/students\n\n        \n        \n          \n            get list of students for a course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in the course; each student has properties firstName, lastName, userId, accessGranted, and email\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteCourseStudents\n  \n    \n      \n        deleteCourseStudents(req, res) ⇒ Object\n      \n        \n              DELETE\n\n    /api/admin/:userId/courses/:courseNum/students\n\n        \n        \n          \n            Bulk delete all students in a particular course\nMost useful when finished with semester and course is over\nDoes not remove the course itself\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 SuccessList of students just deleted\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getPossibleInstructors\n  \n    \n      \n        getPossibleInstructors(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum/instructors\n\n        \n        \n          \n            Get list of all possible instructors for a specific course (not including the instrcutors currently teaching the course)\nAdmin can add current instructors or students in the course\nInstructors can add other instrctors\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById  with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    200 OKList of possible instrcutors; each person has properties firstName, lastName, userId, and role\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    setInstructor\n  \n    \n      \n        setInstructor(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/courses/:courseNum/instructors/:studentId'\n\n        \n        \n          \n            Add an instuctor to the course and make user \"instructor\" role if user is a student\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum with course number courseNum\n\n      \n      studentUSERuser to make instructor; identified with userById with id studentId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error updating the course, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error updating the user, sends description of error as {message: error-message}\n\n    \n    200 OKThe updated course\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getScenarioStatus\n  \n    \n      \n        getScenarioStatus(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/courses/:courseNum/:scenarioId\n\n        \n        \n          \n            Get scenario status (aka access granted) for a scenario for all\nstudents in a course\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      courseCOURSEcourse details from courseByNum\n\n      \n      scenarioSCENARIOscenario of interested; identified with scenarioByCode with id scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    404 Not FoundThere are no students in the course, sends error as {message: \"no students found\"}\n\n    \n    500 Internal Server ErrorDatabase error, sends description of error as {message: error-message}\n\n    \n    200 OKList of students in course with scenario access; each object in list has firstName, lastName, userId, and status\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    courseByNum\n  \n    \n      \n        courseByNum(req, res, next, id) ⇒ function\n      \n        \n          \n    :courseNum\n\n        \n        \n          \n            Middleware to find course by course number\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n      \n        idstringcourse number from URL\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass the error to the next middleware\n\n    \n    next('Failed to load course id')If course doesn't exist, pass message to middleware\n\n    \n    next()If success, set request course and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/fridge-controller.html":{"url":"additional-documentation/controllers/fridge-controller.html","title":"additional-page - Fridge Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Fridge Controller\n\n  \n    Description\n  \n  \n    The Fridge-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                stockFridge\n              \n\n                getFridge\n              \n\n                getStudentFridge\n              \n\n                saveDeletions\n              \n\n                deleteStudentFridge\n              \n\n                addPhageToFridge\n              \n\n                updatePhage\n              \n\n                deletePhage\n              \n\n                phageById\n              \n\n                findFridgeByScenOwner\n              \n\n                hasFridgeAuthorization\n              \n\n                hasPhageAuthorization\n              \n\n                getFridgeInfo\n              \n          \n        \n      \n    \n  \n\n  \n  \n    stockFridge\n  \n    \n      \n        stockFridge(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket/:userId/:scenarioId/new-fridge\n\n        \n        \n          \n            Create a new fridge stocked with the scenario phage\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestError creating phage for this fridge, sends error as {message: 'Unable to create new phage for scenario'}\n\n    \n    500 Internal Server ErrorError saving the new fridge, sends error as {message: 'Unable to save new fridge'}\n\n    \n    200 OKNewly created fridge cleaned by getFridgeInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getFridge\n  \n    \n      \n        getFridge(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket/:userId/:scenarioId\n\n        \n        \n          \n            Get the current user's fridge\nOnly include info needed to be known for lab room, plexer room, and model room of scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKUser's fridge for this scenario cleaned by getFridgeInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getStudentFridge\n  \n    \n      \n        getStudentFridge(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/admin/:userId/students/:studentId/:scenarioId\n\n        \n        \n          \n            Get a user's fridge and include lots of details only\nadmin/instrs should know\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKIf fridge doesn't exist, return owner/scenario as if the fridge exists (information needed for front-end rendering)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    saveDeletions\n  \n    \n      \n        saveDeletions(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/:userId/:scenarioId/deletions\n\n        \n        \n          \n            Update the deletion guesses for the fridge\nguesses come in as object and are stringified when saving\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectupdated guesses to save\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn server/database error send description of error as {message: error-message}\n\n    \n    200 OKreturns stringified updated guesses to response\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deleteStudentFridge\n  \n    \n      \n        deleteStudentFridge(req, res, next) ⇒ function\n      \n        \n          \n    /api/admin/:userId/students/:studentId/:scenarioId\n\n        \n        \n          \n            Middleware which deletes a fridge and all phage within the fridge\nCalled after granting access because new fridge\nneeds to be created for the user/scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext function to go to\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent of interest from userById with id studentId\n\n      \n      scenarioexternal:SCNEARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next()If successful, delete the fridge and all phage in the fridge, then go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    addPhageToFridge\n  \n    \n      \n        addPhageToFridge(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/:userId/:scenarioId/fridge-phage\n\n        \n        \n          \n            Create new phage with phage type \"user\", save that to DB, and add to the current fridge\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n      \n      bodyObjectinformation about new strain; has properties\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bade RequestOn error creating new phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error adding phage to fridge, sends description of error as {message: error-message}\n\n    \n    200 OKInformation about the newly added strain, including info about phage parents (fetch from DB)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    updatePhage\n  \n    \n      \n        updatePhage(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/:userId/:scenarioId/:phageId\n\n        \n        \n          \n            Update the comment or submitted state of a phage\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectupdated strain info; has comment, strainNum, and submitted\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, sends description of error as {message: error-message}\n\n    \n    200 OKreturn updated phage with information about phage parents (from DB)\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    deletePhage\n  \n    \n      \n        deletePhage(req, res) ⇒ Object\n      \n        \n              DELETE\n\n    /api/cricket/:userId/:scenarioId/:phageId\n\n        \n        \n          \n            Delete a phage strain and remove it from the fridge\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      strainPHAGEphage strain from phageById with id phageId\n\n      \n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error deleting phage, sends description of error as {message: error-message}\n\n    \n    500 Internal Server ErrorOn error removing phage from fridge, sends error as {message: \"Unable to remove strain from fridge\"}\n\n    \n    200 OKreturn the newly deleted phage strain\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    phageById\n  \n    \n      \n        phageById(req, res, next, id) ⇒ function\n      \n        \n          \n    :phageId\n\n        \n        \n          \n            Middleware which identifies a phage strain based on the\nid\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n      \n        idstringmongoDB id of phage strain to look for\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to the next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Phage not found')If phage doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request strain and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    findFridgeByScenOwner\n  \n    \n      \n        findFridgeByScenOwner(req, next) ⇒ function\n      \n        \n          \n\n        \n        \n          \n            Middleware to find a fridge by the current user and current scenario\nuser and scenario were set in previous middleware\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)If error, pass error to next middleware\n\n    \n    next('Failed to find fridge')If fridge doesn't exist, pass message to next middleware\n\n    \n    next()If successful, set request fridge and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    hasFridgeAuthorization\n  \n    \n      \n        hasFridgeAuthorization(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user is fridge owner\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n      \n      fridgeFRIDGElogged in users's fridge for this scenario from findFridgeByScenOwner\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    hasPhageAuthorization\n  \n    \n      \n        hasPhageAuthorization(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to determine if current user has authorization to\nupdate a phage strain\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress responses object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      strainPHAGEphage strain from phageById with id phageId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    If not authorized, return json object with error to response otherwise go to next middleware\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    403 ForbiddenIf current user isn't owner, send error as {message: 'User is not authorized'}\n\n    \n    next()If authorized, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getFridgeInfo\n  \n    \n      \n        getFridgeInfo(fridge) ⇒ Object\n      \n        \n          \n            Helper method to return fridge details in consistent\nformat\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        fridgeFRIDGEfridge object from DB\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \ncleaned up fridge object with properties\nscenarioDetails, guesses, accessGranted, userId, scenCode, and strains\nEach strain of strains has comment, id, parents, strainNum, phageType, submitted, and numParents\n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/genetics-controller.html":{"url":"additional-documentation/controllers/genetics-controller.html","title":"additional-page - Genetics Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Genetics Controller\n\n  \n    Description\n  \n  \n    The controller which performs genetic crosses/manipulations in\nthe lab and plexer rooms\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                handlePlexer\n              \n          \n        \n      \n    \n  \n\n  \n  \n    createPlate\n  \n    \n      \n        createPlate(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/plate\n\n        \n        \n          \n            Creates a plate for the lab room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to create the plate; has properties phage1 (numPhage and id), (optional) phage2, lawnType, location, capacity, and scenarioData\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \njson object to response\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestNumber of phage is not set for one of the phage, send error as {message: 'numPhage not set'}\n\n    \n    404 Not foundPhage 1 is not found in DB, send error as {message: Error finding the specified phage(1|2)'}\n\n    \n    500 Internal Server ErrorOn error, sends error message as {message: error-message}\n\n    \n    200 OKsuccessfully generated plate; has properties full, smallPlaque, largePlaque, genotypes, and parents\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    handlePlexer\n  \n    \n      \n        handlePlexer(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/cricket/plexer\n\n        \n        \n          \n            Generates the NxM plates for the plexer\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectinfo needed to generate plexer;\nhas rowPhage (list with each having id and numPhage),\ncolPhage(list with each having id and numPhage),\nscenarioData, lawnType, location, capacity\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \njson object to response\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Service ErrorOn error finding phage in DB, send error as {message: error-message}\n\n    \n    200 OKsuccessfully generated plexer result as 2D array where each cell has full, smallPlaque, and largePlaque\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/scenario-controller.html":{"url":"additional-documentation/controllers/scenario-controller.html","title":"additional-page - Scenario Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  Scenario Controller\n\n  \n    Description\n  \n  \n    The Scenario-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                list\n              \n\n                read\n              \n\n                scenarioByCode\n              \n          \n        \n      \n    \n  \n\n  \n  \n    list\n  \n    \n      \n        list(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket\n\n        \n        \n          \n            List all of the sceanrios in order of degree of difficulty\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKReturn list of scenarios\neach scenario has properties label, scenCode, purpose, startingPoint, relevance, and degOfDifficulty\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    read\n  \n    \n      \n        read(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/cricket/:scenarioId\n\n        \n        \n          \n            Get the details about a specifc scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      scenarioSCENARIOcurrent scenario from scenarioByCode with scenCode scenarioId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    returns json object of scenario to response with properties label, scenCode, purpose, startingPoint, relevance, and degOfDiff\n\n\n          \n        \n    \n  \n\n  \n  \n    scenarioByCode\n  \n    \n      \n        scenarioByCode(req, res, next, id) ⇒ function\n      \n        \n          \n    :scenarioId\n\n        \n        \n          \n            Retreives a scenario from a scenario code\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware to follow\n\n      \n        idStringscenario code from URL\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    \nnext middleware\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next(error)On error, pass the error to next middleware\n\n    \n    next('Failed to load scenario id')\nIf scenario doesn't exist, pass message to next middleware\n\n\n    \n    next()\nif successful, set request scenario and go to next middleware\n\n\n      \n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/controllers/user-controller.html":{"url":"additional-documentation/controllers/user-controller.html","title":"additional-page - User Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Controller\n  User Controller\n\n  \n    Description\n  \n  \n    The User-related controller functions\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                getUser\n              \n\n                editUser\n              \n\n                updatePassword\n              \n\n                resetPasswordEmail\n              \n\n                resetPassword\n              \n\n                signin\n              \n\n                signup\n              \n\n                signout\n              \n\n                grantAccess\n              \n\n                requiresLogin\n              \n\n                userById\n              \n\n                getUserInfo\n              \n          \n        \n      \n    \n  \n\n  \n  \n    getUser\n  \n    \n      \n        getUser(req, req) ⇒ Object\n      \n        \n              GET\n\n    /api/users/:userId\n\n        \n        \n          \n            Get information about a user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        reqObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKTrimmed user information from getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    editUser\n  \n    \n      \n        editUser(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/users/:userId\n\n        \n        \n          \n            Update user info - name and/or email\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectupdated information about user, specifically firstName, lastName, and email\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    updatePassword\n  \n    \n      \n        updatePassword(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/users/:userId/update-password\n\n        \n        \n          \n            Update a user password\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      bodyObjectrequest body with password (old password) and newPassword (new password)\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error finding user, sends description of error as {message: error-message}\n\n    \n    404 Not FoundUnable to find user; sends error as {message: 'User not found'}\n\n    \n    401 UnauthorizedError changing password, i.e. old password isn't correct, sends error as {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    resetPasswordEmail\n  \n    \n      \n        resetPasswordEmail(req, res, next) ⇒ Object\n      \n        \n              POST\n\n    /api/auth/forget-password\n\n        \n        \n          \n            Sends an email to a user to allow user to reset password\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with email\nincludes \"body\" which has user email\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf error with email transporter, send error as {message: 'Error with server email service'}\n\n    \n    404 Not FoundIf email doesn't belong to a current user send message as {message: 'No account with that email.'}\n\n    \n    422 Unprocessable EntityIf error trying to send reset email, send error to response as {message: error-message}\n\n    \n    200 OKSuccessfully sends the email and sends success message to response\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    resetPassword\n  \n    \n      \n        resetPassword(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/auth/reset-password\n\n        \n        \n          \n            Allows user to reset the password using a token (sent by email)\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with password (new password),\nconfirmPassword (password entered second time) and token (token sent to email to allow password reset)\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorIf database error, send {message: error-message}\n\n    \n    404 Not FoundIf token is invalid, send error as {message: 'Invalid token.'}\n\n    \n    403 ForbiddenIf token is expired, send error as {message: 'Token has expired'}\n\n    \n    400 Bad RequestIf password and confirm password don't match, send error as {message: 'Confirm password does not match.'}\n\n    \n    200 OKIf successfully update password, send {message: 'Password has been reset.'}\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    signin\n  \n    \n      \n        signin(req, res, next) ⇒ Object | function\n      \n        \n              POST\n\n    /api/auth/signin\n\n        \n        \n          \n            Using passport authenticate and request login in, attempts to sign users in\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware function\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email) and password\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    json object on error or go to next middleware on success\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    400 Bad RequestOn error, send error as {message: error-message}\n\n    \n    next()On success, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    signup\n  \n    \n      \n        signup(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/auth/signup\n\n        \n        \n          \n            Create a new user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      bodyObjectrequest body with username (email), password,\nfirstName, lastName, and courseNum\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error creating/saving user, sends {message: error-message}\n\n    \n    400 Bad RequestOn error logging in, sends {message: error-message}\n\n    \n    200 OKOn successful update, send updated user cleaned by getUserInfo\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    signout\n  \n    \n      \n        signout(req, res) ⇒ Object\n      \n        \n              GET\n\n    /api/auth/signout\n\n        \n        \n          \n            Sign out a logged in user\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object;\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object to response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    200 OKSends true\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    grantAccess\n  \n    \n      \n        grantAccess(req, res) ⇒ Object\n      \n        \n              POST\n\n    /api/admin/:userId/students/:studentId/:scenarioId\n\n        \n        \n          \n            grant access to student for specific scenario\nNote: this function is called after [deleteStudentFridge]{@link fridge-controller.html#deleteStudentFridge} middleware\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n        \n\n\n\n              \n                Request Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n      curUserUSERlogged in user from userById with id userId\n\n      \n      studentUSERstudent to grant access for from userById with id studentId\n\n      \n      scenarioSCENARIOscenario to grant access for from scenarioByCode with scenCode scenarioId\n\n      \n      bodyObjectrequest body with access indicating to grant (true) or revoke (false) access\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    json object for response\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    500 Internal Server ErrorOn error, send error as {message: error-message}\n\n    \n    200 OKIf user doesn't have accessGranted property, send 200 response as if it was successful\n\n    \n    200 OKIf successfully update user, send updated user\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    requiresLogin\n  \n    \n      \n        requiresLogin(req, res, next) ⇒ Object | function\n      \n        \n          \n            Middleware to check if current user can access the path depending if they are logged in\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextfunctionnext middleware to follow\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object | function    \n    \njson response when not logged in otherwise go to next middleware\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    401 UnauthorizedIf not currently logged in, send error as {message: 'User is not logged in'}\n\n    \n    next()If logged in, go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    userById\n  \n    \n      \n        userById(req, res, next, id) ⇒ function\n      \n        \n          \n    :userId | :studentId\n\n        \n        \n          \n            Find user (if they exist) by the user id\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        reqObjectExpress request object\n\n      \n        resObjectExpress response object\n\n      \n        nextObjectNext function to go to\n\n      \n        idstringuser's id as a string from URL\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    \nnext middleware\n\n\n\n              Response :\n  \n    \n      StatusDescription\n    \n  \n  \n\n    next('Invalid user')If id is invalid, pass message to next middleware\n\n    \n    next(error)If some error, pass error to next middleware\n\n    \n    next('User not found')If id doesn't belong to a user, pass message to next middleware\n\n    \n    next()Able to find user\nIf req.curUser isn't set, set request curUser as the logged in user and go to next middleware;\nIf req.curUser is set, set request student as the secondary user and go to next middleware\n\n      \n\n\n\n          \n        \n    \n  \n\n  \n  \n    getUserInfo\n  \n    \n      \n        getUserInfo(user) ⇒ Object\n      \n        \n          \n            Returns trimmed user info in a consistent manner\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        userUSERuser object from DB\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    trimmed user object to have properties id, firstName,\nlastName, email, and role\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics.html":{"url":"additional-documentation/genetics.html","title":"additional-page - Genetics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Genetics\n\nPhage\n\n  \n    \n      Phage Scenario\n    \n    \n      generateScenario\n      makeGene\n      makePhage\n      makeWTPhage\n      makeFrameshiftPhage\n      makeDeletionPhage\n      generateFrameshift\n      checkPhageFrameshift\n      getNewSpot\n      generateDeletion\n      checkPhageDeletion\n    \n  \n  \n  \n    \n      Phage Logic\n    \n    \n      doPheno\n      getFrames\n    \n  \n  \n  \n    \n      Phage Experiment\n    \n    \n      recombine\n      mutagenize\n      _validRecombDel\n      _copyDeletion\n    \n  \n  \n \nPlates\n\n  \n    \n      Plate Experiment\n    \n    \n      createPlate\n      createPlatePhage\n      generatePlate\n      computeRecombParameters\n      computeNumOffspring\n      shufflePlaqueList\n    \n  \n  \n  \n    \n      Plexer Experiment\n    \n    \n      createPlexerPlate\n      generatePlexerPlate\n    \n  \n  \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-scenario.html":{"url":"additional-documentation/genetics/phage-scenario.html","title":"additional-page - Phage Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Scenario\n\n  \n    Description\n  \n  \n    Functions which handle creating  phage for different scenarios\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                generateScenario\n              \n\n                makeGene\n              \n\n                makePhage\n              \n\n                makeWTPhage\n              \n\n                makeFrameshiftPhage\n              \n\n                makeDeletionPhage\n              \n\n                _generateFrameshift\n              \n\n                _checkPhageFrameshift\n              \n\n                _getNewSpot\n              \n\n                _generateDeletion\n              \n\n                _checkPhageDeletion\n              \n          \n        \n      \n    \n  \n\n  \n  \n    generateScenario\n  \n    \n      \n        generateScenario(scenario) ⇒ Object\n      \n        \n          \n            Generates all of the phage and other necessary info for a given scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        scenarioObjectparameters for the scenario; includes:\n\nmutationFreq (number): chance of mutation as decimal\nrecombinationFreq (number): chance of single recombination as decimal\ngcProb (number): percent of G/C's to use in gene\nminStops (number): minimum number of stop codons when out of frame\nintraMuteDist (number[])\ninterMuteDist (number)\nreferencePhage (string[]): descriptions of reference phage; known WT or mut\notherPhage (string[]): descriptions of non-reference phage; unknown WT or mut\n\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    all info needed for a new scenario\n\nstrains (Object[]): list of strains\nscenarioDetails (Object): scenario info needed for experiments later\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeGene\n  \n    \n      \n        makeGene(gcProb, minStops) ⇒ Object\n      \n        \n          \n            Make a WT gene - has no stop codons normally but has at least\nminStops with frameshifts\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        gcProbnumberGC probability (percent G/C vs A/T)\n\n      \n        minStopsnumberminimum number of stops for frameshifted gene\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    the nucleotide sequence to be used; includes:\n\nwtGene (string): nucleic acids that consitute this gene\nrealStops (number[]): location of stop codons\nframeStopList (number[][]): location and which frameshift the stop occurs\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makePhage\n  \n    \n      \n        makePhage(phageDetails, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Create a phage strain\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageDetailsObjectphage config info (from scenario config)\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectscenario parameters\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly created strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeWTPhage\n  \n    \n      \n        makeWTPhage(phage, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Create a WT phage - no mutations\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageObjectphage config info (from scenario config)\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectcomputed scenario info\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeFrameshiftPhage\n  \n    \n      \n        makeFrameshiftPhage(phage, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Generate a mutant phage strain that has at least 1 frameshift mutation\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageObjectphage config info (from scenario config)\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectcurrent scenario information; used to generate new, valid strain\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    makeDeletionPhage\n  \n    \n      \n        makeDeletionPhage(phage, strainNum, phageType, scenData) ⇒ Object\n      \n        \n          \n            Create a phage strain with a large deletion\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageObjectconfiguration for phage to generate from scenario\n\n      \n        strainNumnumberstrain number\n\n      \n        phageTypestringreference or unknown\n\n      \n        scenDataObjectconfiguration for current scenario\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    newly crated phage strain\n\nphage (Object): has properties strainNum, phageType, mutationList, deletion, and comment\nscenData (Object)\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _generateFrameshift\n  \n    \n      \n        _generateFrameshift(shiftType, nShifts, readable, scenData) ⇒ Array\n      \n        \n          \n            Attempt to generate a single frameshift mutation\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        shiftTypenumbershould it be insertion, deletion, or random\n\n      \n        nShiftsnumbernumber of shifts total for this phage\n\n      \n        readablestringshould be gene be in frame or not\n\n      \n        scenDataObjectcurrent scenario data to ensure valid phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    valid mutation(s) for this new phage or empty list if no valid mutation found\n\n\n          \n        \n    \n  \n\n  \n  \n    _checkPhageFrameshift\n  \n    \n      \n        _checkPhageFrameshift(keyMutes, scenData) ⇒ boolean\n      \n        \n          \n            Check that the potential frameshift(s) are valid given the\nmutations in other phage in the scenario\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        keyMutesArraymutations to check\n\n      \n        scenDataObjectcurrent scenario data\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  boolean    \n    is the frameshift valid?\n\n\n          \n        \n    \n  \n\n  \n  \n    _getNewSpot\n  \n    \n      \n        _getNewSpot(lastMade, scenData) ⇒ number\n      \n        \n          \n            Attempt to create a new mutation\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        lastMadenumberthe last mutation made\n\n      \n        scenDataObjectcurrent scenario configuration info\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  number    \n    location of new frameshift mutation that isn't too close to other mutations\n\n\n          \n        \n    \n  \n\n  \n  \n    _generateDeletion\n  \n    \n      \n        _generateDeletion(usedDeleteSpots) ⇒ Array\n      \n        \n          \n            Attempt to generate a deletion if we run out of preset deletion spots/lengths\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        usedDeleteSpotsArraylist of deletion spots already used\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    new valid deletion if found or throws error\n\n\n          \n        \n    \n  \n\n  \n  \n    _checkPhageDeletion\n  \n    \n      \n        _checkPhageDeletion(keyMutes, usedDeleteSpots) ⇒ boolean\n      \n        \n          \n            Check that deletion is valid; far enough away from other deletions\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        keyMutesArraydeletion to check\n\n      \n        usedDeleteSpotsArraydeletions already in play for scenario\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  boolean    \n    is the deletion valid?\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-logic.html":{"url":"additional-documentation/genetics/phage-logic.html","title":"additional-page - Phage Logic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Logic\n\n  \n    Description\n  \n  \n    Functions which compute frameshift/phenotype type\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                doPheno\n              \n\n                getFrames\n              \n          \n        \n      \n    \n  \n\n  \n  \n    doPheno\n  \n    \n      \n        doPheno(mutantList, stopList) ⇒ string\n      \n        \n          \n            Determine the phenotype of a phage based on the list of mutations\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        mutantListArraymutations for this phage strain\n\n      \n        stopListArraylocations of stop codons for varying frameshifts\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  string    \n    phenotype; one of \"allTranslated\", \"frameShifted\", \"deleted\", or \"stopped\"\n\n\n          \n        \n    \n  \n\n  \n  \n    getFrames\n  \n    \n      \n        getFrames(whoSays, mutantList, stopList) ⇒ Object\n      \n        \n          \n            Get the frame shift for a mutant\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        whoSaysstringwho is asking; not used\n\n      \n        mutantListArraymutatations in this phage\n\n      \n        stopListArraylocations of stop codons depending on framshift\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    includes frame (frameshift number of gene as a whole) and frameList (frameshift cummulatively for each frame)\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/phage-experiment.html":{"url":"additional-documentation/genetics/phage-experiment.html","title":"additional-page - Phage Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Phage Experiments\n\n  \n    Description\n  \n  \n    Functions which perform experiments on the phage strains\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                recombine\n              \n\n                mutagenize\n              \n\n                _validRecombDel\n              \n\n                _copyDeletion\n              \n          \n        \n      \n    \n  \n\n  \n  \n    recombine\n  \n    \n      \n        recombine(phageGeno1, phageGeno2, numXOver, numToDo) ⇒ Array\n      \n        \n          \n            Recombine 2 strains with specified number of crossovers and number of offspring\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phageGeno1Objectgenotype of phage 1 (shifts and deletion)\n\n      \n        phageGeno2Objectgenotype of phage 2 (shifts and deletion)\n\n      \n        numXOvernumbernumber of crossovers\n\n      \n        numToDonumberhow many offspring to create\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    list of recombined offspring genotypes (shifts and deletion)\n\n\n          \n        \n    \n  \n\n  \n  \n    mutagenize\n  \n    \n      \n        mutagenize(inList, numDesired) ⇒ Array>\n      \n        \n          \n            Create N number of mutants\n\nchecks that mutations aren't too close together on the chromosome\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        inListArraymutations (shifts) of phage to mutagenize\n\n      \n        numDesirednumbernumber of new mutants to generate\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array>    \n    2D array of new mutants;\nDimensions: numDesired x inList.length+1\n\n\n          \n        \n    \n  \n\n  \n  \n    _validRecombDel\n  \n    \n      \n        _validRecombDel(checkPos, delList) ⇒ boolean\n      \n        \n          \n            check if recombination position is within a deletion\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        checkPosnumberposition to check\n\n      \n        delListArraylist of deletions for phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  boolean    \n    true if recombination is valid (not in a deletion); false otherwise\n\n\n          \n        \n    \n  \n\n  \n  \n    _copyDeletion\n  \n    \n      \n        _copyDeletion(sPos, ePos, delList) ⇒ Array\n      \n        \n          \n            Create a copy of deletions within the start and end positions of\nchromosome chunk to be copied\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        sPosnumberstart position of chrosomome chunk to copy\n\n      \n        ePosnumberend position of chromosome chunk to copy\n\n      \n        delListArraylist of deletions for this phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    copy of the deletions\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plate-experiment.html":{"url":"additional-documentation/genetics/plate-experiment.html","title":"additional-page - Plate Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plate Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plates of phage crosses\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlate\n              \n\n                createPlatePhage\n              \n\n                generatePlate\n              \n\n                _computeRecombParameters\n              \n\n                _computeNumOffspring\n              \n\n                _shufflePlaqueList\n              \n          \n        \n      \n    \n  \n\n  \n  \n    createPlate\n  \n    \n      \n        createPlate(phage1, phage2, lawnType, specials, capacity, whoCalled, scenData) ⇒ Object\n      \n        \n          \n            Creates the lab room plate\n\nOnly used in the lab room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        phage1Objectfirst phage in the cross\n\n      \n        phage2Object | nullsecond phage in the cross or null if not crossing\n\n      \n        lawnTypestringE. coli bacteria type \"B\" or \"K\"\n\n      \n        specialsObjectother special parameters (not used)\n\n      \n        capacitynumbermax number of plaques allowed on the plate\n\n      \n        whoCalledstringlocation/room asking to generate the plate\n\n      \n        scenDataObjectscenario information\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    new plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques, number is index of genotype in genotypes list\ngenotypes (number[][]): list of genotypes for this plate\nparents (string[]): ids of input phage\n\n\n\n          \n        \n    \n  \n\n  \n  \n    createPlatePhage\n  \n    \n      \n        createPlatePhage() ⇒ Object\n      \n        \n          \n            Create the genotypes and strains for this plate\n\nUsed by both the lab room and plexer room\n          \n        \n        \n          \n              Returns :  Object    \n    phage for this plate\n\ngenoList (): list of genotypes\nstrainList (number[]): list of indices corresponding to genoList\nparents (string): ID's for original phage used to create plate\n\n\n\n          \n        \n    \n  \n\n  \n  \n    generatePlate\n  \n    \n      \n        generatePlate() ⇒ object\n      \n        \n          \n            Phenotypes the plate phage and ensures not too many phage on the plate\n\nThis function is only used in the lab room\n          \n        \n        \n          \n              Returns :  object    \n    representation of plate\n\nfull (boolean): plate over capacity?\nsmallPlaque (number[]): individual small plaques; number is index of genotype in genotypes list\nlargePlaque (number[]): individual large plaques; number is index of genotype in genotypes list\ngenotypes\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _computeRecombParameters\n  \n    \n      \n        _computeRecombParameters(f1, f2, p, n) ⇒ Array\n      \n        \n          \n            Compute the recombination parameters\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        f1numberfraction of phage1\n\n      \n        f2numberfraction of phage2\n\n      \n        pnumberrecombination probability\n\n      \n        nnumbertotal number of offspring expected\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    \nnumber of single, double, and triple recombinants to create\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _computeNumOffspring\n  \n    \n      \n        _computeNumOffspring(n1, n2, nR, mutFreq, recFreq, identical) ⇒ Object\n      \n        \n          \n            Compute the expected number of offspring\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        n1numbernumber of input for phage1\n\n      \n        n2numbernumber of input for phage2\n\n      \n        nRnumberratio of phage1 to phage2\n\n      \n        mutFreqnumbermutation frequency for the scenario\n\n      \n        recFreqnumberfrequency of recombination for scenario\n\n      \n        identicalbooleanare the two phage identical\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    numbers/types of offspring to create\n\nnumOffspring (number): number of offspring aiming for\ntotal (number): actual number of offspring to be generated\nnumGeno (number[]): number of each parental geonotype\nnumMuts (number[]): number of mutants for each parental genotype\nnumRecomb (number[]): number of single, double, and triple recomb\n\n\n\n          \n        \n    \n  \n\n  \n  \n    _shufflePlaqueList\n  \n    \n      \n        _shufflePlaqueList(inList, numInput) ⇒ Array\n      \n        \n          \n            shuffle strains; force mutants/recombinants to be towards the front of the list\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        inListArraystrain list to shuffle\n\n      \n        numInputnumbernumber of input/parent phage\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Array    \n    shuffled strain list\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/genetics/plexer-experiment.html":{"url":"additional-documentation/genetics/plexer-experiment.html","title":"additional-page - Plexer Experiment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Genetics\n  Plexer Exeriment\n\n  \n    Description\n  \n  \n    Functions which handle creating plexer plates\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                createPlexerPlate\n              \n\n                generatePlexerPlate\n              \n          \n        \n      \n    \n  \n\n  \n  \n    createPlexerPlate\n  \n    \n      \n        createPlexerPlate(rowPhage, colPhage, lawnType, special, capacity, whoCalled, scenData) ⇒ Object\n      \n        \n          \n            Creates the plexer results\n\nOnly used in the plexer room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        rowPhageArraylist of input phage representing the rows\n\n      \n        colPhageArraylist of input phage representing the columns\n\n      \n        lawnTypestringE. coli bacteria type; \"B\" or \"K\"\n\n      \n        specialObjectother parameters; not used\n\n      \n        capacitynumbermaximum number of phage per plate\n\n      \n        whoCalledstringlocation asking to create the plexer\n\n      \n        scenDataObjectcurrent scenario data\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    plexer results; 2D array (but as an object) where each cell is a \"plate\" that has\n\nfull (boolean): plate over capacity?\nsmallPlaque (number): number of small plaque on the plate\nlargePlaque (number): number of large plaque on the plate\n\n\n\n          \n        \n    \n  \n\n  \n  \n    generatePlexerPlate\n  \n    \n      \n        generatePlexerPlate(lawnTypeStr, genoList, strainList, capacity, scenData) ⇒ Object\n      \n        \n          \n            Phenotype the phage and format results for front-end\n\nOnly used by the plexer room\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        lawnTypeStrstringE. coli bacteria type; \"B\" or \"K\"\n\n      \n        genoListArraylist of genotypes on the plate\n\n      \n        strainListArraylist of strains which is the index to the genotype\n\n      \n        capacitynumbercapacity of each plexer plate\n\n      \n        scenDataObjectcurrent scenario data\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  Object    \n    \nresults for this single plexer plate\nfull (boolean): is plate over capacity\nsmallPlaque (number): number of small plaque on plate\nlargePlaque (number): number of large plaque on plate\n\n\n\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models.html":{"url":"additional-documentation/models.html","title":"additional-page - Models","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Backend Documentation\n  Models\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/course-model.html":{"url":"additional-documentation/models/course-model.html","title":"additional-page - Course Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Course Model\n\n  \n    Description\n  \n  \n    Database schema for course\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                courseNum\n              \n\n                description\n              \n\n                instructors\n              \n          \n        \n      \n    \n  \n\n  \n  \n    courseNum\n  \n    \n      \n        courseNum : string\n      \n        \n          \n\n        \n        \n          \n            uniquely identifable course ID\n          \n        \n    \n  \n\n  \n  \n    description\n  \n    \n      \n        description : string\n      \n        \n          \n            basic text description of the course\n          \n        \n    \n  \n\n  \n  \n    instructors\n  \n    \n      \n        instructors : Array\n      \n        \n          \n            list of instructors for the course\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/fridge-model.html":{"url":"additional-documentation/models/fridge-model.html","title":"additional-page - Fridge Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Fridge Model\n\n  \n    Description\n  \n  \n    Database schema for fridge\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                owner\n              \n\n                scenario\n              \n\n                accessGranted\n              \n\n                strains\n              \n\n                scenarioDetails\n              \n\n                guesses\n              \n          \n        \n      \n    \n  \n\n  \n  \n    owner\n  \n    \n      \n        owner : USER\n      \n        \n          \n            user who owns the fridge\n          \n        \n    \n  \n\n  \n  \n    scenario\n  \n    \n      \n        scenario : SCENARIO\n      \n        \n          \n            scenario the fridge is for\n          \n        \n    \n  \n\n  \n  \n    accessGranted\n  \n    \n      \n        accessGranted : boolean\n      \n        \n          \n            has access been granted by instructor\n- when false, phage strains are the same for all users\n- when true, phage are generated using random numbers\n          \n        \n    \n  \n\n  \n  \n    strains\n  \n    \n      \n        strains : Array\n      \n        \n          \n            list of phage strains\nin the fridge\n          \n        \n    \n  \n\n  \n  \n    scenarioDetails\n  \n    \n      \n        scenarioDetails : String\n      \n        \n          \n            - stringified object of the scenario details generated when\nthe fridge was created and is needed for performing\nexperiments\n- includes interMuteDist, intraMuteDist, mutationFreq, recombinationFreq,\ndeleteSizes, deleteSpots, usedDeleteSpots,\nusedShiftSpots, wtGene, realStops, framesStopList\n          \n        \n    \n  \n\n  \n  \n    guesses\n  \n    \n      \n        guesses : String\n      \n        \n          \n            stringified object of user's\nguesses for locations of deletions where the key is the\nstrain number of the guess and the value is an array of\nboolean values indicating if guessed a deletion\n          \n        \n        \n          \n            \n    Example : \n  \"{'1': [false, false, false, false, true, true, ...],\n  '2': [true, true, true, false, false, false, ...],\n  '3': [false, false, false, false, false, false, ...]\n }\"\n \n  \n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/phage-model.html":{"url":"additional-documentation/models/phage-model.html","title":"additional-page - Phage Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Phage Model\n\n  \n    Description\n  \n  \n    Database schema for phage strains\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                strainNum\n              \n\n                owner\n              \n\n                scenarioOrigin\n              \n\n                phageType\n              \n\n                mutationList\n              \n\n                deletion\n              \n\n                comment\n              \n\n                submitted\n              \n\n                parents\n              \n\n                numParents\n              \n          \n        \n      \n    \n  \n\n  \n  \n    strainNum\n  \n    \n      \n        strainNum : number\n      \n        \n          \n\n        \n        \n          \n            location of the phage in the fridge; note this is 0-based but fridge interface is 1-based\n          \n        \n    \n  \n\n  \n  \n    owner\n  \n    \n      \n        owner : USER\n      \n        \n          \n            user who this phage belongs to\n          \n        \n    \n  \n\n  \n  \n    scenarioOrigin\n  \n    \n      \n        scenarioOrigin : SCENARIO\n      \n        \n          \n            scenario that\nthis phage was created for\n          \n        \n    \n  \n\n  \n  \n    phageType\n  \n    \n      \n        phageType : String\n      \n        \n          \n            description of who created phage; must be one of reference, unknown or user\n          \n        \n    \n  \n\n  \n  \n    mutationList\n  \n    \n      \n        mutationList : Array\n      \n        \n          \n            list of frameshift mutations\n- for each mutation, absolute value of number indicates position in the gene\n- positive/negative number indicates plus/minus frameshift\n          \n        \n        \n          \n            \n    Example : \n    One plus frameshift mutation \n  [43]\n \n  \n\n    Example : \n    One minus frameshift mutation \n  [-178]\n \n  \n\n    Example : \n    Two frameshifts of opposite type  \n  [106, -213]\n \n  \n          \n        \n    \n  \n\n  \n  \n    deletion\n  \n    \n      \n        deletion : Array\n      \n        \n          \n            list of deletions in the strain;\n- if length 2, [0] is start of deletion and [1] is end\n- if length greater than 2, there are multiple deletions that start on even index positions and end on odd index position\n          \n        \n        \n          \n            \n    Example : \n    80 bp deletion at the beginning of gene \n  [0, 80]\n \n  \n\n    Example : \n    150 bp deletion in the middle of the gene \n  [125, 275]\n \n  \n\n    Example : \n    Multiple deletions: 40 bp-90 bp and 200 bp-280 bp \n  [40, 90, 200, 280]\n \n  \n          \n        \n    \n  \n\n  \n  \n    comment\n  \n    \n      \n        comment : String\n      \n        \n          \n            User/scenario comment that describes this phage strain; makes it easier to remember details about each phage\n          \n        \n    \n  \n\n  \n  \n    submitted\n  \n    \n      \n        submitted : boolean\n      \n        \n          \n            for user phage, is this a phage that should be graded by instructor\n- used when scenario asks users to create a phage with a specific mutation and makes it easier for the instr to phage\n          \n        \n    \n  \n\n  \n  \n    parents\n  \n    \n      \n        parents : Array\n      \n        \n          \n            when phage created in the lab room on the plate, these are the parent(s) used during the experiment\n          \n        \n    \n  \n\n  \n  \n    numParents\n  \n    \n      \n        numParents : number\n      \n        \n          \n            when phage created in lab room on the lab, number of parents used during the experiment\n   - used to know if a phage has a parent that was deleted from the DB\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/scenario-model.html":{"url":"additional-documentation/models/scenario-model.html","title":"additional-page - Scenario Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  Scenario Model\n\n  \n    Description\n  \n  \n    Database schema for scenarios (scenarios are created when the application runs the first time)\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                label\n              \n\n                fileCode\n              \n\n                scenCode\n              \n\n                defOfDiff\n              \n\n                mutationFreq\n              \n\n                recombinationFreq\n              \n\n                gcProb\n              \n\n                minStops\n              \n\n                intraMuteDist\n              \n\n                interMuteDist\n              \n\n                purpose\n              \n\n                relevance\n              \n\n                startingPoint\n              \n\n                referencePhage\n              \n\n                otherPhage\n              \n          \n        \n      \n    \n  \n\n  \n  \n    label\n  \n    \n      \n        label : string\n      \n        \n          \n            human-readable label describing the scenario\n          \n        \n    \n  \n\n  \n  \n    fileCode\n  \n    \n      \n        fileCode : string\n      \n    \n  \n\n  \n  \n    scenCode\n  \n    \n      \n        scenCode : string\n      \n        \n          \n\n        \n        \n          \n            short string used to uniquely\nidentify each scenario via URL\n          \n        \n    \n  \n\n  \n  \n    defOfDiff\n  \n    \n      \n        defOfDiff : number\n      \n        \n          \n            relative degree of difficulty used to order the scenarios on the scenario page\n          \n        \n    \n  \n\n  \n  \n    mutationFreq\n  \n    \n      \n        mutationFreq : number\n      \n        \n          \n            chance creating a new frameshift mutation during an experiment\n          \n        \n    \n  \n\n  \n  \n    recombinationFreq\n  \n    \n      \n        recombinationFreq : number\n      \n        \n          \n            chance of single recombination when crossing two phage in an experiment\n          \n        \n    \n  \n\n  \n  \n    gcProb\n  \n    \n      \n        gcProb : number\n      \n        \n          \n            integer number for percent G and C's when creating the WT gene\n          \n        \n    \n  \n\n  \n  \n    minStops\n  \n    \n      \n        minStops : number\n      \n        \n          \n            minumum number of possible stop codons that would be created during frameshifts of a gene\n          \n        \n    \n  \n\n  \n  \n    intraMuteDist\n  \n    \n      \n        intraMuteDist : Array\n      \n        \n          \n            mutations on the same phage are\nbetween [0] and [1] distance apart when interMuteDist isn't set\n          \n        \n    \n  \n\n  \n  \n    interMuteDist\n  \n    \n      \n        interMuteDist : number\n      \n        \n          \n            minimum distance apart that\nmutations should be for different phage of the same scenario; equals -1 when unset\n          \n        \n    \n  \n\n  \n  \n    purpose\n  \n    \n      \n        purpose : string\n      \n        \n          \n            description of the goal of the scenario for users\n          \n        \n    \n  \n\n  \n  \n    relevance\n  \n    \n      \n        relevance : String\n      \n        \n          \n            description of why this scenario is important for learning\n          \n        \n    \n  \n\n  \n  \n    startingPoint\n  \n    \n      \n        startingPoint : String\n      \n        \n          \n            description of the phage\nstrains in the fridge when first created\n          \n        \n    \n  \n\n  \n  \n    referencePhage\n  \n    \n      \n        referencePhage : Array\n      \n        \n          \n            each item is a phage to be created for the scenario when fridge created\n- each item includes details about what mutations/deletions, if any, to include in the phage\n- as a reference phage, mutation type is told to user\n          \n        \n    \n  \n\n  \n  \n    otherPhage\n  \n    \n      \n        otherPhage : Array\n      \n        \n          \n            each item is a phage to be created for the scenario when fridge created\n- each item includes details about what mutations/deletions, if any, to include in the phage\n- as an other phage, mutation type is not told to user and discovering the mutation is often the puprose for the scenario\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/models/user-model.html":{"url":"additional-documentation/models/user-model.html","title":"additional-page - User Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    Model\n  User Model\n\n  \n    Description\n  \n  \n    Database schema for user\n  \n\n  Index\n  \n    \n      \n        \n          \n\n                authenticate\n              \n\n                changePassword\n              \n\n                userId\n              \n\n                firstName\n              \n\n                lastName\n              \n\n                email\n              \n\n                password\n              \n\n                course\n              \n\n                accessGranted\n              \n\n                role\n              \n\n                lastLogin\n              \n\n                resetPasswordToken\n              \n\n                resetPasswordExpires\n              \n\n                rolesEnum\n              \n          \n        \n      \n    \n  \n\n  \n  \n    authenticate\n  \n    \n      \n        authenticate(candidatePassword, callback) ⇒ function\n      \n        \n          \n            Determines if the entered password is correct\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        candidatePasswordstringuser input password to compare to database\n\n      \n        callbackfunctionCallback function to pass result to\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    Pass error message and if password is a match to the callback function\n\n\n          \n        \n    \n  \n\n  \n  \n    changePassword\n  \n    \n      \n        changePassword(oldPassword, newPassword, callback) ⇒ function\n      \n        \n          \n            Update a user password, assuming the oldPassword is correct\n          \n        \n        \n          \n              \n                Parameters : \n  \n    \n        Param\n        Type\n        Description\n    \n  \n  \n\n        oldPasswordstringuser input for current password\n\n      \n        newPasswordstringthe new password user wants to change to\n\n      \n        callbackfunctionCallback function to pass result to\n\n        \n\n\n\n          \n        \n        \n          \n              Returns :  function    \n    Pass error message or null to callback function\n\n\n          \n        \n    \n  \n\n  \n  \n    userId\n  \n    \n      \n        userId : number\n      \n        \n          \n\n        \n        \n          \n            auto-incremented user ID\n          \n        \n    \n  \n\n  \n  \n    firstName\n  \n    \n      \n        firstName : string\n      \n        \n          \n            user's first name\n          \n        \n    \n  \n\n  \n  \n    lastName\n  \n    \n      \n        lastName : string\n      \n        \n          \n            user's last name\n          \n        \n    \n  \n\n  \n  \n    email\n  \n    \n      \n        email : string\n      \n        \n          \n\n        \n        \n          \n            user's email address\n          \n        \n    \n  \n\n  \n  \n    password\n  \n    \n      \n        password : string\n      \n        \n          \n\n        \n        \n          \n            user's password; actual password is not stored in DB\n          \n        \n    \n  \n\n  \n  \n    course\n  \n    \n      \n        course : COURSE\n      \n        \n          \n            course the user is part of\n          \n        \n    \n  \n\n  \n  \n    accessGranted\n  \n    \n      \n        accessGranted : Object\n      \n        \n          \n            for each scenario (as key), has access been granted\n          \n        \n        \n          \n            \n    Example : \n  {\"scen1\": false, \"scen2\": true, \"scen3\": true}\n \n  \n          \n        \n    \n  \n\n  \n  \n    role\n  \n    \n      \n        role : string\n      \n        \n          \n            user's role which is used to determine website access; one of [rolesEnum]{@link #rolesEnum}\n          \n        \n    \n  \n\n  \n  \n    lastLogin\n  \n    \n      \n        lastLogin : Date\n      \n        \n          \n            date and time of the last time the user logged in\n          \n        \n    \n  \n\n  \n  \n    resetPasswordToken\n  \n    \n      \n        resetPasswordToken : string\n      \n        \n          \n            token generated for user when they request a password reset; necessary to be able to set the new password\n          \n        \n    \n  \n\n  \n  \n    resetPasswordExpires\n  \n    \n      \n        resetPasswordExpires : Date\n      \n        \n          \n            date and time that the password-reset token expires; token is no longer valid after this time\n          \n        \n    \n  \n\n  \n  \n    rolesEnum\n  \n    \n      \n        rolesEnum : enum\n      \n        \n          \n            List of valid roles for users and error message\n          \n        \n    \n  \n\n\ndocumentation generated with JSDoc2md\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
