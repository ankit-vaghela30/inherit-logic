{"version":3,"sources":["webpack:///./public/app/scenario/scenario.globals.ts","webpack:///./public/app/scenario/location/experiment.service.ts","webpack:///./public/app/authentication/authentication.service.ts","webpack:///./public/app/authentication/authentication.component.ts","webpack:///./public/app/authentication/signin/signin.component.ts","webpack:///./public/app/authentication/signup/signup.component.ts","webpack:///./public/app/articles/article.component.ts","webpack:///./public/app/articles/create/create.component.ts","webpack:///./public/app/articles/list/list.component.ts","webpack:///./public/app/articles/view/view.component.ts","webpack:///./public/app/scenario/scenario.service.ts","webpack:///./public/app/articles/edit/edit.component.ts","webpack:///./public/app/shared/shared.module.ts","webpack:///./public/app/scenario/scenario.component.ts","webpack:///./public/app/scenario/list/list.component.ts","webpack:///./public/app/scenario/location/location.component.ts","webpack:///./public/app/scenario/location/location-guard.service.ts","webpack:///./public/app/scenario/location/lab-room/lab-room.component.ts","webpack:///./public/app/scenario/location/plexer-room/plexer-room.component.ts","webpack:///./public/app/scenario/location/model-room/model-room.component.ts","webpack:///./public/app/scenario/location/landing-room/landing-room.component.ts","webpack:///./public/app/scenario/fridge/phage-dialog.component.ts","webpack:///./public/app/admin/admin-guard.service.ts","webpack:///./public/app/admin/course/course-create/course-create.component.ts","webpack:///./public/app/admin/course/course-indiv/course-indiv.component.ts","webpack:///./public/app/admin/course/course-edit/course-edit.component.ts","webpack:///./public/app/admin/course/course-list/course-list.component.ts","webpack:///./public/app/admin/course/course-scenario/course-scenario.component.ts","webpack:///./public/app/admin/student/student-list/student-list.component.ts","webpack:///./public/app/admin/student/student-indiv/student-indiv.component.ts","webpack:///./public/app/admin/student/student-fridge/student-fridge.component.ts","webpack:///./public/app/admin/admin.component.ts","webpack:///./public/app/admin/admin-home/admin-home.component.ts","webpack:///./public/app/admin/not-auth/not-auth.component.ts","webpack:///./public/app/admin/course/course.service.ts","webpack:///./public/app/admin/student/student.service.ts","webpack:///./public/bootstrap.ts","webpack:///./public/app/app.module.ts","webpack:///./public/app/app.component.ts","webpack:///./public/app/app.routes.ts","webpack:///./public/app/authentication/authentication.module.ts","webpack:///./public/app/authentication/authentication.routes.ts","webpack:///./public/app/articles/article.module.ts","webpack:///./public/app/articles/article.routes.ts","webpack:///./public/app/scenario/scenario.module.ts","webpack:///./public/app/scenario/scenario.route.module.ts","webpack:///./public/app/scenario/location/location.routes.ts","webpack:///./public/app/scenario/fridge/fridge.component.ts","webpack:///./public/app/admin/admin.module.ts","webpack:///./public/app/admin/admin.route.module.ts","webpack:///./public/app/admin/course/course.routes.ts","webpack:///./public/app/admin/student/student.routes.ts","webpack:///./public/app/interfaces/student.interface.ts","webpack:///./public/app/admin/student/student.roles.ts","webpack:///./public/app/admin/course/course.component.ts","webpack:///./public/app/admin/student/student-fridge/student-phage.component.ts","webpack:///./public/app/nav/nav.component.ts","webpack:///./public/app/articles/article.service.ts"],"names":[],"mappings":"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","file":"bootstrap.js","sourcesContent":["export const ScenarioGlobals = {\n  numPhage:1000000,\n  plateCapacity: 1500,\n  plexerCapacity: 200,\n  nFridgeShelf: 32,\n  nFridgeSpots: 16,\n  defaultLabDilution: 10,\n  defaultPlexerDilution: 5,\n  geneLength: 350,\n  deletionGuessLength: 10\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/scenario.globals.ts","//import 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class ExperimentService {\n  private _baseURL = 'api/cricket';\n\n  constructor(private _http: HttpClient) { }\n\n  createPlate(plate: any): Observable<any>{\n    // plate must have 1-2 phage IDs with numPhage [phage1,phage2], lawn type, location, specials, capacity, scenarioData (from fridge)\n    // returns error OR {full, smallPlaque, largePlaque, genotypes}\n    var res = this._http\n    .post(`${this._baseURL}/plate`, plate)\n    return res;\n    //.map((res: Response)=>{ res.json()})\n    //.catch(this.handleError)\n  }\n\n  performPlexer(data: any): Observable<any>{\n    // data will have rowPhage, colPhage, lawn type, location, specials, capacity, scenarioData\n    var res = this._http\n    .post(`${this._baseURL}/plexer`, data);\n    return res;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/location/experiment.service.ts","//import 'rxjs/Rx';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { User } from '../interfaces/user.interface';\n\n@Injectable()\nexport class AuthenticationService {\n    //private _user: BehaviorSubject<User> = new BehaviorSubject<User>(null);\n    //public getUser = this._user.asObservable();\n\n    private _user2: User;\n\n    private _signinURL = 'api/auth/signin';\n    private _signupURL = 'api/auth/signup';\n\n    public redirectUrl: string = '/';\n\n    constructor(private http: HttpClient) {\n      //this._user = new BehaviorSubject<User>(null);\n    }\n\n  setUser(user: User){\n    //this._user.next(user);\n    console.log(user);\n    this._user2 = user;\n  }\n\n  getUser(): User{\n    return this._user2;\n  }\n\n  isLoggedIn(){\n    return (!!this._user2);\n  }\n\n  canAccessAdmin(){\n    if(this._user2){\n      return this._user2.role > 0\n    }\n    else{\n      return false;\n    }\n  }\n\n  signin(credentials: any): Observable<User> {\n      let body = JSON.stringify(credentials);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post<User>(this._signinURL, body, { headers: headers });\n  }\n\n  signup(user: any): Observable<User> {\n      let body = JSON.stringify(user);\n      let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n      return this.http.post<User>(this._signupURL, body, { headers: headers })\n  }\n\n    /*private handleError(error: Response) {\n        console.error(error);\n        return Observable.throw(error.json().message || 'Server error');\n    }*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/authentication/authentication.service.ts","import { Component } from '@angular/core';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@Component({\n    selector: 'authentication',\n    templateUrl: 'app/authentication/authentication.template.html'\n})\nexport class AuthenticationComponent { }\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/authentication/authentication.component.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n    selector: 'signin',\n    templateUrl: 'app/authentication/signin/signin.template.html',\n  styleUrls: ['app/authentication/signin/signin.style.css']\n})\nexport class SigninComponent {\n    errorMessage: string;\n    credentials: any = {};\n  private subscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService,\n        private _router: Router) { }\n\n    signin() {\n        this.subscription = this._authenticationService\n          .signin(this.credentials)\n          .subscribe((result) => {\n          // TODO: update\n          this._authenticationService.setUser(result);\n          let redirect = this._authenticationService.redirectUrl ? this._authenticationService.redirectUrl : '/';\n          this._router.navigate([redirect]);\n        },\n            (error) => {\n          this.errorMessage = error.message\n        });\n    }\n\n  ngOnDestroy(){\n    if(this.subscription)\n    this.subscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/authentication/signin/signin.component.ts","import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/concat'\n\nimport { AuthenticationService } from '../authentication.service';\nimport { CourseService } from '../../admin/course/course.service';\n\n@Component({\n    selector: 'signup',\n    templateUrl: 'app/authentication/signup/signup.template.html',\n  styleUrls: ['app/authentication/signup/signup.style.css']\n})\nexport class SignupComponent implements OnDestroy {\n    errorMessage: string;\n  private courses: string[] = [];\n    user: any = {};\n  private isDestroyed$: Subject<boolean>;\n\n    constructor(private _authenticationService: AuthenticationService,\n                 private _courseService: CourseService,\n        private _router: Router) {\n      this.isDestroyed$ = new Subject<boolean>();\n    }\n\n  _reorderCourses(courses: any): any{\n    let na = courses.filter((c)=>{return c.courseNum === 'NA'});\n    let other = courses.filter((c)=>{\n      return c.courseNum !== 'NA'\n    });\n    return na.concat(other);\n  }\n\n  ngOnInit(){\n    this._courseService.getCourseList()\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        let tmp = this._reorderCourses(res);\n        this.courses = tmp;\n    }, (err)=>{\n      this.courses = [];\n    });\n  }\n\n    signup() {\n      if(this.user.course === undefined){\n        this.errorMessage = 'Select a course'\n      } else {\n          this._authenticationService\n          .signup(this.user)\n      .takeUntil(this.isDestroyed$)\n          .subscribe((result) => {\n          this._authenticationService.setUser(result);\n          this._router.navigate(['/'])\n        },\n            (error) => {\n          this.errorMessage = error.error.message\n        });\n      }\n    }\n\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/authentication/signup/signup.component.ts","import { Component } from '@angular/core';\nimport { ArticleService } from './article.service';\n\n@Component({\n    selector: 'articles',\n    template: '<router-outlet></router-outlet>',\n    providers: [ArticleService]\n})\nexport class ArticleComponent { }\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/articles/article.component.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ArticleService } from '../article.service';\n\n@Component({\n    selector: 'create',\n    templateUrl: 'app/articles/create/create.template.html'\n})\nexport class CreateComponent {\n    article: any = {};\n    errorMessage: string;\n\n    constructor(private _router: Router,\n        private _articleService: ArticleService) { }\n\n    create() {\n        this._articleService.create(this.article).subscribe(createdArticle => this._router.navigate(['/articles', createdArticle._id]),\n            error => this.errorMessage = error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/articles/create/create.component.ts","import { Component } from '@angular/core';\n\nimport { ArticleService } from '../article.service';\n\n@Component({\n    selector: 'list',\n    templateUrl: 'app/articles/list/list.template.html'\n})\nexport class ListComponent {\n    articles: any;\n    errorMessage: string;\n\n    constructor(private _articleService: ArticleService) { }\n\n    ngOnInit() {\n        this._articleService.list().subscribe(articles => this.articles = articles);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/articles/list/list.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { ArticleService } from '../article.service';\n\n@Component({\n    selector: 'view',\n    templateUrl: 'app/articles/view/view.template.html',\n})\nexport class ViewComponent {\n    user: any;\n    article: any;\n    routingObserver: any;\n    errorMessage: string;\n    allowEdit: boolean = false;\n\n    constructor(private _router: Router,\n        private _route: ActivatedRoute,\n        private _authenticationService: AuthenticationService,\n        private _articleService: ArticleService) { }\n\n    ngOnInit() {\n        this.user = this._authenticationService.getUser();\n\n        this.routingObserver = this._route.params.subscribe(params => {\n            let articleId = params['articleId'];\n\n            this._articleService\n                .read(articleId)\n                .subscribe(\n                article => {\n                    this.article = article;\n                    this.allowEdit = (this.user && this.user._id === this.article.creator._id);\n                },\n                error => this._router.navigate(['/articles'])\n                );\n        });\n    }\n\n    ngOnDestroy() {\n        this.routingObserver.unsubscribe();\n    }\n\n    delete() {\n        this._articleService.delete(this.article._id).subscribe(deletedArticle => this._router.navigate(['/articles']),\n            error => this.errorMessage = error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/articles/view/view.component.ts","//import 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Subject } from 'rxjs/Subject';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Scenario } from '../interfaces/scenario.interface';\nimport { Fridge } from '../interfaces/fridge.interface';\nimport { FridgePhage, GenotypePhage } from '../interfaces/phage.interface';\n\n\n@Injectable()\nexport class ScenarioService {\n    private _baseURL = 'api/cricket';\n    private _scenarioDetails = new BehaviorSubject<string>('');\n    getScenarioDetails = this._scenarioDetails.asObservable();\n    private _scenarioGuesses = new BehaviorSubject<any>({});\n    getGuesses = this._scenarioGuesses.asObservable();\n    private _scenarioCode = new BehaviorSubject<string>('');\n    getScenarioCode = this._scenarioCode.asObservable();\n\n\n    constructor(private _http: HttpClient) {\n    }\n\n    listScenarios(): Observable<any> {\n        return this._http\n            .get(this._baseURL)\n    }\n\n    getScenario(scenId: string): Observable<Scenario> {\n        this._scenarioCode.next(scenId);\n        return this._http\n            .get<Scenario>(`${this._baseURL}/${scenId}`);\n    }\n\n    resetScenario() {\n        this._scenarioDetails.next('');\n        this._scenarioGuesses.next({});\n        this._scenarioCode.next('');\n    }\n\n    setScenario(scenarioDetails: string, scenarioGuesses: string) {\n        if (scenarioDetails !== null)\n            this._scenarioDetails.next(scenarioDetails);\n        if (scenarioDetails !== null)\n            this._scenarioGuesses\n              .next(JSON.parse(scenarioGuesses));\n    }\n\n    saveDeletions(guesses: any, userId: number, scenId: string): Observable<any> {\n        return this._http\n            .post(`${this._baseURL}/${userId}/${scenId}/deletions`, guesses);\n    }\n\n    createFridge(userId: number, scenId: string): Observable<Fridge> {\n        return this._http.get<Fridge>(`${this._baseURL}/${userId}/${scenId}/new-fridge`);\n    }\n\n    getFridge(userId: number, scenId: string): Observable<Fridge> {\n        var res = this._http\n            .get<Fridge>(`${this._baseURL}/${userId}/${scenId}`);\n        return res;\n    }\n\n    saveFridge(fridge: any): Observable<any> {\n        let userId = fridge.owner.userId;\n        let scenCode = fridge.scenario.scenCode;\n        return this._http\n            .post(`${this._baseURL}/${userId}/${scenCode}`, fridge)\n        //.map((res: Response) => res.json())\n        //.catch(this.handleError);\n    }\n\n    addStrain(strain: any, userId: number, scenCode: string): Observable<FridgePhage> {\n        // strains has strainNum, mutationList, deletion\n        // returns new phage\n        return this._http\n            .post<FridgePhage>(`${this._baseURL}/${userId}/${scenCode}/fridge-phage`, strain)\n        //.map((res: Response) => res.json())\n        //.catch(this.handleError);\n    }\n\n    updateStrain(strain: FridgePhage, userId: number, scenCode: string): Observable<FridgePhage> {\n        let strainId = strain.id;\n        return this._http\n            .post<FridgePhage>(`${this._baseURL}/${userId}/${scenCode}/${strainId}`, strain)\n    }\n\n    deleteStrain(strain: FridgePhage, userId: number, scenCode: string): Observable<any> {\n        let strainId = strain.id;\n        return this._http\n            .delete(`${this._baseURL}/${userId}/${scenCode}/${strainId}`)\n    }\n\n    /**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\n    /*private handleError<T> (operation = 'operation', result?: T) {\n      return (error: any): Observable<T> => {\n\n        // TODO: send the error to remote logging infrastructure\n        console.error(error); // log to console instead\n\n        // Let the app keep running by returning an empty result.\n        return of(result as T);\n      };\n    }*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/scenario.service.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ArticleService } from '../article.service';\n\n\n@Component({\n    selector: 'edit',\n    templateUrl: 'app/articles/edit/edit.template.html'\n})\nexport class EditComponent {\n    article: any = {};\n    errorMessage: string;\n    paramsObserver: any;\n\n    constructor(private _router: Router,\n        private _route: ActivatedRoute,\n        private _articleService: ArticleService) { }\n\n    ngOnInit() {\n        this.paramsObserver = this._route.params.subscribe(params => {\n            let articleId = params['articleId'];\n\n            this._articleService.read(articleId).subscribe(article => {\n                this.article = article;\n            },\n                error => this._router.navigate(['/articles']));\n        });\n    }\n\n    ngOnDestroy() {\n        this.paramsObserver.unsubscribe();\n    }\n\n    update() {\n        this._articleService.update(this.article).subscribe(savedArticle => this._router.navigate(['/articles', savedArticle._id]),\n            error => this.errorMessage = error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/articles/edit/edit.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DndModule } from 'ng2-dnd';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    imports: [\n      CommonModule,\n      FormsModule,\n      DndModule.forRoot(),\n      NgbModule.forRoot()\n    ],\n    exports: [\n      CommonModule,\n      FormsModule,\n      DndModule,\n      NgbModule\n    ],\n})\nexport class SharedModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/shared/shared.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'scenario',\n  templateUrl: 'app/scenario/scenario.template.html'\n})\n\nexport class ScenarioComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/scenario.component.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { ScenarioService } from '../scenario.service';\n\nimport { User } from '../../interfaces/user.interface';\nimport { Scenario } from '../../interfaces/scenario.interface';\n\n@Component({\n    selector: 'scenario-list',\n    templateUrl: './app/scenario/list/list.template.html'\n})\nexport class ListComponent implements OnInit, OnDestroy{\n    user: User;\n    scenarios: Scenario[];\n    errorMessage: string;\n  private sSubscription: Subscription;\n\n    constructor(private _authenticationService: AuthenticationService, private _scenarioService: ScenarioService) {\n\n    }\n\n    ngOnInit() {\n      this.user = this._authenticationService.getUser();\n      this.sSubscription = this._scenarioService.listScenarios()\n        .subscribe((scenarios) => {\n        this.scenarios = scenarios\n      });\n    }\n\n  ngOnDestroy(){\n    this.sSubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/list/list.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'location',\n  templateUrl: './app/scenario/location/location.template.html',\n  styleUrls: ['./app/scenario/location/location.style.css']\n})\n\nexport class LocationComponent {\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/location/location.component.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n@Injectable()\nexport class LocationGuard implements CanActivate {\n\n  constructor(private _authenticationService: AuthenticationService, private _router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    let isLoggedIn: boolean = this._authenticationService.isLoggedIn();\n    if(isLoggedIn)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['authentication/signin']);\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/location/location-guard.service.ts","import { Component } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { ScenarioGlobals } from '../../scenario.globals';\nimport { ExperimentService } from '../experiment.service';\nimport { ScenarioService } from '../../scenario.service';\n\nimport { ExperimentPhage, GenotypePhage } from '../../../interfaces/phage.interface';\n\n@Component({\n    selector: 'lab-room',\n    templateUrl: './app/scenario/location/lab-room/lab-room.template.html',\n  styleUrls: ['./app/scenario/location/lab-room/lab-room.style.css']\n})\nexport class LabRoomComponent {\n\n  private isDestroyed$: Subject<boolean>;\n  // bacteria tubes\n  private isHidden: Object = {'K': false, 'B': false};\n  private phage: ExperimentPhage[] = [];\n\n  // dilution tubes\n  private dilutionValue: number = ScenarioGlobals.defaultLabDilution;\n  private contents: any[];\n  private visibleLabel: boolean[];\n  private canEditDilution: boolean = true;\n\n  // plate\n  private isEmpty: boolean = true;\n  private lawnType: string = '';\n  private scenarioDetails: string;\n  private isFull: boolean = false;\n  private smallPlaqueList: any[];\n  private largePlaqueList: any[];\n  private genotypes: GenotypePhage[];\n\n  private errorMessage: string = '';\n\n  constructor(private _experimentService: ExperimentService, private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject<boolean>();\n    this.contents = [null, null, null, null];\n    this.visibleLabel = [true, false, false, false];\n  }\n\n  ngOnInit(){\n     this._scenarioService.getScenarioDetails\n    .takeUntil(this.isDestroyed$)\n      .subscribe((details) => {this.scenarioDetails = details});\n  }\n\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  /**\n   * Reset the tube-related variables\n   */\n  clearTubes(){\n    this.phage = [];\n    this.isHidden = {'K': false, 'B': false};\n    this.errorMessage = '';\n    this.contents = [null, null, null, null];\n    this.visibleLabel = [true, false, false, false];\n    this.canEditDilution = true;\n  }\n\n  /**\n   * Reset the plate variables\n   */\n  clearPlate() {\n    // reset all variables\n    this.isFull = false;\n    this.isEmpty = true;\n    this.genotypes = [];\n    this.smallPlaqueList = [];\n    this.largePlaqueList = [];\n    this.errorMessage = '';\n    this.lawnType = '';\n  }\n\n  /**\n   * Reset all variables\n   */\n  clearAll(){\n    this.clearTubes();\n    this.clearPlate();\n  }\n\n  /**\n   * Determine if bacteria tube can be dragged\n   *\n   * Called for [dragEnabled] of bact tube\n   *\n   * @returns {boolean} - true if tube has phage\n   */\n  canDragBact(): boolean{\n    return this.phage.length > 0;\n  }\n\n  /**\n   * Data to be dragged from the bacteria tube\n   *\n   * Called for [dragData] of bact tube\n   *\n   * @param {string} src - E. coli source, \"B\" or \"K\"\n   * @returns {Object} - data with lawn type, src, and phage list\n   */\n  getDataBact(src: string): Object{\n    return {\n      lawnType: src,\n      src: src,\n      phage: this.phage\n    }\n  }\n\n  /**\n   * Determines classes for a bacteria tube\n   *\n   * @param {string} src - E. coli source, \"B\" or \"K\"\n   * @returns {Object} - applicable classes\n   */\n    getClassesBact(src: string): Object {\n    return {'bact-tube test-tube-outer': true,\n            'invisible': (src === 'B' ? this.isHidden[\"B\"] : this.isHidden[\"K\"]),\n            'tube-b': (src==='B'),\n            'tube-k': (src==='K'),\n            'n-phage-1': this.phage.length === 1,\n            'n-phage-2': this.phage.length === 2\n           }\n    }\n\n  /**\n   * Drop phage from fridge into bacteria tube\n   *\n   * Called on (onDropSuccess) of bacteria tubes\n   *\n   * @param {any} $event - drag event with phage data\n   * @param {string} src - bacteria source phage dragged to\n   */\n  dropPhageBact($event: any, src: string){\n    var incomingPhage = $event.dragData;\n    if(incomingPhage.hasOwnProperty('id') == false){\n      this.errorMessage = 'Only add phage from the fridge';\n    } else if(this.phage.length >= 2) {\n      this.errorMessage = 'Cannot have more than 2 phage in a tube';\n    } else {\n      // add phage - type ExperimentPhage\n      this.phage.push({\n        id: incomingPhage.id,\n        strainNum: incomingPhage.strainNum,\n      numPhage: ScenarioGlobals.numPhage\n      });\n      switch(src){\n        case 'B':\n          this.isHidden['K'] = true;\n          break;\n        case 'K':\n          this.isHidden['B'] = true;\n          break;\n      }}\n  }\n\n  /**\n   * Determine if dilution tube can be dragged\n   *\n   * Called for [dragEnabled] of dilution tube (0-3)\n   *\n   * @param {number} src - dilution tube number\n   * @returns {boolean} - true if tube has contents\n   */\n  canDragDil(src: number): boolean{\n    return (this.contents[src] !== null);\n  }\n\n  /**\n   * Determines classes for a dilution tube\n   *\n   * @param {number} src - dilution tube number (0-3)\n   * @returns {Object} - applicable classes\n   */\n  getClassesDil(src: number): Object {\n    let tube = this.contents[src];\n    return {'dil-tube test-tube-outer': true,\n            'tube-b': (tube !== null && tube.lawnType==='B'),\n            'tube-k': (tube !== null && tube.lawnType==='K')\n           }\n  }\n\n  /**\n   * Determines classes for a dilution tube label\n   *\n   * @param {number} src - dilution tube number (0-3)\n   * @returns {Object} - applicable classes\n   */\n  getClassesDilLabel(src: number): Object {\n    return {\n      'dil-value': true,\n      'invisible': !this.visibleLabel[src]\n    }\n  }\n\n  /**\n   * Determines if object can be dropped in dilution tube\n   *\n   * Called for [allowDrop] of dilution tube\n   *\n   * @param {number} dest - dilution tube number (0-3)\n   * @returns {function} - function which returns true/false if object can be dropped\n   */\n  canDropDil(dest: number): any {\n  return (dragData: any) => {\n    if(dragData === null || dragData === undefined)\n      return false;\n    if(dragData.hasOwnProperty('src') === false){\n      return false\n    }\n    let src = dragData.src;\n    if(dest === 0 && (src === 'B' || src === 'K')){\n      return true;\n    } else if (dest > 0 && src === dest-1){\n      return true;\n    }\n    return false;\n  };\n}\n  /**\n   * Data to be dragged from the dilution tube\n   *\n   * Called for [dragData] of dilution tube\n   *\n   * @param {number} src - dilution tube number (0-3)\n   * @returns {Object} - data with dilution tube contents and src\n   */\n  getDataDil(src: number): Object {\n    if(this.contents[src] !== null)\n      this.contents[src]['src'] = src;\n    return this.contents[src];\n  }\n\n  /**\n   * Drop contents from bact tube/dilution tube into dilution tube\n   *\n   * Called on (oDropSuccess) of dilution tubes\n   *\n   * @param {any} $event - drag event with content/phage data\n   * @param {string} dest - dest tube\n   */\n  dropContentsDil($event: any, dest: number){\n    let incomingDat = JSON.parse(JSON.stringify($event.dragData));\n    if(incomingDat.hasOwnProperty('lawnType') && incomingDat.hasOwnProperty('phage')){\n      // dilute\n      for(let i = 0; i < incomingDat.phage.length; i++){\n        incomingDat.phage[i].numPhage /= this.dilutionValue;\n      }\n      this.contents[dest] = incomingDat;\n      if(dest < 3){\n        this.visibleLabel[dest+1] = true;\n      }\n      // disable dilution value changes\n      this.canEditDilution = false\n    }\n  }\n\n  /**\n   * Determines classes for plate depending if empty, full, has phage\n   *\n   * @returns {Object} - applicable classes\n   */\n  getClassesPlate(){\n    return {\n      'col-12 col-md-5 rounded-circle border border-dark': true,\n      'bg-secondary text-light': this.isFull,\n      'bg-light text-primary': (!this.isFull && !this.isEmpty),\n      'text-danger': (this.lawnType === 'K'),\n      'text-info': (this.lawnType === 'B')\n    }\n  }\n\n  /**\n   * Determines if object can be dropped on plate\n   *\n   * Called for [allowDrop] of plate\n   *\n   * @returns {function} - function which returns true/false if object can be dropped\n   */\n  canDropPlate():any {\n    return (dragData: any) => {\n      //console.log(dragData);\n    if(dragData === null || dragData === undefined)\n      return false;\n    if(dragData.hasOwnProperty('src') && dragData.src\n       !== 'small' && dragData.src !== 'large'){\n      return true\n    }\n      return false;\n  };\n  }\n\n  /**\n   * Drop tube contents on the plate\n   *\n   * Called on (onDropSuccess) of plate\n   *\n   * @param {any} $event - drag event with contents\n   */\n  dropOnPlate($event: any){\n    let contents = $event.dragData;\n    // check we have everything we need\n    if (contents.hasOwnProperty('lawnType') === false){\n      this.errorMessage = 'There is no bacteria in the tube for phage to grow on.'\n      return;\n    }\n    if (contents.hasOwnProperty('phage') === false || contents.phage.length === 0){\n      this.errorMessage = 'There is no phage in the tube.'\n      return;\n    }\n    // gather data\n    this.lawnType = contents.lawnType;\n    let phage1 = contents.phage[0];\n    let phage2 = null;\n    if(contents.phage.length === 2){\n      phage2 = contents.phage[1];\n    }\n    // perform the cross\n    this._performCross(this.lawnType, phage1, phage2);\n  }\n\n  /**\n   * Calls the experiment service to perform the cross and saves\n   * variables\n   *\n   * @param {string} lawnType - bacteria used, \"B\" or \"K\"\n   * @param {any} phage1 - first phage in cross\n   * @param {any} phage2 - second phage in cross, or null\n   */\n  _performCross(lawnType: string, phage1: ExperimentPhage, phage2: ExperimentPhage){\n    let newPlate = {\n      lawnType: lawnType,\n      phage1: phage1,\n      phage2: phage2,\n      specials: {},\n      location: 'lab',\n      scenarioData: this.scenarioDetails,\n      capacity: ScenarioGlobals.plateCapacity\n    }\n    this._experimentService.createPlate(newPlate)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      this.isFull = res.full;\n      this.smallPlaqueList = res.smallPlaque;\n      this.largePlaqueList = res.largePlaque;\n      this.isEmpty = false;\n      this.genotypes = res.genotypes;\n      // success\n    }, (err)=>{\n      // error\n      this.errorMessage = err.error.message || err.message || 'Error';\n    });\n  }\n\n  /**\n   * Determine if plaque from plate can be dragged\n   *\n   * Called for [dragEnabled] of plaques on plate\n   *\n   * @param {string} src - small or large plaque\n   * @returns {boolean} - true if there are still plaques of that size\n   */\n  canDragPlate(src: string): boolean {\n    if(src === 'small')\n      return this.smallPlaqueList.length > 0;\n    else // big\n      return this.largePlaqueList.length > 0;\n  }\n\n  /**\n   * Pick a plaque from the plate to save to the fridge\n   *\n   * Called for [dragData] of plaque on plate\n   *\n   * @param {string} src - small or large plaque\n   * @returns {Object} - phage genotype data\n   */\n  getPhagePlate(src: string): GenotypePhage{\n    let tmpList = (src === 'small' ? this.smallPlaqueList : this.largePlaqueList);\n    if(tmpList.length === 0){\n      return null;\n    }\n    let plaque = tmpList[0];\n    let genotypeIndex = plaque.i;\n    let phage = JSON.parse(JSON.stringify(this.genotypes[genotypeIndex]));\n    phage['src'] = plaque.pheno;\n    return phage;\n  }\n\n  /**\n   * Removes successfully dragged phage from available phage list\n   *\n   * Called on (onDragSuccess) of plaque on plate\n   *\n   * @param {any} $event - drag event with phage saved\n   */\n  addedToFridge($event) {\n    let strain = $event.dragData;\n    let src = strain.src;\n    if(src === 'small'){\n      this.smallPlaqueList.shift();\n    } else { // large\n      this.largePlaqueList.shift();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/location/lab-room/lab-room.component.ts","import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ScenarioGlobals } from '../../scenario.globals';\nimport { ExperimentService } from '../experiment.service';\nimport { ScenarioService } from '../../scenario.service'\nimport { FridgePhage, ExperimentPhage } from '../../../interfaces/phage.interface';\n\n@Component({\n    selector: 'plexer-room',\n    templateUrl: './app/scenario/location/plexer-room/plexer-room.template.html',\n  styleUrls: ['./app/scenario/location/plexer-room/plexer-room.style.css']\n})\nexport class PlexerRoomComponent{\n\n  private chosenBact: string = 'none';\n  private dilutionValue: number = ScenarioGlobals.defaultPlexerDilution;\n  private plexerType: string = 'multi';\n  private scenarioDetails: string;\n  private rows: ExperimentPhage[];\n  private cols: ExperimentPhage[];\n  private nStrains: number[] = [0,0];\n  private results: Object;\n  private errorMessage: string = '';\n  private subscription: Subscription;\n  private expSubscription: Subscription;\n\n  constructor( private _experimentService: ExperimentService,\n               private _scenarioService: ScenarioService){\n    this._clearData();\n  }\n\n  ngOnInit() {\n    this.subscription = this._scenarioService.getScenarioDetails\n      .subscribe((details) => this.scenarioDetails = details);\n  }\n\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n    if(this.expSubscription)\n    this.expSubscription.unsubscribe();\n  }\n\n  /**\n   * Initalize/clear row and column phage\n   */\n  _clearData(){\n    this.rows = [];\n    this.cols = [];\n    for(let i = 0; i < 8; i++){\n      this.rows.push(null);\n      this.cols.push(null);\n    }\n    this.nStrains = [0,0];\n  }\n\n  /**\n   * Reset the plexer and parameters\n   *\n   * Called on (click) of reset button\n   */\n  reset(){\n    this.chosenBact = 'none';\n    this.dilutionValue = ScenarioGlobals.defaultPlexerDilution;\n    this.plexerType = 'multi';\n    this._clearData();\n    this.results = {};\n    this.errorMessage = '';\n  }\n\n  /**\n   * Get the CSS class for each phage button based on which\n   * phage type is set\n   *\n   * @param {string} src - button to get classes for\n   * @returns {Object} - classes which apply to this button\n   */\n  getTubeClasses(src: string): Object {\n    return {\n      'btn border border-secondary': true,\n      //'': (this.chosenBact !== src),\n      'chosen': (this.chosenBact === src),\n      'btn-outline-info': (src==='B' && this.chosenBact !== src),\n      'btn-info': (src==='B' && this.chosenBact === src),\n      'btn-outline-danger': (src==='K' && this.chosenBact !== src),\n      'btn-danger': (src==='K' && this.chosenBact === src)\n    }\n  }\n\n  /**\n   * Get the CSS class for each plexer button based on which\n   * plexer type is set\n   *\n   * @param {string} src - button to get classes for\n   * @returns {Object} - classes which apply to this button\n   */\n  getPlexerClasses(src: string): Object{\n    return{\n      'btn': true,\n      'btn-outline-secondary':(this.plexerType !== src) ,\n      'btn-secondary': (this.plexerType === src)\n    }\n  }\n\n  /**\n   * Determine if user is able to submit plexer by disabling\n   * the submit button when unable to submit\n   *\n   * @returns {boolean} - true if user cannot submit\n   */\n  submitDisabled(): boolean {\n\n    // determine if disabled\n    var disabled = this.chosenBact === 'none';\n    // check that at least 1 phage added for row/col\n    if(this.nStrains[0] === 0 || this.nStrains[1] === 0){\n      return true;\n    }\n    return disabled;\n  }\n\n  /**\n   * Removes null elements from input array and dilutes the\n   * number of phage\n   *\n   * Used before submitting row/col phage\n   *\n   * @param {ExperimentPhage[]} inData - input array to be cleaned\n   * @returns {ExperimentPhage[]} - cleaned array\n   */\n  _cleanArrays(inData: ExperimentPhage[]): ExperimentPhage[]{\n    var clean = inData.filter((elt)=>{\n      return elt !== null\n    }).map((elt)=>{\n        return {id: elt.id,\n                strainNum: elt.strainNum,\n               numPhage: elt.numPhage / (this.dilutionValue * 1000)\n               }\n    });\n    return clean\n  }\n\n  /**\n   * Gets experiment data and submits to service to get results\n   * of the multiplexer\n   *\n   * Called on (click) of submit button\n   */\n  performPlexer(){\n    // need to deal with dilution values\n    let tmpRows = (this.plexerType === 'multi' ? this.rows.slice(0, 2) : this.rows);\n    let cleanRows = this._cleanArrays(tmpRows);\n    let cleanCols = this._cleanArrays(this.cols);\n    // gather data\n    var data = {\n      lawnType: this.chosenBact,\n      rowPhage: cleanRows,\n      colPhage: cleanCols,\n      specials: {},\n      location: this.plexerType,\n      scenarioData: this.scenarioDetails,\n      capacity: ScenarioGlobals.plexerCapacity\n    };\n    // use the service\n    this.expSubscription = this._experimentService.performPlexer(data)\n    .subscribe((res)=>{\n      this.results = res;\n    }, (err)=>{\n      this.errorMessage = err.error.message || err.message || 'Unknown error';\n    });\n  }\n\n  /**\n   *  Add phage to row or column of plexer\n   *\n   * Called on (onDropSuccess) of row/col header\n   *\n   * @param {any} $event - dragEvent; includes phage data\n   * @param {string} dir - add to \"row\" or \"col\"\n   * @param {number} spot - position to add phage\n   */\n  addPhage($event: any, dir: string, spot: number){\n    let fphage: FridgePhage = $event.dragData;\n    let phage: ExperimentPhage = {\n      id: fphage.id,\n      strainNum: fphage.strainNum,\n      numPhage: ScenarioGlobals.numPhage\n    }\n    // add to row\n    if(dir === 'row' && spot < 8){\n      this.rows[spot] = phage;\n      this.nStrains[0] = this.rows.filter(function(value) { return value !== null }).length;\n    } else if (spot < 8) { // column\n      this.cols[spot] = phage;\n      this.nStrains[1] = this.cols.filter(function(value) { return value !== null }).length;\n    }\n  }\n\n  /**\n   * Returns CSS classes for a row\n   *\n   * @param {number} rowInt - row we are considering\n   * @returns {Object} classes for the row\n   */\n  getRowClass(rowInt: number): Object{\n    return {\n      'data-table-row': true,\n      'invisible': this._isRowHidden(rowInt)\n    }\n  }\n\n  /**\n   * Determine if row is hidden based on plexer type;\n   * rows 2-7 are hidden for multiplexer\n   *\n   * @param {number} rowInt - row we are considering\n   * @returns {boolean} true if row is hidden\n   */\n  _isRowHidden(rowInt: number){\n    return (this.plexerType === 'multi' && rowInt > 1)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/location/plexer-room/plexer-room.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../scenario.service';\nimport { ScenarioGlobals } from '../../scenario.globals';\n\n@Component({\n    selector: 'model-room',\n    templateUrl: './app/scenario/location/model-room/model-room.template.html',\n  styleUrls: ['./app/scenario/location/model-room/model-room.style.css']\n})\n\nexport class ModelRoomComponent {\n\n  private guesses: any;\n  private keys: number[];\n  private geneAr: number[];\n  private stepSize: number;\n  private scenarioId: string;\n  private userId: number;\n  private errorMessage: string = '';\n  private _width: string;\n  private isDestroyed$: Subject<boolean>;\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _authenticationService: AuthenticationService,\n              private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject<boolean>();\n\n    this.stepSize = ScenarioGlobals.deletionGuessLength;\n    this.geneAr = [];\n    let nBlocks: number = Math.ceil(ScenarioGlobals.geneLength/this.stepSize);\n    for(let i = 0; i < nBlocks; i++){\n      this.geneAr.push(i);\n    }\n    this._width = (100 / nBlocks).toString();\n  }\n\n  ngOnInit(){\n    /*this._authenticationService.getUser\n      .takeUntil(this.isDestroyed$)\n      .subscribe( (res) =>{\n      this.userId = res.id;\n    });*/\n    let u = this._authenticationService.getUser();\n    if(u){\n      this.userId = u.id;\n    }\n    this._route.parent.params\n      .takeUntil(this.isDestroyed$)\n      .subscribe(params =>{\n      this.scenarioId = params['scenId']\n    });\n    this._scenarioService.getGuesses\n      .takeUntil(this.isDestroyed$)\n      .subscribe((dels) => {\n      this.guesses = dels;\n      this.keys = Object.keys(dels).map((k)=> {return Number.parseInt(k);});\n      if(this.keys.length === 0){\n        this.errorMessage = 'No phage available for modelling'\n      } else {\n        this.errorMessage = '';\n      }\n    });\n  }\n\n  ngOnDestory(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  getBlockClass(strain: number, pos: number){\n    let posGuess = this.guesses[strain][pos];\n    return {\n      'guess-block btn p-0': true,\n      'btn-outline-secondary': !posGuess, // inactive\n      'bg-dark': posGuess // active\n    }\n  }\n\n  toggleBlock(strain: number, pos: number){\n    let c = this.guesses[strain][pos];\n    this.guesses[strain][pos] = !c;\n  }\n\n  saveData(){\n    // use service and save data\n    let out = JSON.stringify(this.guesses)\n    this._scenarioService\n      .saveDeletions(this.guesses, this.userId, this.scenarioId)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((dat)=>{\n      this.guesses = JSON.parse(dat);\n      this._scenarioService.setScenario(null, dat);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/location/model-room/model-room.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ScenarioService } from '../../scenario.service';\nimport { Scenario } from '../../../interfaces/scenario.interface';\n\n@Component({\n  selector: 'landing-room',\n  templateUrl: 'app/scenario/location/landing-room/landing-room.template.html'\n})\n\nexport class LandingRoomComponent {\n\n  scenario: any;\n  private subscription: any;\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _scenarioService: ScenarioService){\n\n  }\n\n  ngOnInit(){\n    let scenId = this._route.parent.snapshot.paramMap.get('scenId');\n    this.subscription = this._scenarioService\n      .getScenario(scenId)\n      .subscribe(\n      scenario => {\n        this.scenario = scenario;\n      },\n      error => this._router.navigate(['/'])\n    );\n  }\n\n  ngOnDestory(){\n    this.subscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/location/landing-room/landing-room.component.ts","import { Component, Input } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\nimport { FridgePhage } from '../../interfaces/phage.interface';\n\n@Component({\n  selector: 'phage-dialog-content',\n  templateUrl: './app/scenario/fridge/phage-dialog.template.html'\n})\nexport class PhageDialogComponent {\n  @Input() phage: FridgePhage;\n\n  public viewParents: boolean = false;\n\n  constructor(public activeModal: NgbActiveModal) {\n    //this.hasParents = (this.phage.parents.length === 0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/fridge/phage-dialog.component.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n  constructor(private _authenticationService: AuthenticationService, private _router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    let isLoggedIn: boolean = this._authenticationService.isLoggedIn();\n    if(isLoggedIn)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['authentication/signin']);\n      return false;\n    }\n\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    let role: boolean = this._authenticationService.canAccessAdmin();\n    if(role)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['/admin/not-auth']);\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/admin-guard.service.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CourseService } from '../course.service';\n\n@Component({\n  selector: 'course-create-cmp',\n  templateUrl: 'app/admin/course/course-create/course-create.template.html',\n  styleUrls: ['app/admin/course/course-create/course-create.style.css']\n})\n\nexport class CourseCreateComponent {\n  private errorMessage: string = '';\n  private subscription: Subscription;\n  private courseDetails: any = {};\n\n  constructor(\n    private _courseService: CourseService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ){}\n\n  createCourse(){\n    //let newCourse = this.courseDetails.courseNum;\n    if(this.courseDetails.courseNum===''){\n      this.errorMessage = 'Course number is required'\n    } else {\n      this.subscription = this._courseService\n      .createCourse(this.courseDetails)\n    .subscribe( (result)=>{\n      this._router.navigate(['../', result.courseNum], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    });\n    }\n  }\n\n  ngOnDestory(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/course/course-create/course-create.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { Student } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\n\n@Component({\n  selector: 'course-indiv-cmp',\n  templateUrl: 'app/admin/course/course-indiv/course-indiv.template.html',\n  styleUrls: ['app/admin/course/course-indiv/course-indiv.style.css']\n})\n\nexport class CourseIndivComponent{\n\n  private students: Student[] = [];\n  private courseInfo: Course;\n  private scenarios: Scenario[];\n  private isDestroyed$: Subject<boolean>;\n  private paramObserver: any;\n\n  //private courseNum: string;\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n        private _route: ActivatedRoute,\n               private _courseService: CourseService,\n              private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject<boolean>();\n  }\n\n  ngOnInit(){\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n\n            this._courseService.getCourse(course)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n              this.courseInfo = info;\n              this._courseService.getStudents(course)\n              .takeUntil(this.isDestroyed$)\n              .subscribe((students)=>{\n                this.students = students;\n                this._scenarioService.listScenarios()\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((scens)=>{\n                    this.scenarios = scens;\n                });\n              });\n            },\n                (error) => {\n              this.errorMessage = error.message;\n            });\n        });\n  }\n\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/course/course-indiv/course-indiv.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { CourseService } from '../course.service';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { Student } from '../../../interfaces/student.interface';\n\n@Component({\n  selector: 'course-edit-cmp',\n  templateUrl: 'app/admin/course/course-edit/course-edit.template.html',\n  styleUrls: ['app/admin/course/course-edit/course-edit.style.css']\n})\n\nexport class CourseEditComponent{\n\n  private courseInfo: Course;\n  private subscription: Subscription;\n  private subscription2: Subscription;\n  private paramObserver: any;\n\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n        private _route: ActivatedRoute,\n               private _courseService: CourseService){\n  }\n\n  ngOnInit(){\n    this.paramObserver = this._route.params.subscribe(params => {\n            let course = params['courseNum'];\n\n            this.subscription = this._courseService.getCourse(course).subscribe((info) => {\n              this.courseInfo = info;\n            },\n                (error) => {\n              this.errorMessage = error.message;\n            });\n        });\n  }\n\n  update(){\n    this.subscription2 = this._courseService\n      .editCourse(this.courseInfo.courseNum, this.courseInfo)\n    .subscribe( (result)=>{\n      // success\n      this._router.navigate(['../'], {relativeTo: this._route})\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    });\n  }\n\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.subscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/course/course-edit/course-edit.component.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { CourseService } from '../course.service';\n\nimport { Course } from '../../../interfaces/course.interface';\n\n@Component({\n    selector: 'course-list-cmp',\n    templateUrl: './app/admin/course/course-list/course-list.template.html'\n})\nexport class CourseListComponent implements OnInit, OnDestroy{\n    private courses: Course[];\n  private subscription: Subscription;\n\n    constructor(private _courseService: CourseService) {\n\n    }\n\n    ngOnInit() {\n      this.subscription = this._courseService.listCourses()\n        .subscribe((courses) => {\n        this.courses = courses\n      });\n    }\n\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/course/course-list/course-list.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { CourseService } from '../course.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { StudentService } from '../../student/student.service';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { Student } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\n\n@Component({\n  selector: 'course-scen-smp',\n  templateUrl: 'app/admin/course/course-scenario/course-scenario.template.html',\n  styleUrls: ['app/admin/course/course-scenario/course-scenario.style.css']\n})\n\nexport class CourseScenarioComponent{\n\n  private students: Student[] = [];\n  private courseNum: string;\n  private scenario: Scenario;\n  private isDestroyed$: Subject<boolean>;\n  private paramObserver: any;\n\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n        private _route: ActivatedRoute,\n               private _courseService: CourseService,\n               private _studentService: StudentService,\n              private _scenarioService: ScenarioService\n              ){\n    this.isDestroyed$ = new Subject<boolean>();\n  }\n\n  ngOnInit() {\n    this.paramObserver = this._route.params\n      .subscribe(params => {\n            let course = params['courseNum'];\n          let scenCode = params['scenId'];\n      this.courseNum = course.toUpperCase();\n      this._scenarioService.getScenario(scenCode)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n          // success\n          this.scenario = res;\n        this._courseService.getScenarioStatus(course, scenCode)\n          .takeUntil(this.isDestroyed$)\n          .subscribe((stats)=>{\n\n            this.students = stats;\n        }, (err)=>{\n          this.errorMessage = err.error.message;\n        });\n\n      }, (err)=>{\n        this.errorMessage = err.error.message;\n      });\n        });\n  }\n\n  formatAccess(isGranted: boolean): string{\n    return (isGranted ? 'Access granted' : 'Access not granted');\n  }\n\n  accessButtonClass( isGranted: boolean): Object{\n    return {\n      'btn btn-sm': true,\n      'btn-outline-secondary': isGranted,\n      'btn-outline-dark': !isGranted\n    }\n  }\n\n  accessButtonText(isGranted: boolean): string{\n    return (isGranted ? 'Revoke access' : 'Grant access');\n  }\n\n  toggleAccess(studentIndex: number){\n    let curState = this.students[studentIndex].status;\n    let scenId = this.scenario.scenCode;\n    let studentId = this.students[studentIndex].userId;\n    this._studentService.grantScenAccess(studentId, scenId, !curState)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        if(res !== undefined && res !== null){\n          this.students[studentIndex].status = res.accessGranted[scenId];\n        }\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    })\n  }\n\n  /*grantAccess(studentIndex: number){\n    // will require studentService\n    let scenId = this.scenario.scenCode;\n    let studentId = this.students[studentIndex].userId;\n    this._studentService.grantScenAccess(studentId, scenId)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        if(res !== undefined && res !== null){\n          this.students[studentIndex].status = res.accessGranted[scenId];\n        }\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    })\n  }*/\n\n  goToFridge(studentId: number){\n    this._router.navigate(['/admin/students/', studentId, this.scenario.scenCode]);\n  }\n\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/course/course-scenario/course-scenario.component.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { StudentService } from '../student.service';\n\nimport { AdminStudent, sortStudents } from '../../../interfaces/student.interface';\n\n@Component({\n    selector: 'student-list',\n    templateUrl: './app/admin/student/student-list/student-list.template.html'\n})\nexport class StudentListComponent implements OnInit, OnDestroy{\n    private students: AdminStudent[];\n    private subscription: Subscription;\n    private errorMessage: string = '';\n\n    constructor(private _studentService: StudentService) {\n\n    }\n\n    ngOnInit() {\n      this.subscription = this._studentService.listStudents()\n        .subscribe((students) => {\n        this.students = students.sort(sortStudents);\n      }, (err)=>{\n        this.errorMessage = err.error.message\n      });\n    }\n  \n  formatName(firstName: string, lastName: string): string{\n    let outStr = lastName;\n    if(firstName !== '' && lastName !== ''){\n      outStr += ', '\n    }\n    outStr += firstName;\n    return outStr;\n  }\n\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/student/student-list/student-list.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { StudentService } from '../student.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\nimport { StudentRolesArray } from '../student.roles';\n\nimport { User } from '../../../interfaces/user.interface';\nimport { Course } from '../../../interfaces/course.interface';\nimport { AdminStudent } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\n\n@Component({\n  selector: 'student-indiv',\n  templateUrl: 'app/admin/student/student-indiv/student-indiv.template.html',\n  //styleUrls: ['app/admin/student/student-indiv/student-indiv.style.css']\n})\n\nexport class StudentIndivComponent{\n\n  private student: AdminStudent;\n  private scenarios: Scenario[];\n  private isDestroyed$: Subject<boolean>;\n  private paramObserver: any;\n  private _admin: any;\n  private roles = StudentRolesArray;\n  private newRole: string;\n\n  //private courseNum: string;\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n        private _route: ActivatedRoute,\n               private _studentService: StudentService,\n              private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject<boolean>();\n  }\n\n  ngOnInit(){\n    this.paramObserver = this._route.params.subscribe(params => {\n            let studentId = params['studentId'];\n\n            this._studentService.getStudent(studentId)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((info) => {\n              this.student = info;\n              this.newRole = this.student.role;\n              this._scenarioService.listScenarios()\n                  .takeUntil(this.isDestroyed$)\n                  .subscribe((scens)=>{\n                    this.scenarios = scens;\n                  this._admin = {\n                    id: this._studentService.getAdmin(),\n                    role: this._studentService.getAdminRole()\n                  };\n                });\n            },\n                (error) => {\n              console.error(error);\n              this.errorMessage = error.message;\n            });\n        });\n  }\n\n  getScenStatus(scenCode: string): string{\n    let isGranted = this.student.accessGranted[scenCode];\n    if(isGranted === true){\n      return 'Access granted'\n    } else if (isGranted === false) {\n      return 'Access not granted'\n    } else {\n      return 'NA'\n    }\n  }\n\n  getStudentCourse(){\n    let s: AdminStudent = this.student;\n      if(s.course){\n        return '<a [routlerLink]=\"[\\'/admin/courses/\\', \"' + s.course.courseNum + ']\">s.course.courseNum</a>';\n      } else {\n        return 'No course';\n      }\n  }\n\n  accessButtonClass( scenCode: string ): Object{\n    let isGranted = this.student.accessGranted[scenCode];\n    return {\n      'btn btn-sm': true,\n      'btn-outline-secondary': isGranted,\n      'btn-outline-dark': !isGranted\n    }\n  }\n\n  accessButtonText(scenCode: string): string{\n    let isGranted = this.student.accessGranted[scenCode];\n    return (isGranted ? 'Revoke access' : 'Grant access');\n  }\n\n  toggleAccess(scenCode: string){\n    let curState = this.student.accessGranted[scenCode];\n    this._studentService.grantScenAccess(this.student.userId, scenCode, !curState)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((res)=>{\n        if(res!==undefined && res !== null){\n          this.student.accessGranted[scenCode] = res.accessGranted[scenCode];\n        }\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    });\n  }\n\n  roleDisabled(src: string){\n    if(this._admin === undefined){\n      return false\n    } else if(this.student.userId === this._admin.id ){\n      return true;\n    } else if(src==='admin' && this._admin.role < 2){\n      return true;\n    } else if (src === 'instr' && this._admin.role < 1){\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  roleButtonClass(src: string): Object{\n    return {\n      'btn btn-sm': true,\n      'btn-outline-secondary': src !== this.newRole,\n      'btn-secondary': src === this.newRole\n    }\n  }\n\n  ngOnDestroy(){\n    // update role is necessary\n    if(this.student.role !== this.newRole){\n      this._studentService\n        .setStudentRole(this.student.userId, this.newRole)\n        .takeUntil(this.isDestroyed$)\n        .subscribe((res)=>{\n        this.paramObserver.unsubscribe();\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    });\n    } else {\n      this.paramObserver.unsubscribe();\n        this.isDestroyed$.next(true);\n        this.isDestroyed$.unsubscribe();\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/student/student-indiv/student-indiv.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\nimport 'rxjs/add/operator/filter';\n\nimport { StudentService } from '../student.service';\nimport { ScenarioService } from '../../../scenario/scenario.service';\n\nimport { Course } from '../../../interfaces/course.interface';\nimport { AdminStudent } from '../../../interfaces/student.interface';\nimport { Scenario } from '../../../interfaces/scenario.interface';\nimport { StudentPhage } from '../../../interfaces/phage.interface';\nimport { StudentFridge } from '../../../interfaces/fridge.interface';\n\n\n@Component({\n  selector: 'student-fridge',\n  templateUrl: 'app/admin/student/student-fridge/student-fridge.template.html',\n  //styleUrls: ['app/admin/student/student-indiv/student-indiv.style.css']\n})\n\nexport class StudentFridgeComponent{\n\n  private fridge: StudentFridge;\n  private hasFridge: boolean = false;\n  private isDestroyed$: Subject<boolean>;\n  private paramObserver: any;\n\n  private viewStrains: string = 'all';\n  private strainList: StudentPhage[];\n\n  private errorMessage: string = '';\n\n  constructor(private _router: Router,\n        private _route: ActivatedRoute,\n               private _studentService: StudentService){\n    this.isDestroyed$ = new Subject<boolean>();\n  }\n\n  ngOnInit(){\n    this.paramObserver = this._route.params.subscribe(params => {\n            let studentId = params['studentId'];\n      let scenId = params['scenId'];\n\n            this._studentService.getFridge(studentId, scenId)\n        .takeUntil(this.isDestroyed$)\n              .subscribe((fridge) => {\n              this.fridge = fridge;\n              this.hasFridge = (fridge.strains !== undefined);\n              if(this.hasFridge){\n                this.fridge.strains.sort((a,b)=>{return a.strainNum - b.strainNum});\n              }\n              this.setPhage('all');\n            },\n                (error) => {\n              console.log(error);\n              this.errorMessage = error.message;\n            });\n        });\n  }\n\n  getButtonClass(src: string): Object{\n    return {\n      'btn btn-sm': true,\n      'btn-primary': (src === this.viewStrains),\n      'btn-outline-primary': (src !== this.viewStrains)\n    }\n  }\n\n  setPhage(src: string){\n    this.viewStrains = src;\n    if(this.viewStrains === 'all'){\n      this.strainList = this.fridge.strains;\n    } else {\n      this.strainList = this.fridge.strains.filter((strain)=>{\n        if(strain.phageType === 'unknown'){\n          return true;\n        } else if(strain.phageType === 'user' && strain.submitted){\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(){\n    this.paramObserver.unsubscribe();\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/student/student-fridge/student-fridge.component.ts","import { Component } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { CourseService } from './course/course.service';\nimport { StudentService } from './student/student.service';\nimport { User } from '../interfaces/user.interface';\n\n@Component({\n  selector: 'admin-cmp',\n  templateUrl: 'app/admin/admin.template.html'\n})\n\nexport class AdminComponent{\n  private adminUser: User;\n  private errorMessage: string = '';\n  //private isDestroyed$: Subject<boolean>\n\n  constructor(\n    private _authenticationService: AuthenticationService,\n    private _courseService: CourseService,\n     private _studentService: StudentService\n  ){}\n\n  ngOnInit(){\n    /*this._authenticationService.getUser\n      .takeUntil(this.isDestroyed$)\n      .subscribe( (res) =>{\n      this.adminUser = res;\n\n      this._courseService.setAdmin(userId);\n      this.errorMessage = '';\n    }, (err)=>{\n      this.errorMessage = JSON.stringify(err);\n    }); */\n    this.adminUser = this._authenticationService.getUser();\n    let userId = this.adminUser.id;\n    let userRole = this.adminUser.role;\n    this._courseService.setAdmin(userId);\n    this._studentService.setAdmin(userId, userRole);\n  }\n\n  ngOnDestroy(){\n    this._courseService.setAdmin(-1);\n    this._studentService.setAdmin(-1, -1);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/admin.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'admin-home',\n  templateUrl: 'app/admin/admin-home/admin-home.template.html'\n})\n\nexport class AdminHomeComponent{}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/admin-home/admin-home.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'not-auth-cmp',\n  templateUrl: 'app/admin/not-auth/not-auth.template.html'\n})\n\nexport class NotAuthComponent{\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/not-auth/not-auth.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { Course } from '../../interfaces/course.interface';\nimport { Student } from '../../interfaces/student.interface';\n\n@Injectable()\nexport class CourseService {\n\n  private _baseURL = 'api/admin';\n  private _adminId = new BehaviorSubject<number>(-1);\n\n  constructor(private _http: HttpClient) {\n  }\n\n  setAdmin(id: number){\n    this._adminId.next(id);\n  }\n\n  getAdmin(): number{\n    return this._adminId.getValue();\n  }\n\n  /*listCourses(userId: number): Observable<any>{\n    return this._http\n      .get(`${this._baseURL}/${userId}/courses`);\n  }*/\n\n  listCourses(): Observable<any>{\n    return this._http\n      .get(`${this._baseURL}/${this.getAdmin()}/courses`);\n  }\n\n  /*createCourse(userId: number, body: any): Observable<any>{\n    return this._http\n      .post(`${this._baseURL}/${userId}/courses`, body);\n  }*/\n  createCourse(body: any): Observable<Course>{\n    return this._http\n      .post<Course>(`${this._baseURL}/${this.getAdmin()}/courses`, body);\n  }\n\n\n  /*getCourse(userId: number, courseNum: string): Observable<any>{\n    return this._http\n      .get(`${this._baseURL}/${userId}/courses/${courseNum}`);\n  }*/\n  getCourse(courseNum: string): Observable<Course>{\n    return this._http\n      .get<Course>(`${this._baseURL}/${this.getAdmin()}/courses/${courseNum}`);\n  }\n\n  getStudents(courseNum: string): Observable<any>{\n    return this._http\n      .get(`${this._baseURL}/${this.getAdmin()}/courses/${courseNum}/students`);\n  }\n\n  /*editCourse(userId: number, courseNum: string, body: any): Observable<any>{\n    return this._http\n      .post(`${this._baseURL}/${userId}/courses/${courseNum}`, body);\n  }*/\n\n  editCourse(courseNum: string, body: any): Observable<Course>{\n    return this._http\n      .post<Course>(`${this._baseURL}/${this.getAdmin()}/courses/${courseNum}`, body);\n  }\n\n  deleteCourse(userId: number, courseNum: string): Observable<any>{\n    return this._http\n      .delete(`${this._baseURL}/${userId}/courses/${courseNum}`);\n  }\n\n  deleteStudents(userId: number, courseNum: string): Observable<any>{\n    return this._http\n      .delete(`${this._baseURL}/${userId}/courses/${courseNum}/users`);\n  }\n\n  /*getScenarioStatus(userId: number, courseNum: string, scenId: string): Observable<any>{\n    return this._http\n      .get(`${this._baseURL}/${userId}/courses/${courseNum}/${scenId}`);\n  }*/\n\n  getScenarioStatus(courseNum: string, scenId: string): Observable<Student[]>{\n    return this._http\n      .get<Student[]>(`${this._baseURL}/${this.getAdmin()}/courses/${courseNum}/${scenId}`);\n  }\n\n  getCourseList(): Observable<any>{\n    return this._http\n      .get(`/api/courses`);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/course/course.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { AdminStudent } from '../../interfaces/student.interface';\nimport { StudentFridge } from '../../interfaces/fridge.interface';\n\n\n@Injectable()\nexport class StudentService {\n\n  private _baseURL = 'api/admin';\n  private _adminId = new BehaviorSubject<number>(-1);\n  private _adminRole = new BehaviorSubject<number>(-1);\n\n  constructor(private _http: HttpClient) {\n  }\n\n  setAdmin(id: number, role: number){\n    this._adminId.next(id);\n    this._adminRole.next(role);\n  }\n\n  getAdmin(): number{\n    return this._adminId.getValue();\n  }\n\n  getAdminRole(): number{\n    return this._adminRole.getValue();\n  }\n\n  /*listStudents(userId: number): Observable<any>{\n    return this._http\n            .get(`${this._baseURL}/${userId}/users`);\n  }*/\n\n  listStudents(): Observable<AdminStudent[]>{\n    return this._http\n            .get<AdminStudent[]>(`${this._baseURL}/${this.getAdmin()}/students`);\n  }\n\n  /*getUser(userId: number, studentId: number): Observable<any>{\n    return this._http\n            .get(`${this._baseURL}/${userId}/users/${studentId}`);\n  }*/\n\n  getStudent(studentId: number): Observable<AdminStudent>{\n    return this._http\n            .get<AdminStudent>(`${this._baseURL}/${this.getAdmin()}/students/${studentId}`);\n  }\n\n  /*setUserRole(userId: number, studentId: number, role: string): Observable<any>{\n    let body = {role: role};\n    return this._http\n            .post(`${this._baseURL}/${userId}/users/${studentId}`, body);\n  }*/\n\n  setStudentRole(studentId: number, role: string): Observable<any>{\n    let body = {role: role};\n    return this._http\n            .post(`${this._baseURL}/${this.getAdmin()}/students/${studentId}`, body);\n  }\n\n  deleteUser(userId: number, studentId: number): Observable<any>{\n    return this._http\n            .delete(`${this._baseURL}/${userId}/users/${studentId}`);\n  }\n\n  /*getFridge(userId: number, studentId: number, scenId: string): Observable<any>{\n    return this._http\n            .get(`${this._baseURL}/${userId}/users/${studentId}/${scenId}`);\n  }*/\n\n  getFridge(studentId: number, scenId: string): Observable<StudentFridge>{\n    return this._http\n            .get<StudentFridge>(`${this._baseURL}/${this.getAdmin()}/students/${studentId}/${scenId}`);\n  }\n\n  /*grantScenAccess(userId: number, studentId: number, scenId: string): Observable<any>{\n    return this._http\n            .post(`${this._baseURL}/${userId}/users/${studentId}/${scenId}`, {});\n  }*/\n  grantScenAccess(studentId: number, scenId: string, updatedState: boolean): Observable<AdminStudent>{\n    return this._http\n            .post<AdminStudent>(`${this._baseURL}/${this.getAdmin()}/students/${studentId}/${scenId}`, {access: updatedState});\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/student/student.service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./public/bootstrap.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\n//import { DndModule } from 'ng2-dnd';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutes } from './app.routes';\n\n//import { HomeModule } from './home/home.module';\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { ScenarioService } from './scenario/scenario.service';\nimport { CourseService } from './admin/course/course.service';\n\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { ArticleModule } from './articles/article.module';\nimport { ScenarioModule } from './scenario/scenario.module';\nimport { AdminModule } from './admin/admin.module';\nimport { NavComponent } from './nav/nav.component';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n      AdminModule,\n        AuthenticationModule,\n        ArticleModule,\n      ScenarioModule,\n      RouterModule.forRoot(AppRoutes)\n    ],\n    declarations: [\n        AppComponent,\n        NavComponent\n    ],\n    providers: [\n        AuthenticationService,\n        ScenarioService,\n      CourseService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/app.module.ts","import { Component } from '@angular/core';\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'genetics-app',\n    template: '<cricket-nav></cricket-nav><router-outlet></router-outlet>',\n})\nexport class AppComponent {\n    constructor(private _authenticationService: AuthenticationService, private router: Router) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/app.component.ts","import { Routes } from '@angular/router';\n\nexport const AppRoutes: Routes =\n      [{\n        path: '**',\n        redirectTo: '/'\n      }];\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/app.routes.ts","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticationRoutes } from './authentication.routes';\nimport { AuthenticationComponent } from './authentication.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(AuthenticationRoutes)\n    ],\n    declarations: [\n        AuthenticationComponent,\n        SigninComponent,\n        SignupComponent\n    ]\n})\nexport class AuthenticationModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/authentication/authentication.module.ts","import { Routes } from '@angular/router';\n\nimport { AuthenticationComponent } from './authentication.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\nexport const AuthenticationRoutes: Routes = [{\n    path: 'authentication',\n    component: AuthenticationComponent,\n    children: [\n        { path: 'signin', component: SigninComponent },\n        { path: 'signup', component: SignupComponent },\n    ]\n}];\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/authentication/authentication.routes.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { ArticleRoutes } from './article.routes';\nimport { ArticleComponent } from './article.component';\nimport { CreateComponent } from './create/create.component';\nimport { ListComponent } from './list/list.component';\nimport { ViewComponent } from './view/view.component';\nimport { EditComponent } from './edit/edit.component';\n\nimport { ArticleService } from './article.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ArticleRoutes)\n    ],\n    declarations: [\n        ArticleComponent,\n        CreateComponent,\n        ListComponent,\n        ViewComponent,\n        EditComponent\n    ]\n})\nexport class ArticleModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/articles/article.module.ts","import { Routes } from '@angular/router';\nimport { ArticleComponent } from './article.component';\nimport { CreateComponent } from './create/create.component';\nimport { ListComponent } from './list/list.component';\nimport { ViewComponent } from './view/view.component';\nimport { EditComponent } from './edit/edit.component';\n\nexport const ArticleRoutes: Routes = [{\n    path: 'articles',\n    component: ArticleComponent,\n    children: [\n        { path: '', component: ListComponent },\n        { path: 'create', component: CreateComponent },\n        { path: ':articleId', component: ViewComponent },\n        { path: ':articleId/edit', component: EditComponent }\n    ],\n}];\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/articles/article.routes.ts","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ScenarioRouterModule } from './scenario.route.module';\nimport { ScenarioComponent } from './scenario.component';\nimport { ListComponent } from './list/list.component';\n\nimport { LocationGuard } from './location/location-guard.service';\nimport { ExperimentService } from './location/experiment.service';\n\nimport { FridgeComponent } from './fridge/fridge.component';\nimport { PhageDialogComponent } from './fridge/phage-dialog.component';\nimport { LocationComponent } from './location/location.component';\nimport { LandingRoomComponent } from './location/landing-room/landing-room.component';\nimport { LabRoomComponent } from './location/lab-room/lab-room.component';\nimport { PlexerRoomComponent } from './location/plexer-room/plexer-room.component';\nimport { ModelRoomComponent } from './location/model-room/model-room.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ScenarioRouterModule\n  ],\n  declarations: [\n    ScenarioComponent,\n    ListComponent,\n    LocationComponent,\n    FridgeComponent,\n    PhageDialogComponent,\n    LabRoomComponent,\n    PlexerRoomComponent,\n    ModelRoomComponent,\n    LandingRoomComponent\n  ],\n  entryComponents: [\n    PhageDialogComponent\n  ],\n  providers: [\n    LocationGuard,\n    ExperimentService\n  ]\n})\nexport class ScenarioModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/scenario.module.ts","import { NgModule } from '@angular/core';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { ScenarioComponent } from './scenario.component';\nimport { ListComponent } from './list/list.component';\n\nimport { LocationRoutes } from './location/location.routes';\nconst scenarioRoutes: Routes = [\n  {\n    path: '',\n    //component: ScenarioComponent,\n    children: [\n      {\n        path: ':scenId',\n        component: ScenarioComponent,\n        children: LocationRoutes\n      },\n      {\n        path: '',\n        component: ListComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(scenarioRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ScenarioRouterModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/scenario.route.module.ts","import { Routes } from '@angular/router';\n\nimport { LocationComponent } from './location.component';\nimport { LocationGuard } from './location-guard.service';\n\nimport { LabRoomComponent } from './lab-room/lab-room.component';\nimport { PlexerRoomComponent } from './plexer-room/plexer-room.component';\nimport { ModelRoomComponent } from './model-room/model-room.component';\nimport { LandingRoomComponent } from './landing-room/landing-room.component';\n\nexport const LocationRoutes: Routes = [\n  {\n    path: '',\n    component: LocationComponent,\n    canActivate: [LocationGuard],\n    children: [\n      { path: 'lab-room', component: LabRoomComponent },\n      { path: 'plexer-room', component: PlexerRoomComponent },\n      { path: 'model-room', component: ModelRoomComponent},\n      {path: 'info', component: LandingRoomComponent},\n      { path: '', component: LandingRoomComponent}\n    ]\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/location/location.routes.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs/Subject';\n\nimport { ScenarioService } from '../scenario.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { ScenarioGlobals } from '../scenario.globals';\nimport { PhageDialogComponent } from './phage-dialog.component';\n\nimport { User } from '../../interfaces/user.interface';\nimport { Fridge } from '../../interfaces/fridge.interface';\nimport { FridgePhage, GenotypePhage } from '../../interfaces/phage.interface';\n\n@Component({\n    selector: 'fridge',\n    templateUrl: './app/scenario/fridge/fridge.template.html',\n  styleUrls: ['./app/scenario/fridge/fridge.style.css']\n})\nexport class FridgeComponent implements OnInit, OnDestroy{\n\n  private modalDialog: string = 'Hi';\n  user: User;\n  fridge: Fridge;\n  strains: FridgePhage[];\n  currStrains: FridgePhage[];\n  shelf: number = 0;\n  maxShelf: number;\n  spots: number;\n  errorMessage: string = '';\n  private isDestroyed$: Subject<boolean>\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _authenticationService: AuthenticationService,\n               private _scenarioService: ScenarioService,\n              private _modalService: NgbModal) {\n    this.maxShelf = ScenarioGlobals.nFridgeShelf;\n    this.spots = ScenarioGlobals.nFridgeSpots;\n    this.isDestroyed$ = new Subject<boolean>();\n  }\n\n  /**\n   * Initailize the fridge when creating component\n   */\n  ngOnInit(){\n    this.user = this._authenticationService.getUser();\n\n    let userId = this.user.id;\n    let scenId = this._route.snapshot.paramMap.get('scenId');\n    this._scenarioService.getFridge(userId, scenId)\n    .takeUntil(this.isDestroyed$)\n    .subscribe(\n      (fridge) => {this._initFridge(fridge)},\n      (err) => {\n        if(err.status === 307){\n        this._createFridge(userId, scenId);\n      } else {\n        this.errorMessage = err.message;\n      } }\n    );\n  }\n\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  _createFridge(userId: number, scenId: string){\n    this._scenarioService.createFridge(userId, scenId)\n    .takeUntil(this.isDestroyed$)\n      .subscribe((fridge)=>{\n      this._initFridge(fridge);\n    }, (err)=>{\n      this.errorMessage = err.message;\n    });\n  }\n\n  _initFridge(newFridge: Fridge){\n    this.fridge = newFridge;\n    this.strains = this._fillStrains(newFridge.strains);\n    this._currStrains();\n    this._scenarioService.setScenario(newFridge.scenarioDetails, newFridge.guesses);\n  }\n\n  /**\n   * @param {Phage[]} fridgeStrains - array for created strains in the fridge\n   * @returns {Phage[]} - array of all slots in fridge, including empty\n   */\n  _fillStrains(fridgeStrains: FridgePhage[]): FridgePhage[]{\n    var out: FridgePhage[] = [];\n    for(let i = 0; i < this.maxShelf*this.spots; i++){\n      out.push({strainNum: i, phageType: 'empty', comment: '', id: ''});\n    }\n    // add original strains\n    for(let i=0; i < fridgeStrains.length; i++){\n      let n = fridgeStrains[i].strainNum;\n      out[n] = fridgeStrains[i];\n    }\n    return out;\n  }\n\n  /**\n   * Sets strains for visible shelf\n   */\n  _currStrains(){\n    let start = this.shelf*this.spots;\n    let end = start+this.spots;\n    this.currStrains = this.strains.slice(start,end);\n  }\n\n  /**\n   * Increase or decrease visible shelf\n   * @param {number} inc - amout to change shelf by\n   */\n  changeShelf(inc: number){\n    this.errorMessage = '';\n    if(this.shelf <= this.maxShelf-1 && inc === 1){\n      this.shelf++;\n      this._currStrains();\n    } else if(this.shelf > 0 && inc === -1){\n      this.shelf--;\n      this._currStrains();\n    }\n  }\n\n  /**\n   * Set visible shelf to a specific number;\n   * used to jump to the beginning and end\n   * @param {number} nShelf - shelf to go to\n   */\n  setShelf(nShelf: number){\n    this.shelf = nShelf;\n    this._currStrains();\n  }\n\n  /**\n   * Determine if strain can be dropped in a slot\n   * can be dropped if slot is empty and src is small or large\n   *\n   * Called by allowDrop\n   *\n   * @param {number} spot - spot to test to see if can drop\n   *\n   * @returns {any} - function which returns true or false if\n   * strain can be dropped in slot\n   */\n  canDrop(spot: number): any {\n  return (dragData: GenotypePhage) => {\n    let out = false;\n    if(dragData && dragData.hasOwnProperty('src')){\n      if(dragData.src === 'small' || dragData.src=== 'large'){\n        let trySpot: FridgePhage = this.strains[spot];\n        if(trySpot.phageType === 'empty'){\n          out = true;\n        }\n      }\n    }\n    return out;\n  };\n}\n\n\n  /**\n   * Adds a new strain to a fridge\n   *\n   * Called by onDropSucess of slot\n   *\n   * @param {any} $event - drag event, incuding data for strain to add;\n   * has: shifts, deletion\n   * @param {number} spot - slot to drop new strain\n   */\n  dropStrain($event: any, spot: number){\n    // onDropSuccess\n    let strain: GenotypePhage = $event.dragData;\n    // need strainNum, mutationList, deletion\n    let newStrain = {\n      strainNum: spot,\n      mutationList: strain.shifts,\n      deletion: strain.deletion\n    }\n    // add to fridge\n    let userId = this.user.id;\n    let scenCode = this.fridge.scenCode;\n    this._scenarioService.addStrain(newStrain, userId, scenCode)\n    .subscribe((res)=>{\n      this.strains[spot] = {\n        // strainNum comment phageType id parents\n        strainNum: res.strainNum,\n        comment: res.comment,\n        phageType: res.phageType,\n        id: res.id,\n        parents: res.parents\n      }\n      this._currStrains();\n    },\n              (err)=>{\n      this.errorMessage = err.message;\n    })\n  }\n\n  /**\n   * opens a dialog box to edit/learn more about selected phage\n   */\n  editPhage(src: number) {\n    let phage = this.strains[src];\n    const modelRef = this._modalService.open(PhageDialogComponent, { windowClass: 'phage-dialog'});\n    modelRef.componentInstance.phage = phage;\n\n    modelRef.result.then((result)=>{\n      let resType = typeof result;\n      if(resType === \"string\" && result === 'delete'){\n        // delete the phage\n        this._deletePhage(src);\n      } else if (resType === \"object\"){\n        // edit it\n        this._editPhage(src, result);\n      } else {\n        // do nothing\n        return\n      }\n    }, (reason)=>{\n      // do nothing\n      return;\n    });\n  }\n\n  _editPhage(src: number, newPhage: FridgePhage){\n    this._scenarioService.updateStrain(newPhage, this.user.id, this.fridge.scenCode)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      this.strains[src] = res;\n      this._currStrains();\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    });\n  }\n\n  _deletePhage(src: number){\n    let newPhage = this.strains[src];\n    this._scenarioService.deleteStrain(newPhage, this.user.id, this.fridge.scenCode)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this.strains[src] = {strainNum: src, phageType: 'empty', comment:'', id: ''};\n      this._currStrains();\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/scenario/fridge/fridge.component.ts","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AdminRouteModule } from './admin.route.module';\nimport { AdminComponent } from './admin.component';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { NotAuthComponent } from './not-auth/not-auth.component';\n\nimport { CourseComponent } from './course/course.component';\nimport { CourseCreateComponent } from './course/course-create/course-create.component';\nimport { CourseIndivComponent } from './course/course-indiv/course-indiv.component';\nimport { CourseEditComponent } from './course/course-edit/course-edit.component';\nimport { CourseListComponent } from './course/course-list/course-list.component';\nimport { CourseScenarioComponent } from './course/course-scenario/course-scenario.component';\n\nimport { StudentListComponent } from './student/student-list/student-list.component';\nimport { StudentIndivComponent } from './student/student-indiv/student-indiv.component';\nimport { StudentFridgeComponent } from './student/student-fridge/student-fridge.component';\nimport { StudentPhageComponent } from './student/student-fridge/student-phage.component';\n\nimport { AdminGuard } from './admin-guard.service';\n\nimport { StudentService } from './student/student.service';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRouteModule\n  ],\n  declarations: [\n    AdminComponent,\n    AdminHomeComponent,\n    NotAuthComponent,\n    CourseComponent,\n    CourseCreateComponent,\n    CourseIndivComponent,\n    CourseEditComponent,\n    CourseListComponent,\n    CourseScenarioComponent,\n    StudentListComponent,\n    StudentIndivComponent,\n    StudentFridgeComponent,\n    StudentPhageComponent\n  ],\n  providers: [\n    AdminGuard,\n    StudentService\n  ]\n})\nexport class AdminModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/admin.module.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminGuard } from './admin-guard.service';\n\nimport { CourseRoutes } from './course/course.routes';\nimport { StudentRoutes } from './student/student.routes';\n\nimport { AdminComponent } from './admin.component';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { NotAuthComponent } from './not-auth/not-auth.component';\n\nconst adminRoutes: Routes = [\n  {\n    path: 'admin',\n    canActivate:[AdminGuard],\n    canActivateChild: [AdminGuard],\n    component: AdminComponent,\n    children: [\n      {\n        path: 'courses',\n        //component: CourseComponent,\n        children: CourseRoutes\n      },\n      {\n        path: 'students',\n        children: StudentRoutes\n      },\n      {\n        path: '',\n        component: AdminHomeComponent\n      }\n    ]\n  },\n  {\n    path: 'admin/not-auth',\n    component: NotAuthComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(adminRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AdminRouteModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/admin.route.module.ts","import { Routes } from '@angular/router';\n\nimport { CourseComponent } from './course.component';\nimport { CourseCreateComponent } from './course-create/course-create.component';\nimport { CourseIndivComponent } from './course-indiv/course-indiv.component';\nimport { CourseEditComponent } from './course-edit/course-edit.component';\nimport { CourseListComponent } from './course-list/course-list.component';\nimport { CourseScenarioComponent } from './course-scenario/course-scenario.component';\n\nexport const CourseRoutes: Routes = [\n  {\n    path: 'create',\n    component: CourseCreateComponent\n  },\n  { path: ':courseNum',\n    component: CourseIndivComponent\n  },\n  { path: ':courseNum/edit',\n    component: CourseEditComponent\n  },\n  {\n    path: ':courseNum/:scenId',\n    component: CourseScenarioComponent\n  },\n  {\n    path: '',\n    component: CourseListComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/course/course.routes.ts","import { Routes } from '@angular/router';\n\nimport { StudentListComponent } from './student-list/student-list.component';\nimport { StudentIndivComponent } from './student-indiv/student-indiv.component';\nimport { StudentFridgeComponent } from './student-fridge/student-fridge.component';\n\nexport const StudentRoutes: Routes = [\n  {\n    path: ':studentId',\n    component: StudentIndivComponent\n  },\n  {\n    path: ':studentId/:scenId',\n    component: StudentFridgeComponent\n  },\n  {\n    path: '',\n    component: StudentListComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/student/student.routes.ts","import { Course } from './course.interface';\n\nexport interface Student {\n  firstName: string;\n  lastName: string;\n  email?: string;\n  userId: number;\n  accessGranted?: any;\n  status?: boolean;\n}\n\nexport interface AdminStudent extends Student {\n  course: Course;\n  role: string;\n}\n\nexport const sortStudents = function(a,b){\n    var comparison = a.lastName.toLowerCase().localeCompare(b.lastName.toLowerCase());\n    if (comparison === 0) {\n      return a.firstName.toLowerCase().localeCompare(b.firstName.toLowerCase());\n    }\n    return comparison;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/interfaces/student.interface.ts","export const StudentRolesArray: any = [\n  {\n    key: 'student',\n    label: 'Student',\n    value: 0\n  }, {\n    key: 'instr',\n    label: 'Instructor',\n    value: 1\n  }, {\n    key: 'admin',\n    label: 'Administrator',\n    value: 2\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/student/student.roles.ts","import { Component } from '@angular/core';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { CourseService } from './course.service';\n\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\n@Component({\n  selector: 'course-cmp',\n  templateUrl: 'app/admin/course/course.template.html'\n})\n\nexport class CourseComponent{\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/course/course.component.ts","import { Component, Input} from '@angular/core';\n\nimport { StudentPhage } from '../../../interfaces/phage.interface';\n\n@Component({\n  selector: 'student-phage',\n  templateUrl: 'app/admin/student/student-fridge/student-phage.template.html'\n})\n\nexport class StudentPhageComponent{\n\n  @Input() phage: StudentPhage;\n\n  constructor(){}\n\n  formatPhageType(){\n    if(this.phage){\n      let t = this.phage.phageType;\n      if(this.phage.phageType === 'user' && this.phage.submitted){\n        return 'SUBMISSION'\n      } else {\n        return this.phage.phageType.toUpperCase();\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/admin/student/student-fridge/student-phage.component.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'cricket-nav',\n    templateUrl: './app/nav/nav.template.html',\n    //styleUrls: ['./app/nav/nav.style.css']\n})\nexport class NavComponent {\n    constructor() {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/nav/nav.component.ts","//import 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Injectable } from '@angular/core';\n//import { Http, Headers, Request, RequestMethod, Response } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable()\nexport class ArticleService {\n    private _baseURL = 'api/articles';\n\n    constructor(private _http: HttpClient) { }\n\n    create(article: any): Observable<any> {\n        return this._http\n            .post(this._baseURL, article)\n            //.map((res: Response) => res.json())\n            //.catch(this.handleError);\n    }\n\n    read(articleId: string): Observable<any> {\n        return this._http\n            .get(`${this._baseURL}/${articleId}`)\n            //.map((res: Response) => res.json())\n            //.catch(this.handleError);\n    }\n\n    update(article: any): Observable<any> {\n        return this._http\n            .put(`${this._baseURL}/${article._id}`, article)\n            //.map((res: Response) => res.json())\n            //.catch(this.handleError);\n    }\n\n    delete(articleId: any): Observable<any> {\n        return this._http\n            .delete(`${this._baseURL}/${articleId}`)\n            //.map((res: Response) => res.json())\n            //.catch(this.handleError);\n    }\n\n    list(): Observable<any> {\n        return this._http\n            .get(this._baseURL)\n            //.map((res: Response) => res.json())\n            //.catch(this.handleError);\n    }\n\n    /*private handleError(error: Response) {\n        return Observable.throw(error.json().message || 'Server error');\n    }*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/app/articles/article.service.ts"],"sourceRoot":""}