{"version":3,"sources":["webpack:///./public/app/scenario/location/location.module.ts","webpack:///./public/app/scenario/scenario.globals.ts","webpack:///./public/app/scenario/location/experiment.service.ts","webpack:///./public/app/scenario/location/location.component.ts","webpack:///./public/app/scenario/location/location-guard.service.ts","webpack:///./public/app/scenario/location/lab-room/lab-room.component.ts","webpack:///./public/app/scenario/location/plexer-room/plexer-room.component.ts","webpack:///./public/app/scenario/location/model-room/model-room.component.ts","webpack:///./public/app/scenario/location/landing-room/landing-room.component.ts","webpack:///./public/app/scenario/fridge/phage-dialog.component.ts","webpack:///./public/app/scenario/location/location.route.module.ts","webpack:///./public/app/scenario/fridge/fridge.component.ts"],"names":[],"mappings":"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","file":"0-chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { LocationRouteModule } from './location.route.module';\n\nimport { LocationGuard } from './location-guard.service';\nimport { ExperimentService } from './experiment.service';\n\nimport { FridgeComponent } from '../fridge/fridge.component';\nimport { PhageDialogComponent } from '../fridge/phage-dialog.component';\n\nimport { LocationComponent } from './location.component';\nimport { LandingRoomComponent } from './landing-room/landing-room.component';\nimport { LabRoomComponent } from './lab-room/lab-room.component';\nimport { PlexerRoomComponent } from './plexer-room/plexer-room.component';\nimport { ModelRoomComponent } from './model-room/model-room.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LocationRouteModule\n  ],\n  declarations: [\n    FridgeComponent,\n    PhageDialogComponent,\n    LocationComponent,\n    LabRoomComponent,\n    PlexerRoomComponent,\n    ModelRoomComponent,\n    LandingRoomComponent\n  ],\n   entryComponents: [\n    PhageDialogComponent\n  ],\n  providers: [\n    LocationGuard,\n    ExperimentService\n  ]\n})\nexport class LocationModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/location/location.module.ts","export const ScenarioGlobals = {\n  numPhage:1000000,\n  plateCapacity: 1500,\n  plexerCapacity: 200,\n  nFridgeShelf: 32,\n  nFridgeSpots: 16,\n  defaultLabDilution: 10,\n  defaultPlexerDilution: 5,\n  geneLength: 350,\n  deletionGuessLength: 10\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/scenario.globals.ts","//import 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class ExperimentService {\n  private _baseURL = 'api/cricket';\n\n  constructor(private _http: HttpClient) { }\n\n  createPlate(plate: any): Observable<any>{\n    // plate must have 1-2 phage IDs with numPhage [phage1,phage2], lawn type, location, specials, capacity, scenarioData (from fridge)\n    // returns error OR {full, smallPlaque, largePlaque, genotypes}\n    var res = this._http\n    .post(`${this._baseURL}/plate`, plate)\n    return res;\n    //.map((res: Response)=>{ res.json()})\n    //.catch(this.handleError)\n  }\n\n  performPlexer(data: any): Observable<any>{\n    // data will have rowPhage, colPhage, lawn type, location, specials, capacity, scenarioData\n    var res = this._http\n    .post(`${this._baseURL}/plexer`, data);\n    return res;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/location/experiment.service.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'location',\n  templateUrl: './app/scenario/location/location.template.html',\n  styleUrls: ['./app/scenario/location/location.style.css']\n})\n\nexport class LocationComponent {\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/location/location.component.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n@Injectable()\nexport class LocationGuard implements CanActivate {\n\n  constructor(private _authenticationService: AuthenticationService, private _router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n\n    let isLoggedIn: boolean = this._authenticationService.isLoggedIn();\n    if(isLoggedIn)\n      return true;\n    else {\n      this._authenticationService.redirectUrl = url;\n      this._router.navigate(['authentication/signin']);\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/location/location-guard.service.ts","import { Component } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { ScenarioGlobals } from '../../scenario.globals';\nimport { ExperimentService } from '../experiment.service';\nimport { ScenarioService } from '../../scenario.service';\n\nimport { ExperimentPhage, GenotypePhage } from '../../../interfaces/phage.interface';\n\n@Component({\n    selector: 'lab-room',\n    templateUrl: './app/scenario/location/lab-room/lab-room.template.html',\n  styleUrls: ['./app/scenario/location/lab-room/lab-room.style.css']\n})\nexport class LabRoomComponent {\n\n  private isDestroyed$: Subject<boolean>;\n  // bacteria tubes\n  private isHidden: Object = {'K': false, 'B': false};\n  private phage: ExperimentPhage[] = [];\n\n  // dilution tubes\n  private dilutionValue: number = ScenarioGlobals.defaultLabDilution;\n  private contents: any[];\n  private visibleLabel: boolean[];\n  private canEditDilution: boolean = true;\n\n  // plate\n  private isEmpty: boolean = true;\n  private lawnType: string = '';\n  private scenarioDetails: string;\n  private isFull: boolean = false;\n  private smallPlaqueList: any[];\n  private largePlaqueList: any[];\n  private genotypes: GenotypePhage[];\n\n  private errorMessage: string = '';\n\n  constructor(private _experimentService: ExperimentService, private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject<boolean>();\n    this.contents = [null, null, null, null];\n    this.visibleLabel = [true, false, false, false];\n  }\n\n  ngOnInit(){\n     this._scenarioService.getScenarioDetails\n    .takeUntil(this.isDestroyed$)\n      .subscribe((details) => {this.scenarioDetails = details});\n  }\n\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  /**\n   * Reset the tube-related variables\n   */\n  clearTubes(){\n    this.phage = [];\n    this.isHidden = {'K': false, 'B': false};\n    this.errorMessage = '';\n    this.contents = [null, null, null, null];\n    this.visibleLabel = [true, false, false, false];\n    this.canEditDilution = true;\n  }\n\n  /**\n   * Reset the plate variables\n   */\n  clearPlate() {\n    // reset all variables\n    this.isFull = false;\n    this.isEmpty = true;\n    this.genotypes = [];\n    this.smallPlaqueList = [];\n    this.largePlaqueList = [];\n    this.errorMessage = '';\n    this.lawnType = '';\n  }\n\n  /**\n   * Reset all variables\n   */\n  clearAll(){\n    this.clearTubes();\n    this.clearPlate();\n  }\n\n  /**\n   * Determine if bacteria tube can be dragged\n   *\n   * Called for [dragEnabled] of bact tube\n   *\n   * @returns {boolean} - true if tube has phage\n   */\n  canDragBact(): boolean{\n    return this.phage.length > 0;\n  }\n\n  /**\n   * Data to be dragged from the bacteria tube\n   *\n   * Called for [dragData] of bact tube\n   *\n   * @param {string} src - E. coli source, \"B\" or \"K\"\n   * @returns {Object} - data with lawn type, src, and phage list\n   */\n  getDataBact(src: string): Object{\n    return {\n      lawnType: src,\n      src: src,\n      phage: this.phage\n    }\n  }\n\n  /**\n   * Determines classes for a bacteria tube\n   *\n   * @param {string} src - E. coli source, \"B\" or \"K\"\n   * @returns {Object} - applicable classes\n   */\n    getClassesBact(src: string): Object {\n    return {'bact-tube test-tube-outer': true,\n            'invisible': (src === 'B' ? this.isHidden[\"B\"] : this.isHidden[\"K\"]),\n            'tube-b': (src==='B'),\n            'tube-k': (src==='K'),\n            'n-phage-1': this.phage.length === 1,\n            'n-phage-2': this.phage.length === 2\n           }\n    }\n\n  /**\n   * Drop phage from fridge into bacteria tube\n   *\n   * Called on (onDropSuccess) of bacteria tubes\n   *\n   * @param {any} $event - drag event with phage data\n   * @param {string} src - bacteria source phage dragged to\n   */\n  dropPhageBact($event: any, src: string){\n    var incomingPhage = $event.dragData;\n    if(incomingPhage.hasOwnProperty('id') == false){\n      this.errorMessage = 'Only add phage from the fridge';\n    } else if(this.phage.length >= 2) {\n      this.errorMessage = 'Cannot have more than 2 phage in a tube';\n    } else {\n      // add phage - type ExperimentPhage\n      this.phage.push({\n        id: incomingPhage.id,\n        strainNum: incomingPhage.strainNum,\n      numPhage: ScenarioGlobals.numPhage\n      });\n      switch(src){\n        case 'B':\n          this.isHidden['K'] = true;\n          break;\n        case 'K':\n          this.isHidden['B'] = true;\n          break;\n      }}\n  }\n\n  /**\n   * Determine if dilution tube can be dragged\n   *\n   * Called for [dragEnabled] of dilution tube (0-3)\n   *\n   * @param {number} src - dilution tube number\n   * @returns {boolean} - true if tube has contents\n   */\n  canDragDil(src: number): boolean{\n    return (this.contents[src] !== null);\n  }\n\n  /**\n   * Determines classes for a dilution tube\n   *\n   * @param {number} src - dilution tube number (0-3)\n   * @returns {Object} - applicable classes\n   */\n  getClassesDil(src: number): Object {\n    let tube = this.contents[src];\n    return {'dil-tube test-tube-outer': true,\n            'tube-b': (tube !== null && tube.lawnType==='B'),\n            'tube-k': (tube !== null && tube.lawnType==='K')\n           }\n  }\n\n  /**\n   * Determines classes for a dilution tube label\n   *\n   * @param {number} src - dilution tube number (0-3)\n   * @returns {Object} - applicable classes\n   */\n  getClassesDilLabel(src: number): Object {\n    return {\n      'dil-value': true,\n      'invisible': !this.visibleLabel[src]\n    }\n  }\n\n  /**\n   * Determines if object can be dropped in dilution tube\n   *\n   * Called for [allowDrop] of dilution tube\n   *\n   * @param {number} dest - dilution tube number (0-3)\n   * @returns {function} - function which returns true/false if object can be dropped\n   */\n  canDropDil(dest: number): any {\n  return (dragData: any) => {\n    if(dragData === null || dragData === undefined)\n      return false;\n    if(dragData.hasOwnProperty('src') === false){\n      return false\n    }\n    let src = dragData.src;\n    if(dest === 0 && (src === 'B' || src === 'K')){\n      return true;\n    } else if (dest > 0 && src === dest-1){\n      return true;\n    }\n    return false;\n  };\n}\n  /**\n   * Data to be dragged from the dilution tube\n   *\n   * Called for [dragData] of dilution tube\n   *\n   * @param {number} src - dilution tube number (0-3)\n   * @returns {Object} - data with dilution tube contents and src\n   */\n  getDataDil(src: number): Object {\n    if(this.contents[src] !== null)\n      this.contents[src]['src'] = src;\n    return this.contents[src];\n  }\n\n  /**\n   * Drop contents from bact tube/dilution tube into dilution tube\n   *\n   * Called on (oDropSuccess) of dilution tubes\n   *\n   * @param {any} $event - drag event with content/phage data\n   * @param {string} dest - dest tube\n   */\n  dropContentsDil($event: any, dest: number){\n    let incomingDat = JSON.parse(JSON.stringify($event.dragData));\n    if(incomingDat.hasOwnProperty('lawnType') && incomingDat.hasOwnProperty('phage')){\n      // dilute\n      for(let i = 0; i < incomingDat.phage.length; i++){\n        incomingDat.phage[i].numPhage /= this.dilutionValue;\n      }\n      this.contents[dest] = incomingDat;\n      if(dest < 3){\n        this.visibleLabel[dest+1] = true;\n      }\n      // disable dilution value changes\n      this.canEditDilution = false\n    }\n  }\n\n  /**\n   * Determines classes for plate depending if empty, full, has phage\n   *\n   * @returns {Object} - applicable classes\n   */\n  getClassesPlate(){\n    return {\n      'col-12 col-md-5 rounded-circle border border-dark': true,\n      'bg-secondary text-light': this.isFull,\n      'bg-light text-primary': (!this.isFull && !this.isEmpty),\n      'text-danger': (this.lawnType === 'K'),\n      'text-info': (this.lawnType === 'B')\n    }\n  }\n\n  /**\n   * Determines if object can be dropped on plate\n   *\n   * Called for [allowDrop] of plate\n   *\n   * @returns {function} - function which returns true/false if object can be dropped\n   */\n  canDropPlate():any {\n    return (dragData: any) => {\n      //console.log(dragData);\n    if(dragData === null || dragData === undefined)\n      return false;\n    if(dragData.hasOwnProperty('src') && dragData.src\n       !== 'small' && dragData.src !== 'large'){\n      return true\n    }\n      return false;\n  };\n  }\n\n  /**\n   * Drop tube contents on the plate\n   *\n   * Called on (onDropSuccess) of plate\n   *\n   * @param {any} $event - drag event with contents\n   */\n  dropOnPlate($event: any){\n    let contents = $event.dragData;\n    // check we have everything we need\n    if (contents.hasOwnProperty('lawnType') === false){\n      this.errorMessage = 'There is no bacteria in the tube for phage to grow on.'\n      return;\n    }\n    if (contents.hasOwnProperty('phage') === false || contents.phage.length === 0){\n      this.errorMessage = 'There is no phage in the tube.'\n      return;\n    }\n    // gather data\n    this.lawnType = contents.lawnType;\n    let phage1 = contents.phage[0];\n    let phage2 = null;\n    if(contents.phage.length === 2){\n      phage2 = contents.phage[1];\n    }\n    // perform the cross\n    this._performCross(this.lawnType, phage1, phage2);\n  }\n\n  /**\n   * Calls the experiment service to perform the cross and saves\n   * variables\n   *\n   * @param {string} lawnType - bacteria used, \"B\" or \"K\"\n   * @param {any} phage1 - first phage in cross\n   * @param {any} phage2 - second phage in cross, or null\n   */\n  _performCross(lawnType: string, phage1: ExperimentPhage, phage2: ExperimentPhage){\n    let newPlate = {\n      lawnType: lawnType,\n      phage1: phage1,\n      phage2: phage2,\n      specials: {},\n      location: 'lab',\n      scenarioData: this.scenarioDetails,\n      capacity: ScenarioGlobals.plateCapacity\n    }\n    this._experimentService.createPlate(newPlate)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      this.isFull = res.full;\n      this.smallPlaqueList = res.smallPlaque;\n      this.largePlaqueList = res.largePlaque;\n      this.isEmpty = false;\n      this.genotypes = res.genotypes;\n      // success\n    }, (err)=>{\n      // error\n      this.errorMessage = err.error.message || err.message || 'Error';\n    });\n  }\n\n  /**\n   * Determine if plaque from plate can be dragged\n   *\n   * Called for [dragEnabled] of plaques on plate\n   *\n   * @param {string} src - small or large plaque\n   * @returns {boolean} - true if there are still plaques of that size\n   */\n  canDragPlate(src: string): boolean {\n    if(src === 'small')\n      return this.smallPlaqueList.length > 0;\n    else // big\n      return this.largePlaqueList.length > 0;\n  }\n\n  /**\n   * Pick a plaque from the plate to save to the fridge\n   *\n   * Called for [dragData] of plaque on plate\n   *\n   * @param {string} src - small or large plaque\n   * @returns {Object} - phage genotype data\n   */\n  getPhagePlate(src: string): GenotypePhage{\n    let tmpList = (src === 'small' ? this.smallPlaqueList : this.largePlaqueList);\n    if(tmpList.length === 0){\n      return null;\n    }\n    let plaque = tmpList[0];\n    let genotypeIndex = plaque.i;\n    let phage = JSON.parse(JSON.stringify(this.genotypes[genotypeIndex]));\n    phage['src'] = plaque.pheno;\n    return phage;\n  }\n\n  /**\n   * Removes successfully dragged phage from available phage list\n   *\n   * Called on (onDragSuccess) of plaque on plate\n   *\n   * @param {any} $event - drag event with phage saved\n   */\n  addedToFridge($event) {\n    let strain = $event.dragData;\n    let src = strain.src;\n    if(src === 'small'){\n      this.smallPlaqueList.shift();\n    } else { // large\n      this.largePlaqueList.shift();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/location/lab-room/lab-room.component.ts","import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ScenarioGlobals } from '../../scenario.globals';\nimport { ExperimentService } from '../experiment.service';\nimport { ScenarioService } from '../../scenario.service'\nimport { FridgePhage, ExperimentPhage } from '../../../interfaces/phage.interface';\n\n@Component({\n    selector: 'plexer-room',\n    templateUrl: './app/scenario/location/plexer-room/plexer-room.template.html',\n  styleUrls: ['./app/scenario/location/plexer-room/plexer-room.style.css']\n})\nexport class PlexerRoomComponent{\n\n  private chosenBact: string = 'none';\n  private dilutionValue: number = ScenarioGlobals.defaultPlexerDilution;\n  private plexerType: string = 'multi';\n  private scenarioDetails: string;\n  private rows: ExperimentPhage[];\n  private cols: ExperimentPhage[];\n  private nStrains: number[] = [0,0];\n  private results: Object;\n  private errorMessage: string = '';\n  private subscription: Subscription;\n  private expSubscription: Subscription;\n\n  constructor( private _experimentService: ExperimentService,\n               private _scenarioService: ScenarioService){\n    this._clearData();\n  }\n\n  ngOnInit() {\n    this.subscription = this._scenarioService.getScenarioDetails\n      .subscribe((details) => this.scenarioDetails = details);\n  }\n\n  ngOnDestroy(){\n    if(this.subscription)\n      this.subscription.unsubscribe();\n    if(this.expSubscription)\n    this.expSubscription.unsubscribe();\n  }\n\n  /**\n   * Initalize/clear row and column phage\n   */\n  _clearData(){\n    this.rows = [];\n    this.cols = [];\n    for(let i = 0; i < 8; i++){\n      this.rows.push(null);\n      this.cols.push(null);\n    }\n    this.nStrains = [0,0];\n  }\n\n  /**\n   * Reset the plexer and parameters\n   *\n   * Called on (click) of reset button\n   */\n  reset(){\n    this.chosenBact = 'none';\n    this.dilutionValue = ScenarioGlobals.defaultPlexerDilution;\n    this.plexerType = 'multi';\n    this._clearData();\n    this.results = {};\n    this.errorMessage = '';\n  }\n\n  /**\n   * Get the CSS class for each phage button based on which\n   * phage type is set\n   *\n   * @param {string} src - button to get classes for\n   * @returns {Object} - classes which apply to this button\n   */\n  getTubeClasses(src: string): Object {\n    return {\n      'btn border border-secondary': true,\n      //'': (this.chosenBact !== src),\n      'chosen': (this.chosenBact === src),\n      'btn-outline-info': (src==='B' && this.chosenBact !== src),\n      'btn-info': (src==='B' && this.chosenBact === src),\n      'btn-outline-danger': (src==='K' && this.chosenBact !== src),\n      'btn-danger': (src==='K' && this.chosenBact === src)\n    }\n  }\n\n  /**\n   * Get the CSS class for each plexer button based on which\n   * plexer type is set\n   *\n   * @param {string} src - button to get classes for\n   * @returns {Object} - classes which apply to this button\n   */\n  getPlexerClasses(src: string): Object{\n    return{\n      'btn': true,\n      'btn-outline-secondary':(this.plexerType !== src) ,\n      'btn-secondary': (this.plexerType === src)\n    }\n  }\n\n  /**\n   * Determine if user is able to submit plexer by disabling\n   * the submit button when unable to submit\n   *\n   * @returns {boolean} - true if user cannot submit\n   */\n  submitDisabled(): boolean {\n\n    // determine if disabled\n    var disabled = this.chosenBact === 'none';\n    // check that at least 1 phage added for row/col\n    if(this.nStrains[0] === 0 || this.nStrains[1] === 0){\n      return true;\n    }\n    return disabled;\n  }\n\n  /**\n   * Removes null elements from input array and dilutes the\n   * number of phage\n   *\n   * Used before submitting row/col phage\n   *\n   * @param {ExperimentPhage[]} inData - input array to be cleaned\n   * @returns {ExperimentPhage[]} - cleaned array\n   */\n  _cleanArrays(inData: ExperimentPhage[]): ExperimentPhage[]{\n    var clean = inData.filter((elt)=>{\n      return elt !== null\n    }).map((elt)=>{\n        return {id: elt.id,\n                strainNum: elt.strainNum,\n               numPhage: elt.numPhage / (this.dilutionValue * 1000)\n               }\n    });\n    return clean\n  }\n\n  /**\n   * Gets experiment data and submits to service to get results\n   * of the multiplexer\n   *\n   * Called on (click) of submit button\n   */\n  performPlexer(){\n    // need to deal with dilution values\n    let tmpRows = (this.plexerType === 'multi' ? this.rows.slice(0, 2) : this.rows);\n    let cleanRows = this._cleanArrays(tmpRows);\n    let cleanCols = this._cleanArrays(this.cols);\n    // gather data\n    var data = {\n      lawnType: this.chosenBact,\n      rowPhage: cleanRows,\n      colPhage: cleanCols,\n      specials: {},\n      location: this.plexerType,\n      scenarioData: this.scenarioDetails,\n      capacity: ScenarioGlobals.plexerCapacity\n    };\n    // use the service\n    this.expSubscription = this._experimentService.performPlexer(data)\n    .subscribe((res)=>{\n      this.results = res;\n    }, (err)=>{\n      this.errorMessage = err.error.message || err.message || 'Unknown error';\n    });\n  }\n\n  /**\n   *  Add phage to row or column of plexer\n   *\n   * Called on (onDropSuccess) of row/col header\n   *\n   * @param {any} $event - dragEvent; includes phage data\n   * @param {string} dir - add to \"row\" or \"col\"\n   * @param {number} spot - position to add phage\n   */\n  addPhage($event: any, dir: string, spot: number){\n    let fphage: FridgePhage = $event.dragData;\n    let phage: ExperimentPhage = {\n      id: fphage.id,\n      strainNum: fphage.strainNum,\n      numPhage: ScenarioGlobals.numPhage\n    }\n    // add to row\n    if(dir === 'row' && spot < 8){\n      this.rows[spot] = phage;\n      this.nStrains[0] = this.rows.filter(function(value) { return value !== null }).length;\n    } else if (spot < 8) { // column\n      this.cols[spot] = phage;\n      this.nStrains[1] = this.cols.filter(function(value) { return value !== null }).length;\n    }\n  }\n\n  /**\n   * Returns CSS classes for a row\n   *\n   * @param {number} rowInt - row we are considering\n   * @returns {Object} classes for the row\n   */\n  getRowClass(rowInt: number): Object{\n    return {\n      'data-table-row': true,\n      'invisible': this._isRowHidden(rowInt)\n    }\n  }\n\n  /**\n   * Determine if row is hidden based on plexer type;\n   * rows 2-7 are hidden for multiplexer\n   *\n   * @param {number} rowInt - row we are considering\n   * @returns {boolean} true if row is hidden\n   */\n  _isRowHidden(rowInt: number){\n    return (this.plexerType === 'multi' && rowInt > 1)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/location/plexer-room/plexer-room.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/takeUntil'\n\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport { ScenarioService } from '../../scenario.service';\nimport { ScenarioGlobals } from '../../scenario.globals';\n\n@Component({\n    selector: 'model-room',\n    templateUrl: './app/scenario/location/model-room/model-room.template.html',\n  styleUrls: ['./app/scenario/location/model-room/model-room.style.css']\n})\n\nexport class ModelRoomComponent {\n\n  private guesses: any;\n  private keys: number[];\n  private geneAr: number[];\n  private stepSize: number;\n  private scenarioId: string;\n  private userId: number;\n  private errorMessage: string = '';\n  private _width: string;\n  private isDestroyed$: Subject<boolean>;\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _authenticationService: AuthenticationService,\n              private _scenarioService: ScenarioService){\n    this.isDestroyed$ = new Subject<boolean>();\n\n    this.stepSize = ScenarioGlobals.deletionGuessLength;\n    this.geneAr = [];\n    let nBlocks: number = Math.ceil(ScenarioGlobals.geneLength/this.stepSize);\n    for(let i = 0; i < nBlocks; i++){\n      this.geneAr.push(i);\n    }\n    this._width = (100 / nBlocks).toString();\n  }\n\n  ngOnInit(){\n    /*this._authenticationService.getUser\n      .takeUntil(this.isDestroyed$)\n      .subscribe( (res) =>{\n      this.userId = res.id;\n    });*/\n    let u = this._authenticationService.getUser();\n    if(u){\n      this.userId = u.id;\n    }\n    this._route.parent.params\n      .takeUntil(this.isDestroyed$)\n      .subscribe(params =>{\n      this.scenarioId = params['scenId']\n    });\n    this._scenarioService.getGuesses\n      .takeUntil(this.isDestroyed$)\n      .subscribe((dels) => {\n      this.guesses = dels;\n      this.keys = Object.keys(dels).map((k)=> {return Number.parseInt(k);});\n      if(this.keys.length === 0){\n        this.errorMessage = 'No phage available for modelling'\n      } else {\n        this.errorMessage = '';\n      }\n    });\n  }\n\n  ngOnDestory(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  getBlockClass(strain: number, pos: number){\n    let posGuess = this.guesses[strain][pos];\n    return {\n      'guess-block btn p-0': true,\n      'btn-outline-secondary': !posGuess, // inactive\n      'bg-dark': posGuess // active\n    }\n  }\n\n  toggleBlock(strain: number, pos: number){\n    let c = this.guesses[strain][pos];\n    this.guesses[strain][pos] = !c;\n  }\n\n  saveData(){\n    // use service and save data\n    let out = JSON.stringify(this.guesses)\n    this._scenarioService\n      .saveDeletions(this.guesses, this.userId, this.scenarioId)\n      .takeUntil(this.isDestroyed$)\n      .subscribe((dat)=>{\n      this.guesses = JSON.parse(dat);\n      this._scenarioService.setScenario(null, dat);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/location/model-room/model-room.component.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ScenarioService } from '../../scenario.service';\nimport { Scenario } from '../../../interfaces/scenario.interface';\n\n@Component({\n  selector: 'landing-room',\n  templateUrl: 'app/scenario/location/landing-room/landing-room.template.html'\n})\n\nexport class LandingRoomComponent {\n\n  scenario: any;\n  private subscription: any;\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _scenarioService: ScenarioService){\n\n  }\n\n  ngOnInit(){\n    let scenId = this._route.parent.snapshot.paramMap.get('scenId');\n    this.subscription = this._scenarioService\n      .getScenario(scenId)\n      .subscribe(\n      scenario => {\n        this.scenario = scenario;\n      },\n      error => this._router.navigate(['/'])\n    );\n  }\n\n  ngOnDestory(){\n    this.subscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/location/landing-room/landing-room.component.ts","import { Component, Input } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgbModal, NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\n\nimport { FridgePhage } from '../../interfaces/phage.interface';\n\n@Component({\n  selector: 'phage-dialog-content',\n  templateUrl: './app/scenario/fridge/phage-dialog.template.html'\n})\nexport class PhageDialogComponent {\n  @Input() phage: FridgePhage;\n\n  public viewParents: boolean = false;\n\n  constructor(public activeModal: NgbActiveModal) {\n    //this.hasParents = (this.phage.parents.length === 0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/fridge/phage-dialog.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocationComponent } from './location.component';\nimport { LocationGuard } from './location-guard.service';\n\nimport { LabRoomComponent } from './lab-room/lab-room.component';\nimport { PlexerRoomComponent } from './plexer-room/plexer-room.component';\nimport { ModelRoomComponent } from './model-room/model-room.component';\nimport { LandingRoomComponent } from './landing-room/landing-room.component';\n\nexport const LocationRoutes: Routes = [\n  {\n    path: '',\n    component: LocationComponent,\n    canActivate: [LocationGuard],\n    children: [\n      {\n        path: 'lab-room',\n        component: LabRoomComponent,\n        data: {\n          breadcrumbs: 'Lab'\n        }\n      },\n      {\n        path: 'plexer-room',\n        component: PlexerRoomComponent,\n        data: {\n          breadcrumbs: 'Plexer'\n        }\n      },\n      {\n        path: 'model-room',\n        component: ModelRoomComponent,\n        data: {\n          breadcrumbs: 'Model'\n        }\n      },\n      { path: 'info', component: LandingRoomComponent},\n      { path: '', component: LandingRoomComponent}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(LocationRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class LocationRouteModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/location/location.route.module.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs/Subject';\n\nimport { ScenarioService } from '../scenario.service';\nimport { AuthenticationService } from '../../authentication/authentication.service';\nimport { ScenarioGlobals } from '../scenario.globals';\nimport { PhageDialogComponent } from './phage-dialog.component';\n\nimport { User } from '../../interfaces/user.interface';\nimport { Fridge } from '../../interfaces/fridge.interface';\nimport { FridgePhage, GenotypePhage } from '../../interfaces/phage.interface';\nimport { readErrorMessage } from '../../shared/read-error';\n\n@Component({\n    selector: 'fridge',\n    templateUrl: './app/scenario/fridge/fridge.template.html',\n  styleUrls: ['./app/scenario/fridge/fridge.style.css']\n})\nexport class FridgeComponent implements OnInit, OnDestroy{\n\n  private modalDialog: string = 'Hi';\n  user: User;\n  fridge: Fridge;\n  strains: FridgePhage[];\n  currStrains: FridgePhage[];\n  shelf: number = 0;\n  maxShelf: number;\n  spots: number;\n  errorMessage: string = '';\n  private isDestroyed$: Subject<boolean>\n\n  constructor(private _router: Router,\n               private _route: ActivatedRoute,\n               private _authenticationService: AuthenticationService,\n               private _scenarioService: ScenarioService,\n              private _modalService: NgbModal) {\n    this.maxShelf = ScenarioGlobals.nFridgeShelf;\n    this.spots = ScenarioGlobals.nFridgeSpots;\n    this.isDestroyed$ = new Subject<boolean>();\n  }\n\n  /**\n   * Initailize the fridge when creating component\n   */\n  ngOnInit(){\n    this.user = this._authenticationService.getUser();\n\n    let userId = this.user.id;\n    let scenId = this._route.snapshot.paramMap.get('scenId');\n    this._scenarioService.getFridge(userId, scenId)\n    .takeUntil(this.isDestroyed$)\n    .subscribe(\n      (fridge) => {this._initFridge(fridge)},\n      (err) => {\n        if(err.status === 307){\n        this._createFridge(userId, scenId);\n      } else {\n        this.errorMessage = err.message;\n      } }\n    );\n  }\n\n  ngOnDestroy(){\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.unsubscribe();\n  }\n\n  _createFridge(userId: number, scenId: string){\n    this._scenarioService.createFridge(userId, scenId)\n    .takeUntil(this.isDestroyed$)\n      .subscribe((fridge)=>{\n      this._initFridge(fridge);\n    }, (err)=>{\n      this.errorMessage = err.message;\n    });\n  }\n\n  _initFridge(newFridge: Fridge){\n    this.fridge = newFridge;\n    this.strains = this._fillStrains(newFridge.strains);\n    this._currStrains();\n    this._scenarioService.setScenario(newFridge.scenarioDetails, newFridge.guesses);\n  }\n\n  /**\n   * @param {Phage[]} fridgeStrains - array for created strains in the fridge\n   * @returns {Phage[]} - array of all slots in fridge, including empty\n   */\n  _fillStrains(fridgeStrains: FridgePhage[]): FridgePhage[]{\n    var out: FridgePhage[] = [];\n    for(let i = 0; i < this.maxShelf*this.spots; i++){\n      out.push({strainNum: i, phageType: 'empty', comment: '', id: ''});\n    }\n    // add original strains\n    for(let i=0; i < fridgeStrains.length; i++){\n      let n = fridgeStrains[i].strainNum;\n      out[n] = fridgeStrains[i];\n    }\n    return out;\n  }\n\n  /**\n   * Sets strains for visible shelf\n   */\n  _currStrains(){\n    let start = this.shelf*this.spots;\n    let end = start+this.spots;\n    this.currStrains = this.strains.slice(start,end);\n  }\n\n  /**\n   * Increase or decrease visible shelf\n   * @param {number} inc - amout to change shelf by\n   */\n  changeShelf(inc: number){\n    this.errorMessage = '';\n    if(this.shelf <= this.maxShelf-1 && inc === 1){\n      this.shelf++;\n      this._currStrains();\n    } else if(this.shelf > 0 && inc === -1){\n      this.shelf--;\n      this._currStrains();\n    }\n  }\n\n  getPhageClass(src: number): Object{\n    let phage = this.strains[src];\n    return {\n      'col-7 col-xl-8 p-0 strain-image': true,\n      'strain-image-reference': phage.phageType === 'reference',\n      'strain-image-unknown': phage.phageType === 'unknown',\n      'strain-image-submitted': phage.submitted\n    }\n  }\n\n  /**\n   * Set visible shelf to a specific number;\n   * used to jump to the beginning and end\n   * @param {number} nShelf - shelf to go to\n   */\n  setShelf(nShelf: number){\n    this.shelf = nShelf;\n    this._currStrains();\n  }\n\n  /**\n   * Determine if strain can be dropped in a slot\n   * can be dropped if slot is empty and src is small or large\n   *\n   * Called by allowDrop\n   *\n   * @param {number} spot - spot to test to see if can drop\n   *\n   * @returns {any} - function which returns true or false if\n   * strain can be dropped in slot\n   */\n  canDrop(spot: number): any {\n  return (dragData: GenotypePhage) => {\n    let out = false;\n    if(dragData && dragData.hasOwnProperty('src')){\n      if(dragData.src === 'small' || dragData.src=== 'large'){\n        let trySpot: FridgePhage = this.strains[spot];\n        if(trySpot.phageType === 'empty'){\n          out = true;\n        }\n      }\n    }\n    return out;\n  };\n}\n\n  /**\n   * Adds a new strain to a fridge\n   *\n   * Called by onDropSucess of slot\n   *\n   * @param {any} $event - drag event, incuding data for strain to add;\n   * has: shifts, deletion\n   * @param {number} spot - slot to drop new strain\n   */\n  dropStrain($event: any, spot: number){\n    // onDropSuccess\n    let strain: GenotypePhage = $event.dragData;\n    // need strainNum, mutationList, deletion\n    let newStrain = {\n      strainNum: spot,\n      mutationList: strain.shifts,\n      deletion: strain.deletion\n    }\n    // add to fridge\n    let userId = this.user.id;\n    let scenCode = this.fridge.scenCode;\n    this._scenarioService.addStrain(newStrain, userId, scenCode)\n    .subscribe((res)=>{\n      this.strains[spot] = {\n        // strainNum comment phageType id parents\n        strainNum: res.strainNum,\n        comment: res.comment,\n        phageType: res.phageType,\n        id: res.id,\n        parents: res.parents\n      }\n      this._currStrains();\n    },\n              (err)=>{\n      this.errorMessage = readErrorMessage(err);\n    })\n  }\n\n  /**\n   * opens a dialog box to edit/learn more about selected phage\n   */\n  editPhage(src: number) {\n    let phage = this.strains[src];\n    const modelRef = this._modalService.open(PhageDialogComponent, { windowClass: 'phage-dialog'});\n    modelRef.componentInstance.phage = phage;\n\n    modelRef.result.then((result)=>{\n      let resType = typeof result;\n      if(resType === \"string\" && result === 'delete'){\n        // delete the phage\n        this._deletePhage(src);\n      } else if (resType === \"object\"){\n        // edit it\n        this._editPhage(src, result);\n      } else {\n        // do nothing\n        return\n      }\n    }, (reason)=>{\n      // do nothing\n      return;\n    });\n  }\n\n  _editPhage(src: number, newPhage: FridgePhage){\n    this._scenarioService.updateStrain(newPhage, this.user.id, this.fridge.scenCode)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      this.strains[src] = res;\n      this._currStrains();\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    });\n  }\n\n  _deletePhage(src: number){\n    let newPhage = this.strains[src];\n    this._scenarioService.deleteStrain(newPhage, this.user.id, this.fridge.scenCode)\n    .takeUntil(this.isDestroyed$)\n    .subscribe((res)=>{\n      // successful\n      this.strains[src] = {strainNum: src, phageType: 'empty', comment:'', id: ''};\n      this._currStrains();\n    }, (err)=>{\n      this.errorMessage = err.error.message;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular-router-loader/src!./public/app/scenario/fridge/fridge.component.ts"],"sourceRoot":""}